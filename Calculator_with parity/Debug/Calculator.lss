
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005dd8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000148  00800060  00005dd8  00005e6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000084  008001a8  008001a8  00005fb4  2**0
                  ALLOC
  3 .stab         00002c4c  00000000  00000000  00005fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001561  00000000  00000000  00008c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000002a0  00000000  00000000  0000a161  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000002f7  00000000  00000000  0000a401  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000359a  00000000  00000000  0000a6f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001afa  00000000  00000000  0000dc92  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001a23  00000000  00000000  0000f78c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002c0  00000000  00000000  000111b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003ec  00000000  00000000  00011470  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001df9  00000000  00000000  0001185c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  00013655  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ed       	ldi	r30, 0xD8	; 216
      68:	fd e5       	ldi	r31, 0x5D	; 93
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 3a       	cpi	r26, 0xA8	; 168
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a8 ea       	ldi	r26, 0xA8	; 168
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ac 32       	cpi	r26, 0x2C	; 44
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 9b 2b 	call	0x5736	; 0x5736 <main>
      8a:	0c 94 ea 2e 	jmp	0x5dd4	; 0x5dd4 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 12 2c 	jmp	0x5824	; 0x5824 <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 2e 2c 	jmp	0x585c	; 0x585c <__epilogue_restores__>

00000288 <__fixunssfsi>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	1f 93       	push	r17
     290:	7b 01       	movw	r14, r22
     292:	8c 01       	movw	r16, r24
     294:	20 e0       	ldi	r18, 0x00	; 0
     296:	30 e0       	ldi	r19, 0x00	; 0
     298:	40 e0       	ldi	r20, 0x00	; 0
     29a:	5f e4       	ldi	r21, 0x4F	; 79
     29c:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <__gesf2>
     2a0:	88 23       	and	r24, r24
     2a2:	8c f0       	brlt	.+34     	; 0x2c6 <__fixunssfsi+0x3e>
     2a4:	c8 01       	movw	r24, r16
     2a6:	b7 01       	movw	r22, r14
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	5f e4       	ldi	r21, 0x4F	; 79
     2b0:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <__subsf3>
     2b4:	0e 94 ed 0f 	call	0x1fda	; 0x1fda <__fixsfsi>
     2b8:	9b 01       	movw	r18, r22
     2ba:	ac 01       	movw	r20, r24
     2bc:	20 50       	subi	r18, 0x00	; 0
     2be:	30 40       	sbci	r19, 0x00	; 0
     2c0:	40 40       	sbci	r20, 0x00	; 0
     2c2:	50 48       	sbci	r21, 0x80	; 128
     2c4:	06 c0       	rjmp	.+12     	; 0x2d2 <__fixunssfsi+0x4a>
     2c6:	c8 01       	movw	r24, r16
     2c8:	b7 01       	movw	r22, r14
     2ca:	0e 94 ed 0f 	call	0x1fda	; 0x1fda <__fixsfsi>
     2ce:	9b 01       	movw	r18, r22
     2d0:	ac 01       	movw	r20, r24
     2d2:	b9 01       	movw	r22, r18
     2d4:	ca 01       	movw	r24, r20
     2d6:	1f 91       	pop	r17
     2d8:	0f 91       	pop	r16
     2da:	ff 90       	pop	r15
     2dc:	ef 90       	pop	r14
     2de:	08 95       	ret

000002e0 <__fixsfdi>:
     2e0:	ef 92       	push	r14
     2e2:	ff 92       	push	r15
     2e4:	0f 93       	push	r16
     2e6:	1f 93       	push	r17
     2e8:	7b 01       	movw	r14, r22
     2ea:	8c 01       	movw	r16, r24
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	30 e0       	ldi	r19, 0x00	; 0
     2f0:	40 e0       	ldi	r20, 0x00	; 0
     2f2:	50 e0       	ldi	r21, 0x00	; 0
     2f4:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
     2f8:	88 23       	and	r24, r24
     2fa:	0c f0       	brlt	.+2      	; 0x2fe <__fixsfdi+0x1e>
     2fc:	5c c0       	rjmp	.+184    	; 0x3b6 <__fixsfdi+0xd6>
     2fe:	c8 01       	movw	r24, r16
     300:	b7 01       	movw	r22, r14
     302:	90 58       	subi	r25, 0x80	; 128
     304:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__fixunssfdi>
     308:	21 95       	neg	r18
     30a:	e1 e0       	ldi	r30, 0x01	; 1
     30c:	12 16       	cp	r1, r18
     30e:	08 f0       	brcs	.+2      	; 0x312 <__fixsfdi+0x32>
     310:	e0 e0       	ldi	r30, 0x00	; 0
     312:	31 95       	neg	r19
     314:	f1 e0       	ldi	r31, 0x01	; 1
     316:	13 16       	cp	r1, r19
     318:	08 f0       	brcs	.+2      	; 0x31c <__fixsfdi+0x3c>
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	e3 2e       	mov	r14, r19
     31e:	ee 1a       	sub	r14, r30
     320:	e1 e0       	ldi	r30, 0x01	; 1
     322:	3e 15       	cp	r19, r14
     324:	08 f0       	brcs	.+2      	; 0x328 <__fixsfdi+0x48>
     326:	e0 e0       	ldi	r30, 0x00	; 0
     328:	fe 2b       	or	r31, r30
     32a:	41 95       	neg	r20
     32c:	a1 e0       	ldi	r26, 0x01	; 1
     32e:	14 16       	cp	r1, r20
     330:	08 f0       	brcs	.+2      	; 0x334 <__fixsfdi+0x54>
     332:	a0 e0       	ldi	r26, 0x00	; 0
     334:	f4 2e       	mov	r15, r20
     336:	ff 1a       	sub	r15, r31
     338:	e1 e0       	ldi	r30, 0x01	; 1
     33a:	4f 15       	cp	r20, r15
     33c:	08 f0       	brcs	.+2      	; 0x340 <__fixsfdi+0x60>
     33e:	e0 e0       	ldi	r30, 0x00	; 0
     340:	ae 2b       	or	r26, r30
     342:	51 95       	neg	r21
     344:	f1 e0       	ldi	r31, 0x01	; 1
     346:	15 16       	cp	r1, r21
     348:	08 f0       	brcs	.+2      	; 0x34c <__fixsfdi+0x6c>
     34a:	f0 e0       	ldi	r31, 0x00	; 0
     34c:	05 2f       	mov	r16, r21
     34e:	0a 1b       	sub	r16, r26
     350:	e1 e0       	ldi	r30, 0x01	; 1
     352:	50 17       	cp	r21, r16
     354:	08 f0       	brcs	.+2      	; 0x358 <__fixsfdi+0x78>
     356:	e0 e0       	ldi	r30, 0x00	; 0
     358:	fe 2b       	or	r31, r30
     35a:	61 95       	neg	r22
     35c:	a1 e0       	ldi	r26, 0x01	; 1
     35e:	16 16       	cp	r1, r22
     360:	08 f0       	brcs	.+2      	; 0x364 <__fixsfdi+0x84>
     362:	a0 e0       	ldi	r26, 0x00	; 0
     364:	16 2f       	mov	r17, r22
     366:	1f 1b       	sub	r17, r31
     368:	e1 e0       	ldi	r30, 0x01	; 1
     36a:	61 17       	cp	r22, r17
     36c:	08 f0       	brcs	.+2      	; 0x370 <__fixsfdi+0x90>
     36e:	e0 e0       	ldi	r30, 0x00	; 0
     370:	ae 2b       	or	r26, r30
     372:	71 95       	neg	r23
     374:	f1 e0       	ldi	r31, 0x01	; 1
     376:	17 16       	cp	r1, r23
     378:	08 f0       	brcs	.+2      	; 0x37c <__fixsfdi+0x9c>
     37a:	f0 e0       	ldi	r31, 0x00	; 0
     37c:	b7 2f       	mov	r27, r23
     37e:	ba 1b       	sub	r27, r26
     380:	e1 e0       	ldi	r30, 0x01	; 1
     382:	7b 17       	cp	r23, r27
     384:	08 f0       	brcs	.+2      	; 0x388 <__fixsfdi+0xa8>
     386:	e0 e0       	ldi	r30, 0x00	; 0
     388:	fe 2b       	or	r31, r30
     38a:	81 95       	neg	r24
     38c:	a1 e0       	ldi	r26, 0x01	; 1
     38e:	18 16       	cp	r1, r24
     390:	08 f0       	brcs	.+2      	; 0x394 <__fixsfdi+0xb4>
     392:	a0 e0       	ldi	r26, 0x00	; 0
     394:	38 2f       	mov	r19, r24
     396:	3f 1b       	sub	r19, r31
     398:	f3 2f       	mov	r31, r19
     39a:	e1 e0       	ldi	r30, 0x01	; 1
     39c:	83 17       	cp	r24, r19
     39e:	08 f0       	brcs	.+2      	; 0x3a2 <__fixsfdi+0xc2>
     3a0:	e0 e0       	ldi	r30, 0x00	; 0
     3a2:	ae 2b       	or	r26, r30
     3a4:	91 95       	neg	r25
     3a6:	3e 2d       	mov	r19, r14
     3a8:	4f 2d       	mov	r20, r15
     3aa:	50 2f       	mov	r21, r16
     3ac:	61 2f       	mov	r22, r17
     3ae:	7b 2f       	mov	r23, r27
     3b0:	8f 2f       	mov	r24, r31
     3b2:	9a 1b       	sub	r25, r26
     3b4:	04 c0       	rjmp	.+8      	; 0x3be <__fixsfdi+0xde>
     3b6:	c8 01       	movw	r24, r16
     3b8:	b7 01       	movw	r22, r14
     3ba:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__fixunssfdi>
     3be:	1f 91       	pop	r17
     3c0:	0f 91       	pop	r16
     3c2:	ff 90       	pop	r15
     3c4:	ef 90       	pop	r14
     3c6:	08 95       	ret

000003c8 <__fixunssfdi>:
     3c8:	a0 e0       	ldi	r26, 0x00	; 0
     3ca:	b0 e0       	ldi	r27, 0x00	; 0
     3cc:	ea ee       	ldi	r30, 0xEA	; 234
     3ce:	f1 e0       	ldi	r31, 0x01	; 1
     3d0:	0c 94 12 2c 	jmp	0x5824	; 0x5824 <__prologue_saves__>
     3d4:	7b 01       	movw	r14, r22
     3d6:	8c 01       	movw	r16, r24
     3d8:	20 e0       	ldi	r18, 0x00	; 0
     3da:	30 e0       	ldi	r19, 0x00	; 0
     3dc:	40 e8       	ldi	r20, 0x80	; 128
     3de:	5f e3       	ldi	r21, 0x3F	; 63
     3e0:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
     3e4:	88 23       	and	r24, r24
     3e6:	4c f4       	brge	.+18     	; 0x3fa <__fixunssfdi+0x32>
     3e8:	aa 24       	eor	r10, r10
     3ea:	bb 24       	eor	r11, r11
     3ec:	cc 24       	eor	r12, r12
     3ee:	dd 24       	eor	r13, r13
     3f0:	ee 24       	eor	r14, r14
     3f2:	ff 24       	eor	r15, r15
     3f4:	00 e0       	ldi	r16, 0x00	; 0
     3f6:	10 e0       	ldi	r17, 0x00	; 0
     3f8:	86 c0       	rjmp	.+268    	; 0x506 <__fixunssfdi+0x13e>
     3fa:	c8 01       	movw	r24, r16
     3fc:	b7 01       	movw	r22, r14
     3fe:	20 e0       	ldi	r18, 0x00	; 0
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	40 e8       	ldi	r20, 0x80	; 128
     404:	5f e4       	ldi	r21, 0x4F	; 79
     406:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
     40a:	88 23       	and	r24, r24
     40c:	54 f4       	brge	.+20     	; 0x422 <__fixunssfdi+0x5a>
     40e:	c8 01       	movw	r24, r16
     410:	b7 01       	movw	r22, r14
     412:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
     416:	5b 01       	movw	r10, r22
     418:	6c 01       	movw	r12, r24
     41a:	ee 24       	eor	r14, r14
     41c:	ff 24       	eor	r15, r15
     41e:	87 01       	movw	r16, r14
     420:	72 c0       	rjmp	.+228    	; 0x506 <__fixunssfdi+0x13e>
     422:	c8 01       	movw	r24, r16
     424:	b7 01       	movw	r22, r14
     426:	20 e0       	ldi	r18, 0x00	; 0
     428:	30 e0       	ldi	r19, 0x00	; 0
     42a:	40 e8       	ldi	r20, 0x80	; 128
     42c:	5f e5       	ldi	r21, 0x5F	; 95
     42e:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
     432:	87 fd       	sbrc	r24, 7
     434:	0f c0       	rjmp	.+30     	; 0x454 <__fixunssfdi+0x8c>
     436:	aa 24       	eor	r10, r10
     438:	aa 94       	dec	r10
     43a:	bb 24       	eor	r11, r11
     43c:	ba 94       	dec	r11
     43e:	cc 24       	eor	r12, r12
     440:	ca 94       	dec	r12
     442:	dd 24       	eor	r13, r13
     444:	da 94       	dec	r13
     446:	ee 24       	eor	r14, r14
     448:	ea 94       	dec	r14
     44a:	ff 24       	eor	r15, r15
     44c:	fa 94       	dec	r15
     44e:	0f ef       	ldi	r16, 0xFF	; 255
     450:	1f ef       	ldi	r17, 0xFF	; 255
     452:	59 c0       	rjmp	.+178    	; 0x506 <__fixunssfdi+0x13e>
     454:	c8 01       	movw	r24, r16
     456:	b7 01       	movw	r22, r14
     458:	20 e0       	ldi	r18, 0x00	; 0
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	40 e8       	ldi	r20, 0x80	; 128
     45e:	5f e2       	ldi	r21, 0x2F	; 47
     460:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
     464:	7b 01       	movw	r14, r22
     466:	8c 01       	movw	r16, r24
     468:	22 24       	eor	r2, r2
     46a:	33 24       	eor	r3, r3
     46c:	21 01       	movw	r4, r2
     46e:	90 e1       	ldi	r25, 0x10	; 16
     470:	a9 2e       	mov	r10, r25
     472:	b1 2c       	mov	r11, r1
     474:	c1 2c       	mov	r12, r1
     476:	d1 2c       	mov	r13, r1
     478:	c0 e0       	ldi	r28, 0x00	; 0
     47a:	d0 e0       	ldi	r29, 0x00	; 0
     47c:	61 e0       	ldi	r22, 0x01	; 1
     47e:	70 e0       	ldi	r23, 0x00	; 0
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0a 2c       	mov	r0, r10
     486:	04 c0       	rjmp	.+8      	; 0x490 <__fixunssfdi+0xc8>
     488:	66 0f       	add	r22, r22
     48a:	77 1f       	adc	r23, r23
     48c:	88 1f       	adc	r24, r24
     48e:	99 1f       	adc	r25, r25
     490:	0a 94       	dec	r0
     492:	d2 f7       	brpl	.-12     	; 0x488 <__fixunssfdi+0xc0>
     494:	0e 94 41 10 	call	0x2082	; 0x2082 <__floatunsisf>
     498:	3b 01       	movw	r6, r22
     49a:	4c 01       	movw	r8, r24
     49c:	c8 01       	movw	r24, r16
     49e:	b7 01       	movw	r22, r14
     4a0:	a4 01       	movw	r20, r8
     4a2:	93 01       	movw	r18, r6
     4a4:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <__gesf2>
     4a8:	88 23       	and	r24, r24
     4aa:	64 f0       	brlt	.+24     	; 0x4c4 <__fixunssfdi+0xfc>
     4ac:	2a 28       	or	r2, r10
     4ae:	3b 28       	or	r3, r11
     4b0:	4c 28       	or	r4, r12
     4b2:	5d 28       	or	r5, r13
     4b4:	c8 01       	movw	r24, r16
     4b6:	b7 01       	movw	r22, r14
     4b8:	a4 01       	movw	r20, r8
     4ba:	93 01       	movw	r18, r6
     4bc:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <__divsf3>
     4c0:	7b 01       	movw	r14, r22
     4c2:	8c 01       	movw	r16, r24
     4c4:	d6 94       	lsr	r13
     4c6:	c7 94       	ror	r12
     4c8:	b7 94       	ror	r11
     4ca:	a7 94       	ror	r10
     4cc:	21 96       	adiw	r28, 0x01	; 1
     4ce:	c5 30       	cpi	r28, 0x05	; 5
     4d0:	d1 05       	cpc	r29, r1
     4d2:	a1 f6       	brne	.-88     	; 0x47c <__fixunssfdi+0xb4>
     4d4:	c8 01       	movw	r24, r16
     4d6:	b7 01       	movw	r22, r14
     4d8:	20 e0       	ldi	r18, 0x00	; 0
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	40 e8       	ldi	r20, 0x80	; 128
     4de:	5f e4       	ldi	r21, 0x4F	; 79
     4e0:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
     4e4:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
     4e8:	5b 01       	movw	r10, r22
     4ea:	6c 01       	movw	r12, r24
     4ec:	9b 01       	movw	r18, r22
     4ee:	a6 01       	movw	r20, r12
     4f0:	60 e0       	ldi	r22, 0x00	; 0
     4f2:	70 e0       	ldi	r23, 0x00	; 0
     4f4:	80 e0       	ldi	r24, 0x00	; 0
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	02 2d       	mov	r16, r2
     4fa:	0e 94 ba 10 	call	0x2174	; 0x2174 <__ashldi3>
     4fe:	59 01       	movw	r10, r18
     500:	6a 01       	movw	r12, r20
     502:	7b 01       	movw	r14, r22
     504:	8c 01       	movw	r16, r24
     506:	95 01       	movw	r18, r10
     508:	a6 01       	movw	r20, r12
     50a:	b7 01       	movw	r22, r14
     50c:	c8 01       	movw	r24, r16
     50e:	cd b7       	in	r28, 0x3d	; 61
     510:	de b7       	in	r29, 0x3e	; 62
     512:	e2 e1       	ldi	r30, 0x12	; 18
     514:	0c 94 2e 2c 	jmp	0x585c	; 0x585c <__epilogue_restores__>

00000518 <__floatdisf>:
     518:	a4 e0       	ldi	r26, 0x04	; 4
     51a:	b0 e0       	ldi	r27, 0x00	; 0
     51c:	e2 e9       	ldi	r30, 0x92	; 146
     51e:	f2 e0       	ldi	r31, 0x02	; 2
     520:	0c 94 14 2c 	jmp	0x5828	; 0x5828 <__prologue_saves__+0x4>
     524:	49 01       	movw	r8, r18
     526:	5a 01       	movw	r10, r20
     528:	6b 01       	movw	r12, r22
     52a:	7c 01       	movw	r14, r24
     52c:	d5 01       	movw	r26, r10
     52e:	c4 01       	movw	r24, r8
     530:	9c 01       	movw	r18, r24
     532:	ad 01       	movw	r20, r26
     534:	55 0f       	add	r21, r21
     536:	22 0b       	sbc	r18, r18
     538:	32 2f       	mov	r19, r18
     53a:	a9 01       	movw	r20, r18
     53c:	88 15       	cp	r24, r8
     53e:	99 f4       	brne	.+38     	; 0x566 <__floatdisf+0x4e>
     540:	99 15       	cp	r25, r9
     542:	89 f4       	brne	.+34     	; 0x566 <__floatdisf+0x4e>
     544:	aa 15       	cp	r26, r10
     546:	79 f4       	brne	.+30     	; 0x566 <__floatdisf+0x4e>
     548:	bb 15       	cp	r27, r11
     54a:	69 f4       	brne	.+26     	; 0x566 <__floatdisf+0x4e>
     54c:	2c 15       	cp	r18, r12
     54e:	59 f4       	brne	.+22     	; 0x566 <__floatdisf+0x4e>
     550:	2d 15       	cp	r18, r13
     552:	49 f4       	brne	.+18     	; 0x566 <__floatdisf+0x4e>
     554:	2e 15       	cp	r18, r14
     556:	39 f4       	brne	.+14     	; 0x566 <__floatdisf+0x4e>
     558:	2f 15       	cp	r18, r15
     55a:	29 f4       	brne	.+10     	; 0x566 <__floatdisf+0x4e>
     55c:	c5 01       	movw	r24, r10
     55e:	b4 01       	movw	r22, r8
     560:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <__floatsisf>
     564:	d0 c0       	rjmp	.+416    	; 0x706 <__floatdisf+0x1ee>
     566:	94 01       	movw	r18, r8
     568:	a5 01       	movw	r20, r10
     56a:	b6 01       	movw	r22, r12
     56c:	c7 01       	movw	r24, r14
     56e:	00 e2       	ldi	r16, 0x20	; 32
     570:	0e 94 39 11 	call	0x2272	; 0x2272 <__ashrdi3>
     574:	c9 01       	movw	r24, r18
     576:	a4 2f       	mov	r26, r20
     578:	b5 2f       	mov	r27, r21
     57a:	b7 ff       	sbrs	r27, 7
     57c:	07 c0       	rjmp	.+14     	; 0x58c <__floatdisf+0x74>
     57e:	b0 95       	com	r27
     580:	a0 95       	com	r26
     582:	90 95       	com	r25
     584:	81 95       	neg	r24
     586:	9f 4f       	sbci	r25, 0xFF	; 255
     588:	af 4f       	sbci	r26, 0xFF	; 255
     58a:	bf 4f       	sbci	r27, 0xFF	; 255
     58c:	80 30       	cpi	r24, 0x00	; 0
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	92 07       	cpc	r25, r18
     592:	21 e0       	ldi	r18, 0x01	; 1
     594:	a2 07       	cpc	r26, r18
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	b2 07       	cpc	r27, r18
     59a:	80 f4       	brcc	.+32     	; 0x5bc <__floatdisf+0xa4>
     59c:	8f 3f       	cpi	r24, 0xFF	; 255
     59e:	91 05       	cpc	r25, r1
     5a0:	a1 05       	cpc	r26, r1
     5a2:	b1 05       	cpc	r27, r1
     5a4:	31 f0       	breq	.+12     	; 0x5b2 <__floatdisf+0x9a>
     5a6:	28 f0       	brcs	.+10     	; 0x5b2 <__floatdisf+0x9a>
     5a8:	28 e0       	ldi	r18, 0x08	; 8
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	40 e0       	ldi	r20, 0x00	; 0
     5ae:	50 e0       	ldi	r21, 0x00	; 0
     5b0:	16 c0       	rjmp	.+44     	; 0x5de <__floatdisf+0xc6>
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	40 e0       	ldi	r20, 0x00	; 0
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	11 c0       	rjmp	.+34     	; 0x5de <__floatdisf+0xc6>
     5bc:	80 30       	cpi	r24, 0x00	; 0
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	93 07       	cpc	r25, r19
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	a3 07       	cpc	r26, r19
     5c6:	31 e0       	ldi	r19, 0x01	; 1
     5c8:	b3 07       	cpc	r27, r19
     5ca:	28 f0       	brcs	.+10     	; 0x5d6 <__floatdisf+0xbe>
     5cc:	28 e1       	ldi	r18, 0x18	; 24
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	40 e0       	ldi	r20, 0x00	; 0
     5d2:	50 e0       	ldi	r21, 0x00	; 0
     5d4:	04 c0       	rjmp	.+8      	; 0x5de <__floatdisf+0xc6>
     5d6:	20 e1       	ldi	r18, 0x10	; 16
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	40 e0       	ldi	r20, 0x00	; 0
     5dc:	50 e0       	ldi	r21, 0x00	; 0
     5de:	60 e2       	ldi	r22, 0x20	; 32
     5e0:	46 2e       	mov	r4, r22
     5e2:	51 2c       	mov	r5, r1
     5e4:	61 2c       	mov	r6, r1
     5e6:	71 2c       	mov	r7, r1
     5e8:	42 1a       	sub	r4, r18
     5ea:	53 0a       	sbc	r5, r19
     5ec:	64 0a       	sbc	r6, r20
     5ee:	75 0a       	sbc	r7, r21
     5f0:	04 c0       	rjmp	.+8      	; 0x5fa <__floatdisf+0xe2>
     5f2:	b6 95       	lsr	r27
     5f4:	a7 95       	ror	r26
     5f6:	97 95       	ror	r25
     5f8:	87 95       	ror	r24
     5fa:	2a 95       	dec	r18
     5fc:	d2 f7       	brpl	.-12     	; 0x5f2 <__floatdisf+0xda>
     5fe:	fc 01       	movw	r30, r24
     600:	ea 57       	subi	r30, 0x7A	; 122
     602:	ff 4f       	sbci	r31, 0xFF	; 255
     604:	80 81       	ld	r24, Z
     606:	48 1a       	sub	r4, r24
     608:	51 08       	sbc	r5, r1
     60a:	61 08       	sbc	r6, r1
     60c:	71 08       	sbc	r7, r1
     60e:	41 14       	cp	r4, r1
     610:	51 04       	cpc	r5, r1
     612:	61 04       	cpc	r6, r1
     614:	71 04       	cpc	r7, r1
     616:	29 f4       	brne	.+10     	; 0x622 <__floatdisf+0x10a>
     618:	60 e0       	ldi	r22, 0x00	; 0
     61a:	70 e0       	ldi	r23, 0x00	; 0
     61c:	80 e0       	ldi	r24, 0x00	; 0
     61e:	9f ed       	ldi	r25, 0xDF	; 223
     620:	72 c0       	rjmp	.+228    	; 0x706 <__floatdisf+0x1ee>
     622:	81 e2       	ldi	r24, 0x21	; 33
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	a0 e0       	ldi	r26, 0x00	; 0
     628:	b0 e0       	ldi	r27, 0x00	; 0
     62a:	84 19       	sub	r24, r4
     62c:	95 09       	sbc	r25, r5
     62e:	a6 09       	sbc	r26, r6
     630:	b7 09       	sbc	r27, r7
     632:	89 83       	std	Y+1, r24	; 0x01
     634:	9a 83       	std	Y+2, r25	; 0x02
     636:	ab 83       	std	Y+3, r26	; 0x03
     638:	bc 83       	std	Y+4, r27	; 0x04
     63a:	19 81       	ldd	r17, Y+1	; 0x01
     63c:	94 01       	movw	r18, r8
     63e:	a5 01       	movw	r20, r10
     640:	b6 01       	movw	r22, r12
     642:	c7 01       	movw	r24, r14
     644:	01 2f       	mov	r16, r17
     646:	0e 94 39 11 	call	0x2272	; 0x2272 <__ashrdi3>
     64a:	c9 01       	movw	r24, r18
     64c:	da 01       	movw	r26, r20
     64e:	2c 01       	movw	r4, r24
     650:	3d 01       	movw	r6, r26
     652:	80 e2       	ldi	r24, 0x20	; 32
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	a9 81       	ldd	r26, Y+1	; 0x01
     658:	ba 81       	ldd	r27, Y+2	; 0x02
     65a:	8a 1b       	sub	r24, r26
     65c:	9b 0b       	sbc	r25, r27
     65e:	a5 01       	movw	r20, r10
     660:	94 01       	movw	r18, r8
     662:	04 c0       	rjmp	.+8      	; 0x66c <__floatdisf+0x154>
     664:	22 0f       	add	r18, r18
     666:	33 1f       	adc	r19, r19
     668:	44 1f       	adc	r20, r20
     66a:	55 1f       	adc	r21, r21
     66c:	8a 95       	dec	r24
     66e:	d2 f7       	brpl	.-12     	; 0x664 <__floatdisf+0x14c>
     670:	21 15       	cp	r18, r1
     672:	31 05       	cpc	r19, r1
     674:	41 05       	cpc	r20, r1
     676:	51 05       	cpc	r21, r1
     678:	41 f0       	breq	.+16     	; 0x68a <__floatdisf+0x172>
     67a:	81 e0       	ldi	r24, 0x01	; 1
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	a0 e0       	ldi	r26, 0x00	; 0
     680:	b0 e0       	ldi	r27, 0x00	; 0
     682:	48 2a       	or	r4, r24
     684:	59 2a       	or	r5, r25
     686:	6a 2a       	or	r6, r26
     688:	7b 2a       	or	r7, r27
     68a:	29 81       	ldd	r18, Y+1	; 0x01
     68c:	3a 81       	ldd	r19, Y+2	; 0x02
     68e:	4b 81       	ldd	r20, Y+3	; 0x03
     690:	5c 81       	ldd	r21, Y+4	; 0x04
     692:	20 32       	cpi	r18, 0x20	; 32
     694:	31 05       	cpc	r19, r1
     696:	41 05       	cpc	r20, r1
     698:	51 05       	cpc	r21, r1
     69a:	59 f4       	brne	.+22     	; 0x6b2 <__floatdisf+0x19a>
     69c:	0f 2e       	mov	r0, r31
     69e:	f0 e0       	ldi	r31, 0x00	; 0
     6a0:	cf 2e       	mov	r12, r31
     6a2:	f0 e0       	ldi	r31, 0x00	; 0
     6a4:	df 2e       	mov	r13, r31
     6a6:	f0 e8       	ldi	r31, 0x80	; 128
     6a8:	ef 2e       	mov	r14, r31
     6aa:	ff e4       	ldi	r31, 0x4F	; 79
     6ac:	ff 2e       	mov	r15, r31
     6ae:	f0 2d       	mov	r31, r0
     6b0:	22 c0       	rjmp	.+68     	; 0x6f6 <__floatdisf+0x1de>
     6b2:	89 81       	ldd	r24, Y+1	; 0x01
     6b4:	9a 81       	ldd	r25, Y+2	; 0x02
     6b6:	ab 81       	ldd	r26, Y+3	; 0x03
     6b8:	bc 81       	ldd	r27, Y+4	; 0x04
     6ba:	4f 97       	sbiw	r24, 0x1f	; 31
     6bc:	a1 05       	cpc	r26, r1
     6be:	b1 05       	cpc	r27, r1
     6c0:	59 f4       	brne	.+22     	; 0x6d8 <__floatdisf+0x1c0>
     6c2:	0f 2e       	mov	r0, r31
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	cf 2e       	mov	r12, r31
     6c8:	f0 e0       	ldi	r31, 0x00	; 0
     6ca:	df 2e       	mov	r13, r31
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	ef 2e       	mov	r14, r31
     6d0:	ff e4       	ldi	r31, 0x4F	; 79
     6d2:	ff 2e       	mov	r15, r31
     6d4:	f0 2d       	mov	r31, r0
     6d6:	0f c0       	rjmp	.+30     	; 0x6f6 <__floatdisf+0x1de>
     6d8:	61 e0       	ldi	r22, 0x01	; 1
     6da:	70 e0       	ldi	r23, 0x00	; 0
     6dc:	80 e0       	ldi	r24, 0x00	; 0
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	04 c0       	rjmp	.+8      	; 0x6ea <__floatdisf+0x1d2>
     6e2:	66 0f       	add	r22, r22
     6e4:	77 1f       	adc	r23, r23
     6e6:	88 1f       	adc	r24, r24
     6e8:	99 1f       	adc	r25, r25
     6ea:	1a 95       	dec	r17
     6ec:	d2 f7       	brpl	.-12     	; 0x6e2 <__floatdisf+0x1ca>
     6ee:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <__floatsisf>
     6f2:	6b 01       	movw	r12, r22
     6f4:	7c 01       	movw	r14, r24
     6f6:	c3 01       	movw	r24, r6
     6f8:	b2 01       	movw	r22, r4
     6fa:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <__floatsisf>
     6fe:	a7 01       	movw	r20, r14
     700:	96 01       	movw	r18, r12
     702:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
     706:	24 96       	adiw	r28, 0x04	; 4
     708:	e0 e1       	ldi	r30, 0x10	; 16
     70a:	0c 94 30 2c 	jmp	0x5860	; 0x5860 <__epilogue_restores__+0x4>

0000070e <__divdi3>:
     70e:	a2 e7       	ldi	r26, 0x72	; 114
     710:	b0 e0       	ldi	r27, 0x00	; 0
     712:	ed e8       	ldi	r30, 0x8D	; 141
     714:	f3 e0       	ldi	r31, 0x03	; 3
     716:	0c 94 12 2c 	jmp	0x5824	; 0x5824 <__prologue_saves__>
     71a:	98 2e       	mov	r9, r24
     71c:	89 2e       	mov	r8, r25
     71e:	71 2e       	mov	r7, r17
     720:	88 e0       	ldi	r24, 0x08	; 8
     722:	fe 01       	movw	r30, r28
     724:	31 96       	adiw	r30, 0x01	; 1
     726:	df 01       	movw	r26, r30
     728:	68 2e       	mov	r6, r24
     72a:	1d 92       	st	X+, r1
     72c:	6a 94       	dec	r6
     72e:	e9 f7       	brne	.-6      	; 0x72a <__divdi3+0x1c>
     730:	29 83       	std	Y+1, r18	; 0x01
     732:	3a 83       	std	Y+2, r19	; 0x02
     734:	4b 83       	std	Y+3, r20	; 0x03
     736:	5c 83       	std	Y+4, r21	; 0x04
     738:	6d 83       	std	Y+5, r22	; 0x05
     73a:	7e 83       	std	Y+6, r23	; 0x06
     73c:	9f 82       	std	Y+7, r9	; 0x07
     73e:	98 87       	std	Y+8, r25	; 0x08
     740:	fe 01       	movw	r30, r28
     742:	39 96       	adiw	r30, 0x09	; 9
     744:	df 01       	movw	r26, r30
     746:	1d 92       	st	X+, r1
     748:	8a 95       	dec	r24
     74a:	e9 f7       	brne	.-6      	; 0x746 <__divdi3+0x38>
     74c:	a9 86       	std	Y+9, r10	; 0x09
     74e:	ba 86       	std	Y+10, r11	; 0x0a
     750:	cb 86       	std	Y+11, r12	; 0x0b
     752:	dc 86       	std	Y+12, r13	; 0x0c
     754:	ed 86       	std	Y+13, r14	; 0x0d
     756:	fe 86       	std	Y+14, r15	; 0x0e
     758:	0f 87       	std	Y+15, r16	; 0x0f
     75a:	18 8b       	std	Y+16, r17	; 0x10
     75c:	8d 81       	ldd	r24, Y+5	; 0x05
     75e:	9e 81       	ldd	r25, Y+6	; 0x06
     760:	af 81       	ldd	r26, Y+7	; 0x07
     762:	b8 85       	ldd	r27, Y+8	; 0x08
     764:	b7 fd       	sbrc	r27, 7
     766:	07 c0       	rjmp	.+14     	; 0x776 <__divdi3+0x68>
     768:	e1 96       	adiw	r28, 0x31	; 49
     76a:	1c ae       	std	Y+60, r1	; 0x3c
     76c:	1d ae       	std	Y+61, r1	; 0x3d
     76e:	1e ae       	std	Y+62, r1	; 0x3e
     770:	1f ae       	std	Y+63, r1	; 0x3f
     772:	e1 97       	sbiw	r28, 0x31	; 49
     774:	64 c0       	rjmp	.+200    	; 0x83e <__divdi3+0x130>
     776:	21 95       	neg	r18
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	12 16       	cp	r1, r18
     77c:	08 f0       	brcs	.+2      	; 0x780 <__divdi3+0x72>
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	31 95       	neg	r19
     782:	91 e0       	ldi	r25, 0x01	; 1
     784:	13 16       	cp	r1, r19
     786:	08 f0       	brcs	.+2      	; 0x78a <__divdi3+0x7c>
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	b3 2f       	mov	r27, r19
     78c:	b8 1b       	sub	r27, r24
     78e:	81 e0       	ldi	r24, 0x01	; 1
     790:	3b 17       	cp	r19, r27
     792:	08 f0       	brcs	.+2      	; 0x796 <__divdi3+0x88>
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	98 2b       	or	r25, r24
     798:	41 95       	neg	r20
     79a:	31 e0       	ldi	r19, 0x01	; 1
     79c:	14 16       	cp	r1, r20
     79e:	08 f0       	brcs	.+2      	; 0x7a2 <__divdi3+0x94>
     7a0:	30 e0       	ldi	r19, 0x00	; 0
     7a2:	a4 2f       	mov	r26, r20
     7a4:	a9 1b       	sub	r26, r25
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	4a 17       	cp	r20, r26
     7aa:	08 f0       	brcs	.+2      	; 0x7ae <__divdi3+0xa0>
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	38 2b       	or	r19, r24
     7b0:	51 95       	neg	r21
     7b2:	91 e0       	ldi	r25, 0x01	; 1
     7b4:	15 16       	cp	r1, r21
     7b6:	08 f0       	brcs	.+2      	; 0x7ba <__divdi3+0xac>
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	f5 2f       	mov	r31, r21
     7bc:	f3 1b       	sub	r31, r19
     7be:	81 e0       	ldi	r24, 0x01	; 1
     7c0:	5f 17       	cp	r21, r31
     7c2:	08 f0       	brcs	.+2      	; 0x7c6 <__divdi3+0xb8>
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	98 2b       	or	r25, r24
     7c8:	61 95       	neg	r22
     7ca:	31 e0       	ldi	r19, 0x01	; 1
     7cc:	16 16       	cp	r1, r22
     7ce:	08 f0       	brcs	.+2      	; 0x7d2 <__divdi3+0xc4>
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	e6 2f       	mov	r30, r22
     7d4:	e9 1b       	sub	r30, r25
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	6e 17       	cp	r22, r30
     7da:	08 f0       	brcs	.+2      	; 0x7de <__divdi3+0xd0>
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	38 2b       	or	r19, r24
     7e0:	71 95       	neg	r23
     7e2:	41 e0       	ldi	r20, 0x01	; 1
     7e4:	17 16       	cp	r1, r23
     7e6:	08 f0       	brcs	.+2      	; 0x7ea <__divdi3+0xdc>
     7e8:	40 e0       	ldi	r20, 0x00	; 0
     7ea:	57 2f       	mov	r21, r23
     7ec:	53 1b       	sub	r21, r19
     7ee:	81 e0       	ldi	r24, 0x01	; 1
     7f0:	75 17       	cp	r23, r21
     7f2:	08 f0       	brcs	.+2      	; 0x7f6 <__divdi3+0xe8>
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	48 2b       	or	r20, r24
     7f8:	89 2d       	mov	r24, r9
     7fa:	81 95       	neg	r24
     7fc:	91 e0       	ldi	r25, 0x01	; 1
     7fe:	18 16       	cp	r1, r24
     800:	08 f0       	brcs	.+2      	; 0x804 <__divdi3+0xf6>
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	68 2e       	mov	r6, r24
     806:	64 1a       	sub	r6, r20
     808:	46 2d       	mov	r20, r6
     80a:	31 e0       	ldi	r19, 0x01	; 1
     80c:	86 15       	cp	r24, r6
     80e:	08 f0       	brcs	.+2      	; 0x812 <__divdi3+0x104>
     810:	30 e0       	ldi	r19, 0x00	; 0
     812:	93 2b       	or	r25, r19
     814:	88 2d       	mov	r24, r8
     816:	81 95       	neg	r24
     818:	89 1b       	sub	r24, r25
     81a:	29 83       	std	Y+1, r18	; 0x01
     81c:	ba 83       	std	Y+2, r27	; 0x02
     81e:	ab 83       	std	Y+3, r26	; 0x03
     820:	fc 83       	std	Y+4, r31	; 0x04
     822:	ed 83       	std	Y+5, r30	; 0x05
     824:	5e 83       	std	Y+6, r21	; 0x06
     826:	4f 83       	std	Y+7, r20	; 0x07
     828:	88 87       	std	Y+8, r24	; 0x08
     82a:	2f ef       	ldi	r18, 0xFF	; 255
     82c:	3f ef       	ldi	r19, 0xFF	; 255
     82e:	4f ef       	ldi	r20, 0xFF	; 255
     830:	5f ef       	ldi	r21, 0xFF	; 255
     832:	e1 96       	adiw	r28, 0x31	; 49
     834:	2c af       	std	Y+60, r18	; 0x3c
     836:	3d af       	std	Y+61, r19	; 0x3d
     838:	4e af       	std	Y+62, r20	; 0x3e
     83a:	5f af       	std	Y+63, r21	; 0x3f
     83c:	e1 97       	sbiw	r28, 0x31	; 49
     83e:	8d 85       	ldd	r24, Y+13	; 0x0d
     840:	9e 85       	ldd	r25, Y+14	; 0x0e
     842:	af 85       	ldd	r26, Y+15	; 0x0f
     844:	b8 89       	ldd	r27, Y+16	; 0x10
     846:	b7 ff       	sbrs	r27, 7
     848:	6a c0       	rjmp	.+212    	; 0x91e <__stack+0xbf>
     84a:	e1 96       	adiw	r28, 0x31	; 49
     84c:	4c ad       	ldd	r20, Y+60	; 0x3c
     84e:	5d ad       	ldd	r21, Y+61	; 0x3d
     850:	6e ad       	ldd	r22, Y+62	; 0x3e
     852:	7f ad       	ldd	r23, Y+63	; 0x3f
     854:	e1 97       	sbiw	r28, 0x31	; 49
     856:	40 95       	com	r20
     858:	50 95       	com	r21
     85a:	60 95       	com	r22
     85c:	70 95       	com	r23
     85e:	e1 96       	adiw	r28, 0x31	; 49
     860:	4c af       	std	Y+60, r20	; 0x3c
     862:	5d af       	std	Y+61, r21	; 0x3d
     864:	6e af       	std	Y+62, r22	; 0x3e
     866:	7f af       	std	Y+63, r23	; 0x3f
     868:	e1 97       	sbiw	r28, 0x31	; 49
     86a:	a1 94       	neg	r10
     86c:	81 e0       	ldi	r24, 0x01	; 1
     86e:	1a 14       	cp	r1, r10
     870:	08 f0       	brcs	.+2      	; 0x874 <__stack+0x15>
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	b1 94       	neg	r11
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	1b 14       	cp	r1, r11
     87a:	08 f0       	brcs	.+2      	; 0x87e <__stack+0x1f>
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	6b 2d       	mov	r22, r11
     880:	68 1b       	sub	r22, r24
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	b6 16       	cp	r11, r22
     886:	08 f0       	brcs	.+2      	; 0x88a <__stack+0x2b>
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	98 2b       	or	r25, r24
     88c:	c1 94       	neg	r12
     88e:	21 e0       	ldi	r18, 0x01	; 1
     890:	1c 14       	cp	r1, r12
     892:	08 f0       	brcs	.+2      	; 0x896 <__stack+0x37>
     894:	20 e0       	ldi	r18, 0x00	; 0
     896:	5c 2d       	mov	r21, r12
     898:	59 1b       	sub	r21, r25
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	c5 16       	cp	r12, r21
     89e:	08 f0       	brcs	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	28 2b       	or	r18, r24
     8a4:	d1 94       	neg	r13
     8a6:	91 e0       	ldi	r25, 0x01	; 1
     8a8:	1d 14       	cp	r1, r13
     8aa:	08 f0       	brcs	.+2      	; 0x8ae <__stack+0x4f>
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	4d 2d       	mov	r20, r13
     8b0:	42 1b       	sub	r20, r18
     8b2:	81 e0       	ldi	r24, 0x01	; 1
     8b4:	d4 16       	cp	r13, r20
     8b6:	08 f0       	brcs	.+2      	; 0x8ba <__stack+0x5b>
     8b8:	80 e0       	ldi	r24, 0x00	; 0
     8ba:	98 2b       	or	r25, r24
     8bc:	e1 94       	neg	r14
     8be:	21 e0       	ldi	r18, 0x01	; 1
     8c0:	1e 14       	cp	r1, r14
     8c2:	08 f0       	brcs	.+2      	; 0x8c6 <__stack+0x67>
     8c4:	20 e0       	ldi	r18, 0x00	; 0
     8c6:	3e 2d       	mov	r19, r14
     8c8:	39 1b       	sub	r19, r25
     8ca:	81 e0       	ldi	r24, 0x01	; 1
     8cc:	e3 16       	cp	r14, r19
     8ce:	08 f0       	brcs	.+2      	; 0x8d2 <__stack+0x73>
     8d0:	80 e0       	ldi	r24, 0x00	; 0
     8d2:	28 2b       	or	r18, r24
     8d4:	f1 94       	neg	r15
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	1f 14       	cp	r1, r15
     8da:	08 f0       	brcs	.+2      	; 0x8de <__stack+0x7f>
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	7f 2d       	mov	r23, r15
     8e0:	72 1b       	sub	r23, r18
     8e2:	27 2f       	mov	r18, r23
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	f7 16       	cp	r15, r23
     8e8:	08 f0       	brcs	.+2      	; 0x8ec <__stack+0x8d>
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	98 2b       	or	r25, r24
     8ee:	01 95       	neg	r16
     8f0:	11 e0       	ldi	r17, 0x01	; 1
     8f2:	10 16       	cp	r1, r16
     8f4:	08 f0       	brcs	.+2      	; 0x8f8 <__stack+0x99>
     8f6:	10 e0       	ldi	r17, 0x00	; 0
     8f8:	80 2f       	mov	r24, r16
     8fa:	89 1b       	sub	r24, r25
     8fc:	98 2f       	mov	r25, r24
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	09 17       	cp	r16, r25
     902:	08 f0       	brcs	.+2      	; 0x906 <__stack+0xa7>
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	18 2b       	or	r17, r24
     908:	87 2d       	mov	r24, r7
     90a:	81 95       	neg	r24
     90c:	81 1b       	sub	r24, r17
     90e:	a9 86       	std	Y+9, r10	; 0x09
     910:	6a 87       	std	Y+10, r22	; 0x0a
     912:	5b 87       	std	Y+11, r21	; 0x0b
     914:	4c 87       	std	Y+12, r20	; 0x0c
     916:	3d 87       	std	Y+13, r19	; 0x0d
     918:	2e 87       	std	Y+14, r18	; 0x0e
     91a:	9f 87       	std	Y+15, r25	; 0x0f
     91c:	88 8b       	std	Y+16, r24	; 0x10
     91e:	99 81       	ldd	r25, Y+1	; 0x01
     920:	2a 81       	ldd	r18, Y+2	; 0x02
     922:	3b 81       	ldd	r19, Y+3	; 0x03
     924:	4c 81       	ldd	r20, Y+4	; 0x04
     926:	5d 81       	ldd	r21, Y+5	; 0x05
     928:	6e 81       	ldd	r22, Y+6	; 0x06
     92a:	7f 81       	ldd	r23, Y+7	; 0x07
     92c:	a8 85       	ldd	r26, Y+8	; 0x08
     92e:	b9 85       	ldd	r27, Y+9	; 0x09
     930:	1a 85       	ldd	r17, Y+10	; 0x0a
     932:	0b 85       	ldd	r16, Y+11	; 0x0b
     934:	fc 84       	ldd	r15, Y+12	; 0x0c
     936:	ed 84       	ldd	r14, Y+13	; 0x0d
     938:	de 84       	ldd	r13, Y+14	; 0x0e
     93a:	cf 84       	ldd	r12, Y+15	; 0x0f
     93c:	b8 88       	ldd	r11, Y+16	; 0x10
     93e:	88 e0       	ldi	r24, 0x08	; 8
     940:	e1 e1       	ldi	r30, 0x11	; 17
     942:	8e 2e       	mov	r8, r30
     944:	91 2c       	mov	r9, r1
     946:	8c 0e       	add	r8, r28
     948:	9d 1e       	adc	r9, r29
     94a:	f4 01       	movw	r30, r8
     94c:	68 2e       	mov	r6, r24
     94e:	11 92       	st	Z+, r1
     950:	6a 94       	dec	r6
     952:	e9 f7       	brne	.-6      	; 0x94e <__stack+0xef>
     954:	99 8b       	std	Y+17, r25	; 0x11
     956:	2a 8b       	std	Y+18, r18	; 0x12
     958:	3b 8b       	std	Y+19, r19	; 0x13
     95a:	4c 8b       	std	Y+20, r20	; 0x14
     95c:	5d 8b       	std	Y+21, r21	; 0x15
     95e:	6e 8b       	std	Y+22, r22	; 0x16
     960:	7f 8b       	std	Y+23, r23	; 0x17
     962:	a8 8f       	std	Y+24, r26	; 0x18
     964:	9e 01       	movw	r18, r28
     966:	27 5e       	subi	r18, 0xE7	; 231
     968:	3f 4f       	sbci	r19, 0xFF	; 255
     96a:	f9 01       	movw	r30, r18
     96c:	11 92       	st	Z+, r1
     96e:	8a 95       	dec	r24
     970:	e9 f7       	brne	.-6      	; 0x96c <__stack+0x10d>
     972:	b9 8f       	std	Y+25, r27	; 0x19
     974:	1a 8f       	std	Y+26, r17	; 0x1a
     976:	0b 8f       	std	Y+27, r16	; 0x1b
     978:	fc 8e       	std	Y+28, r15	; 0x1c
     97a:	ed 8e       	std	Y+29, r14	; 0x1d
     97c:	de 8e       	std	Y+30, r13	; 0x1e
     97e:	cf 8e       	std	Y+31, r12	; 0x1f
     980:	b8 a2       	std	Y+32, r11	; 0x20
     982:	29 8c       	ldd	r2, Y+25	; 0x19
     984:	3a 8c       	ldd	r3, Y+26	; 0x1a
     986:	4b 8c       	ldd	r4, Y+27	; 0x1b
     988:	5c 8c       	ldd	r5, Y+28	; 0x1c
     98a:	ed 8c       	ldd	r14, Y+29	; 0x1d
     98c:	fe 8c       	ldd	r15, Y+30	; 0x1e
     98e:	0f 8d       	ldd	r16, Y+31	; 0x1f
     990:	18 a1       	ldd	r17, Y+32	; 0x20
     992:	69 88       	ldd	r6, Y+17	; 0x11
     994:	7a 88       	ldd	r7, Y+18	; 0x12
     996:	8b 88       	ldd	r8, Y+19	; 0x13
     998:	9c 88       	ldd	r9, Y+20	; 0x14
     99a:	21 96       	adiw	r28, 0x01	; 1
     99c:	6c ae       	std	Y+60, r6	; 0x3c
     99e:	7d ae       	std	Y+61, r7	; 0x3d
     9a0:	8e ae       	std	Y+62, r8	; 0x3e
     9a2:	9f ae       	std	Y+63, r9	; 0x3f
     9a4:	21 97       	sbiw	r28, 0x01	; 1
     9a6:	6d 88       	ldd	r6, Y+21	; 0x15
     9a8:	7e 88       	ldd	r7, Y+22	; 0x16
     9aa:	8f 88       	ldd	r8, Y+23	; 0x17
     9ac:	98 8c       	ldd	r9, Y+24	; 0x18
     9ae:	e1 14       	cp	r14, r1
     9b0:	f1 04       	cpc	r15, r1
     9b2:	01 05       	cpc	r16, r1
     9b4:	11 05       	cpc	r17, r1
     9b6:	09 f0       	breq	.+2      	; 0x9ba <__stack+0x15b>
     9b8:	d9 c3       	rjmp	.+1970   	; 0x116c <__stack+0x90d>
     9ba:	62 14       	cp	r6, r2
     9bc:	73 04       	cpc	r7, r3
     9be:	84 04       	cpc	r8, r4
     9c0:	95 04       	cpc	r9, r5
     9c2:	08 f0       	brcs	.+2      	; 0x9c6 <__stack+0x167>
     9c4:	57 c1       	rjmp	.+686    	; 0xc74 <__stack+0x415>
     9c6:	00 e0       	ldi	r16, 0x00	; 0
     9c8:	20 16       	cp	r2, r16
     9ca:	00 e0       	ldi	r16, 0x00	; 0
     9cc:	30 06       	cpc	r3, r16
     9ce:	01 e0       	ldi	r16, 0x01	; 1
     9d0:	40 06       	cpc	r4, r16
     9d2:	00 e0       	ldi	r16, 0x00	; 0
     9d4:	50 06       	cpc	r5, r16
     9d6:	88 f4       	brcc	.+34     	; 0x9fa <__stack+0x19b>
     9d8:	1f ef       	ldi	r17, 0xFF	; 255
     9da:	21 16       	cp	r2, r17
     9dc:	31 04       	cpc	r3, r1
     9de:	41 04       	cpc	r4, r1
     9e0:	51 04       	cpc	r5, r1
     9e2:	39 f0       	breq	.+14     	; 0x9f2 <__stack+0x193>
     9e4:	30 f0       	brcs	.+12     	; 0x9f2 <__stack+0x193>
     9e6:	48 e0       	ldi	r20, 0x08	; 8
     9e8:	e4 2e       	mov	r14, r20
     9ea:	f1 2c       	mov	r15, r1
     9ec:	01 2d       	mov	r16, r1
     9ee:	11 2d       	mov	r17, r1
     9f0:	18 c0       	rjmp	.+48     	; 0xa22 <__stack+0x1c3>
     9f2:	ee 24       	eor	r14, r14
     9f4:	ff 24       	eor	r15, r15
     9f6:	87 01       	movw	r16, r14
     9f8:	14 c0       	rjmp	.+40     	; 0xa22 <__stack+0x1c3>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	22 16       	cp	r2, r18
     9fe:	20 e0       	ldi	r18, 0x00	; 0
     a00:	32 06       	cpc	r3, r18
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	42 06       	cpc	r4, r18
     a06:	21 e0       	ldi	r18, 0x01	; 1
     a08:	52 06       	cpc	r5, r18
     a0a:	30 f0       	brcs	.+12     	; 0xa18 <__stack+0x1b9>
     a0c:	38 e1       	ldi	r19, 0x18	; 24
     a0e:	e3 2e       	mov	r14, r19
     a10:	f1 2c       	mov	r15, r1
     a12:	01 2d       	mov	r16, r1
     a14:	11 2d       	mov	r17, r1
     a16:	05 c0       	rjmp	.+10     	; 0xa22 <__stack+0x1c3>
     a18:	20 e1       	ldi	r18, 0x10	; 16
     a1a:	e2 2e       	mov	r14, r18
     a1c:	f1 2c       	mov	r15, r1
     a1e:	01 2d       	mov	r16, r1
     a20:	11 2d       	mov	r17, r1
     a22:	d2 01       	movw	r26, r4
     a24:	c1 01       	movw	r24, r2
     a26:	0e 2c       	mov	r0, r14
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <__stack+0x1d3>
     a2a:	b6 95       	lsr	r27
     a2c:	a7 95       	ror	r26
     a2e:	97 95       	ror	r25
     a30:	87 95       	ror	r24
     a32:	0a 94       	dec	r0
     a34:	d2 f7       	brpl	.-12     	; 0xa2a <__stack+0x1cb>
     a36:	8a 57       	subi	r24, 0x7A	; 122
     a38:	9f 4f       	sbci	r25, 0xFF	; 255
     a3a:	dc 01       	movw	r26, r24
     a3c:	2c 91       	ld	r18, X
     a3e:	80 e2       	ldi	r24, 0x20	; 32
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	b0 e0       	ldi	r27, 0x00	; 0
     a46:	8e 19       	sub	r24, r14
     a48:	9f 09       	sbc	r25, r15
     a4a:	a0 0b       	sbc	r26, r16
     a4c:	b1 0b       	sbc	r27, r17
     a4e:	7c 01       	movw	r14, r24
     a50:	8d 01       	movw	r16, r26
     a52:	e2 1a       	sub	r14, r18
     a54:	f1 08       	sbc	r15, r1
     a56:	01 09       	sbc	r16, r1
     a58:	11 09       	sbc	r17, r1
     a5a:	e1 14       	cp	r14, r1
     a5c:	f1 04       	cpc	r15, r1
     a5e:	01 05       	cpc	r16, r1
     a60:	11 05       	cpc	r17, r1
     a62:	d1 f1       	breq	.+116    	; 0xad8 <__stack+0x279>
     a64:	0e 2c       	mov	r0, r14
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__stack+0x211>
     a68:	22 0c       	add	r2, r2
     a6a:	33 1c       	adc	r3, r3
     a6c:	44 1c       	adc	r4, r4
     a6e:	55 1c       	adc	r5, r5
     a70:	0a 94       	dec	r0
     a72:	d2 f7       	brpl	.-12     	; 0xa68 <__stack+0x209>
     a74:	a4 01       	movw	r20, r8
     a76:	93 01       	movw	r18, r6
     a78:	0e 2c       	mov	r0, r14
     a7a:	04 c0       	rjmp	.+8      	; 0xa84 <__stack+0x225>
     a7c:	22 0f       	add	r18, r18
     a7e:	33 1f       	adc	r19, r19
     a80:	44 1f       	adc	r20, r20
     a82:	55 1f       	adc	r21, r21
     a84:	0a 94       	dec	r0
     a86:	d2 f7       	brpl	.-12     	; 0xa7c <__stack+0x21d>
     a88:	80 e2       	ldi	r24, 0x20	; 32
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	8e 19       	sub	r24, r14
     a8e:	9f 09       	sbc	r25, r15
     a90:	21 96       	adiw	r28, 0x01	; 1
     a92:	6c ac       	ldd	r6, Y+60	; 0x3c
     a94:	7d ac       	ldd	r7, Y+61	; 0x3d
     a96:	8e ac       	ldd	r8, Y+62	; 0x3e
     a98:	9f ac       	ldd	r9, Y+63	; 0x3f
     a9a:	21 97       	sbiw	r28, 0x01	; 1
     a9c:	04 c0       	rjmp	.+8      	; 0xaa6 <__stack+0x247>
     a9e:	96 94       	lsr	r9
     aa0:	87 94       	ror	r8
     aa2:	77 94       	ror	r7
     aa4:	67 94       	ror	r6
     aa6:	8a 95       	dec	r24
     aa8:	d2 f7       	brpl	.-12     	; 0xa9e <__stack+0x23f>
     aaa:	62 2a       	or	r6, r18
     aac:	73 2a       	or	r7, r19
     aae:	84 2a       	or	r8, r20
     ab0:	95 2a       	or	r9, r21
     ab2:	21 96       	adiw	r28, 0x01	; 1
     ab4:	ac ac       	ldd	r10, Y+60	; 0x3c
     ab6:	bd ac       	ldd	r11, Y+61	; 0x3d
     ab8:	ce ac       	ldd	r12, Y+62	; 0x3e
     aba:	df ac       	ldd	r13, Y+63	; 0x3f
     abc:	21 97       	sbiw	r28, 0x01	; 1
     abe:	04 c0       	rjmp	.+8      	; 0xac8 <__stack+0x269>
     ac0:	aa 0c       	add	r10, r10
     ac2:	bb 1c       	adc	r11, r11
     ac4:	cc 1c       	adc	r12, r12
     ac6:	dd 1c       	adc	r13, r13
     ac8:	ea 94       	dec	r14
     aca:	d2 f7       	brpl	.-12     	; 0xac0 <__stack+0x261>
     acc:	21 96       	adiw	r28, 0x01	; 1
     ace:	ac ae       	std	Y+60, r10	; 0x3c
     ad0:	bd ae       	std	Y+61, r11	; 0x3d
     ad2:	ce ae       	std	Y+62, r12	; 0x3e
     ad4:	df ae       	std	Y+63, r13	; 0x3f
     ad6:	21 97       	sbiw	r28, 0x01	; 1
     ad8:	62 01       	movw	r12, r4
     ada:	ee 24       	eor	r14, r14
     adc:	ff 24       	eor	r15, r15
     ade:	29 96       	adiw	r28, 0x09	; 9
     ae0:	cc ae       	std	Y+60, r12	; 0x3c
     ae2:	dd ae       	std	Y+61, r13	; 0x3d
     ae4:	ee ae       	std	Y+62, r14	; 0x3e
     ae6:	ff ae       	std	Y+63, r15	; 0x3f
     ae8:	29 97       	sbiw	r28, 0x09	; 9
     aea:	92 01       	movw	r18, r4
     aec:	81 01       	movw	r16, r2
     aee:	20 70       	andi	r18, 0x00	; 0
     af0:	30 70       	andi	r19, 0x00	; 0
     af2:	2d 96       	adiw	r28, 0x0d	; 13
     af4:	0c af       	std	Y+60, r16	; 0x3c
     af6:	1d af       	std	Y+61, r17	; 0x3d
     af8:	2e af       	std	Y+62, r18	; 0x3e
     afa:	3f af       	std	Y+63, r19	; 0x3f
     afc:	2d 97       	sbiw	r28, 0x0d	; 13
     afe:	c4 01       	movw	r24, r8
     b00:	b3 01       	movw	r22, r6
     b02:	a7 01       	movw	r20, r14
     b04:	96 01       	movw	r18, r12
     b06:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     b0a:	7b 01       	movw	r14, r22
     b0c:	8c 01       	movw	r16, r24
     b0e:	c4 01       	movw	r24, r8
     b10:	b3 01       	movw	r22, r6
     b12:	29 96       	adiw	r28, 0x09	; 9
     b14:	2c ad       	ldd	r18, Y+60	; 0x3c
     b16:	3d ad       	ldd	r19, Y+61	; 0x3d
     b18:	4e ad       	ldd	r20, Y+62	; 0x3e
     b1a:	5f ad       	ldd	r21, Y+63	; 0x3f
     b1c:	29 97       	sbiw	r28, 0x09	; 9
     b1e:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     b22:	c9 01       	movw	r24, r18
     b24:	da 01       	movw	r26, r20
     b26:	3c 01       	movw	r6, r24
     b28:	4d 01       	movw	r8, r26
     b2a:	c4 01       	movw	r24, r8
     b2c:	b3 01       	movw	r22, r6
     b2e:	2d 96       	adiw	r28, 0x0d	; 13
     b30:	2c ad       	ldd	r18, Y+60	; 0x3c
     b32:	3d ad       	ldd	r19, Y+61	; 0x3d
     b34:	4e ad       	ldd	r20, Y+62	; 0x3e
     b36:	5f ad       	ldd	r21, Y+63	; 0x3f
     b38:	2d 97       	sbiw	r28, 0x0d	; 13
     b3a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     b3e:	9b 01       	movw	r18, r22
     b40:	ac 01       	movw	r20, r24
     b42:	87 01       	movw	r16, r14
     b44:	ff 24       	eor	r15, r15
     b46:	ee 24       	eor	r14, r14
     b48:	21 96       	adiw	r28, 0x01	; 1
     b4a:	ac ac       	ldd	r10, Y+60	; 0x3c
     b4c:	bd ac       	ldd	r11, Y+61	; 0x3d
     b4e:	ce ac       	ldd	r12, Y+62	; 0x3e
     b50:	df ac       	ldd	r13, Y+63	; 0x3f
     b52:	21 97       	sbiw	r28, 0x01	; 1
     b54:	c6 01       	movw	r24, r12
     b56:	aa 27       	eor	r26, r26
     b58:	bb 27       	eor	r27, r27
     b5a:	57 01       	movw	r10, r14
     b5c:	68 01       	movw	r12, r16
     b5e:	a8 2a       	or	r10, r24
     b60:	b9 2a       	or	r11, r25
     b62:	ca 2a       	or	r12, r26
     b64:	db 2a       	or	r13, r27
     b66:	a2 16       	cp	r10, r18
     b68:	b3 06       	cpc	r11, r19
     b6a:	c4 06       	cpc	r12, r20
     b6c:	d5 06       	cpc	r13, r21
     b6e:	e0 f4       	brcc	.+56     	; 0xba8 <__stack+0x349>
     b70:	08 94       	sec
     b72:	61 08       	sbc	r6, r1
     b74:	71 08       	sbc	r7, r1
     b76:	81 08       	sbc	r8, r1
     b78:	91 08       	sbc	r9, r1
     b7a:	a2 0c       	add	r10, r2
     b7c:	b3 1c       	adc	r11, r3
     b7e:	c4 1c       	adc	r12, r4
     b80:	d5 1c       	adc	r13, r5
     b82:	a2 14       	cp	r10, r2
     b84:	b3 04       	cpc	r11, r3
     b86:	c4 04       	cpc	r12, r4
     b88:	d5 04       	cpc	r13, r5
     b8a:	70 f0       	brcs	.+28     	; 0xba8 <__stack+0x349>
     b8c:	a2 16       	cp	r10, r18
     b8e:	b3 06       	cpc	r11, r19
     b90:	c4 06       	cpc	r12, r20
     b92:	d5 06       	cpc	r13, r21
     b94:	48 f4       	brcc	.+18     	; 0xba8 <__stack+0x349>
     b96:	08 94       	sec
     b98:	61 08       	sbc	r6, r1
     b9a:	71 08       	sbc	r7, r1
     b9c:	81 08       	sbc	r8, r1
     b9e:	91 08       	sbc	r9, r1
     ba0:	a2 0c       	add	r10, r2
     ba2:	b3 1c       	adc	r11, r3
     ba4:	c4 1c       	adc	r12, r4
     ba6:	d5 1c       	adc	r13, r5
     ba8:	a2 1a       	sub	r10, r18
     baa:	b3 0a       	sbc	r11, r19
     bac:	c4 0a       	sbc	r12, r20
     bae:	d5 0a       	sbc	r13, r21
     bb0:	c6 01       	movw	r24, r12
     bb2:	b5 01       	movw	r22, r10
     bb4:	29 96       	adiw	r28, 0x09	; 9
     bb6:	2c ad       	ldd	r18, Y+60	; 0x3c
     bb8:	3d ad       	ldd	r19, Y+61	; 0x3d
     bba:	4e ad       	ldd	r20, Y+62	; 0x3e
     bbc:	5f ad       	ldd	r21, Y+63	; 0x3f
     bbe:	29 97       	sbiw	r28, 0x09	; 9
     bc0:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     bc4:	7b 01       	movw	r14, r22
     bc6:	8c 01       	movw	r16, r24
     bc8:	c6 01       	movw	r24, r12
     bca:	b5 01       	movw	r22, r10
     bcc:	29 96       	adiw	r28, 0x09	; 9
     bce:	2c ad       	ldd	r18, Y+60	; 0x3c
     bd0:	3d ad       	ldd	r19, Y+61	; 0x3d
     bd2:	4e ad       	ldd	r20, Y+62	; 0x3e
     bd4:	5f ad       	ldd	r21, Y+63	; 0x3f
     bd6:	29 97       	sbiw	r28, 0x09	; 9
     bd8:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     bdc:	c9 01       	movw	r24, r18
     bde:	da 01       	movw	r26, r20
     be0:	5c 01       	movw	r10, r24
     be2:	6d 01       	movw	r12, r26
     be4:	c6 01       	movw	r24, r12
     be6:	b5 01       	movw	r22, r10
     be8:	2d 96       	adiw	r28, 0x0d	; 13
     bea:	2c ad       	ldd	r18, Y+60	; 0x3c
     bec:	3d ad       	ldd	r19, Y+61	; 0x3d
     bee:	4e ad       	ldd	r20, Y+62	; 0x3e
     bf0:	5f ad       	ldd	r21, Y+63	; 0x3f
     bf2:	2d 97       	sbiw	r28, 0x0d	; 13
     bf4:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     bf8:	9b 01       	movw	r18, r22
     bfa:	ac 01       	movw	r20, r24
     bfc:	87 01       	movw	r16, r14
     bfe:	ff 24       	eor	r15, r15
     c00:	ee 24       	eor	r14, r14
     c02:	21 96       	adiw	r28, 0x01	; 1
     c04:	8c ad       	ldd	r24, Y+60	; 0x3c
     c06:	9d ad       	ldd	r25, Y+61	; 0x3d
     c08:	ae ad       	ldd	r26, Y+62	; 0x3e
     c0a:	bf ad       	ldd	r27, Y+63	; 0x3f
     c0c:	21 97       	sbiw	r28, 0x01	; 1
     c0e:	a0 70       	andi	r26, 0x00	; 0
     c10:	b0 70       	andi	r27, 0x00	; 0
     c12:	e8 2a       	or	r14, r24
     c14:	f9 2a       	or	r15, r25
     c16:	0a 2b       	or	r16, r26
     c18:	1b 2b       	or	r17, r27
     c1a:	e2 16       	cp	r14, r18
     c1c:	f3 06       	cpc	r15, r19
     c1e:	04 07       	cpc	r16, r20
     c20:	15 07       	cpc	r17, r21
     c22:	c0 f4       	brcc	.+48     	; 0xc54 <__stack+0x3f5>
     c24:	08 94       	sec
     c26:	a1 08       	sbc	r10, r1
     c28:	b1 08       	sbc	r11, r1
     c2a:	c1 08       	sbc	r12, r1
     c2c:	d1 08       	sbc	r13, r1
     c2e:	e2 0c       	add	r14, r2
     c30:	f3 1c       	adc	r15, r3
     c32:	04 1d       	adc	r16, r4
     c34:	15 1d       	adc	r17, r5
     c36:	e2 14       	cp	r14, r2
     c38:	f3 04       	cpc	r15, r3
     c3a:	04 05       	cpc	r16, r4
     c3c:	15 05       	cpc	r17, r5
     c3e:	50 f0       	brcs	.+20     	; 0xc54 <__stack+0x3f5>
     c40:	e2 16       	cp	r14, r18
     c42:	f3 06       	cpc	r15, r19
     c44:	04 07       	cpc	r16, r20
     c46:	15 07       	cpc	r17, r21
     c48:	28 f4       	brcc	.+10     	; 0xc54 <__stack+0x3f5>
     c4a:	08 94       	sec
     c4c:	a1 08       	sbc	r10, r1
     c4e:	b1 08       	sbc	r11, r1
     c50:	c1 08       	sbc	r12, r1
     c52:	d1 08       	sbc	r13, r1
     c54:	d3 01       	movw	r26, r6
     c56:	99 27       	eor	r25, r25
     c58:	88 27       	eor	r24, r24
     c5a:	86 01       	movw	r16, r12
     c5c:	75 01       	movw	r14, r10
     c5e:	e8 2a       	or	r14, r24
     c60:	f9 2a       	or	r15, r25
     c62:	0a 2b       	or	r16, r26
     c64:	1b 2b       	or	r17, r27
     c66:	25 96       	adiw	r28, 0x05	; 5
     c68:	ec ae       	std	Y+60, r14	; 0x3c
     c6a:	fd ae       	std	Y+61, r15	; 0x3d
     c6c:	0e af       	std	Y+62, r16	; 0x3e
     c6e:	1f af       	std	Y+63, r17	; 0x3f
     c70:	25 97       	sbiw	r28, 0x05	; 5
     c72:	eb c4       	rjmp	.+2518   	; 0x164a <__stack+0xdeb>
     c74:	21 14       	cp	r2, r1
     c76:	31 04       	cpc	r3, r1
     c78:	41 04       	cpc	r4, r1
     c7a:	51 04       	cpc	r5, r1
     c7c:	71 f4       	brne	.+28     	; 0xc9a <__stack+0x43b>
     c7e:	61 e0       	ldi	r22, 0x01	; 1
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	80 e0       	ldi	r24, 0x00	; 0
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	20 e0       	ldi	r18, 0x00	; 0
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	40 e0       	ldi	r20, 0x00	; 0
     c8c:	50 e0       	ldi	r21, 0x00	; 0
     c8e:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     c92:	c9 01       	movw	r24, r18
     c94:	da 01       	movw	r26, r20
     c96:	1c 01       	movw	r2, r24
     c98:	2d 01       	movw	r4, r26
     c9a:	00 e0       	ldi	r16, 0x00	; 0
     c9c:	20 16       	cp	r2, r16
     c9e:	00 e0       	ldi	r16, 0x00	; 0
     ca0:	30 06       	cpc	r3, r16
     ca2:	01 e0       	ldi	r16, 0x01	; 1
     ca4:	40 06       	cpc	r4, r16
     ca6:	00 e0       	ldi	r16, 0x00	; 0
     ca8:	50 06       	cpc	r5, r16
     caa:	88 f4       	brcc	.+34     	; 0xcce <__stack+0x46f>
     cac:	1f ef       	ldi	r17, 0xFF	; 255
     cae:	21 16       	cp	r2, r17
     cb0:	31 04       	cpc	r3, r1
     cb2:	41 04       	cpc	r4, r1
     cb4:	51 04       	cpc	r5, r1
     cb6:	31 f0       	breq	.+12     	; 0xcc4 <__stack+0x465>
     cb8:	28 f0       	brcs	.+10     	; 0xcc4 <__stack+0x465>
     cba:	48 e0       	ldi	r20, 0x08	; 8
     cbc:	50 e0       	ldi	r21, 0x00	; 0
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	17 c0       	rjmp	.+46     	; 0xcf2 <__stack+0x493>
     cc4:	40 e0       	ldi	r20, 0x00	; 0
     cc6:	50 e0       	ldi	r21, 0x00	; 0
     cc8:	60 e0       	ldi	r22, 0x00	; 0
     cca:	70 e0       	ldi	r23, 0x00	; 0
     ccc:	12 c0       	rjmp	.+36     	; 0xcf2 <__stack+0x493>
     cce:	20 e0       	ldi	r18, 0x00	; 0
     cd0:	22 16       	cp	r2, r18
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	32 06       	cpc	r3, r18
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	42 06       	cpc	r4, r18
     cda:	21 e0       	ldi	r18, 0x01	; 1
     cdc:	52 06       	cpc	r5, r18
     cde:	28 f0       	brcs	.+10     	; 0xcea <__stack+0x48b>
     ce0:	48 e1       	ldi	r20, 0x18	; 24
     ce2:	50 e0       	ldi	r21, 0x00	; 0
     ce4:	60 e0       	ldi	r22, 0x00	; 0
     ce6:	70 e0       	ldi	r23, 0x00	; 0
     ce8:	04 c0       	rjmp	.+8      	; 0xcf2 <__stack+0x493>
     cea:	40 e1       	ldi	r20, 0x10	; 16
     cec:	50 e0       	ldi	r21, 0x00	; 0
     cee:	60 e0       	ldi	r22, 0x00	; 0
     cf0:	70 e0       	ldi	r23, 0x00	; 0
     cf2:	d2 01       	movw	r26, r4
     cf4:	c1 01       	movw	r24, r2
     cf6:	04 2e       	mov	r0, r20
     cf8:	04 c0       	rjmp	.+8      	; 0xd02 <__stack+0x4a3>
     cfa:	b6 95       	lsr	r27
     cfc:	a7 95       	ror	r26
     cfe:	97 95       	ror	r25
     d00:	87 95       	ror	r24
     d02:	0a 94       	dec	r0
     d04:	d2 f7       	brpl	.-12     	; 0xcfa <__stack+0x49b>
     d06:	8a 57       	subi	r24, 0x7A	; 122
     d08:	9f 4f       	sbci	r25, 0xFF	; 255
     d0a:	dc 01       	movw	r26, r24
     d0c:	2c 91       	ld	r18, X
     d0e:	e0 e2       	ldi	r30, 0x20	; 32
     d10:	ee 2e       	mov	r14, r30
     d12:	f1 2c       	mov	r15, r1
     d14:	01 2d       	mov	r16, r1
     d16:	11 2d       	mov	r17, r1
     d18:	d8 01       	movw	r26, r16
     d1a:	c7 01       	movw	r24, r14
     d1c:	84 1b       	sub	r24, r20
     d1e:	95 0b       	sbc	r25, r21
     d20:	a6 0b       	sbc	r26, r22
     d22:	b7 0b       	sbc	r27, r23
     d24:	82 1b       	sub	r24, r18
     d26:	91 09       	sbc	r25, r1
     d28:	a1 09       	sbc	r26, r1
     d2a:	b1 09       	sbc	r27, r1
     d2c:	00 97       	sbiw	r24, 0x00	; 0
     d2e:	a1 05       	cpc	r26, r1
     d30:	b1 05       	cpc	r27, r1
     d32:	61 f4       	brne	.+24     	; 0xd4c <__stack+0x4ed>
     d34:	64 01       	movw	r12, r8
     d36:	53 01       	movw	r10, r6
     d38:	a2 18       	sub	r10, r2
     d3a:	b3 08       	sbc	r11, r3
     d3c:	c4 08       	sbc	r12, r4
     d3e:	d5 08       	sbc	r13, r5
     d40:	31 e0       	ldi	r19, 0x01	; 1
     d42:	63 2e       	mov	r6, r19
     d44:	71 2c       	mov	r7, r1
     d46:	81 2c       	mov	r8, r1
     d48:	91 2c       	mov	r9, r1
     d4a:	24 c1       	rjmp	.+584    	; 0xf94 <__stack+0x735>
     d4c:	e3 96       	adiw	r28, 0x33	; 51
     d4e:	8f af       	std	Y+63, r24	; 0x3f
     d50:	e3 97       	sbiw	r28, 0x33	; 51
     d52:	08 2e       	mov	r0, r24
     d54:	04 c0       	rjmp	.+8      	; 0xd5e <__stack+0x4ff>
     d56:	22 0c       	add	r2, r2
     d58:	33 1c       	adc	r3, r3
     d5a:	44 1c       	adc	r4, r4
     d5c:	55 1c       	adc	r5, r5
     d5e:	0a 94       	dec	r0
     d60:	d2 f7       	brpl	.-12     	; 0xd56 <__stack+0x4f7>
     d62:	ee 2d       	mov	r30, r14
     d64:	e8 1b       	sub	r30, r24
     d66:	64 01       	movw	r12, r8
     d68:	53 01       	movw	r10, r6
     d6a:	0e 2e       	mov	r0, r30
     d6c:	04 c0       	rjmp	.+8      	; 0xd76 <__stack+0x517>
     d6e:	d6 94       	lsr	r13
     d70:	c7 94       	ror	r12
     d72:	b7 94       	ror	r11
     d74:	a7 94       	ror	r10
     d76:	0a 94       	dec	r0
     d78:	d2 f7       	brpl	.-12     	; 0xd6e <__stack+0x50f>
     d7a:	a4 01       	movw	r20, r8
     d7c:	93 01       	movw	r18, r6
     d7e:	e3 96       	adiw	r28, 0x33	; 51
     d80:	0f ac       	ldd	r0, Y+63	; 0x3f
     d82:	e3 97       	sbiw	r28, 0x33	; 51
     d84:	04 c0       	rjmp	.+8      	; 0xd8e <__stack+0x52f>
     d86:	22 0f       	add	r18, r18
     d88:	33 1f       	adc	r19, r19
     d8a:	44 1f       	adc	r20, r20
     d8c:	55 1f       	adc	r21, r21
     d8e:	0a 94       	dec	r0
     d90:	d2 f7       	brpl	.-12     	; 0xd86 <__stack+0x527>
     d92:	21 96       	adiw	r28, 0x01	; 1
     d94:	6c ac       	ldd	r6, Y+60	; 0x3c
     d96:	7d ac       	ldd	r7, Y+61	; 0x3d
     d98:	8e ac       	ldd	r8, Y+62	; 0x3e
     d9a:	9f ac       	ldd	r9, Y+63	; 0x3f
     d9c:	21 97       	sbiw	r28, 0x01	; 1
     d9e:	0e 2e       	mov	r0, r30
     da0:	04 c0       	rjmp	.+8      	; 0xdaa <__stack+0x54b>
     da2:	96 94       	lsr	r9
     da4:	87 94       	ror	r8
     da6:	77 94       	ror	r7
     da8:	67 94       	ror	r6
     daa:	0a 94       	dec	r0
     dac:	d2 f7       	brpl	.-12     	; 0xda2 <__stack+0x543>
     dae:	84 01       	movw	r16, r8
     db0:	73 01       	movw	r14, r6
     db2:	e2 2a       	or	r14, r18
     db4:	f3 2a       	or	r15, r19
     db6:	04 2b       	or	r16, r20
     db8:	15 2b       	or	r17, r21
     dba:	e9 ae       	std	Y+57, r14	; 0x39
     dbc:	fa ae       	std	Y+58, r15	; 0x3a
     dbe:	0b af       	std	Y+59, r16	; 0x3b
     dc0:	1c af       	std	Y+60, r17	; 0x3c
     dc2:	32 01       	movw	r6, r4
     dc4:	88 24       	eor	r8, r8
     dc6:	99 24       	eor	r9, r9
     dc8:	92 01       	movw	r18, r4
     dca:	81 01       	movw	r16, r2
     dcc:	20 70       	andi	r18, 0x00	; 0
     dce:	30 70       	andi	r19, 0x00	; 0
     dd0:	61 96       	adiw	r28, 0x11	; 17
     dd2:	0c af       	std	Y+60, r16	; 0x3c
     dd4:	1d af       	std	Y+61, r17	; 0x3d
     dd6:	2e af       	std	Y+62, r18	; 0x3e
     dd8:	3f af       	std	Y+63, r19	; 0x3f
     dda:	61 97       	sbiw	r28, 0x11	; 17
     ddc:	c6 01       	movw	r24, r12
     dde:	b5 01       	movw	r22, r10
     de0:	a4 01       	movw	r20, r8
     de2:	93 01       	movw	r18, r6
     de4:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     de8:	7b 01       	movw	r14, r22
     dea:	8c 01       	movw	r16, r24
     dec:	c6 01       	movw	r24, r12
     dee:	b5 01       	movw	r22, r10
     df0:	a4 01       	movw	r20, r8
     df2:	93 01       	movw	r18, r6
     df4:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     df8:	c9 01       	movw	r24, r18
     dfa:	da 01       	movw	r26, r20
     dfc:	65 96       	adiw	r28, 0x15	; 21
     dfe:	8c af       	std	Y+60, r24	; 0x3c
     e00:	9d af       	std	Y+61, r25	; 0x3d
     e02:	ae af       	std	Y+62, r26	; 0x3e
     e04:	bf af       	std	Y+63, r27	; 0x3f
     e06:	65 97       	sbiw	r28, 0x15	; 21
     e08:	bc 01       	movw	r22, r24
     e0a:	cd 01       	movw	r24, r26
     e0c:	61 96       	adiw	r28, 0x11	; 17
     e0e:	2c ad       	ldd	r18, Y+60	; 0x3c
     e10:	3d ad       	ldd	r19, Y+61	; 0x3d
     e12:	4e ad       	ldd	r20, Y+62	; 0x3e
     e14:	5f ad       	ldd	r21, Y+63	; 0x3f
     e16:	61 97       	sbiw	r28, 0x11	; 17
     e18:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     e1c:	9b 01       	movw	r18, r22
     e1e:	ac 01       	movw	r20, r24
     e20:	87 01       	movw	r16, r14
     e22:	ff 24       	eor	r15, r15
     e24:	ee 24       	eor	r14, r14
     e26:	a9 ac       	ldd	r10, Y+57	; 0x39
     e28:	ba ac       	ldd	r11, Y+58	; 0x3a
     e2a:	cb ac       	ldd	r12, Y+59	; 0x3b
     e2c:	dc ac       	ldd	r13, Y+60	; 0x3c
     e2e:	c6 01       	movw	r24, r12
     e30:	aa 27       	eor	r26, r26
     e32:	bb 27       	eor	r27, r27
     e34:	5c 01       	movw	r10, r24
     e36:	6d 01       	movw	r12, r26
     e38:	ae 28       	or	r10, r14
     e3a:	bf 28       	or	r11, r15
     e3c:	c0 2a       	or	r12, r16
     e3e:	d1 2a       	or	r13, r17
     e40:	a2 16       	cp	r10, r18
     e42:	b3 06       	cpc	r11, r19
     e44:	c4 06       	cpc	r12, r20
     e46:	d5 06       	cpc	r13, r21
     e48:	60 f5       	brcc	.+88     	; 0xea2 <__stack+0x643>
     e4a:	65 96       	adiw	r28, 0x15	; 21
     e4c:	6c ad       	ldd	r22, Y+60	; 0x3c
     e4e:	7d ad       	ldd	r23, Y+61	; 0x3d
     e50:	8e ad       	ldd	r24, Y+62	; 0x3e
     e52:	9f ad       	ldd	r25, Y+63	; 0x3f
     e54:	65 97       	sbiw	r28, 0x15	; 21
     e56:	61 50       	subi	r22, 0x01	; 1
     e58:	70 40       	sbci	r23, 0x00	; 0
     e5a:	80 40       	sbci	r24, 0x00	; 0
     e5c:	90 40       	sbci	r25, 0x00	; 0
     e5e:	65 96       	adiw	r28, 0x15	; 21
     e60:	6c af       	std	Y+60, r22	; 0x3c
     e62:	7d af       	std	Y+61, r23	; 0x3d
     e64:	8e af       	std	Y+62, r24	; 0x3e
     e66:	9f af       	std	Y+63, r25	; 0x3f
     e68:	65 97       	sbiw	r28, 0x15	; 21
     e6a:	a2 0c       	add	r10, r2
     e6c:	b3 1c       	adc	r11, r3
     e6e:	c4 1c       	adc	r12, r4
     e70:	d5 1c       	adc	r13, r5
     e72:	a2 14       	cp	r10, r2
     e74:	b3 04       	cpc	r11, r3
     e76:	c4 04       	cpc	r12, r4
     e78:	d5 04       	cpc	r13, r5
     e7a:	98 f0       	brcs	.+38     	; 0xea2 <__stack+0x643>
     e7c:	a2 16       	cp	r10, r18
     e7e:	b3 06       	cpc	r11, r19
     e80:	c4 06       	cpc	r12, r20
     e82:	d5 06       	cpc	r13, r21
     e84:	70 f4       	brcc	.+28     	; 0xea2 <__stack+0x643>
     e86:	61 50       	subi	r22, 0x01	; 1
     e88:	70 40       	sbci	r23, 0x00	; 0
     e8a:	80 40       	sbci	r24, 0x00	; 0
     e8c:	90 40       	sbci	r25, 0x00	; 0
     e8e:	65 96       	adiw	r28, 0x15	; 21
     e90:	6c af       	std	Y+60, r22	; 0x3c
     e92:	7d af       	std	Y+61, r23	; 0x3d
     e94:	8e af       	std	Y+62, r24	; 0x3e
     e96:	9f af       	std	Y+63, r25	; 0x3f
     e98:	65 97       	sbiw	r28, 0x15	; 21
     e9a:	a2 0c       	add	r10, r2
     e9c:	b3 1c       	adc	r11, r3
     e9e:	c4 1c       	adc	r12, r4
     ea0:	d5 1c       	adc	r13, r5
     ea2:	a2 1a       	sub	r10, r18
     ea4:	b3 0a       	sbc	r11, r19
     ea6:	c4 0a       	sbc	r12, r20
     ea8:	d5 0a       	sbc	r13, r21
     eaa:	c6 01       	movw	r24, r12
     eac:	b5 01       	movw	r22, r10
     eae:	a4 01       	movw	r20, r8
     eb0:	93 01       	movw	r18, r6
     eb2:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     eb6:	7b 01       	movw	r14, r22
     eb8:	8c 01       	movw	r16, r24
     eba:	c6 01       	movw	r24, r12
     ebc:	b5 01       	movw	r22, r10
     ebe:	a4 01       	movw	r20, r8
     ec0:	93 01       	movw	r18, r6
     ec2:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     ec6:	c9 01       	movw	r24, r18
     ec8:	da 01       	movw	r26, r20
     eca:	3c 01       	movw	r6, r24
     ecc:	4d 01       	movw	r8, r26
     ece:	c4 01       	movw	r24, r8
     ed0:	b3 01       	movw	r22, r6
     ed2:	61 96       	adiw	r28, 0x11	; 17
     ed4:	2c ad       	ldd	r18, Y+60	; 0x3c
     ed6:	3d ad       	ldd	r19, Y+61	; 0x3d
     ed8:	4e ad       	ldd	r20, Y+62	; 0x3e
     eda:	5f ad       	ldd	r21, Y+63	; 0x3f
     edc:	61 97       	sbiw	r28, 0x11	; 17
     ede:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
     ee2:	9b 01       	movw	r18, r22
     ee4:	ac 01       	movw	r20, r24
     ee6:	87 01       	movw	r16, r14
     ee8:	ff 24       	eor	r15, r15
     eea:	ee 24       	eor	r14, r14
     eec:	89 ad       	ldd	r24, Y+57	; 0x39
     eee:	9a ad       	ldd	r25, Y+58	; 0x3a
     ef0:	ab ad       	ldd	r26, Y+59	; 0x3b
     ef2:	bc ad       	ldd	r27, Y+60	; 0x3c
     ef4:	a0 70       	andi	r26, 0x00	; 0
     ef6:	b0 70       	andi	r27, 0x00	; 0
     ef8:	57 01       	movw	r10, r14
     efa:	68 01       	movw	r12, r16
     efc:	a8 2a       	or	r10, r24
     efe:	b9 2a       	or	r11, r25
     f00:	ca 2a       	or	r12, r26
     f02:	db 2a       	or	r13, r27
     f04:	a2 16       	cp	r10, r18
     f06:	b3 06       	cpc	r11, r19
     f08:	c4 06       	cpc	r12, r20
     f0a:	d5 06       	cpc	r13, r21
     f0c:	e0 f4       	brcc	.+56     	; 0xf46 <__stack+0x6e7>
     f0e:	08 94       	sec
     f10:	61 08       	sbc	r6, r1
     f12:	71 08       	sbc	r7, r1
     f14:	81 08       	sbc	r8, r1
     f16:	91 08       	sbc	r9, r1
     f18:	a2 0c       	add	r10, r2
     f1a:	b3 1c       	adc	r11, r3
     f1c:	c4 1c       	adc	r12, r4
     f1e:	d5 1c       	adc	r13, r5
     f20:	a2 14       	cp	r10, r2
     f22:	b3 04       	cpc	r11, r3
     f24:	c4 04       	cpc	r12, r4
     f26:	d5 04       	cpc	r13, r5
     f28:	70 f0       	brcs	.+28     	; 0xf46 <__stack+0x6e7>
     f2a:	a2 16       	cp	r10, r18
     f2c:	b3 06       	cpc	r11, r19
     f2e:	c4 06       	cpc	r12, r20
     f30:	d5 06       	cpc	r13, r21
     f32:	48 f4       	brcc	.+18     	; 0xf46 <__stack+0x6e7>
     f34:	08 94       	sec
     f36:	61 08       	sbc	r6, r1
     f38:	71 08       	sbc	r7, r1
     f3a:	81 08       	sbc	r8, r1
     f3c:	91 08       	sbc	r9, r1
     f3e:	a2 0c       	add	r10, r2
     f40:	b3 1c       	adc	r11, r3
     f42:	c4 1c       	adc	r12, r4
     f44:	d5 1c       	adc	r13, r5
     f46:	21 96       	adiw	r28, 0x01	; 1
     f48:	8c ad       	ldd	r24, Y+60	; 0x3c
     f4a:	9d ad       	ldd	r25, Y+61	; 0x3d
     f4c:	ae ad       	ldd	r26, Y+62	; 0x3e
     f4e:	bf ad       	ldd	r27, Y+63	; 0x3f
     f50:	21 97       	sbiw	r28, 0x01	; 1
     f52:	e3 96       	adiw	r28, 0x33	; 51
     f54:	0f ac       	ldd	r0, Y+63	; 0x3f
     f56:	e3 97       	sbiw	r28, 0x33	; 51
     f58:	04 c0       	rjmp	.+8      	; 0xf62 <__stack+0x703>
     f5a:	88 0f       	add	r24, r24
     f5c:	99 1f       	adc	r25, r25
     f5e:	aa 1f       	adc	r26, r26
     f60:	bb 1f       	adc	r27, r27
     f62:	0a 94       	dec	r0
     f64:	d2 f7       	brpl	.-12     	; 0xf5a <__stack+0x6fb>
     f66:	21 96       	adiw	r28, 0x01	; 1
     f68:	8c af       	std	Y+60, r24	; 0x3c
     f6a:	9d af       	std	Y+61, r25	; 0x3d
     f6c:	ae af       	std	Y+62, r26	; 0x3e
     f6e:	bf af       	std	Y+63, r27	; 0x3f
     f70:	21 97       	sbiw	r28, 0x01	; 1
     f72:	a2 1a       	sub	r10, r18
     f74:	b3 0a       	sbc	r11, r19
     f76:	c4 0a       	sbc	r12, r20
     f78:	d5 0a       	sbc	r13, r21
     f7a:	65 96       	adiw	r28, 0x15	; 21
     f7c:	ec ac       	ldd	r14, Y+60	; 0x3c
     f7e:	fd ac       	ldd	r15, Y+61	; 0x3d
     f80:	0e ad       	ldd	r16, Y+62	; 0x3e
     f82:	1f ad       	ldd	r17, Y+63	; 0x3f
     f84:	65 97       	sbiw	r28, 0x15	; 21
     f86:	d7 01       	movw	r26, r14
     f88:	99 27       	eor	r25, r25
     f8a:	88 27       	eor	r24, r24
     f8c:	68 2a       	or	r6, r24
     f8e:	79 2a       	or	r7, r25
     f90:	8a 2a       	or	r8, r26
     f92:	9b 2a       	or	r9, r27
     f94:	82 01       	movw	r16, r4
     f96:	22 27       	eor	r18, r18
     f98:	33 27       	eor	r19, r19
     f9a:	69 96       	adiw	r28, 0x19	; 25
     f9c:	0c af       	std	Y+60, r16	; 0x3c
     f9e:	1d af       	std	Y+61, r17	; 0x3d
     fa0:	2e af       	std	Y+62, r18	; 0x3e
     fa2:	3f af       	std	Y+63, r19	; 0x3f
     fa4:	69 97       	sbiw	r28, 0x19	; 25
     fa6:	a2 01       	movw	r20, r4
     fa8:	91 01       	movw	r18, r2
     faa:	40 70       	andi	r20, 0x00	; 0
     fac:	50 70       	andi	r21, 0x00	; 0
     fae:	6d 96       	adiw	r28, 0x1d	; 29
     fb0:	2c af       	std	Y+60, r18	; 0x3c
     fb2:	3d af       	std	Y+61, r19	; 0x3d
     fb4:	4e af       	std	Y+62, r20	; 0x3e
     fb6:	5f af       	std	Y+63, r21	; 0x3f
     fb8:	6d 97       	sbiw	r28, 0x1d	; 29
     fba:	c6 01       	movw	r24, r12
     fbc:	b5 01       	movw	r22, r10
     fbe:	69 96       	adiw	r28, 0x19	; 25
     fc0:	2c ad       	ldd	r18, Y+60	; 0x3c
     fc2:	3d ad       	ldd	r19, Y+61	; 0x3d
     fc4:	4e ad       	ldd	r20, Y+62	; 0x3e
     fc6:	5f ad       	ldd	r21, Y+63	; 0x3f
     fc8:	69 97       	sbiw	r28, 0x19	; 25
     fca:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     fce:	7b 01       	movw	r14, r22
     fd0:	8c 01       	movw	r16, r24
     fd2:	c6 01       	movw	r24, r12
     fd4:	b5 01       	movw	r22, r10
     fd6:	69 96       	adiw	r28, 0x19	; 25
     fd8:	2c ad       	ldd	r18, Y+60	; 0x3c
     fda:	3d ad       	ldd	r19, Y+61	; 0x3d
     fdc:	4e ad       	ldd	r20, Y+62	; 0x3e
     fde:	5f ad       	ldd	r21, Y+63	; 0x3f
     fe0:	69 97       	sbiw	r28, 0x19	; 25
     fe2:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
     fe6:	c9 01       	movw	r24, r18
     fe8:	da 01       	movw	r26, r20
     fea:	a1 96       	adiw	r28, 0x21	; 33
     fec:	8c af       	std	Y+60, r24	; 0x3c
     fee:	9d af       	std	Y+61, r25	; 0x3d
     ff0:	ae af       	std	Y+62, r26	; 0x3e
     ff2:	bf af       	std	Y+63, r27	; 0x3f
     ff4:	a1 97       	sbiw	r28, 0x21	; 33
     ff6:	bc 01       	movw	r22, r24
     ff8:	cd 01       	movw	r24, r26
     ffa:	6d 96       	adiw	r28, 0x1d	; 29
     ffc:	2c ad       	ldd	r18, Y+60	; 0x3c
     ffe:	3d ad       	ldd	r19, Y+61	; 0x3d
    1000:	4e ad       	ldd	r20, Y+62	; 0x3e
    1002:	5f ad       	ldd	r21, Y+63	; 0x3f
    1004:	6d 97       	sbiw	r28, 0x1d	; 29
    1006:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    100a:	9b 01       	movw	r18, r22
    100c:	ac 01       	movw	r20, r24
    100e:	87 01       	movw	r16, r14
    1010:	ff 24       	eor	r15, r15
    1012:	ee 24       	eor	r14, r14
    1014:	21 96       	adiw	r28, 0x01	; 1
    1016:	ac ac       	ldd	r10, Y+60	; 0x3c
    1018:	bd ac       	ldd	r11, Y+61	; 0x3d
    101a:	ce ac       	ldd	r12, Y+62	; 0x3e
    101c:	df ac       	ldd	r13, Y+63	; 0x3f
    101e:	21 97       	sbiw	r28, 0x01	; 1
    1020:	c6 01       	movw	r24, r12
    1022:	aa 27       	eor	r26, r26
    1024:	bb 27       	eor	r27, r27
    1026:	57 01       	movw	r10, r14
    1028:	68 01       	movw	r12, r16
    102a:	a8 2a       	or	r10, r24
    102c:	b9 2a       	or	r11, r25
    102e:	ca 2a       	or	r12, r26
    1030:	db 2a       	or	r13, r27
    1032:	a2 16       	cp	r10, r18
    1034:	b3 06       	cpc	r11, r19
    1036:	c4 06       	cpc	r12, r20
    1038:	d5 06       	cpc	r13, r21
    103a:	60 f5       	brcc	.+88     	; 0x1094 <__stack+0x835>
    103c:	a1 96       	adiw	r28, 0x21	; 33
    103e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1040:	7d ad       	ldd	r23, Y+61	; 0x3d
    1042:	8e ad       	ldd	r24, Y+62	; 0x3e
    1044:	9f ad       	ldd	r25, Y+63	; 0x3f
    1046:	a1 97       	sbiw	r28, 0x21	; 33
    1048:	61 50       	subi	r22, 0x01	; 1
    104a:	70 40       	sbci	r23, 0x00	; 0
    104c:	80 40       	sbci	r24, 0x00	; 0
    104e:	90 40       	sbci	r25, 0x00	; 0
    1050:	a1 96       	adiw	r28, 0x21	; 33
    1052:	6c af       	std	Y+60, r22	; 0x3c
    1054:	7d af       	std	Y+61, r23	; 0x3d
    1056:	8e af       	std	Y+62, r24	; 0x3e
    1058:	9f af       	std	Y+63, r25	; 0x3f
    105a:	a1 97       	sbiw	r28, 0x21	; 33
    105c:	a2 0c       	add	r10, r2
    105e:	b3 1c       	adc	r11, r3
    1060:	c4 1c       	adc	r12, r4
    1062:	d5 1c       	adc	r13, r5
    1064:	a2 14       	cp	r10, r2
    1066:	b3 04       	cpc	r11, r3
    1068:	c4 04       	cpc	r12, r4
    106a:	d5 04       	cpc	r13, r5
    106c:	98 f0       	brcs	.+38     	; 0x1094 <__stack+0x835>
    106e:	a2 16       	cp	r10, r18
    1070:	b3 06       	cpc	r11, r19
    1072:	c4 06       	cpc	r12, r20
    1074:	d5 06       	cpc	r13, r21
    1076:	70 f4       	brcc	.+28     	; 0x1094 <__stack+0x835>
    1078:	61 50       	subi	r22, 0x01	; 1
    107a:	70 40       	sbci	r23, 0x00	; 0
    107c:	80 40       	sbci	r24, 0x00	; 0
    107e:	90 40       	sbci	r25, 0x00	; 0
    1080:	a1 96       	adiw	r28, 0x21	; 33
    1082:	6c af       	std	Y+60, r22	; 0x3c
    1084:	7d af       	std	Y+61, r23	; 0x3d
    1086:	8e af       	std	Y+62, r24	; 0x3e
    1088:	9f af       	std	Y+63, r25	; 0x3f
    108a:	a1 97       	sbiw	r28, 0x21	; 33
    108c:	a2 0c       	add	r10, r2
    108e:	b3 1c       	adc	r11, r3
    1090:	c4 1c       	adc	r12, r4
    1092:	d5 1c       	adc	r13, r5
    1094:	a2 1a       	sub	r10, r18
    1096:	b3 0a       	sbc	r11, r19
    1098:	c4 0a       	sbc	r12, r20
    109a:	d5 0a       	sbc	r13, r21
    109c:	c6 01       	movw	r24, r12
    109e:	b5 01       	movw	r22, r10
    10a0:	69 96       	adiw	r28, 0x19	; 25
    10a2:	2c ad       	ldd	r18, Y+60	; 0x3c
    10a4:	3d ad       	ldd	r19, Y+61	; 0x3d
    10a6:	4e ad       	ldd	r20, Y+62	; 0x3e
    10a8:	5f ad       	ldd	r21, Y+63	; 0x3f
    10aa:	69 97       	sbiw	r28, 0x19	; 25
    10ac:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
    10b0:	7b 01       	movw	r14, r22
    10b2:	8c 01       	movw	r16, r24
    10b4:	c6 01       	movw	r24, r12
    10b6:	b5 01       	movw	r22, r10
    10b8:	69 96       	adiw	r28, 0x19	; 25
    10ba:	2c ad       	ldd	r18, Y+60	; 0x3c
    10bc:	3d ad       	ldd	r19, Y+61	; 0x3d
    10be:	4e ad       	ldd	r20, Y+62	; 0x3e
    10c0:	5f ad       	ldd	r21, Y+63	; 0x3f
    10c2:	69 97       	sbiw	r28, 0x19	; 25
    10c4:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
    10c8:	c9 01       	movw	r24, r18
    10ca:	da 01       	movw	r26, r20
    10cc:	5c 01       	movw	r10, r24
    10ce:	6d 01       	movw	r12, r26
    10d0:	c6 01       	movw	r24, r12
    10d2:	b5 01       	movw	r22, r10
    10d4:	6d 96       	adiw	r28, 0x1d	; 29
    10d6:	2c ad       	ldd	r18, Y+60	; 0x3c
    10d8:	3d ad       	ldd	r19, Y+61	; 0x3d
    10da:	4e ad       	ldd	r20, Y+62	; 0x3e
    10dc:	5f ad       	ldd	r21, Y+63	; 0x3f
    10de:	6d 97       	sbiw	r28, 0x1d	; 29
    10e0:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    10e4:	9b 01       	movw	r18, r22
    10e6:	ac 01       	movw	r20, r24
    10e8:	87 01       	movw	r16, r14
    10ea:	ff 24       	eor	r15, r15
    10ec:	ee 24       	eor	r14, r14
    10ee:	21 96       	adiw	r28, 0x01	; 1
    10f0:	8c ad       	ldd	r24, Y+60	; 0x3c
    10f2:	9d ad       	ldd	r25, Y+61	; 0x3d
    10f4:	ae ad       	ldd	r26, Y+62	; 0x3e
    10f6:	bf ad       	ldd	r27, Y+63	; 0x3f
    10f8:	21 97       	sbiw	r28, 0x01	; 1
    10fa:	a0 70       	andi	r26, 0x00	; 0
    10fc:	b0 70       	andi	r27, 0x00	; 0
    10fe:	e8 2a       	or	r14, r24
    1100:	f9 2a       	or	r15, r25
    1102:	0a 2b       	or	r16, r26
    1104:	1b 2b       	or	r17, r27
    1106:	e2 16       	cp	r14, r18
    1108:	f3 06       	cpc	r15, r19
    110a:	04 07       	cpc	r16, r20
    110c:	15 07       	cpc	r17, r21
    110e:	c0 f4       	brcc	.+48     	; 0x1140 <__stack+0x8e1>
    1110:	08 94       	sec
    1112:	a1 08       	sbc	r10, r1
    1114:	b1 08       	sbc	r11, r1
    1116:	c1 08       	sbc	r12, r1
    1118:	d1 08       	sbc	r13, r1
    111a:	e2 0c       	add	r14, r2
    111c:	f3 1c       	adc	r15, r3
    111e:	04 1d       	adc	r16, r4
    1120:	15 1d       	adc	r17, r5
    1122:	e2 14       	cp	r14, r2
    1124:	f3 04       	cpc	r15, r3
    1126:	04 05       	cpc	r16, r4
    1128:	15 05       	cpc	r17, r5
    112a:	50 f0       	brcs	.+20     	; 0x1140 <__stack+0x8e1>
    112c:	e2 16       	cp	r14, r18
    112e:	f3 06       	cpc	r15, r19
    1130:	04 07       	cpc	r16, r20
    1132:	15 07       	cpc	r17, r21
    1134:	28 f4       	brcc	.+10     	; 0x1140 <__stack+0x8e1>
    1136:	08 94       	sec
    1138:	a1 08       	sbc	r10, r1
    113a:	b1 08       	sbc	r11, r1
    113c:	c1 08       	sbc	r12, r1
    113e:	d1 08       	sbc	r13, r1
    1140:	a1 96       	adiw	r28, 0x21	; 33
    1142:	ec ac       	ldd	r14, Y+60	; 0x3c
    1144:	fd ac       	ldd	r15, Y+61	; 0x3d
    1146:	0e ad       	ldd	r16, Y+62	; 0x3e
    1148:	1f ad       	ldd	r17, Y+63	; 0x3f
    114a:	a1 97       	sbiw	r28, 0x21	; 33
    114c:	d7 01       	movw	r26, r14
    114e:	99 27       	eor	r25, r25
    1150:	88 27       	eor	r24, r24
    1152:	96 01       	movw	r18, r12
    1154:	85 01       	movw	r16, r10
    1156:	08 2b       	or	r16, r24
    1158:	19 2b       	or	r17, r25
    115a:	2a 2b       	or	r18, r26
    115c:	3b 2b       	or	r19, r27
    115e:	25 96       	adiw	r28, 0x05	; 5
    1160:	0c af       	std	Y+60, r16	; 0x3c
    1162:	1d af       	std	Y+61, r17	; 0x3d
    1164:	2e af       	std	Y+62, r18	; 0x3e
    1166:	3f af       	std	Y+63, r19	; 0x3f
    1168:	25 97       	sbiw	r28, 0x05	; 5
    116a:	72 c2       	rjmp	.+1252   	; 0x1650 <__stack+0xdf1>
    116c:	6e 14       	cp	r6, r14
    116e:	7f 04       	cpc	r7, r15
    1170:	80 06       	cpc	r8, r16
    1172:	91 06       	cpc	r9, r17
    1174:	08 f4       	brcc	.+2      	; 0x1178 <__stack+0x919>
    1176:	5f c2       	rjmp	.+1214   	; 0x1636 <__stack+0xdd7>
    1178:	20 e0       	ldi	r18, 0x00	; 0
    117a:	e2 16       	cp	r14, r18
    117c:	20 e0       	ldi	r18, 0x00	; 0
    117e:	f2 06       	cpc	r15, r18
    1180:	21 e0       	ldi	r18, 0x01	; 1
    1182:	02 07       	cpc	r16, r18
    1184:	20 e0       	ldi	r18, 0x00	; 0
    1186:	12 07       	cpc	r17, r18
    1188:	88 f4       	brcc	.+34     	; 0x11ac <__stack+0x94d>
    118a:	3f ef       	ldi	r19, 0xFF	; 255
    118c:	e3 16       	cp	r14, r19
    118e:	f1 04       	cpc	r15, r1
    1190:	01 05       	cpc	r16, r1
    1192:	11 05       	cpc	r17, r1
    1194:	31 f0       	breq	.+12     	; 0x11a2 <__stack+0x943>
    1196:	28 f0       	brcs	.+10     	; 0x11a2 <__stack+0x943>
    1198:	48 e0       	ldi	r20, 0x08	; 8
    119a:	50 e0       	ldi	r21, 0x00	; 0
    119c:	60 e0       	ldi	r22, 0x00	; 0
    119e:	70 e0       	ldi	r23, 0x00	; 0
    11a0:	17 c0       	rjmp	.+46     	; 0x11d0 <__stack+0x971>
    11a2:	40 e0       	ldi	r20, 0x00	; 0
    11a4:	50 e0       	ldi	r21, 0x00	; 0
    11a6:	60 e0       	ldi	r22, 0x00	; 0
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	12 c0       	rjmp	.+36     	; 0x11d0 <__stack+0x971>
    11ac:	40 e0       	ldi	r20, 0x00	; 0
    11ae:	e4 16       	cp	r14, r20
    11b0:	40 e0       	ldi	r20, 0x00	; 0
    11b2:	f4 06       	cpc	r15, r20
    11b4:	40 e0       	ldi	r20, 0x00	; 0
    11b6:	04 07       	cpc	r16, r20
    11b8:	41 e0       	ldi	r20, 0x01	; 1
    11ba:	14 07       	cpc	r17, r20
    11bc:	28 f0       	brcs	.+10     	; 0x11c8 <__stack+0x969>
    11be:	48 e1       	ldi	r20, 0x18	; 24
    11c0:	50 e0       	ldi	r21, 0x00	; 0
    11c2:	60 e0       	ldi	r22, 0x00	; 0
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	04 c0       	rjmp	.+8      	; 0x11d0 <__stack+0x971>
    11c8:	40 e1       	ldi	r20, 0x10	; 16
    11ca:	50 e0       	ldi	r21, 0x00	; 0
    11cc:	60 e0       	ldi	r22, 0x00	; 0
    11ce:	70 e0       	ldi	r23, 0x00	; 0
    11d0:	d8 01       	movw	r26, r16
    11d2:	c7 01       	movw	r24, r14
    11d4:	04 2e       	mov	r0, r20
    11d6:	04 c0       	rjmp	.+8      	; 0x11e0 <__stack+0x981>
    11d8:	b6 95       	lsr	r27
    11da:	a7 95       	ror	r26
    11dc:	97 95       	ror	r25
    11de:	87 95       	ror	r24
    11e0:	0a 94       	dec	r0
    11e2:	d2 f7       	brpl	.-12     	; 0x11d8 <__stack+0x979>
    11e4:	8a 57       	subi	r24, 0x7A	; 122
    11e6:	9f 4f       	sbci	r25, 0xFF	; 255
    11e8:	dc 01       	movw	r26, r24
    11ea:	2c 91       	ld	r18, X
    11ec:	30 e2       	ldi	r19, 0x20	; 32
    11ee:	a3 2e       	mov	r10, r19
    11f0:	b1 2c       	mov	r11, r1
    11f2:	c1 2c       	mov	r12, r1
    11f4:	d1 2c       	mov	r13, r1
    11f6:	d6 01       	movw	r26, r12
    11f8:	c5 01       	movw	r24, r10
    11fa:	84 1b       	sub	r24, r20
    11fc:	95 0b       	sbc	r25, r21
    11fe:	a6 0b       	sbc	r26, r22
    1200:	b7 0b       	sbc	r27, r23
    1202:	82 1b       	sub	r24, r18
    1204:	91 09       	sbc	r25, r1
    1206:	a1 09       	sbc	r26, r1
    1208:	b1 09       	sbc	r27, r1
    120a:	00 97       	sbiw	r24, 0x00	; 0
    120c:	a1 05       	cpc	r26, r1
    120e:	b1 05       	cpc	r27, r1
    1210:	99 f4       	brne	.+38     	; 0x1238 <__stack+0x9d9>
    1212:	e6 14       	cp	r14, r6
    1214:	f7 04       	cpc	r15, r7
    1216:	08 05       	cpc	r16, r8
    1218:	19 05       	cpc	r17, r9
    121a:	08 f4       	brcc	.+2      	; 0x121e <__stack+0x9bf>
    121c:	fe c1       	rjmp	.+1020   	; 0x161a <__stack+0xdbb>
    121e:	21 96       	adiw	r28, 0x01	; 1
    1220:	6c ac       	ldd	r6, Y+60	; 0x3c
    1222:	7d ac       	ldd	r7, Y+61	; 0x3d
    1224:	8e ac       	ldd	r8, Y+62	; 0x3e
    1226:	9f ac       	ldd	r9, Y+63	; 0x3f
    1228:	21 97       	sbiw	r28, 0x01	; 1
    122a:	62 14       	cp	r6, r2
    122c:	73 04       	cpc	r7, r3
    122e:	84 04       	cpc	r8, r4
    1230:	95 04       	cpc	r9, r5
    1232:	08 f0       	brcs	.+2      	; 0x1236 <__stack+0x9d7>
    1234:	f2 c1       	rjmp	.+996    	; 0x161a <__stack+0xdbb>
    1236:	ff c1       	rjmp	.+1022   	; 0x1636 <__stack+0xdd7>
    1238:	e2 96       	adiw	r28, 0x32	; 50
    123a:	8f af       	std	Y+63, r24	; 0x3f
    123c:	e2 97       	sbiw	r28, 0x32	; 50
    123e:	08 2e       	mov	r0, r24
    1240:	04 c0       	rjmp	.+8      	; 0x124a <__stack+0x9eb>
    1242:	ee 0c       	add	r14, r14
    1244:	ff 1c       	adc	r15, r15
    1246:	00 1f       	adc	r16, r16
    1248:	11 1f       	adc	r17, r17
    124a:	0a 94       	dec	r0
    124c:	d2 f7       	brpl	.-12     	; 0x1242 <__stack+0x9e3>
    124e:	6a 2d       	mov	r22, r10
    1250:	68 1b       	sub	r22, r24
    1252:	d2 01       	movw	r26, r4
    1254:	c1 01       	movw	r24, r2
    1256:	06 2e       	mov	r0, r22
    1258:	04 c0       	rjmp	.+8      	; 0x1262 <__stack+0xa03>
    125a:	b6 95       	lsr	r27
    125c:	a7 95       	ror	r26
    125e:	97 95       	ror	r25
    1260:	87 95       	ror	r24
    1262:	0a 94       	dec	r0
    1264:	d2 f7       	brpl	.-12     	; 0x125a <__stack+0x9fb>
    1266:	5c 01       	movw	r10, r24
    1268:	6d 01       	movw	r12, r26
    126a:	ae 28       	or	r10, r14
    126c:	bf 28       	or	r11, r15
    126e:	c0 2a       	or	r12, r16
    1270:	d1 2a       	or	r13, r17
    1272:	ad aa       	std	Y+53, r10	; 0x35
    1274:	be aa       	std	Y+54, r11	; 0x36
    1276:	cf aa       	std	Y+55, r12	; 0x37
    1278:	d8 ae       	std	Y+56, r13	; 0x38
    127a:	72 01       	movw	r14, r4
    127c:	61 01       	movw	r12, r2
    127e:	e2 96       	adiw	r28, 0x32	; 50
    1280:	0f ac       	ldd	r0, Y+63	; 0x3f
    1282:	e2 97       	sbiw	r28, 0x32	; 50
    1284:	04 c0       	rjmp	.+8      	; 0x128e <__stack+0xa2f>
    1286:	cc 0c       	add	r12, r12
    1288:	dd 1c       	adc	r13, r13
    128a:	ee 1c       	adc	r14, r14
    128c:	ff 1c       	adc	r15, r15
    128e:	0a 94       	dec	r0
    1290:	d2 f7       	brpl	.-12     	; 0x1286 <__stack+0xa27>
    1292:	c9 aa       	std	Y+49, r12	; 0x31
    1294:	da aa       	std	Y+50, r13	; 0x32
    1296:	eb aa       	std	Y+51, r14	; 0x33
    1298:	fc aa       	std	Y+52, r15	; 0x34
    129a:	64 01       	movw	r12, r8
    129c:	53 01       	movw	r10, r6
    129e:	06 2e       	mov	r0, r22
    12a0:	04 c0       	rjmp	.+8      	; 0x12aa <__stack+0xa4b>
    12a2:	d6 94       	lsr	r13
    12a4:	c7 94       	ror	r12
    12a6:	b7 94       	ror	r11
    12a8:	a7 94       	ror	r10
    12aa:	0a 94       	dec	r0
    12ac:	d2 f7       	brpl	.-12     	; 0x12a2 <__stack+0xa43>
    12ae:	d4 01       	movw	r26, r8
    12b0:	c3 01       	movw	r24, r6
    12b2:	e2 96       	adiw	r28, 0x32	; 50
    12b4:	0f ac       	ldd	r0, Y+63	; 0x3f
    12b6:	e2 97       	sbiw	r28, 0x32	; 50
    12b8:	04 c0       	rjmp	.+8      	; 0x12c2 <__stack+0xa63>
    12ba:	88 0f       	add	r24, r24
    12bc:	99 1f       	adc	r25, r25
    12be:	aa 1f       	adc	r26, r26
    12c0:	bb 1f       	adc	r27, r27
    12c2:	0a 94       	dec	r0
    12c4:	d2 f7       	brpl	.-12     	; 0x12ba <__stack+0xa5b>
    12c6:	21 96       	adiw	r28, 0x01	; 1
    12c8:	ec ac       	ldd	r14, Y+60	; 0x3c
    12ca:	fd ac       	ldd	r15, Y+61	; 0x3d
    12cc:	0e ad       	ldd	r16, Y+62	; 0x3e
    12ce:	1f ad       	ldd	r17, Y+63	; 0x3f
    12d0:	21 97       	sbiw	r28, 0x01	; 1
    12d2:	04 c0       	rjmp	.+8      	; 0x12dc <__stack+0xa7d>
    12d4:	16 95       	lsr	r17
    12d6:	07 95       	ror	r16
    12d8:	f7 94       	ror	r15
    12da:	e7 94       	ror	r14
    12dc:	6a 95       	dec	r22
    12de:	d2 f7       	brpl	.-12     	; 0x12d4 <__stack+0xa75>
    12e0:	37 01       	movw	r6, r14
    12e2:	48 01       	movw	r8, r16
    12e4:	68 2a       	or	r6, r24
    12e6:	79 2a       	or	r7, r25
    12e8:	8a 2a       	or	r8, r26
    12ea:	9b 2a       	or	r9, r27
    12ec:	6d a6       	std	Y+45, r6	; 0x2d
    12ee:	7e a6       	std	Y+46, r7	; 0x2e
    12f0:	8f a6       	std	Y+47, r8	; 0x2f
    12f2:	98 aa       	std	Y+48, r9	; 0x30
    12f4:	ed a8       	ldd	r14, Y+53	; 0x35
    12f6:	fe a8       	ldd	r15, Y+54	; 0x36
    12f8:	0f a9       	ldd	r16, Y+55	; 0x37
    12fa:	18 ad       	ldd	r17, Y+56	; 0x38
    12fc:	38 01       	movw	r6, r16
    12fe:	88 24       	eor	r8, r8
    1300:	99 24       	eor	r9, r9
    1302:	98 01       	movw	r18, r16
    1304:	87 01       	movw	r16, r14
    1306:	20 70       	andi	r18, 0x00	; 0
    1308:	30 70       	andi	r19, 0x00	; 0
    130a:	a5 96       	adiw	r28, 0x25	; 37
    130c:	0c af       	std	Y+60, r16	; 0x3c
    130e:	1d af       	std	Y+61, r17	; 0x3d
    1310:	2e af       	std	Y+62, r18	; 0x3e
    1312:	3f af       	std	Y+63, r19	; 0x3f
    1314:	a5 97       	sbiw	r28, 0x25	; 37
    1316:	c6 01       	movw	r24, r12
    1318:	b5 01       	movw	r22, r10
    131a:	a4 01       	movw	r20, r8
    131c:	93 01       	movw	r18, r6
    131e:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
    1322:	7b 01       	movw	r14, r22
    1324:	8c 01       	movw	r16, r24
    1326:	c6 01       	movw	r24, r12
    1328:	b5 01       	movw	r22, r10
    132a:	a4 01       	movw	r20, r8
    132c:	93 01       	movw	r18, r6
    132e:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
    1332:	c9 01       	movw	r24, r18
    1334:	da 01       	movw	r26, r20
    1336:	1c 01       	movw	r2, r24
    1338:	2d 01       	movw	r4, r26
    133a:	c2 01       	movw	r24, r4
    133c:	b1 01       	movw	r22, r2
    133e:	a5 96       	adiw	r28, 0x25	; 37
    1340:	2c ad       	ldd	r18, Y+60	; 0x3c
    1342:	3d ad       	ldd	r19, Y+61	; 0x3d
    1344:	4e ad       	ldd	r20, Y+62	; 0x3e
    1346:	5f ad       	ldd	r21, Y+63	; 0x3f
    1348:	a5 97       	sbiw	r28, 0x25	; 37
    134a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    134e:	9b 01       	movw	r18, r22
    1350:	ac 01       	movw	r20, r24
    1352:	87 01       	movw	r16, r14
    1354:	ff 24       	eor	r15, r15
    1356:	ee 24       	eor	r14, r14
    1358:	ad a4       	ldd	r10, Y+45	; 0x2d
    135a:	be a4       	ldd	r11, Y+46	; 0x2e
    135c:	cf a4       	ldd	r12, Y+47	; 0x2f
    135e:	d8 a8       	ldd	r13, Y+48	; 0x30
    1360:	c6 01       	movw	r24, r12
    1362:	aa 27       	eor	r26, r26
    1364:	bb 27       	eor	r27, r27
    1366:	57 01       	movw	r10, r14
    1368:	68 01       	movw	r12, r16
    136a:	a8 2a       	or	r10, r24
    136c:	b9 2a       	or	r11, r25
    136e:	ca 2a       	or	r12, r26
    1370:	db 2a       	or	r13, r27
    1372:	a2 16       	cp	r10, r18
    1374:	b3 06       	cpc	r11, r19
    1376:	c4 06       	cpc	r12, r20
    1378:	d5 06       	cpc	r13, r21
    137a:	00 f5       	brcc	.+64     	; 0x13bc <__stack+0xb5d>
    137c:	08 94       	sec
    137e:	21 08       	sbc	r2, r1
    1380:	31 08       	sbc	r3, r1
    1382:	41 08       	sbc	r4, r1
    1384:	51 08       	sbc	r5, r1
    1386:	ed a8       	ldd	r14, Y+53	; 0x35
    1388:	fe a8       	ldd	r15, Y+54	; 0x36
    138a:	0f a9       	ldd	r16, Y+55	; 0x37
    138c:	18 ad       	ldd	r17, Y+56	; 0x38
    138e:	ae 0c       	add	r10, r14
    1390:	bf 1c       	adc	r11, r15
    1392:	c0 1e       	adc	r12, r16
    1394:	d1 1e       	adc	r13, r17
    1396:	ae 14       	cp	r10, r14
    1398:	bf 04       	cpc	r11, r15
    139a:	c0 06       	cpc	r12, r16
    139c:	d1 06       	cpc	r13, r17
    139e:	70 f0       	brcs	.+28     	; 0x13bc <__stack+0xb5d>
    13a0:	a2 16       	cp	r10, r18
    13a2:	b3 06       	cpc	r11, r19
    13a4:	c4 06       	cpc	r12, r20
    13a6:	d5 06       	cpc	r13, r21
    13a8:	48 f4       	brcc	.+18     	; 0x13bc <__stack+0xb5d>
    13aa:	08 94       	sec
    13ac:	21 08       	sbc	r2, r1
    13ae:	31 08       	sbc	r3, r1
    13b0:	41 08       	sbc	r4, r1
    13b2:	51 08       	sbc	r5, r1
    13b4:	ae 0c       	add	r10, r14
    13b6:	bf 1c       	adc	r11, r15
    13b8:	c0 1e       	adc	r12, r16
    13ba:	d1 1e       	adc	r13, r17
    13bc:	a2 1a       	sub	r10, r18
    13be:	b3 0a       	sbc	r11, r19
    13c0:	c4 0a       	sbc	r12, r20
    13c2:	d5 0a       	sbc	r13, r21
    13c4:	c6 01       	movw	r24, r12
    13c6:	b5 01       	movw	r22, r10
    13c8:	a4 01       	movw	r20, r8
    13ca:	93 01       	movw	r18, r6
    13cc:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
    13d0:	7b 01       	movw	r14, r22
    13d2:	8c 01       	movw	r16, r24
    13d4:	c6 01       	movw	r24, r12
    13d6:	b5 01       	movw	r22, r10
    13d8:	a4 01       	movw	r20, r8
    13da:	93 01       	movw	r18, r6
    13dc:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <__udivmodsi4>
    13e0:	c9 01       	movw	r24, r18
    13e2:	da 01       	movw	r26, r20
    13e4:	3c 01       	movw	r6, r24
    13e6:	4d 01       	movw	r8, r26
    13e8:	c4 01       	movw	r24, r8
    13ea:	b3 01       	movw	r22, r6
    13ec:	a5 96       	adiw	r28, 0x25	; 37
    13ee:	2c ad       	ldd	r18, Y+60	; 0x3c
    13f0:	3d ad       	ldd	r19, Y+61	; 0x3d
    13f2:	4e ad       	ldd	r20, Y+62	; 0x3e
    13f4:	5f ad       	ldd	r21, Y+63	; 0x3f
    13f6:	a5 97       	sbiw	r28, 0x25	; 37
    13f8:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    13fc:	9b 01       	movw	r18, r22
    13fe:	ac 01       	movw	r20, r24
    1400:	87 01       	movw	r16, r14
    1402:	ff 24       	eor	r15, r15
    1404:	ee 24       	eor	r14, r14
    1406:	8d a5       	ldd	r24, Y+45	; 0x2d
    1408:	9e a5       	ldd	r25, Y+46	; 0x2e
    140a:	af a5       	ldd	r26, Y+47	; 0x2f
    140c:	b8 a9       	ldd	r27, Y+48	; 0x30
    140e:	a0 70       	andi	r26, 0x00	; 0
    1410:	b0 70       	andi	r27, 0x00	; 0
    1412:	57 01       	movw	r10, r14
    1414:	68 01       	movw	r12, r16
    1416:	a8 2a       	or	r10, r24
    1418:	b9 2a       	or	r11, r25
    141a:	ca 2a       	or	r12, r26
    141c:	db 2a       	or	r13, r27
    141e:	a2 16       	cp	r10, r18
    1420:	b3 06       	cpc	r11, r19
    1422:	c4 06       	cpc	r12, r20
    1424:	d5 06       	cpc	r13, r21
    1426:	00 f5       	brcc	.+64     	; 0x1468 <__stack+0xc09>
    1428:	08 94       	sec
    142a:	61 08       	sbc	r6, r1
    142c:	71 08       	sbc	r7, r1
    142e:	81 08       	sbc	r8, r1
    1430:	91 08       	sbc	r9, r1
    1432:	6d a9       	ldd	r22, Y+53	; 0x35
    1434:	7e a9       	ldd	r23, Y+54	; 0x36
    1436:	8f a9       	ldd	r24, Y+55	; 0x37
    1438:	98 ad       	ldd	r25, Y+56	; 0x38
    143a:	a6 0e       	add	r10, r22
    143c:	b7 1e       	adc	r11, r23
    143e:	c8 1e       	adc	r12, r24
    1440:	d9 1e       	adc	r13, r25
    1442:	a6 16       	cp	r10, r22
    1444:	b7 06       	cpc	r11, r23
    1446:	c8 06       	cpc	r12, r24
    1448:	d9 06       	cpc	r13, r25
    144a:	70 f0       	brcs	.+28     	; 0x1468 <__stack+0xc09>
    144c:	a2 16       	cp	r10, r18
    144e:	b3 06       	cpc	r11, r19
    1450:	c4 06       	cpc	r12, r20
    1452:	d5 06       	cpc	r13, r21
    1454:	48 f4       	brcc	.+18     	; 0x1468 <__stack+0xc09>
    1456:	08 94       	sec
    1458:	61 08       	sbc	r6, r1
    145a:	71 08       	sbc	r7, r1
    145c:	81 08       	sbc	r8, r1
    145e:	91 08       	sbc	r9, r1
    1460:	a6 0e       	add	r10, r22
    1462:	b7 1e       	adc	r11, r23
    1464:	c8 1e       	adc	r12, r24
    1466:	d9 1e       	adc	r13, r25
    1468:	d6 01       	movw	r26, r12
    146a:	c5 01       	movw	r24, r10
    146c:	82 1b       	sub	r24, r18
    146e:	93 0b       	sbc	r25, r19
    1470:	a4 0b       	sbc	r26, r20
    1472:	b5 0b       	sbc	r27, r21
    1474:	89 a7       	std	Y+41, r24	; 0x29
    1476:	9a a7       	std	Y+42, r25	; 0x2a
    1478:	ab a7       	std	Y+43, r26	; 0x2b
    147a:	bc a7       	std	Y+44, r27	; 0x2c
    147c:	d1 01       	movw	r26, r2
    147e:	99 27       	eor	r25, r25
    1480:	88 27       	eor	r24, r24
    1482:	64 01       	movw	r12, r8
    1484:	53 01       	movw	r10, r6
    1486:	a8 2a       	or	r10, r24
    1488:	b9 2a       	or	r11, r25
    148a:	ca 2a       	or	r12, r26
    148c:	db 2a       	or	r13, r27
    148e:	25 96       	adiw	r28, 0x05	; 5
    1490:	ac ae       	std	Y+60, r10	; 0x3c
    1492:	bd ae       	std	Y+61, r11	; 0x3d
    1494:	ce ae       	std	Y+62, r12	; 0x3e
    1496:	df ae       	std	Y+63, r13	; 0x3f
    1498:	25 97       	sbiw	r28, 0x05	; 5
    149a:	86 01       	movw	r16, r12
    149c:	75 01       	movw	r14, r10
    149e:	2f ef       	ldi	r18, 0xFF	; 255
    14a0:	3f ef       	ldi	r19, 0xFF	; 255
    14a2:	40 e0       	ldi	r20, 0x00	; 0
    14a4:	50 e0       	ldi	r21, 0x00	; 0
    14a6:	e2 22       	and	r14, r18
    14a8:	f3 22       	and	r15, r19
    14aa:	04 23       	and	r16, r20
    14ac:	15 23       	and	r17, r21
    14ae:	a6 01       	movw	r20, r12
    14b0:	66 27       	eor	r22, r22
    14b2:	77 27       	eor	r23, r23
    14b4:	ad 96       	adiw	r28, 0x2d	; 45
    14b6:	4c af       	std	Y+60, r20	; 0x3c
    14b8:	5d af       	std	Y+61, r21	; 0x3d
    14ba:	6e af       	std	Y+62, r22	; 0x3e
    14bc:	7f af       	std	Y+63, r23	; 0x3f
    14be:	ad 97       	sbiw	r28, 0x2d	; 45
    14c0:	a9 a8       	ldd	r10, Y+49	; 0x31
    14c2:	ba a8       	ldd	r11, Y+50	; 0x32
    14c4:	cb a8       	ldd	r12, Y+51	; 0x33
    14c6:	dc a8       	ldd	r13, Y+52	; 0x34
    14c8:	6f ef       	ldi	r22, 0xFF	; 255
    14ca:	7f ef       	ldi	r23, 0xFF	; 255
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	a6 22       	and	r10, r22
    14d2:	b7 22       	and	r11, r23
    14d4:	c8 22       	and	r12, r24
    14d6:	d9 22       	and	r13, r25
    14d8:	89 a9       	ldd	r24, Y+49	; 0x31
    14da:	9a a9       	ldd	r25, Y+50	; 0x32
    14dc:	ab a9       	ldd	r26, Y+51	; 0x33
    14de:	bc a9       	ldd	r27, Y+52	; 0x34
    14e0:	1d 01       	movw	r2, r26
    14e2:	44 24       	eor	r4, r4
    14e4:	55 24       	eor	r5, r5
    14e6:	c8 01       	movw	r24, r16
    14e8:	b7 01       	movw	r22, r14
    14ea:	a6 01       	movw	r20, r12
    14ec:	95 01       	movw	r18, r10
    14ee:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    14f2:	a9 96       	adiw	r28, 0x29	; 41
    14f4:	6c af       	std	Y+60, r22	; 0x3c
    14f6:	7d af       	std	Y+61, r23	; 0x3d
    14f8:	8e af       	std	Y+62, r24	; 0x3e
    14fa:	9f af       	std	Y+63, r25	; 0x3f
    14fc:	a9 97       	sbiw	r28, 0x29	; 41
    14fe:	c8 01       	movw	r24, r16
    1500:	b7 01       	movw	r22, r14
    1502:	a2 01       	movw	r20, r4
    1504:	91 01       	movw	r18, r2
    1506:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    150a:	3b 01       	movw	r6, r22
    150c:	4c 01       	movw	r8, r24
    150e:	ad 96       	adiw	r28, 0x2d	; 45
    1510:	6c ad       	ldd	r22, Y+60	; 0x3c
    1512:	7d ad       	ldd	r23, Y+61	; 0x3d
    1514:	8e ad       	ldd	r24, Y+62	; 0x3e
    1516:	9f ad       	ldd	r25, Y+63	; 0x3f
    1518:	ad 97       	sbiw	r28, 0x2d	; 45
    151a:	a6 01       	movw	r20, r12
    151c:	95 01       	movw	r18, r10
    151e:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    1522:	7b 01       	movw	r14, r22
    1524:	8c 01       	movw	r16, r24
    1526:	ad 96       	adiw	r28, 0x2d	; 45
    1528:	6c ad       	ldd	r22, Y+60	; 0x3c
    152a:	7d ad       	ldd	r23, Y+61	; 0x3d
    152c:	8e ad       	ldd	r24, Y+62	; 0x3e
    152e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1530:	ad 97       	sbiw	r28, 0x2d	; 45
    1532:	a2 01       	movw	r20, r4
    1534:	91 01       	movw	r18, r2
    1536:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    153a:	5b 01       	movw	r10, r22
    153c:	6c 01       	movw	r12, r24
    153e:	a8 01       	movw	r20, r16
    1540:	97 01       	movw	r18, r14
    1542:	26 0d       	add	r18, r6
    1544:	37 1d       	adc	r19, r7
    1546:	48 1d       	adc	r20, r8
    1548:	59 1d       	adc	r21, r9
    154a:	a9 96       	adiw	r28, 0x29	; 41
    154c:	6c ac       	ldd	r6, Y+60	; 0x3c
    154e:	7d ac       	ldd	r7, Y+61	; 0x3d
    1550:	8e ac       	ldd	r8, Y+62	; 0x3e
    1552:	9f ac       	ldd	r9, Y+63	; 0x3f
    1554:	a9 97       	sbiw	r28, 0x29	; 41
    1556:	c4 01       	movw	r24, r8
    1558:	aa 27       	eor	r26, r26
    155a:	bb 27       	eor	r27, r27
    155c:	28 0f       	add	r18, r24
    155e:	39 1f       	adc	r19, r25
    1560:	4a 1f       	adc	r20, r26
    1562:	5b 1f       	adc	r21, r27
    1564:	2e 15       	cp	r18, r14
    1566:	3f 05       	cpc	r19, r15
    1568:	40 07       	cpc	r20, r16
    156a:	51 07       	cpc	r21, r17
    156c:	48 f4       	brcc	.+18     	; 0x1580 <__stack+0xd21>
    156e:	e1 2c       	mov	r14, r1
    1570:	f1 2c       	mov	r15, r1
    1572:	61 e0       	ldi	r22, 0x01	; 1
    1574:	06 2f       	mov	r16, r22
    1576:	11 2d       	mov	r17, r1
    1578:	ae 0c       	add	r10, r14
    157a:	bf 1c       	adc	r11, r15
    157c:	c0 1e       	adc	r12, r16
    157e:	d1 1e       	adc	r13, r17
    1580:	ca 01       	movw	r24, r20
    1582:	aa 27       	eor	r26, r26
    1584:	bb 27       	eor	r27, r27
    1586:	bc 01       	movw	r22, r24
    1588:	cd 01       	movw	r24, r26
    158a:	6a 0d       	add	r22, r10
    158c:	7b 1d       	adc	r23, r11
    158e:	8c 1d       	adc	r24, r12
    1590:	9d 1d       	adc	r25, r13
    1592:	69 a4       	ldd	r6, Y+41	; 0x29
    1594:	7a a4       	ldd	r7, Y+42	; 0x2a
    1596:	8b a4       	ldd	r8, Y+43	; 0x2b
    1598:	9c a4       	ldd	r9, Y+44	; 0x2c
    159a:	66 16       	cp	r6, r22
    159c:	77 06       	cpc	r7, r23
    159e:	88 06       	cpc	r8, r24
    15a0:	99 06       	cpc	r9, r25
    15a2:	50 f1       	brcs	.+84     	; 0x15f8 <__stack+0xd99>
    15a4:	66 15       	cp	r22, r6
    15a6:	77 05       	cpc	r23, r7
    15a8:	88 05       	cpc	r24, r8
    15aa:	99 05       	cpc	r25, r9
    15ac:	09 f0       	breq	.+2      	; 0x15b0 <__stack+0xd51>
    15ae:	4d c0       	rjmp	.+154    	; 0x164a <__stack+0xdeb>
    15b0:	d9 01       	movw	r26, r18
    15b2:	99 27       	eor	r25, r25
    15b4:	88 27       	eor	r24, r24
    15b6:	a9 96       	adiw	r28, 0x29	; 41
    15b8:	2c ad       	ldd	r18, Y+60	; 0x3c
    15ba:	3d ad       	ldd	r19, Y+61	; 0x3d
    15bc:	4e ad       	ldd	r20, Y+62	; 0x3e
    15be:	5f ad       	ldd	r21, Y+63	; 0x3f
    15c0:	a9 97       	sbiw	r28, 0x29	; 41
    15c2:	40 70       	andi	r20, 0x00	; 0
    15c4:	50 70       	andi	r21, 0x00	; 0
    15c6:	82 0f       	add	r24, r18
    15c8:	93 1f       	adc	r25, r19
    15ca:	a4 1f       	adc	r26, r20
    15cc:	b5 1f       	adc	r27, r21
    15ce:	21 96       	adiw	r28, 0x01	; 1
    15d0:	2c ad       	ldd	r18, Y+60	; 0x3c
    15d2:	3d ad       	ldd	r19, Y+61	; 0x3d
    15d4:	4e ad       	ldd	r20, Y+62	; 0x3e
    15d6:	5f ad       	ldd	r21, Y+63	; 0x3f
    15d8:	21 97       	sbiw	r28, 0x01	; 1
    15da:	e2 96       	adiw	r28, 0x32	; 50
    15dc:	0f ac       	ldd	r0, Y+63	; 0x3f
    15de:	e2 97       	sbiw	r28, 0x32	; 50
    15e0:	04 c0       	rjmp	.+8      	; 0x15ea <__stack+0xd8b>
    15e2:	22 0f       	add	r18, r18
    15e4:	33 1f       	adc	r19, r19
    15e6:	44 1f       	adc	r20, r20
    15e8:	55 1f       	adc	r21, r21
    15ea:	0a 94       	dec	r0
    15ec:	d2 f7       	brpl	.-12     	; 0x15e2 <__stack+0xd83>
    15ee:	28 17       	cp	r18, r24
    15f0:	39 07       	cpc	r19, r25
    15f2:	4a 07       	cpc	r20, r26
    15f4:	5b 07       	cpc	r21, r27
    15f6:	48 f5       	brcc	.+82     	; 0x164a <__stack+0xdeb>
    15f8:	25 96       	adiw	r28, 0x05	; 5
    15fa:	0c ad       	ldd	r16, Y+60	; 0x3c
    15fc:	1d ad       	ldd	r17, Y+61	; 0x3d
    15fe:	2e ad       	ldd	r18, Y+62	; 0x3e
    1600:	3f ad       	ldd	r19, Y+63	; 0x3f
    1602:	25 97       	sbiw	r28, 0x05	; 5
    1604:	01 50       	subi	r16, 0x01	; 1
    1606:	10 40       	sbci	r17, 0x00	; 0
    1608:	20 40       	sbci	r18, 0x00	; 0
    160a:	30 40       	sbci	r19, 0x00	; 0
    160c:	25 96       	adiw	r28, 0x05	; 5
    160e:	0c af       	std	Y+60, r16	; 0x3c
    1610:	1d af       	std	Y+61, r17	; 0x3d
    1612:	2e af       	std	Y+62, r18	; 0x3e
    1614:	3f af       	std	Y+63, r19	; 0x3f
    1616:	25 97       	sbiw	r28, 0x05	; 5
    1618:	18 c0       	rjmp	.+48     	; 0x164a <__stack+0xdeb>
    161a:	66 24       	eor	r6, r6
    161c:	77 24       	eor	r7, r7
    161e:	43 01       	movw	r8, r6
    1620:	21 e0       	ldi	r18, 0x01	; 1
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	40 e0       	ldi	r20, 0x00	; 0
    1626:	50 e0       	ldi	r21, 0x00	; 0
    1628:	25 96       	adiw	r28, 0x05	; 5
    162a:	2c af       	std	Y+60, r18	; 0x3c
    162c:	3d af       	std	Y+61, r19	; 0x3d
    162e:	4e af       	std	Y+62, r20	; 0x3e
    1630:	5f af       	std	Y+63, r21	; 0x3f
    1632:	25 97       	sbiw	r28, 0x05	; 5
    1634:	0d c0       	rjmp	.+26     	; 0x1650 <__stack+0xdf1>
    1636:	66 24       	eor	r6, r6
    1638:	77 24       	eor	r7, r7
    163a:	43 01       	movw	r8, r6
    163c:	25 96       	adiw	r28, 0x05	; 5
    163e:	1c ae       	std	Y+60, r1	; 0x3c
    1640:	1d ae       	std	Y+61, r1	; 0x3d
    1642:	1e ae       	std	Y+62, r1	; 0x3e
    1644:	1f ae       	std	Y+63, r1	; 0x3f
    1646:	25 97       	sbiw	r28, 0x05	; 5
    1648:	03 c0       	rjmp	.+6      	; 0x1650 <__stack+0xdf1>
    164a:	66 24       	eor	r6, r6
    164c:	77 24       	eor	r7, r7
    164e:	43 01       	movw	r8, r6
    1650:	fe 01       	movw	r30, r28
    1652:	b1 96       	adiw	r30, 0x21	; 33
    1654:	88 e0       	ldi	r24, 0x08	; 8
    1656:	df 01       	movw	r26, r30
    1658:	1d 92       	st	X+, r1
    165a:	8a 95       	dec	r24
    165c:	e9 f7       	brne	.-6      	; 0x1658 <__stack+0xdf9>
    165e:	25 96       	adiw	r28, 0x05	; 5
    1660:	ac ac       	ldd	r10, Y+60	; 0x3c
    1662:	bd ac       	ldd	r11, Y+61	; 0x3d
    1664:	ce ac       	ldd	r12, Y+62	; 0x3e
    1666:	df ac       	ldd	r13, Y+63	; 0x3f
    1668:	25 97       	sbiw	r28, 0x05	; 5
    166a:	a9 a2       	std	Y+33, r10	; 0x21
    166c:	ba a2       	std	Y+34, r11	; 0x22
    166e:	cb a2       	std	Y+35, r12	; 0x23
    1670:	dc a2       	std	Y+36, r13	; 0x24
    1672:	6d a2       	std	Y+37, r6	; 0x25
    1674:	7e a2       	std	Y+38, r7	; 0x26
    1676:	8f a2       	std	Y+39, r8	; 0x27
    1678:	98 a6       	std	Y+40, r9	; 0x28
    167a:	22 96       	adiw	r28, 0x02	; 2
    167c:	2f ad       	ldd	r18, Y+63	; 0x3f
    167e:	22 97       	sbiw	r28, 0x02	; 2
    1680:	3a a1       	ldd	r19, Y+34	; 0x22
    1682:	4b a1       	ldd	r20, Y+35	; 0x23
    1684:	5c a1       	ldd	r21, Y+36	; 0x24
    1686:	66 2d       	mov	r22, r6
    1688:	7e a1       	ldd	r23, Y+38	; 0x26
    168a:	df a0       	ldd	r13, Y+39	; 0x27
    168c:	98 a5       	ldd	r25, Y+40	; 0x28
    168e:	e1 96       	adiw	r28, 0x31	; 49
    1690:	ec ac       	ldd	r14, Y+60	; 0x3c
    1692:	fd ac       	ldd	r15, Y+61	; 0x3d
    1694:	0e ad       	ldd	r16, Y+62	; 0x3e
    1696:	1f ad       	ldd	r17, Y+63	; 0x3f
    1698:	e1 97       	sbiw	r28, 0x31	; 49
    169a:	e1 14       	cp	r14, r1
    169c:	f1 04       	cpc	r15, r1
    169e:	01 05       	cpc	r16, r1
    16a0:	11 05       	cpc	r17, r1
    16a2:	09 f4       	brne	.+2      	; 0x16a6 <__stack+0xe47>
    16a4:	56 c0       	rjmp	.+172    	; 0x1752 <__stack+0xef3>
    16a6:	21 95       	neg	r18
    16a8:	81 e0       	ldi	r24, 0x01	; 1
    16aa:	12 16       	cp	r1, r18
    16ac:	08 f0       	brcs	.+2      	; 0x16b0 <__stack+0xe51>
    16ae:	80 e0       	ldi	r24, 0x00	; 0
    16b0:	31 95       	neg	r19
    16b2:	e1 e0       	ldi	r30, 0x01	; 1
    16b4:	13 16       	cp	r1, r19
    16b6:	08 f0       	brcs	.+2      	; 0x16ba <__stack+0xe5b>
    16b8:	e0 e0       	ldi	r30, 0x00	; 0
    16ba:	93 2e       	mov	r9, r19
    16bc:	98 1a       	sub	r9, r24
    16be:	81 e0       	ldi	r24, 0x01	; 1
    16c0:	39 15       	cp	r19, r9
    16c2:	08 f0       	brcs	.+2      	; 0x16c6 <__stack+0xe67>
    16c4:	80 e0       	ldi	r24, 0x00	; 0
    16c6:	e8 2b       	or	r30, r24
    16c8:	41 95       	neg	r20
    16ca:	f1 e0       	ldi	r31, 0x01	; 1
    16cc:	14 16       	cp	r1, r20
    16ce:	08 f0       	brcs	.+2      	; 0x16d2 <__stack+0xe73>
    16d0:	f0 e0       	ldi	r31, 0x00	; 0
    16d2:	a4 2e       	mov	r10, r20
    16d4:	ae 1a       	sub	r10, r30
    16d6:	81 e0       	ldi	r24, 0x01	; 1
    16d8:	4a 15       	cp	r20, r10
    16da:	08 f0       	brcs	.+2      	; 0x16de <__stack+0xe7f>
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	f8 2b       	or	r31, r24
    16e0:	51 95       	neg	r21
    16e2:	e1 e0       	ldi	r30, 0x01	; 1
    16e4:	15 16       	cp	r1, r21
    16e6:	08 f0       	brcs	.+2      	; 0x16ea <__stack+0xe8b>
    16e8:	e0 e0       	ldi	r30, 0x00	; 0
    16ea:	b5 2e       	mov	r11, r21
    16ec:	bf 1a       	sub	r11, r31
    16ee:	81 e0       	ldi	r24, 0x01	; 1
    16f0:	5b 15       	cp	r21, r11
    16f2:	08 f0       	brcs	.+2      	; 0x16f6 <__stack+0xe97>
    16f4:	80 e0       	ldi	r24, 0x00	; 0
    16f6:	e8 2b       	or	r30, r24
    16f8:	61 95       	neg	r22
    16fa:	f1 e0       	ldi	r31, 0x01	; 1
    16fc:	16 16       	cp	r1, r22
    16fe:	08 f0       	brcs	.+2      	; 0x1702 <__stack+0xea3>
    1700:	f0 e0       	ldi	r31, 0x00	; 0
    1702:	a6 2f       	mov	r26, r22
    1704:	ae 1b       	sub	r26, r30
    1706:	81 e0       	ldi	r24, 0x01	; 1
    1708:	6a 17       	cp	r22, r26
    170a:	08 f0       	brcs	.+2      	; 0x170e <__stack+0xeaf>
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	f8 2b       	or	r31, r24
    1710:	71 95       	neg	r23
    1712:	e1 e0       	ldi	r30, 0x01	; 1
    1714:	17 16       	cp	r1, r23
    1716:	08 f0       	brcs	.+2      	; 0x171a <__stack+0xebb>
    1718:	e0 e0       	ldi	r30, 0x00	; 0
    171a:	c7 2e       	mov	r12, r23
    171c:	cf 1a       	sub	r12, r31
    171e:	81 e0       	ldi	r24, 0x01	; 1
    1720:	7c 15       	cp	r23, r12
    1722:	08 f0       	brcs	.+2      	; 0x1726 <__stack+0xec7>
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	e8 2b       	or	r30, r24
    1728:	8d 2d       	mov	r24, r13
    172a:	81 95       	neg	r24
    172c:	f1 e0       	ldi	r31, 0x01	; 1
    172e:	18 16       	cp	r1, r24
    1730:	08 f0       	brcs	.+2      	; 0x1734 <__stack+0xed5>
    1732:	f0 e0       	ldi	r31, 0x00	; 0
    1734:	d8 2e       	mov	r13, r24
    1736:	de 1a       	sub	r13, r30
    1738:	e1 e0       	ldi	r30, 0x01	; 1
    173a:	8d 15       	cp	r24, r13
    173c:	08 f0       	brcs	.+2      	; 0x1740 <__stack+0xee1>
    173e:	e0 e0       	ldi	r30, 0x00	; 0
    1740:	fe 2b       	or	r31, r30
    1742:	89 2f       	mov	r24, r25
    1744:	81 95       	neg	r24
    1746:	39 2d       	mov	r19, r9
    1748:	a5 01       	movw	r20, r10
    174a:	6a 2f       	mov	r22, r26
    174c:	7c 2d       	mov	r23, r12
    174e:	98 2f       	mov	r25, r24
    1750:	9f 1b       	sub	r25, r31
    1752:	8d 2d       	mov	r24, r13
    1754:	ce 58       	subi	r28, 0x8E	; 142
    1756:	df 4f       	sbci	r29, 0xFF	; 255
    1758:	e2 e1       	ldi	r30, 0x12	; 18
    175a:	0c 94 2e 2c 	jmp	0x585c	; 0x585c <__epilogue_restores__>

0000175e <_fpadd_parts>:
    175e:	a0 e0       	ldi	r26, 0x00	; 0
    1760:	b0 e0       	ldi	r27, 0x00	; 0
    1762:	e5 eb       	ldi	r30, 0xB5	; 181
    1764:	fb e0       	ldi	r31, 0x0B	; 11
    1766:	0c 94 12 2c 	jmp	0x5824	; 0x5824 <__prologue_saves__>
    176a:	dc 01       	movw	r26, r24
    176c:	2b 01       	movw	r4, r22
    176e:	fa 01       	movw	r30, r20
    1770:	9c 91       	ld	r25, X
    1772:	92 30       	cpi	r25, 0x02	; 2
    1774:	08 f4       	brcc	.+2      	; 0x1778 <_fpadd_parts+0x1a>
    1776:	39 c1       	rjmp	.+626    	; 0x19ea <_fpadd_parts+0x28c>
    1778:	eb 01       	movw	r28, r22
    177a:	88 81       	ld	r24, Y
    177c:	82 30       	cpi	r24, 0x02	; 2
    177e:	08 f4       	brcc	.+2      	; 0x1782 <_fpadd_parts+0x24>
    1780:	33 c1       	rjmp	.+614    	; 0x19e8 <_fpadd_parts+0x28a>
    1782:	94 30       	cpi	r25, 0x04	; 4
    1784:	69 f4       	brne	.+26     	; 0x17a0 <_fpadd_parts+0x42>
    1786:	84 30       	cpi	r24, 0x04	; 4
    1788:	09 f0       	breq	.+2      	; 0x178c <_fpadd_parts+0x2e>
    178a:	2f c1       	rjmp	.+606    	; 0x19ea <_fpadd_parts+0x28c>
    178c:	11 96       	adiw	r26, 0x01	; 1
    178e:	9c 91       	ld	r25, X
    1790:	11 97       	sbiw	r26, 0x01	; 1
    1792:	89 81       	ldd	r24, Y+1	; 0x01
    1794:	98 17       	cp	r25, r24
    1796:	09 f4       	brne	.+2      	; 0x179a <_fpadd_parts+0x3c>
    1798:	28 c1       	rjmp	.+592    	; 0x19ea <_fpadd_parts+0x28c>
    179a:	ae e7       	ldi	r26, 0x7E	; 126
    179c:	b0 e0       	ldi	r27, 0x00	; 0
    179e:	25 c1       	rjmp	.+586    	; 0x19ea <_fpadd_parts+0x28c>
    17a0:	84 30       	cpi	r24, 0x04	; 4
    17a2:	09 f4       	brne	.+2      	; 0x17a6 <_fpadd_parts+0x48>
    17a4:	21 c1       	rjmp	.+578    	; 0x19e8 <_fpadd_parts+0x28a>
    17a6:	82 30       	cpi	r24, 0x02	; 2
    17a8:	a9 f4       	brne	.+42     	; 0x17d4 <_fpadd_parts+0x76>
    17aa:	92 30       	cpi	r25, 0x02	; 2
    17ac:	09 f0       	breq	.+2      	; 0x17b0 <_fpadd_parts+0x52>
    17ae:	1d c1       	rjmp	.+570    	; 0x19ea <_fpadd_parts+0x28c>
    17b0:	9a 01       	movw	r18, r20
    17b2:	ad 01       	movw	r20, r26
    17b4:	88 e0       	ldi	r24, 0x08	; 8
    17b6:	ea 01       	movw	r28, r20
    17b8:	09 90       	ld	r0, Y+
    17ba:	ae 01       	movw	r20, r28
    17bc:	e9 01       	movw	r28, r18
    17be:	09 92       	st	Y+, r0
    17c0:	9e 01       	movw	r18, r28
    17c2:	81 50       	subi	r24, 0x01	; 1
    17c4:	c1 f7       	brne	.-16     	; 0x17b6 <_fpadd_parts+0x58>
    17c6:	e2 01       	movw	r28, r4
    17c8:	89 81       	ldd	r24, Y+1	; 0x01
    17ca:	11 96       	adiw	r26, 0x01	; 1
    17cc:	9c 91       	ld	r25, X
    17ce:	89 23       	and	r24, r25
    17d0:	81 83       	std	Z+1, r24	; 0x01
    17d2:	08 c1       	rjmp	.+528    	; 0x19e4 <_fpadd_parts+0x286>
    17d4:	92 30       	cpi	r25, 0x02	; 2
    17d6:	09 f4       	brne	.+2      	; 0x17da <_fpadd_parts+0x7c>
    17d8:	07 c1       	rjmp	.+526    	; 0x19e8 <_fpadd_parts+0x28a>
    17da:	12 96       	adiw	r26, 0x02	; 2
    17dc:	2d 90       	ld	r2, X+
    17de:	3c 90       	ld	r3, X
    17e0:	13 97       	sbiw	r26, 0x03	; 3
    17e2:	eb 01       	movw	r28, r22
    17e4:	8a 81       	ldd	r24, Y+2	; 0x02
    17e6:	9b 81       	ldd	r25, Y+3	; 0x03
    17e8:	14 96       	adiw	r26, 0x04	; 4
    17ea:	ad 90       	ld	r10, X+
    17ec:	bd 90       	ld	r11, X+
    17ee:	cd 90       	ld	r12, X+
    17f0:	dc 90       	ld	r13, X
    17f2:	17 97       	sbiw	r26, 0x07	; 7
    17f4:	ec 80       	ldd	r14, Y+4	; 0x04
    17f6:	fd 80       	ldd	r15, Y+5	; 0x05
    17f8:	0e 81       	ldd	r16, Y+6	; 0x06
    17fa:	1f 81       	ldd	r17, Y+7	; 0x07
    17fc:	91 01       	movw	r18, r2
    17fe:	28 1b       	sub	r18, r24
    1800:	39 0b       	sbc	r19, r25
    1802:	b9 01       	movw	r22, r18
    1804:	37 ff       	sbrs	r19, 7
    1806:	04 c0       	rjmp	.+8      	; 0x1810 <_fpadd_parts+0xb2>
    1808:	66 27       	eor	r22, r22
    180a:	77 27       	eor	r23, r23
    180c:	62 1b       	sub	r22, r18
    180e:	73 0b       	sbc	r23, r19
    1810:	60 32       	cpi	r22, 0x20	; 32
    1812:	71 05       	cpc	r23, r1
    1814:	0c f0       	brlt	.+2      	; 0x1818 <_fpadd_parts+0xba>
    1816:	61 c0       	rjmp	.+194    	; 0x18da <_fpadd_parts+0x17c>
    1818:	12 16       	cp	r1, r18
    181a:	13 06       	cpc	r1, r19
    181c:	6c f5       	brge	.+90     	; 0x1878 <_fpadd_parts+0x11a>
    181e:	37 01       	movw	r6, r14
    1820:	48 01       	movw	r8, r16
    1822:	06 2e       	mov	r0, r22
    1824:	04 c0       	rjmp	.+8      	; 0x182e <_fpadd_parts+0xd0>
    1826:	96 94       	lsr	r9
    1828:	87 94       	ror	r8
    182a:	77 94       	ror	r7
    182c:	67 94       	ror	r6
    182e:	0a 94       	dec	r0
    1830:	d2 f7       	brpl	.-12     	; 0x1826 <_fpadd_parts+0xc8>
    1832:	21 e0       	ldi	r18, 0x01	; 1
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	40 e0       	ldi	r20, 0x00	; 0
    1838:	50 e0       	ldi	r21, 0x00	; 0
    183a:	04 c0       	rjmp	.+8      	; 0x1844 <_fpadd_parts+0xe6>
    183c:	22 0f       	add	r18, r18
    183e:	33 1f       	adc	r19, r19
    1840:	44 1f       	adc	r20, r20
    1842:	55 1f       	adc	r21, r21
    1844:	6a 95       	dec	r22
    1846:	d2 f7       	brpl	.-12     	; 0x183c <_fpadd_parts+0xde>
    1848:	21 50       	subi	r18, 0x01	; 1
    184a:	30 40       	sbci	r19, 0x00	; 0
    184c:	40 40       	sbci	r20, 0x00	; 0
    184e:	50 40       	sbci	r21, 0x00	; 0
    1850:	2e 21       	and	r18, r14
    1852:	3f 21       	and	r19, r15
    1854:	40 23       	and	r20, r16
    1856:	51 23       	and	r21, r17
    1858:	21 15       	cp	r18, r1
    185a:	31 05       	cpc	r19, r1
    185c:	41 05       	cpc	r20, r1
    185e:	51 05       	cpc	r21, r1
    1860:	21 f0       	breq	.+8      	; 0x186a <_fpadd_parts+0x10c>
    1862:	21 e0       	ldi	r18, 0x01	; 1
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	40 e0       	ldi	r20, 0x00	; 0
    1868:	50 e0       	ldi	r21, 0x00	; 0
    186a:	79 01       	movw	r14, r18
    186c:	8a 01       	movw	r16, r20
    186e:	e6 28       	or	r14, r6
    1870:	f7 28       	or	r15, r7
    1872:	08 29       	or	r16, r8
    1874:	19 29       	or	r17, r9
    1876:	3c c0       	rjmp	.+120    	; 0x18f0 <_fpadd_parts+0x192>
    1878:	23 2b       	or	r18, r19
    187a:	d1 f1       	breq	.+116    	; 0x18f0 <_fpadd_parts+0x192>
    187c:	26 0e       	add	r2, r22
    187e:	37 1e       	adc	r3, r23
    1880:	35 01       	movw	r6, r10
    1882:	46 01       	movw	r8, r12
    1884:	06 2e       	mov	r0, r22
    1886:	04 c0       	rjmp	.+8      	; 0x1890 <_fpadd_parts+0x132>
    1888:	96 94       	lsr	r9
    188a:	87 94       	ror	r8
    188c:	77 94       	ror	r7
    188e:	67 94       	ror	r6
    1890:	0a 94       	dec	r0
    1892:	d2 f7       	brpl	.-12     	; 0x1888 <_fpadd_parts+0x12a>
    1894:	21 e0       	ldi	r18, 0x01	; 1
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	40 e0       	ldi	r20, 0x00	; 0
    189a:	50 e0       	ldi	r21, 0x00	; 0
    189c:	04 c0       	rjmp	.+8      	; 0x18a6 <_fpadd_parts+0x148>
    189e:	22 0f       	add	r18, r18
    18a0:	33 1f       	adc	r19, r19
    18a2:	44 1f       	adc	r20, r20
    18a4:	55 1f       	adc	r21, r21
    18a6:	6a 95       	dec	r22
    18a8:	d2 f7       	brpl	.-12     	; 0x189e <_fpadd_parts+0x140>
    18aa:	21 50       	subi	r18, 0x01	; 1
    18ac:	30 40       	sbci	r19, 0x00	; 0
    18ae:	40 40       	sbci	r20, 0x00	; 0
    18b0:	50 40       	sbci	r21, 0x00	; 0
    18b2:	2a 21       	and	r18, r10
    18b4:	3b 21       	and	r19, r11
    18b6:	4c 21       	and	r20, r12
    18b8:	5d 21       	and	r21, r13
    18ba:	21 15       	cp	r18, r1
    18bc:	31 05       	cpc	r19, r1
    18be:	41 05       	cpc	r20, r1
    18c0:	51 05       	cpc	r21, r1
    18c2:	21 f0       	breq	.+8      	; 0x18cc <_fpadd_parts+0x16e>
    18c4:	21 e0       	ldi	r18, 0x01	; 1
    18c6:	30 e0       	ldi	r19, 0x00	; 0
    18c8:	40 e0       	ldi	r20, 0x00	; 0
    18ca:	50 e0       	ldi	r21, 0x00	; 0
    18cc:	59 01       	movw	r10, r18
    18ce:	6a 01       	movw	r12, r20
    18d0:	a6 28       	or	r10, r6
    18d2:	b7 28       	or	r11, r7
    18d4:	c8 28       	or	r12, r8
    18d6:	d9 28       	or	r13, r9
    18d8:	0b c0       	rjmp	.+22     	; 0x18f0 <_fpadd_parts+0x192>
    18da:	82 15       	cp	r24, r2
    18dc:	93 05       	cpc	r25, r3
    18de:	2c f0       	brlt	.+10     	; 0x18ea <_fpadd_parts+0x18c>
    18e0:	1c 01       	movw	r2, r24
    18e2:	aa 24       	eor	r10, r10
    18e4:	bb 24       	eor	r11, r11
    18e6:	65 01       	movw	r12, r10
    18e8:	03 c0       	rjmp	.+6      	; 0x18f0 <_fpadd_parts+0x192>
    18ea:	ee 24       	eor	r14, r14
    18ec:	ff 24       	eor	r15, r15
    18ee:	87 01       	movw	r16, r14
    18f0:	11 96       	adiw	r26, 0x01	; 1
    18f2:	9c 91       	ld	r25, X
    18f4:	d2 01       	movw	r26, r4
    18f6:	11 96       	adiw	r26, 0x01	; 1
    18f8:	8c 91       	ld	r24, X
    18fa:	98 17       	cp	r25, r24
    18fc:	09 f4       	brne	.+2      	; 0x1900 <_fpadd_parts+0x1a2>
    18fe:	45 c0       	rjmp	.+138    	; 0x198a <_fpadd_parts+0x22c>
    1900:	99 23       	and	r25, r25
    1902:	39 f0       	breq	.+14     	; 0x1912 <_fpadd_parts+0x1b4>
    1904:	a8 01       	movw	r20, r16
    1906:	97 01       	movw	r18, r14
    1908:	2a 19       	sub	r18, r10
    190a:	3b 09       	sbc	r19, r11
    190c:	4c 09       	sbc	r20, r12
    190e:	5d 09       	sbc	r21, r13
    1910:	06 c0       	rjmp	.+12     	; 0x191e <_fpadd_parts+0x1c0>
    1912:	a6 01       	movw	r20, r12
    1914:	95 01       	movw	r18, r10
    1916:	2e 19       	sub	r18, r14
    1918:	3f 09       	sbc	r19, r15
    191a:	40 0b       	sbc	r20, r16
    191c:	51 0b       	sbc	r21, r17
    191e:	57 fd       	sbrc	r21, 7
    1920:	08 c0       	rjmp	.+16     	; 0x1932 <_fpadd_parts+0x1d4>
    1922:	11 82       	std	Z+1, r1	; 0x01
    1924:	33 82       	std	Z+3, r3	; 0x03
    1926:	22 82       	std	Z+2, r2	; 0x02
    1928:	24 83       	std	Z+4, r18	; 0x04
    192a:	35 83       	std	Z+5, r19	; 0x05
    192c:	46 83       	std	Z+6, r20	; 0x06
    192e:	57 83       	std	Z+7, r21	; 0x07
    1930:	1d c0       	rjmp	.+58     	; 0x196c <_fpadd_parts+0x20e>
    1932:	81 e0       	ldi	r24, 0x01	; 1
    1934:	81 83       	std	Z+1, r24	; 0x01
    1936:	33 82       	std	Z+3, r3	; 0x03
    1938:	22 82       	std	Z+2, r2	; 0x02
    193a:	88 27       	eor	r24, r24
    193c:	99 27       	eor	r25, r25
    193e:	dc 01       	movw	r26, r24
    1940:	82 1b       	sub	r24, r18
    1942:	93 0b       	sbc	r25, r19
    1944:	a4 0b       	sbc	r26, r20
    1946:	b5 0b       	sbc	r27, r21
    1948:	84 83       	std	Z+4, r24	; 0x04
    194a:	95 83       	std	Z+5, r25	; 0x05
    194c:	a6 83       	std	Z+6, r26	; 0x06
    194e:	b7 83       	std	Z+7, r27	; 0x07
    1950:	0d c0       	rjmp	.+26     	; 0x196c <_fpadd_parts+0x20e>
    1952:	22 0f       	add	r18, r18
    1954:	33 1f       	adc	r19, r19
    1956:	44 1f       	adc	r20, r20
    1958:	55 1f       	adc	r21, r21
    195a:	24 83       	std	Z+4, r18	; 0x04
    195c:	35 83       	std	Z+5, r19	; 0x05
    195e:	46 83       	std	Z+6, r20	; 0x06
    1960:	57 83       	std	Z+7, r21	; 0x07
    1962:	82 81       	ldd	r24, Z+2	; 0x02
    1964:	93 81       	ldd	r25, Z+3	; 0x03
    1966:	01 97       	sbiw	r24, 0x01	; 1
    1968:	93 83       	std	Z+3, r25	; 0x03
    196a:	82 83       	std	Z+2, r24	; 0x02
    196c:	24 81       	ldd	r18, Z+4	; 0x04
    196e:	35 81       	ldd	r19, Z+5	; 0x05
    1970:	46 81       	ldd	r20, Z+6	; 0x06
    1972:	57 81       	ldd	r21, Z+7	; 0x07
    1974:	da 01       	movw	r26, r20
    1976:	c9 01       	movw	r24, r18
    1978:	01 97       	sbiw	r24, 0x01	; 1
    197a:	a1 09       	sbc	r26, r1
    197c:	b1 09       	sbc	r27, r1
    197e:	8f 5f       	subi	r24, 0xFF	; 255
    1980:	9f 4f       	sbci	r25, 0xFF	; 255
    1982:	af 4f       	sbci	r26, 0xFF	; 255
    1984:	bf 43       	sbci	r27, 0x3F	; 63
    1986:	28 f3       	brcs	.-54     	; 0x1952 <_fpadd_parts+0x1f4>
    1988:	0b c0       	rjmp	.+22     	; 0x19a0 <_fpadd_parts+0x242>
    198a:	91 83       	std	Z+1, r25	; 0x01
    198c:	33 82       	std	Z+3, r3	; 0x03
    198e:	22 82       	std	Z+2, r2	; 0x02
    1990:	ea 0c       	add	r14, r10
    1992:	fb 1c       	adc	r15, r11
    1994:	0c 1d       	adc	r16, r12
    1996:	1d 1d       	adc	r17, r13
    1998:	e4 82       	std	Z+4, r14	; 0x04
    199a:	f5 82       	std	Z+5, r15	; 0x05
    199c:	06 83       	std	Z+6, r16	; 0x06
    199e:	17 83       	std	Z+7, r17	; 0x07
    19a0:	83 e0       	ldi	r24, 0x03	; 3
    19a2:	80 83       	st	Z, r24
    19a4:	24 81       	ldd	r18, Z+4	; 0x04
    19a6:	35 81       	ldd	r19, Z+5	; 0x05
    19a8:	46 81       	ldd	r20, Z+6	; 0x06
    19aa:	57 81       	ldd	r21, Z+7	; 0x07
    19ac:	57 ff       	sbrs	r21, 7
    19ae:	1a c0       	rjmp	.+52     	; 0x19e4 <_fpadd_parts+0x286>
    19b0:	c9 01       	movw	r24, r18
    19b2:	aa 27       	eor	r26, r26
    19b4:	97 fd       	sbrc	r25, 7
    19b6:	a0 95       	com	r26
    19b8:	ba 2f       	mov	r27, r26
    19ba:	81 70       	andi	r24, 0x01	; 1
    19bc:	90 70       	andi	r25, 0x00	; 0
    19be:	a0 70       	andi	r26, 0x00	; 0
    19c0:	b0 70       	andi	r27, 0x00	; 0
    19c2:	56 95       	lsr	r21
    19c4:	47 95       	ror	r20
    19c6:	37 95       	ror	r19
    19c8:	27 95       	ror	r18
    19ca:	82 2b       	or	r24, r18
    19cc:	93 2b       	or	r25, r19
    19ce:	a4 2b       	or	r26, r20
    19d0:	b5 2b       	or	r27, r21
    19d2:	84 83       	std	Z+4, r24	; 0x04
    19d4:	95 83       	std	Z+5, r25	; 0x05
    19d6:	a6 83       	std	Z+6, r26	; 0x06
    19d8:	b7 83       	std	Z+7, r27	; 0x07
    19da:	82 81       	ldd	r24, Z+2	; 0x02
    19dc:	93 81       	ldd	r25, Z+3	; 0x03
    19de:	01 96       	adiw	r24, 0x01	; 1
    19e0:	93 83       	std	Z+3, r25	; 0x03
    19e2:	82 83       	std	Z+2, r24	; 0x02
    19e4:	df 01       	movw	r26, r30
    19e6:	01 c0       	rjmp	.+2      	; 0x19ea <_fpadd_parts+0x28c>
    19e8:	d2 01       	movw	r26, r4
    19ea:	cd 01       	movw	r24, r26
    19ec:	cd b7       	in	r28, 0x3d	; 61
    19ee:	de b7       	in	r29, 0x3e	; 62
    19f0:	e2 e1       	ldi	r30, 0x12	; 18
    19f2:	0c 94 2e 2c 	jmp	0x585c	; 0x585c <__epilogue_restores__>

000019f6 <__subsf3>:
    19f6:	a0 e2       	ldi	r26, 0x20	; 32
    19f8:	b0 e0       	ldi	r27, 0x00	; 0
    19fa:	e1 e0       	ldi	r30, 0x01	; 1
    19fc:	fd e0       	ldi	r31, 0x0D	; 13
    19fe:	0c 94 1e 2c 	jmp	0x583c	; 0x583c <__prologue_saves__+0x18>
    1a02:	69 83       	std	Y+1, r22	; 0x01
    1a04:	7a 83       	std	Y+2, r23	; 0x02
    1a06:	8b 83       	std	Y+3, r24	; 0x03
    1a08:	9c 83       	std	Y+4, r25	; 0x04
    1a0a:	2d 83       	std	Y+5, r18	; 0x05
    1a0c:	3e 83       	std	Y+6, r19	; 0x06
    1a0e:	4f 83       	std	Y+7, r20	; 0x07
    1a10:	58 87       	std	Y+8, r21	; 0x08
    1a12:	e9 e0       	ldi	r30, 0x09	; 9
    1a14:	ee 2e       	mov	r14, r30
    1a16:	f1 2c       	mov	r15, r1
    1a18:	ec 0e       	add	r14, r28
    1a1a:	fd 1e       	adc	r15, r29
    1a1c:	ce 01       	movw	r24, r28
    1a1e:	01 96       	adiw	r24, 0x01	; 1
    1a20:	b7 01       	movw	r22, r14
    1a22:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1a26:	8e 01       	movw	r16, r28
    1a28:	0f 5e       	subi	r16, 0xEF	; 239
    1a2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2c:	ce 01       	movw	r24, r28
    1a2e:	05 96       	adiw	r24, 0x05	; 5
    1a30:	b8 01       	movw	r22, r16
    1a32:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1a36:	8a 89       	ldd	r24, Y+18	; 0x12
    1a38:	91 e0       	ldi	r25, 0x01	; 1
    1a3a:	89 27       	eor	r24, r25
    1a3c:	8a 8b       	std	Y+18, r24	; 0x12
    1a3e:	c7 01       	movw	r24, r14
    1a40:	b8 01       	movw	r22, r16
    1a42:	ae 01       	movw	r20, r28
    1a44:	47 5e       	subi	r20, 0xE7	; 231
    1a46:	5f 4f       	sbci	r21, 0xFF	; 255
    1a48:	0e 94 af 0b 	call	0x175e	; 0x175e <_fpadd_parts>
    1a4c:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    1a50:	a0 96       	adiw	r28, 0x20	; 32
    1a52:	e6 e0       	ldi	r30, 0x06	; 6
    1a54:	0c 94 3a 2c 	jmp	0x5874	; 0x5874 <__epilogue_restores__+0x18>

00001a58 <__addsf3>:
    1a58:	a0 e2       	ldi	r26, 0x20	; 32
    1a5a:	b0 e0       	ldi	r27, 0x00	; 0
    1a5c:	e2 e3       	ldi	r30, 0x32	; 50
    1a5e:	fd e0       	ldi	r31, 0x0D	; 13
    1a60:	0c 94 1e 2c 	jmp	0x583c	; 0x583c <__prologue_saves__+0x18>
    1a64:	69 83       	std	Y+1, r22	; 0x01
    1a66:	7a 83       	std	Y+2, r23	; 0x02
    1a68:	8b 83       	std	Y+3, r24	; 0x03
    1a6a:	9c 83       	std	Y+4, r25	; 0x04
    1a6c:	2d 83       	std	Y+5, r18	; 0x05
    1a6e:	3e 83       	std	Y+6, r19	; 0x06
    1a70:	4f 83       	std	Y+7, r20	; 0x07
    1a72:	58 87       	std	Y+8, r21	; 0x08
    1a74:	f9 e0       	ldi	r31, 0x09	; 9
    1a76:	ef 2e       	mov	r14, r31
    1a78:	f1 2c       	mov	r15, r1
    1a7a:	ec 0e       	add	r14, r28
    1a7c:	fd 1e       	adc	r15, r29
    1a7e:	ce 01       	movw	r24, r28
    1a80:	01 96       	adiw	r24, 0x01	; 1
    1a82:	b7 01       	movw	r22, r14
    1a84:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1a88:	8e 01       	movw	r16, r28
    1a8a:	0f 5e       	subi	r16, 0xEF	; 239
    1a8c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a8e:	ce 01       	movw	r24, r28
    1a90:	05 96       	adiw	r24, 0x05	; 5
    1a92:	b8 01       	movw	r22, r16
    1a94:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1a98:	c7 01       	movw	r24, r14
    1a9a:	b8 01       	movw	r22, r16
    1a9c:	ae 01       	movw	r20, r28
    1a9e:	47 5e       	subi	r20, 0xE7	; 231
    1aa0:	5f 4f       	sbci	r21, 0xFF	; 255
    1aa2:	0e 94 af 0b 	call	0x175e	; 0x175e <_fpadd_parts>
    1aa6:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    1aaa:	a0 96       	adiw	r28, 0x20	; 32
    1aac:	e6 e0       	ldi	r30, 0x06	; 6
    1aae:	0c 94 3a 2c 	jmp	0x5874	; 0x5874 <__epilogue_restores__+0x18>

00001ab2 <__mulsf3>:
    1ab2:	a0 e2       	ldi	r26, 0x20	; 32
    1ab4:	b0 e0       	ldi	r27, 0x00	; 0
    1ab6:	ef e5       	ldi	r30, 0x5F	; 95
    1ab8:	fd e0       	ldi	r31, 0x0D	; 13
    1aba:	0c 94 12 2c 	jmp	0x5824	; 0x5824 <__prologue_saves__>
    1abe:	69 83       	std	Y+1, r22	; 0x01
    1ac0:	7a 83       	std	Y+2, r23	; 0x02
    1ac2:	8b 83       	std	Y+3, r24	; 0x03
    1ac4:	9c 83       	std	Y+4, r25	; 0x04
    1ac6:	2d 83       	std	Y+5, r18	; 0x05
    1ac8:	3e 83       	std	Y+6, r19	; 0x06
    1aca:	4f 83       	std	Y+7, r20	; 0x07
    1acc:	58 87       	std	Y+8, r21	; 0x08
    1ace:	ce 01       	movw	r24, r28
    1ad0:	01 96       	adiw	r24, 0x01	; 1
    1ad2:	be 01       	movw	r22, r28
    1ad4:	67 5f       	subi	r22, 0xF7	; 247
    1ad6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ad8:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1adc:	ce 01       	movw	r24, r28
    1ade:	05 96       	adiw	r24, 0x05	; 5
    1ae0:	be 01       	movw	r22, r28
    1ae2:	6f 5e       	subi	r22, 0xEF	; 239
    1ae4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ae6:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1aea:	99 85       	ldd	r25, Y+9	; 0x09
    1aec:	92 30       	cpi	r25, 0x02	; 2
    1aee:	88 f0       	brcs	.+34     	; 0x1b12 <__mulsf3+0x60>
    1af0:	89 89       	ldd	r24, Y+17	; 0x11
    1af2:	82 30       	cpi	r24, 0x02	; 2
    1af4:	c8 f0       	brcs	.+50     	; 0x1b28 <__mulsf3+0x76>
    1af6:	94 30       	cpi	r25, 0x04	; 4
    1af8:	19 f4       	brne	.+6      	; 0x1b00 <__mulsf3+0x4e>
    1afa:	82 30       	cpi	r24, 0x02	; 2
    1afc:	51 f4       	brne	.+20     	; 0x1b12 <__mulsf3+0x60>
    1afe:	04 c0       	rjmp	.+8      	; 0x1b08 <__mulsf3+0x56>
    1b00:	84 30       	cpi	r24, 0x04	; 4
    1b02:	29 f4       	brne	.+10     	; 0x1b0e <__mulsf3+0x5c>
    1b04:	92 30       	cpi	r25, 0x02	; 2
    1b06:	81 f4       	brne	.+32     	; 0x1b28 <__mulsf3+0x76>
    1b08:	8e e7       	ldi	r24, 0x7E	; 126
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	c6 c0       	rjmp	.+396    	; 0x1c9a <__mulsf3+0x1e8>
    1b0e:	92 30       	cpi	r25, 0x02	; 2
    1b10:	49 f4       	brne	.+18     	; 0x1b24 <__mulsf3+0x72>
    1b12:	20 e0       	ldi	r18, 0x00	; 0
    1b14:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b16:	8a 89       	ldd	r24, Y+18	; 0x12
    1b18:	98 13       	cpse	r25, r24
    1b1a:	21 e0       	ldi	r18, 0x01	; 1
    1b1c:	2a 87       	std	Y+10, r18	; 0x0a
    1b1e:	ce 01       	movw	r24, r28
    1b20:	09 96       	adiw	r24, 0x09	; 9
    1b22:	bb c0       	rjmp	.+374    	; 0x1c9a <__mulsf3+0x1e8>
    1b24:	82 30       	cpi	r24, 0x02	; 2
    1b26:	49 f4       	brne	.+18     	; 0x1b3a <__mulsf3+0x88>
    1b28:	20 e0       	ldi	r18, 0x00	; 0
    1b2a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b2c:	8a 89       	ldd	r24, Y+18	; 0x12
    1b2e:	98 13       	cpse	r25, r24
    1b30:	21 e0       	ldi	r18, 0x01	; 1
    1b32:	2a 8b       	std	Y+18, r18	; 0x12
    1b34:	ce 01       	movw	r24, r28
    1b36:	41 96       	adiw	r24, 0x11	; 17
    1b38:	b0 c0       	rjmp	.+352    	; 0x1c9a <__mulsf3+0x1e8>
    1b3a:	2d 84       	ldd	r2, Y+13	; 0x0d
    1b3c:	3e 84       	ldd	r3, Y+14	; 0x0e
    1b3e:	4f 84       	ldd	r4, Y+15	; 0x0f
    1b40:	58 88       	ldd	r5, Y+16	; 0x10
    1b42:	6d 88       	ldd	r6, Y+21	; 0x15
    1b44:	7e 88       	ldd	r7, Y+22	; 0x16
    1b46:	8f 88       	ldd	r8, Y+23	; 0x17
    1b48:	98 8c       	ldd	r9, Y+24	; 0x18
    1b4a:	ee 24       	eor	r14, r14
    1b4c:	ff 24       	eor	r15, r15
    1b4e:	87 01       	movw	r16, r14
    1b50:	aa 24       	eor	r10, r10
    1b52:	bb 24       	eor	r11, r11
    1b54:	65 01       	movw	r12, r10
    1b56:	40 e0       	ldi	r20, 0x00	; 0
    1b58:	50 e0       	ldi	r21, 0x00	; 0
    1b5a:	60 e0       	ldi	r22, 0x00	; 0
    1b5c:	70 e0       	ldi	r23, 0x00	; 0
    1b5e:	e0 e0       	ldi	r30, 0x00	; 0
    1b60:	f0 e0       	ldi	r31, 0x00	; 0
    1b62:	c1 01       	movw	r24, r2
    1b64:	81 70       	andi	r24, 0x01	; 1
    1b66:	90 70       	andi	r25, 0x00	; 0
    1b68:	89 2b       	or	r24, r25
    1b6a:	e9 f0       	breq	.+58     	; 0x1ba6 <__mulsf3+0xf4>
    1b6c:	e6 0c       	add	r14, r6
    1b6e:	f7 1c       	adc	r15, r7
    1b70:	08 1d       	adc	r16, r8
    1b72:	19 1d       	adc	r17, r9
    1b74:	9a 01       	movw	r18, r20
    1b76:	ab 01       	movw	r20, r22
    1b78:	2a 0d       	add	r18, r10
    1b7a:	3b 1d       	adc	r19, r11
    1b7c:	4c 1d       	adc	r20, r12
    1b7e:	5d 1d       	adc	r21, r13
    1b80:	80 e0       	ldi	r24, 0x00	; 0
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	a0 e0       	ldi	r26, 0x00	; 0
    1b86:	b0 e0       	ldi	r27, 0x00	; 0
    1b88:	e6 14       	cp	r14, r6
    1b8a:	f7 04       	cpc	r15, r7
    1b8c:	08 05       	cpc	r16, r8
    1b8e:	19 05       	cpc	r17, r9
    1b90:	20 f4       	brcc	.+8      	; 0x1b9a <__mulsf3+0xe8>
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	a0 e0       	ldi	r26, 0x00	; 0
    1b98:	b0 e0       	ldi	r27, 0x00	; 0
    1b9a:	ba 01       	movw	r22, r20
    1b9c:	a9 01       	movw	r20, r18
    1b9e:	48 0f       	add	r20, r24
    1ba0:	59 1f       	adc	r21, r25
    1ba2:	6a 1f       	adc	r22, r26
    1ba4:	7b 1f       	adc	r23, r27
    1ba6:	aa 0c       	add	r10, r10
    1ba8:	bb 1c       	adc	r11, r11
    1baa:	cc 1c       	adc	r12, r12
    1bac:	dd 1c       	adc	r13, r13
    1bae:	97 fe       	sbrs	r9, 7
    1bb0:	08 c0       	rjmp	.+16     	; 0x1bc2 <__mulsf3+0x110>
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	a0 e0       	ldi	r26, 0x00	; 0
    1bb8:	b0 e0       	ldi	r27, 0x00	; 0
    1bba:	a8 2a       	or	r10, r24
    1bbc:	b9 2a       	or	r11, r25
    1bbe:	ca 2a       	or	r12, r26
    1bc0:	db 2a       	or	r13, r27
    1bc2:	31 96       	adiw	r30, 0x01	; 1
    1bc4:	e0 32       	cpi	r30, 0x20	; 32
    1bc6:	f1 05       	cpc	r31, r1
    1bc8:	49 f0       	breq	.+18     	; 0x1bdc <__mulsf3+0x12a>
    1bca:	66 0c       	add	r6, r6
    1bcc:	77 1c       	adc	r7, r7
    1bce:	88 1c       	adc	r8, r8
    1bd0:	99 1c       	adc	r9, r9
    1bd2:	56 94       	lsr	r5
    1bd4:	47 94       	ror	r4
    1bd6:	37 94       	ror	r3
    1bd8:	27 94       	ror	r2
    1bda:	c3 cf       	rjmp	.-122    	; 0x1b62 <__mulsf3+0xb0>
    1bdc:	fa 85       	ldd	r31, Y+10	; 0x0a
    1bde:	ea 89       	ldd	r30, Y+18	; 0x12
    1be0:	2b 89       	ldd	r18, Y+19	; 0x13
    1be2:	3c 89       	ldd	r19, Y+20	; 0x14
    1be4:	8b 85       	ldd	r24, Y+11	; 0x0b
    1be6:	9c 85       	ldd	r25, Y+12	; 0x0c
    1be8:	28 0f       	add	r18, r24
    1bea:	39 1f       	adc	r19, r25
    1bec:	2e 5f       	subi	r18, 0xFE	; 254
    1bee:	3f 4f       	sbci	r19, 0xFF	; 255
    1bf0:	17 c0       	rjmp	.+46     	; 0x1c20 <__mulsf3+0x16e>
    1bf2:	ca 01       	movw	r24, r20
    1bf4:	81 70       	andi	r24, 0x01	; 1
    1bf6:	90 70       	andi	r25, 0x00	; 0
    1bf8:	89 2b       	or	r24, r25
    1bfa:	61 f0       	breq	.+24     	; 0x1c14 <__mulsf3+0x162>
    1bfc:	16 95       	lsr	r17
    1bfe:	07 95       	ror	r16
    1c00:	f7 94       	ror	r15
    1c02:	e7 94       	ror	r14
    1c04:	80 e0       	ldi	r24, 0x00	; 0
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	a0 e0       	ldi	r26, 0x00	; 0
    1c0a:	b0 e8       	ldi	r27, 0x80	; 128
    1c0c:	e8 2a       	or	r14, r24
    1c0e:	f9 2a       	or	r15, r25
    1c10:	0a 2b       	or	r16, r26
    1c12:	1b 2b       	or	r17, r27
    1c14:	76 95       	lsr	r23
    1c16:	67 95       	ror	r22
    1c18:	57 95       	ror	r21
    1c1a:	47 95       	ror	r20
    1c1c:	2f 5f       	subi	r18, 0xFF	; 255
    1c1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c20:	77 fd       	sbrc	r23, 7
    1c22:	e7 cf       	rjmp	.-50     	; 0x1bf2 <__mulsf3+0x140>
    1c24:	0c c0       	rjmp	.+24     	; 0x1c3e <__mulsf3+0x18c>
    1c26:	44 0f       	add	r20, r20
    1c28:	55 1f       	adc	r21, r21
    1c2a:	66 1f       	adc	r22, r22
    1c2c:	77 1f       	adc	r23, r23
    1c2e:	17 fd       	sbrc	r17, 7
    1c30:	41 60       	ori	r20, 0x01	; 1
    1c32:	ee 0c       	add	r14, r14
    1c34:	ff 1c       	adc	r15, r15
    1c36:	00 1f       	adc	r16, r16
    1c38:	11 1f       	adc	r17, r17
    1c3a:	21 50       	subi	r18, 0x01	; 1
    1c3c:	30 40       	sbci	r19, 0x00	; 0
    1c3e:	40 30       	cpi	r20, 0x00	; 0
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	59 07       	cpc	r21, r25
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	69 07       	cpc	r22, r25
    1c48:	90 e4       	ldi	r25, 0x40	; 64
    1c4a:	79 07       	cpc	r23, r25
    1c4c:	60 f3       	brcs	.-40     	; 0x1c26 <__mulsf3+0x174>
    1c4e:	2b 8f       	std	Y+27, r18	; 0x1b
    1c50:	3c 8f       	std	Y+28, r19	; 0x1c
    1c52:	db 01       	movw	r26, r22
    1c54:	ca 01       	movw	r24, r20
    1c56:	8f 77       	andi	r24, 0x7F	; 127
    1c58:	90 70       	andi	r25, 0x00	; 0
    1c5a:	a0 70       	andi	r26, 0x00	; 0
    1c5c:	b0 70       	andi	r27, 0x00	; 0
    1c5e:	80 34       	cpi	r24, 0x40	; 64
    1c60:	91 05       	cpc	r25, r1
    1c62:	a1 05       	cpc	r26, r1
    1c64:	b1 05       	cpc	r27, r1
    1c66:	61 f4       	brne	.+24     	; 0x1c80 <__mulsf3+0x1ce>
    1c68:	47 fd       	sbrc	r20, 7
    1c6a:	0a c0       	rjmp	.+20     	; 0x1c80 <__mulsf3+0x1ce>
    1c6c:	e1 14       	cp	r14, r1
    1c6e:	f1 04       	cpc	r15, r1
    1c70:	01 05       	cpc	r16, r1
    1c72:	11 05       	cpc	r17, r1
    1c74:	29 f0       	breq	.+10     	; 0x1c80 <__mulsf3+0x1ce>
    1c76:	40 5c       	subi	r20, 0xC0	; 192
    1c78:	5f 4f       	sbci	r21, 0xFF	; 255
    1c7a:	6f 4f       	sbci	r22, 0xFF	; 255
    1c7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c7e:	40 78       	andi	r20, 0x80	; 128
    1c80:	1a 8e       	std	Y+26, r1	; 0x1a
    1c82:	fe 17       	cp	r31, r30
    1c84:	11 f0       	breq	.+4      	; 0x1c8a <__mulsf3+0x1d8>
    1c86:	81 e0       	ldi	r24, 0x01	; 1
    1c88:	8a 8f       	std	Y+26, r24	; 0x1a
    1c8a:	4d 8f       	std	Y+29, r20	; 0x1d
    1c8c:	5e 8f       	std	Y+30, r21	; 0x1e
    1c8e:	6f 8f       	std	Y+31, r22	; 0x1f
    1c90:	78 a3       	std	Y+32, r23	; 0x20
    1c92:	83 e0       	ldi	r24, 0x03	; 3
    1c94:	89 8f       	std	Y+25, r24	; 0x19
    1c96:	ce 01       	movw	r24, r28
    1c98:	49 96       	adiw	r24, 0x19	; 25
    1c9a:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    1c9e:	a0 96       	adiw	r28, 0x20	; 32
    1ca0:	e2 e1       	ldi	r30, 0x12	; 18
    1ca2:	0c 94 2e 2c 	jmp	0x585c	; 0x585c <__epilogue_restores__>

00001ca6 <__divsf3>:
    1ca6:	a8 e1       	ldi	r26, 0x18	; 24
    1ca8:	b0 e0       	ldi	r27, 0x00	; 0
    1caa:	e9 e5       	ldi	r30, 0x59	; 89
    1cac:	fe e0       	ldi	r31, 0x0E	; 14
    1cae:	0c 94 1a 2c 	jmp	0x5834	; 0x5834 <__prologue_saves__+0x10>
    1cb2:	69 83       	std	Y+1, r22	; 0x01
    1cb4:	7a 83       	std	Y+2, r23	; 0x02
    1cb6:	8b 83       	std	Y+3, r24	; 0x03
    1cb8:	9c 83       	std	Y+4, r25	; 0x04
    1cba:	2d 83       	std	Y+5, r18	; 0x05
    1cbc:	3e 83       	std	Y+6, r19	; 0x06
    1cbe:	4f 83       	std	Y+7, r20	; 0x07
    1cc0:	58 87       	std	Y+8, r21	; 0x08
    1cc2:	b9 e0       	ldi	r27, 0x09	; 9
    1cc4:	eb 2e       	mov	r14, r27
    1cc6:	f1 2c       	mov	r15, r1
    1cc8:	ec 0e       	add	r14, r28
    1cca:	fd 1e       	adc	r15, r29
    1ccc:	ce 01       	movw	r24, r28
    1cce:	01 96       	adiw	r24, 0x01	; 1
    1cd0:	b7 01       	movw	r22, r14
    1cd2:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1cd6:	8e 01       	movw	r16, r28
    1cd8:	0f 5e       	subi	r16, 0xEF	; 239
    1cda:	1f 4f       	sbci	r17, 0xFF	; 255
    1cdc:	ce 01       	movw	r24, r28
    1cde:	05 96       	adiw	r24, 0x05	; 5
    1ce0:	b8 01       	movw	r22, r16
    1ce2:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1ce6:	29 85       	ldd	r18, Y+9	; 0x09
    1ce8:	22 30       	cpi	r18, 0x02	; 2
    1cea:	08 f4       	brcc	.+2      	; 0x1cee <__divsf3+0x48>
    1cec:	7e c0       	rjmp	.+252    	; 0x1dea <__divsf3+0x144>
    1cee:	39 89       	ldd	r19, Y+17	; 0x11
    1cf0:	32 30       	cpi	r19, 0x02	; 2
    1cf2:	10 f4       	brcc	.+4      	; 0x1cf8 <__divsf3+0x52>
    1cf4:	b8 01       	movw	r22, r16
    1cf6:	7c c0       	rjmp	.+248    	; 0x1df0 <__divsf3+0x14a>
    1cf8:	8a 85       	ldd	r24, Y+10	; 0x0a
    1cfa:	9a 89       	ldd	r25, Y+18	; 0x12
    1cfc:	89 27       	eor	r24, r25
    1cfe:	8a 87       	std	Y+10, r24	; 0x0a
    1d00:	24 30       	cpi	r18, 0x04	; 4
    1d02:	11 f0       	breq	.+4      	; 0x1d08 <__divsf3+0x62>
    1d04:	22 30       	cpi	r18, 0x02	; 2
    1d06:	31 f4       	brne	.+12     	; 0x1d14 <__divsf3+0x6e>
    1d08:	23 17       	cp	r18, r19
    1d0a:	09 f0       	breq	.+2      	; 0x1d0e <__divsf3+0x68>
    1d0c:	6e c0       	rjmp	.+220    	; 0x1dea <__divsf3+0x144>
    1d0e:	6e e7       	ldi	r22, 0x7E	; 126
    1d10:	70 e0       	ldi	r23, 0x00	; 0
    1d12:	6e c0       	rjmp	.+220    	; 0x1df0 <__divsf3+0x14a>
    1d14:	34 30       	cpi	r19, 0x04	; 4
    1d16:	39 f4       	brne	.+14     	; 0x1d26 <__divsf3+0x80>
    1d18:	1d 86       	std	Y+13, r1	; 0x0d
    1d1a:	1e 86       	std	Y+14, r1	; 0x0e
    1d1c:	1f 86       	std	Y+15, r1	; 0x0f
    1d1e:	18 8a       	std	Y+16, r1	; 0x10
    1d20:	1c 86       	std	Y+12, r1	; 0x0c
    1d22:	1b 86       	std	Y+11, r1	; 0x0b
    1d24:	04 c0       	rjmp	.+8      	; 0x1d2e <__divsf3+0x88>
    1d26:	32 30       	cpi	r19, 0x02	; 2
    1d28:	21 f4       	brne	.+8      	; 0x1d32 <__divsf3+0x8c>
    1d2a:	84 e0       	ldi	r24, 0x04	; 4
    1d2c:	89 87       	std	Y+9, r24	; 0x09
    1d2e:	b7 01       	movw	r22, r14
    1d30:	5f c0       	rjmp	.+190    	; 0x1df0 <__divsf3+0x14a>
    1d32:	2b 85       	ldd	r18, Y+11	; 0x0b
    1d34:	3c 85       	ldd	r19, Y+12	; 0x0c
    1d36:	8b 89       	ldd	r24, Y+19	; 0x13
    1d38:	9c 89       	ldd	r25, Y+20	; 0x14
    1d3a:	28 1b       	sub	r18, r24
    1d3c:	39 0b       	sbc	r19, r25
    1d3e:	3c 87       	std	Y+12, r19	; 0x0c
    1d40:	2b 87       	std	Y+11, r18	; 0x0b
    1d42:	ed 84       	ldd	r14, Y+13	; 0x0d
    1d44:	fe 84       	ldd	r15, Y+14	; 0x0e
    1d46:	0f 85       	ldd	r16, Y+15	; 0x0f
    1d48:	18 89       	ldd	r17, Y+16	; 0x10
    1d4a:	ad 88       	ldd	r10, Y+21	; 0x15
    1d4c:	be 88       	ldd	r11, Y+22	; 0x16
    1d4e:	cf 88       	ldd	r12, Y+23	; 0x17
    1d50:	d8 8c       	ldd	r13, Y+24	; 0x18
    1d52:	ea 14       	cp	r14, r10
    1d54:	fb 04       	cpc	r15, r11
    1d56:	0c 05       	cpc	r16, r12
    1d58:	1d 05       	cpc	r17, r13
    1d5a:	40 f4       	brcc	.+16     	; 0x1d6c <__divsf3+0xc6>
    1d5c:	ee 0c       	add	r14, r14
    1d5e:	ff 1c       	adc	r15, r15
    1d60:	00 1f       	adc	r16, r16
    1d62:	11 1f       	adc	r17, r17
    1d64:	21 50       	subi	r18, 0x01	; 1
    1d66:	30 40       	sbci	r19, 0x00	; 0
    1d68:	3c 87       	std	Y+12, r19	; 0x0c
    1d6a:	2b 87       	std	Y+11, r18	; 0x0b
    1d6c:	20 e0       	ldi	r18, 0x00	; 0
    1d6e:	30 e0       	ldi	r19, 0x00	; 0
    1d70:	40 e0       	ldi	r20, 0x00	; 0
    1d72:	50 e0       	ldi	r21, 0x00	; 0
    1d74:	80 e0       	ldi	r24, 0x00	; 0
    1d76:	90 e0       	ldi	r25, 0x00	; 0
    1d78:	a0 e0       	ldi	r26, 0x00	; 0
    1d7a:	b0 e4       	ldi	r27, 0x40	; 64
    1d7c:	60 e0       	ldi	r22, 0x00	; 0
    1d7e:	70 e0       	ldi	r23, 0x00	; 0
    1d80:	ea 14       	cp	r14, r10
    1d82:	fb 04       	cpc	r15, r11
    1d84:	0c 05       	cpc	r16, r12
    1d86:	1d 05       	cpc	r17, r13
    1d88:	40 f0       	brcs	.+16     	; 0x1d9a <__divsf3+0xf4>
    1d8a:	28 2b       	or	r18, r24
    1d8c:	39 2b       	or	r19, r25
    1d8e:	4a 2b       	or	r20, r26
    1d90:	5b 2b       	or	r21, r27
    1d92:	ea 18       	sub	r14, r10
    1d94:	fb 08       	sbc	r15, r11
    1d96:	0c 09       	sbc	r16, r12
    1d98:	1d 09       	sbc	r17, r13
    1d9a:	b6 95       	lsr	r27
    1d9c:	a7 95       	ror	r26
    1d9e:	97 95       	ror	r25
    1da0:	87 95       	ror	r24
    1da2:	ee 0c       	add	r14, r14
    1da4:	ff 1c       	adc	r15, r15
    1da6:	00 1f       	adc	r16, r16
    1da8:	11 1f       	adc	r17, r17
    1daa:	6f 5f       	subi	r22, 0xFF	; 255
    1dac:	7f 4f       	sbci	r23, 0xFF	; 255
    1dae:	6f 31       	cpi	r22, 0x1F	; 31
    1db0:	71 05       	cpc	r23, r1
    1db2:	31 f7       	brne	.-52     	; 0x1d80 <__divsf3+0xda>
    1db4:	da 01       	movw	r26, r20
    1db6:	c9 01       	movw	r24, r18
    1db8:	8f 77       	andi	r24, 0x7F	; 127
    1dba:	90 70       	andi	r25, 0x00	; 0
    1dbc:	a0 70       	andi	r26, 0x00	; 0
    1dbe:	b0 70       	andi	r27, 0x00	; 0
    1dc0:	80 34       	cpi	r24, 0x40	; 64
    1dc2:	91 05       	cpc	r25, r1
    1dc4:	a1 05       	cpc	r26, r1
    1dc6:	b1 05       	cpc	r27, r1
    1dc8:	61 f4       	brne	.+24     	; 0x1de2 <__divsf3+0x13c>
    1dca:	27 fd       	sbrc	r18, 7
    1dcc:	0a c0       	rjmp	.+20     	; 0x1de2 <__divsf3+0x13c>
    1dce:	e1 14       	cp	r14, r1
    1dd0:	f1 04       	cpc	r15, r1
    1dd2:	01 05       	cpc	r16, r1
    1dd4:	11 05       	cpc	r17, r1
    1dd6:	29 f0       	breq	.+10     	; 0x1de2 <__divsf3+0x13c>
    1dd8:	20 5c       	subi	r18, 0xC0	; 192
    1dda:	3f 4f       	sbci	r19, 0xFF	; 255
    1ddc:	4f 4f       	sbci	r20, 0xFF	; 255
    1dde:	5f 4f       	sbci	r21, 0xFF	; 255
    1de0:	20 78       	andi	r18, 0x80	; 128
    1de2:	2d 87       	std	Y+13, r18	; 0x0d
    1de4:	3e 87       	std	Y+14, r19	; 0x0e
    1de6:	4f 87       	std	Y+15, r20	; 0x0f
    1de8:	58 8b       	std	Y+16, r21	; 0x10
    1dea:	be 01       	movw	r22, r28
    1dec:	67 5f       	subi	r22, 0xF7	; 247
    1dee:	7f 4f       	sbci	r23, 0xFF	; 255
    1df0:	cb 01       	movw	r24, r22
    1df2:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    1df6:	68 96       	adiw	r28, 0x18	; 24
    1df8:	ea e0       	ldi	r30, 0x0A	; 10
    1dfa:	0c 94 36 2c 	jmp	0x586c	; 0x586c <__epilogue_restores__+0x10>

00001dfe <__gtsf2>:
    1dfe:	a8 e1       	ldi	r26, 0x18	; 24
    1e00:	b0 e0       	ldi	r27, 0x00	; 0
    1e02:	e5 e0       	ldi	r30, 0x05	; 5
    1e04:	ff e0       	ldi	r31, 0x0F	; 15
    1e06:	0c 94 1e 2c 	jmp	0x583c	; 0x583c <__prologue_saves__+0x18>
    1e0a:	69 83       	std	Y+1, r22	; 0x01
    1e0c:	7a 83       	std	Y+2, r23	; 0x02
    1e0e:	8b 83       	std	Y+3, r24	; 0x03
    1e10:	9c 83       	std	Y+4, r25	; 0x04
    1e12:	2d 83       	std	Y+5, r18	; 0x05
    1e14:	3e 83       	std	Y+6, r19	; 0x06
    1e16:	4f 83       	std	Y+7, r20	; 0x07
    1e18:	58 87       	std	Y+8, r21	; 0x08
    1e1a:	89 e0       	ldi	r24, 0x09	; 9
    1e1c:	e8 2e       	mov	r14, r24
    1e1e:	f1 2c       	mov	r15, r1
    1e20:	ec 0e       	add	r14, r28
    1e22:	fd 1e       	adc	r15, r29
    1e24:	ce 01       	movw	r24, r28
    1e26:	01 96       	adiw	r24, 0x01	; 1
    1e28:	b7 01       	movw	r22, r14
    1e2a:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1e2e:	8e 01       	movw	r16, r28
    1e30:	0f 5e       	subi	r16, 0xEF	; 239
    1e32:	1f 4f       	sbci	r17, 0xFF	; 255
    1e34:	ce 01       	movw	r24, r28
    1e36:	05 96       	adiw	r24, 0x05	; 5
    1e38:	b8 01       	movw	r22, r16
    1e3a:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1e3e:	89 85       	ldd	r24, Y+9	; 0x09
    1e40:	82 30       	cpi	r24, 0x02	; 2
    1e42:	40 f0       	brcs	.+16     	; 0x1e54 <__gtsf2+0x56>
    1e44:	89 89       	ldd	r24, Y+17	; 0x11
    1e46:	82 30       	cpi	r24, 0x02	; 2
    1e48:	28 f0       	brcs	.+10     	; 0x1e54 <__gtsf2+0x56>
    1e4a:	c7 01       	movw	r24, r14
    1e4c:	b8 01       	movw	r22, r16
    1e4e:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <__fpcmp_parts_f>
    1e52:	01 c0       	rjmp	.+2      	; 0x1e56 <__gtsf2+0x58>
    1e54:	8f ef       	ldi	r24, 0xFF	; 255
    1e56:	68 96       	adiw	r28, 0x18	; 24
    1e58:	e6 e0       	ldi	r30, 0x06	; 6
    1e5a:	0c 94 3a 2c 	jmp	0x5874	; 0x5874 <__epilogue_restores__+0x18>

00001e5e <__gesf2>:
    1e5e:	a8 e1       	ldi	r26, 0x18	; 24
    1e60:	b0 e0       	ldi	r27, 0x00	; 0
    1e62:	e5 e3       	ldi	r30, 0x35	; 53
    1e64:	ff e0       	ldi	r31, 0x0F	; 15
    1e66:	0c 94 1e 2c 	jmp	0x583c	; 0x583c <__prologue_saves__+0x18>
    1e6a:	69 83       	std	Y+1, r22	; 0x01
    1e6c:	7a 83       	std	Y+2, r23	; 0x02
    1e6e:	8b 83       	std	Y+3, r24	; 0x03
    1e70:	9c 83       	std	Y+4, r25	; 0x04
    1e72:	2d 83       	std	Y+5, r18	; 0x05
    1e74:	3e 83       	std	Y+6, r19	; 0x06
    1e76:	4f 83       	std	Y+7, r20	; 0x07
    1e78:	58 87       	std	Y+8, r21	; 0x08
    1e7a:	89 e0       	ldi	r24, 0x09	; 9
    1e7c:	e8 2e       	mov	r14, r24
    1e7e:	f1 2c       	mov	r15, r1
    1e80:	ec 0e       	add	r14, r28
    1e82:	fd 1e       	adc	r15, r29
    1e84:	ce 01       	movw	r24, r28
    1e86:	01 96       	adiw	r24, 0x01	; 1
    1e88:	b7 01       	movw	r22, r14
    1e8a:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1e8e:	8e 01       	movw	r16, r28
    1e90:	0f 5e       	subi	r16, 0xEF	; 239
    1e92:	1f 4f       	sbci	r17, 0xFF	; 255
    1e94:	ce 01       	movw	r24, r28
    1e96:	05 96       	adiw	r24, 0x05	; 5
    1e98:	b8 01       	movw	r22, r16
    1e9a:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1e9e:	89 85       	ldd	r24, Y+9	; 0x09
    1ea0:	82 30       	cpi	r24, 0x02	; 2
    1ea2:	40 f0       	brcs	.+16     	; 0x1eb4 <__gesf2+0x56>
    1ea4:	89 89       	ldd	r24, Y+17	; 0x11
    1ea6:	82 30       	cpi	r24, 0x02	; 2
    1ea8:	28 f0       	brcs	.+10     	; 0x1eb4 <__gesf2+0x56>
    1eaa:	c7 01       	movw	r24, r14
    1eac:	b8 01       	movw	r22, r16
    1eae:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <__fpcmp_parts_f>
    1eb2:	01 c0       	rjmp	.+2      	; 0x1eb6 <__gesf2+0x58>
    1eb4:	8f ef       	ldi	r24, 0xFF	; 255
    1eb6:	68 96       	adiw	r28, 0x18	; 24
    1eb8:	e6 e0       	ldi	r30, 0x06	; 6
    1eba:	0c 94 3a 2c 	jmp	0x5874	; 0x5874 <__epilogue_restores__+0x18>

00001ebe <__ltsf2>:
    1ebe:	a8 e1       	ldi	r26, 0x18	; 24
    1ec0:	b0 e0       	ldi	r27, 0x00	; 0
    1ec2:	e5 e6       	ldi	r30, 0x65	; 101
    1ec4:	ff e0       	ldi	r31, 0x0F	; 15
    1ec6:	0c 94 1e 2c 	jmp	0x583c	; 0x583c <__prologue_saves__+0x18>
    1eca:	69 83       	std	Y+1, r22	; 0x01
    1ecc:	7a 83       	std	Y+2, r23	; 0x02
    1ece:	8b 83       	std	Y+3, r24	; 0x03
    1ed0:	9c 83       	std	Y+4, r25	; 0x04
    1ed2:	2d 83       	std	Y+5, r18	; 0x05
    1ed4:	3e 83       	std	Y+6, r19	; 0x06
    1ed6:	4f 83       	std	Y+7, r20	; 0x07
    1ed8:	58 87       	std	Y+8, r21	; 0x08
    1eda:	89 e0       	ldi	r24, 0x09	; 9
    1edc:	e8 2e       	mov	r14, r24
    1ede:	f1 2c       	mov	r15, r1
    1ee0:	ec 0e       	add	r14, r28
    1ee2:	fd 1e       	adc	r15, r29
    1ee4:	ce 01       	movw	r24, r28
    1ee6:	01 96       	adiw	r24, 0x01	; 1
    1ee8:	b7 01       	movw	r22, r14
    1eea:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1eee:	8e 01       	movw	r16, r28
    1ef0:	0f 5e       	subi	r16, 0xEF	; 239
    1ef2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ef4:	ce 01       	movw	r24, r28
    1ef6:	05 96       	adiw	r24, 0x05	; 5
    1ef8:	b8 01       	movw	r22, r16
    1efa:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1efe:	89 85       	ldd	r24, Y+9	; 0x09
    1f00:	82 30       	cpi	r24, 0x02	; 2
    1f02:	40 f0       	brcs	.+16     	; 0x1f14 <__ltsf2+0x56>
    1f04:	89 89       	ldd	r24, Y+17	; 0x11
    1f06:	82 30       	cpi	r24, 0x02	; 2
    1f08:	28 f0       	brcs	.+10     	; 0x1f14 <__ltsf2+0x56>
    1f0a:	c7 01       	movw	r24, r14
    1f0c:	b8 01       	movw	r22, r16
    1f0e:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <__fpcmp_parts_f>
    1f12:	01 c0       	rjmp	.+2      	; 0x1f16 <__ltsf2+0x58>
    1f14:	81 e0       	ldi	r24, 0x01	; 1
    1f16:	68 96       	adiw	r28, 0x18	; 24
    1f18:	e6 e0       	ldi	r30, 0x06	; 6
    1f1a:	0c 94 3a 2c 	jmp	0x5874	; 0x5874 <__epilogue_restores__+0x18>

00001f1e <__floatsisf>:
    1f1e:	a8 e0       	ldi	r26, 0x08	; 8
    1f20:	b0 e0       	ldi	r27, 0x00	; 0
    1f22:	e5 e9       	ldi	r30, 0x95	; 149
    1f24:	ff e0       	ldi	r31, 0x0F	; 15
    1f26:	0c 94 1b 2c 	jmp	0x5836	; 0x5836 <__prologue_saves__+0x12>
    1f2a:	9b 01       	movw	r18, r22
    1f2c:	ac 01       	movw	r20, r24
    1f2e:	83 e0       	ldi	r24, 0x03	; 3
    1f30:	89 83       	std	Y+1, r24	; 0x01
    1f32:	da 01       	movw	r26, r20
    1f34:	c9 01       	movw	r24, r18
    1f36:	88 27       	eor	r24, r24
    1f38:	b7 fd       	sbrc	r27, 7
    1f3a:	83 95       	inc	r24
    1f3c:	99 27       	eor	r25, r25
    1f3e:	aa 27       	eor	r26, r26
    1f40:	bb 27       	eor	r27, r27
    1f42:	b8 2e       	mov	r11, r24
    1f44:	21 15       	cp	r18, r1
    1f46:	31 05       	cpc	r19, r1
    1f48:	41 05       	cpc	r20, r1
    1f4a:	51 05       	cpc	r21, r1
    1f4c:	19 f4       	brne	.+6      	; 0x1f54 <__floatsisf+0x36>
    1f4e:	82 e0       	ldi	r24, 0x02	; 2
    1f50:	89 83       	std	Y+1, r24	; 0x01
    1f52:	3a c0       	rjmp	.+116    	; 0x1fc8 <__floatsisf+0xaa>
    1f54:	88 23       	and	r24, r24
    1f56:	a9 f0       	breq	.+42     	; 0x1f82 <__floatsisf+0x64>
    1f58:	20 30       	cpi	r18, 0x00	; 0
    1f5a:	80 e0       	ldi	r24, 0x00	; 0
    1f5c:	38 07       	cpc	r19, r24
    1f5e:	80 e0       	ldi	r24, 0x00	; 0
    1f60:	48 07       	cpc	r20, r24
    1f62:	80 e8       	ldi	r24, 0x80	; 128
    1f64:	58 07       	cpc	r21, r24
    1f66:	29 f4       	brne	.+10     	; 0x1f72 <__floatsisf+0x54>
    1f68:	60 e0       	ldi	r22, 0x00	; 0
    1f6a:	70 e0       	ldi	r23, 0x00	; 0
    1f6c:	80 e0       	ldi	r24, 0x00	; 0
    1f6e:	9f ec       	ldi	r25, 0xCF	; 207
    1f70:	30 c0       	rjmp	.+96     	; 0x1fd2 <__floatsisf+0xb4>
    1f72:	ee 24       	eor	r14, r14
    1f74:	ff 24       	eor	r15, r15
    1f76:	87 01       	movw	r16, r14
    1f78:	e2 1a       	sub	r14, r18
    1f7a:	f3 0a       	sbc	r15, r19
    1f7c:	04 0b       	sbc	r16, r20
    1f7e:	15 0b       	sbc	r17, r21
    1f80:	02 c0       	rjmp	.+4      	; 0x1f86 <__floatsisf+0x68>
    1f82:	79 01       	movw	r14, r18
    1f84:	8a 01       	movw	r16, r20
    1f86:	8e e1       	ldi	r24, 0x1E	; 30
    1f88:	c8 2e       	mov	r12, r24
    1f8a:	d1 2c       	mov	r13, r1
    1f8c:	dc 82       	std	Y+4, r13	; 0x04
    1f8e:	cb 82       	std	Y+3, r12	; 0x03
    1f90:	ed 82       	std	Y+5, r14	; 0x05
    1f92:	fe 82       	std	Y+6, r15	; 0x06
    1f94:	0f 83       	std	Y+7, r16	; 0x07
    1f96:	18 87       	std	Y+8, r17	; 0x08
    1f98:	c8 01       	movw	r24, r16
    1f9a:	b7 01       	movw	r22, r14
    1f9c:	0e 94 be 11 	call	0x237c	; 0x237c <__clzsi2>
    1fa0:	01 97       	sbiw	r24, 0x01	; 1
    1fa2:	18 16       	cp	r1, r24
    1fa4:	19 06       	cpc	r1, r25
    1fa6:	84 f4       	brge	.+32     	; 0x1fc8 <__floatsisf+0xaa>
    1fa8:	08 2e       	mov	r0, r24
    1faa:	04 c0       	rjmp	.+8      	; 0x1fb4 <__floatsisf+0x96>
    1fac:	ee 0c       	add	r14, r14
    1fae:	ff 1c       	adc	r15, r15
    1fb0:	00 1f       	adc	r16, r16
    1fb2:	11 1f       	adc	r17, r17
    1fb4:	0a 94       	dec	r0
    1fb6:	d2 f7       	brpl	.-12     	; 0x1fac <__floatsisf+0x8e>
    1fb8:	ed 82       	std	Y+5, r14	; 0x05
    1fba:	fe 82       	std	Y+6, r15	; 0x06
    1fbc:	0f 83       	std	Y+7, r16	; 0x07
    1fbe:	18 87       	std	Y+8, r17	; 0x08
    1fc0:	c8 1a       	sub	r12, r24
    1fc2:	d9 0a       	sbc	r13, r25
    1fc4:	dc 82       	std	Y+4, r13	; 0x04
    1fc6:	cb 82       	std	Y+3, r12	; 0x03
    1fc8:	ba 82       	std	Y+2, r11	; 0x02
    1fca:	ce 01       	movw	r24, r28
    1fcc:	01 96       	adiw	r24, 0x01	; 1
    1fce:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    1fd2:	28 96       	adiw	r28, 0x08	; 8
    1fd4:	e9 e0       	ldi	r30, 0x09	; 9
    1fd6:	0c 94 37 2c 	jmp	0x586e	; 0x586e <__epilogue_restores__+0x12>

00001fda <__fixsfsi>:
    1fda:	ac e0       	ldi	r26, 0x0C	; 12
    1fdc:	b0 e0       	ldi	r27, 0x00	; 0
    1fde:	e3 ef       	ldi	r30, 0xF3	; 243
    1fe0:	ff e0       	ldi	r31, 0x0F	; 15
    1fe2:	0c 94 22 2c 	jmp	0x5844	; 0x5844 <__prologue_saves__+0x20>
    1fe6:	69 83       	std	Y+1, r22	; 0x01
    1fe8:	7a 83       	std	Y+2, r23	; 0x02
    1fea:	8b 83       	std	Y+3, r24	; 0x03
    1fec:	9c 83       	std	Y+4, r25	; 0x04
    1fee:	ce 01       	movw	r24, r28
    1ff0:	01 96       	adiw	r24, 0x01	; 1
    1ff2:	be 01       	movw	r22, r28
    1ff4:	6b 5f       	subi	r22, 0xFB	; 251
    1ff6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff8:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1ffc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ffe:	82 30       	cpi	r24, 0x02	; 2
    2000:	61 f1       	breq	.+88     	; 0x205a <__fixsfsi+0x80>
    2002:	82 30       	cpi	r24, 0x02	; 2
    2004:	50 f1       	brcs	.+84     	; 0x205a <__fixsfsi+0x80>
    2006:	84 30       	cpi	r24, 0x04	; 4
    2008:	21 f4       	brne	.+8      	; 0x2012 <__fixsfsi+0x38>
    200a:	8e 81       	ldd	r24, Y+6	; 0x06
    200c:	88 23       	and	r24, r24
    200e:	51 f1       	breq	.+84     	; 0x2064 <__fixsfsi+0x8a>
    2010:	2e c0       	rjmp	.+92     	; 0x206e <__fixsfsi+0x94>
    2012:	2f 81       	ldd	r18, Y+7	; 0x07
    2014:	38 85       	ldd	r19, Y+8	; 0x08
    2016:	37 fd       	sbrc	r19, 7
    2018:	20 c0       	rjmp	.+64     	; 0x205a <__fixsfsi+0x80>
    201a:	6e 81       	ldd	r22, Y+6	; 0x06
    201c:	2f 31       	cpi	r18, 0x1F	; 31
    201e:	31 05       	cpc	r19, r1
    2020:	1c f0       	brlt	.+6      	; 0x2028 <__fixsfsi+0x4e>
    2022:	66 23       	and	r22, r22
    2024:	f9 f0       	breq	.+62     	; 0x2064 <__fixsfsi+0x8a>
    2026:	23 c0       	rjmp	.+70     	; 0x206e <__fixsfsi+0x94>
    2028:	8e e1       	ldi	r24, 0x1E	; 30
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	82 1b       	sub	r24, r18
    202e:	93 0b       	sbc	r25, r19
    2030:	29 85       	ldd	r18, Y+9	; 0x09
    2032:	3a 85       	ldd	r19, Y+10	; 0x0a
    2034:	4b 85       	ldd	r20, Y+11	; 0x0b
    2036:	5c 85       	ldd	r21, Y+12	; 0x0c
    2038:	04 c0       	rjmp	.+8      	; 0x2042 <__fixsfsi+0x68>
    203a:	56 95       	lsr	r21
    203c:	47 95       	ror	r20
    203e:	37 95       	ror	r19
    2040:	27 95       	ror	r18
    2042:	8a 95       	dec	r24
    2044:	d2 f7       	brpl	.-12     	; 0x203a <__fixsfsi+0x60>
    2046:	66 23       	and	r22, r22
    2048:	b1 f0       	breq	.+44     	; 0x2076 <__fixsfsi+0x9c>
    204a:	50 95       	com	r21
    204c:	40 95       	com	r20
    204e:	30 95       	com	r19
    2050:	21 95       	neg	r18
    2052:	3f 4f       	sbci	r19, 0xFF	; 255
    2054:	4f 4f       	sbci	r20, 0xFF	; 255
    2056:	5f 4f       	sbci	r21, 0xFF	; 255
    2058:	0e c0       	rjmp	.+28     	; 0x2076 <__fixsfsi+0x9c>
    205a:	20 e0       	ldi	r18, 0x00	; 0
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	40 e0       	ldi	r20, 0x00	; 0
    2060:	50 e0       	ldi	r21, 0x00	; 0
    2062:	09 c0       	rjmp	.+18     	; 0x2076 <__fixsfsi+0x9c>
    2064:	2f ef       	ldi	r18, 0xFF	; 255
    2066:	3f ef       	ldi	r19, 0xFF	; 255
    2068:	4f ef       	ldi	r20, 0xFF	; 255
    206a:	5f e7       	ldi	r21, 0x7F	; 127
    206c:	04 c0       	rjmp	.+8      	; 0x2076 <__fixsfsi+0x9c>
    206e:	20 e0       	ldi	r18, 0x00	; 0
    2070:	30 e0       	ldi	r19, 0x00	; 0
    2072:	40 e0       	ldi	r20, 0x00	; 0
    2074:	50 e8       	ldi	r21, 0x80	; 128
    2076:	b9 01       	movw	r22, r18
    2078:	ca 01       	movw	r24, r20
    207a:	2c 96       	adiw	r28, 0x0c	; 12
    207c:	e2 e0       	ldi	r30, 0x02	; 2
    207e:	0c 94 3e 2c 	jmp	0x587c	; 0x587c <__epilogue_restores__+0x20>

00002082 <__floatunsisf>:
    2082:	a8 e0       	ldi	r26, 0x08	; 8
    2084:	b0 e0       	ldi	r27, 0x00	; 0
    2086:	e7 e4       	ldi	r30, 0x47	; 71
    2088:	f0 e1       	ldi	r31, 0x10	; 16
    208a:	0c 94 1a 2c 	jmp	0x5834	; 0x5834 <__prologue_saves__+0x10>
    208e:	7b 01       	movw	r14, r22
    2090:	8c 01       	movw	r16, r24
    2092:	61 15       	cp	r22, r1
    2094:	71 05       	cpc	r23, r1
    2096:	81 05       	cpc	r24, r1
    2098:	91 05       	cpc	r25, r1
    209a:	19 f4       	brne	.+6      	; 0x20a2 <__floatunsisf+0x20>
    209c:	82 e0       	ldi	r24, 0x02	; 2
    209e:	89 83       	std	Y+1, r24	; 0x01
    20a0:	60 c0       	rjmp	.+192    	; 0x2162 <__floatunsisf+0xe0>
    20a2:	83 e0       	ldi	r24, 0x03	; 3
    20a4:	89 83       	std	Y+1, r24	; 0x01
    20a6:	8e e1       	ldi	r24, 0x1E	; 30
    20a8:	c8 2e       	mov	r12, r24
    20aa:	d1 2c       	mov	r13, r1
    20ac:	dc 82       	std	Y+4, r13	; 0x04
    20ae:	cb 82       	std	Y+3, r12	; 0x03
    20b0:	ed 82       	std	Y+5, r14	; 0x05
    20b2:	fe 82       	std	Y+6, r15	; 0x06
    20b4:	0f 83       	std	Y+7, r16	; 0x07
    20b6:	18 87       	std	Y+8, r17	; 0x08
    20b8:	c8 01       	movw	r24, r16
    20ba:	b7 01       	movw	r22, r14
    20bc:	0e 94 be 11 	call	0x237c	; 0x237c <__clzsi2>
    20c0:	fc 01       	movw	r30, r24
    20c2:	31 97       	sbiw	r30, 0x01	; 1
    20c4:	f7 ff       	sbrs	r31, 7
    20c6:	3b c0       	rjmp	.+118    	; 0x213e <__floatunsisf+0xbc>
    20c8:	22 27       	eor	r18, r18
    20ca:	33 27       	eor	r19, r19
    20cc:	2e 1b       	sub	r18, r30
    20ce:	3f 0b       	sbc	r19, r31
    20d0:	57 01       	movw	r10, r14
    20d2:	68 01       	movw	r12, r16
    20d4:	02 2e       	mov	r0, r18
    20d6:	04 c0       	rjmp	.+8      	; 0x20e0 <__floatunsisf+0x5e>
    20d8:	d6 94       	lsr	r13
    20da:	c7 94       	ror	r12
    20dc:	b7 94       	ror	r11
    20de:	a7 94       	ror	r10
    20e0:	0a 94       	dec	r0
    20e2:	d2 f7       	brpl	.-12     	; 0x20d8 <__floatunsisf+0x56>
    20e4:	40 e0       	ldi	r20, 0x00	; 0
    20e6:	50 e0       	ldi	r21, 0x00	; 0
    20e8:	60 e0       	ldi	r22, 0x00	; 0
    20ea:	70 e0       	ldi	r23, 0x00	; 0
    20ec:	81 e0       	ldi	r24, 0x01	; 1
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	a0 e0       	ldi	r26, 0x00	; 0
    20f2:	b0 e0       	ldi	r27, 0x00	; 0
    20f4:	04 c0       	rjmp	.+8      	; 0x20fe <__floatunsisf+0x7c>
    20f6:	88 0f       	add	r24, r24
    20f8:	99 1f       	adc	r25, r25
    20fa:	aa 1f       	adc	r26, r26
    20fc:	bb 1f       	adc	r27, r27
    20fe:	2a 95       	dec	r18
    2100:	d2 f7       	brpl	.-12     	; 0x20f6 <__floatunsisf+0x74>
    2102:	01 97       	sbiw	r24, 0x01	; 1
    2104:	a1 09       	sbc	r26, r1
    2106:	b1 09       	sbc	r27, r1
    2108:	8e 21       	and	r24, r14
    210a:	9f 21       	and	r25, r15
    210c:	a0 23       	and	r26, r16
    210e:	b1 23       	and	r27, r17
    2110:	00 97       	sbiw	r24, 0x00	; 0
    2112:	a1 05       	cpc	r26, r1
    2114:	b1 05       	cpc	r27, r1
    2116:	21 f0       	breq	.+8      	; 0x2120 <__floatunsisf+0x9e>
    2118:	41 e0       	ldi	r20, 0x01	; 1
    211a:	50 e0       	ldi	r21, 0x00	; 0
    211c:	60 e0       	ldi	r22, 0x00	; 0
    211e:	70 e0       	ldi	r23, 0x00	; 0
    2120:	4a 29       	or	r20, r10
    2122:	5b 29       	or	r21, r11
    2124:	6c 29       	or	r22, r12
    2126:	7d 29       	or	r23, r13
    2128:	4d 83       	std	Y+5, r20	; 0x05
    212a:	5e 83       	std	Y+6, r21	; 0x06
    212c:	6f 83       	std	Y+7, r22	; 0x07
    212e:	78 87       	std	Y+8, r23	; 0x08
    2130:	8e e1       	ldi	r24, 0x1E	; 30
    2132:	90 e0       	ldi	r25, 0x00	; 0
    2134:	8e 1b       	sub	r24, r30
    2136:	9f 0b       	sbc	r25, r31
    2138:	9c 83       	std	Y+4, r25	; 0x04
    213a:	8b 83       	std	Y+3, r24	; 0x03
    213c:	12 c0       	rjmp	.+36     	; 0x2162 <__floatunsisf+0xe0>
    213e:	30 97       	sbiw	r30, 0x00	; 0
    2140:	81 f0       	breq	.+32     	; 0x2162 <__floatunsisf+0xe0>
    2142:	0e 2e       	mov	r0, r30
    2144:	04 c0       	rjmp	.+8      	; 0x214e <__floatunsisf+0xcc>
    2146:	ee 0c       	add	r14, r14
    2148:	ff 1c       	adc	r15, r15
    214a:	00 1f       	adc	r16, r16
    214c:	11 1f       	adc	r17, r17
    214e:	0a 94       	dec	r0
    2150:	d2 f7       	brpl	.-12     	; 0x2146 <__floatunsisf+0xc4>
    2152:	ed 82       	std	Y+5, r14	; 0x05
    2154:	fe 82       	std	Y+6, r15	; 0x06
    2156:	0f 83       	std	Y+7, r16	; 0x07
    2158:	18 87       	std	Y+8, r17	; 0x08
    215a:	ce 1a       	sub	r12, r30
    215c:	df 0a       	sbc	r13, r31
    215e:	dc 82       	std	Y+4, r13	; 0x04
    2160:	cb 82       	std	Y+3, r12	; 0x03
    2162:	1a 82       	std	Y+2, r1	; 0x02
    2164:	ce 01       	movw	r24, r28
    2166:	01 96       	adiw	r24, 0x01	; 1
    2168:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    216c:	28 96       	adiw	r28, 0x08	; 8
    216e:	ea e0       	ldi	r30, 0x0A	; 10
    2170:	0c 94 36 2c 	jmp	0x586c	; 0x586c <__epilogue_restores__+0x10>

00002174 <__ashldi3>:
    2174:	ef 92       	push	r14
    2176:	ff 92       	push	r15
    2178:	0f 93       	push	r16
    217a:	df 93       	push	r29
    217c:	cf 93       	push	r28
    217e:	cd b7       	in	r28, 0x3d	; 61
    2180:	de b7       	in	r29, 0x3e	; 62
    2182:	60 97       	sbiw	r28, 0x10	; 16
    2184:	0f b6       	in	r0, 0x3f	; 63
    2186:	f8 94       	cli
    2188:	de bf       	out	0x3e, r29	; 62
    218a:	0f be       	out	0x3f, r0	; 63
    218c:	cd bf       	out	0x3d, r28	; 61
    218e:	a8 2f       	mov	r26, r24
    2190:	00 23       	and	r16, r16
    2192:	09 f4       	brne	.+2      	; 0x2196 <__ashldi3+0x22>
    2194:	61 c0       	rjmp	.+194    	; 0x2258 <__ashldi3+0xe4>
    2196:	7e 01       	movw	r14, r28
    2198:	08 94       	sec
    219a:	e1 1c       	adc	r14, r1
    219c:	f1 1c       	adc	r15, r1
    219e:	88 e0       	ldi	r24, 0x08	; 8
    21a0:	f7 01       	movw	r30, r14
    21a2:	11 92       	st	Z+, r1
    21a4:	8a 95       	dec	r24
    21a6:	e9 f7       	brne	.-6      	; 0x21a2 <__ashldi3+0x2e>
    21a8:	29 83       	std	Y+1, r18	; 0x01
    21aa:	3a 83       	std	Y+2, r19	; 0x02
    21ac:	4b 83       	std	Y+3, r20	; 0x03
    21ae:	5c 83       	std	Y+4, r21	; 0x04
    21b0:	6d 83       	std	Y+5, r22	; 0x05
    21b2:	7e 83       	std	Y+6, r23	; 0x06
    21b4:	af 83       	std	Y+7, r26	; 0x07
    21b6:	98 87       	std	Y+8, r25	; 0x08
    21b8:	80 e2       	ldi	r24, 0x20	; 32
    21ba:	80 1b       	sub	r24, r16
    21bc:	e8 2f       	mov	r30, r24
    21be:	ff 27       	eor	r31, r31
    21c0:	e7 fd       	sbrc	r30, 7
    21c2:	f0 95       	com	r31
    21c4:	49 81       	ldd	r20, Y+1	; 0x01
    21c6:	5a 81       	ldd	r21, Y+2	; 0x02
    21c8:	6b 81       	ldd	r22, Y+3	; 0x03
    21ca:	7c 81       	ldd	r23, Y+4	; 0x04
    21cc:	18 16       	cp	r1, r24
    21ce:	84 f0       	brlt	.+32     	; 0x21f0 <__ashldi3+0x7c>
    21d0:	19 86       	std	Y+9, r1	; 0x09
    21d2:	1a 86       	std	Y+10, r1	; 0x0a
    21d4:	1b 86       	std	Y+11, r1	; 0x0b
    21d6:	1c 86       	std	Y+12, r1	; 0x0c
    21d8:	88 27       	eor	r24, r24
    21da:	99 27       	eor	r25, r25
    21dc:	8e 1b       	sub	r24, r30
    21de:	9f 0b       	sbc	r25, r31
    21e0:	04 c0       	rjmp	.+8      	; 0x21ea <__ashldi3+0x76>
    21e2:	44 0f       	add	r20, r20
    21e4:	55 1f       	adc	r21, r21
    21e6:	66 1f       	adc	r22, r22
    21e8:	77 1f       	adc	r23, r23
    21ea:	8a 95       	dec	r24
    21ec:	d2 f7       	brpl	.-12     	; 0x21e2 <__ashldi3+0x6e>
    21ee:	28 c0       	rjmp	.+80     	; 0x2240 <__ashldi3+0xcc>
    21f0:	20 2f       	mov	r18, r16
    21f2:	33 27       	eor	r19, r19
    21f4:	27 fd       	sbrc	r18, 7
    21f6:	30 95       	com	r19
    21f8:	db 01       	movw	r26, r22
    21fa:	ca 01       	movw	r24, r20
    21fc:	02 2e       	mov	r0, r18
    21fe:	04 c0       	rjmp	.+8      	; 0x2208 <__ashldi3+0x94>
    2200:	88 0f       	add	r24, r24
    2202:	99 1f       	adc	r25, r25
    2204:	aa 1f       	adc	r26, r26
    2206:	bb 1f       	adc	r27, r27
    2208:	0a 94       	dec	r0
    220a:	d2 f7       	brpl	.-12     	; 0x2200 <__ashldi3+0x8c>
    220c:	89 87       	std	Y+9, r24	; 0x09
    220e:	9a 87       	std	Y+10, r25	; 0x0a
    2210:	ab 87       	std	Y+11, r26	; 0x0b
    2212:	bc 87       	std	Y+12, r27	; 0x0c
    2214:	04 c0       	rjmp	.+8      	; 0x221e <__ashldi3+0xaa>
    2216:	76 95       	lsr	r23
    2218:	67 95       	ror	r22
    221a:	57 95       	ror	r21
    221c:	47 95       	ror	r20
    221e:	ea 95       	dec	r30
    2220:	d2 f7       	brpl	.-12     	; 0x2216 <__ashldi3+0xa2>
    2222:	8d 81       	ldd	r24, Y+5	; 0x05
    2224:	9e 81       	ldd	r25, Y+6	; 0x06
    2226:	af 81       	ldd	r26, Y+7	; 0x07
    2228:	b8 85       	ldd	r27, Y+8	; 0x08
    222a:	04 c0       	rjmp	.+8      	; 0x2234 <__ashldi3+0xc0>
    222c:	88 0f       	add	r24, r24
    222e:	99 1f       	adc	r25, r25
    2230:	aa 1f       	adc	r26, r26
    2232:	bb 1f       	adc	r27, r27
    2234:	2a 95       	dec	r18
    2236:	d2 f7       	brpl	.-12     	; 0x222c <__ashldi3+0xb8>
    2238:	48 2b       	or	r20, r24
    223a:	59 2b       	or	r21, r25
    223c:	6a 2b       	or	r22, r26
    223e:	7b 2b       	or	r23, r27
    2240:	4d 87       	std	Y+13, r20	; 0x0d
    2242:	5e 87       	std	Y+14, r21	; 0x0e
    2244:	6f 87       	std	Y+15, r22	; 0x0f
    2246:	78 8b       	std	Y+16, r23	; 0x10
    2248:	29 85       	ldd	r18, Y+9	; 0x09
    224a:	3a 85       	ldd	r19, Y+10	; 0x0a
    224c:	4b 85       	ldd	r20, Y+11	; 0x0b
    224e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2250:	6d 85       	ldd	r22, Y+13	; 0x0d
    2252:	7e 85       	ldd	r23, Y+14	; 0x0e
    2254:	af 85       	ldd	r26, Y+15	; 0x0f
    2256:	98 89       	ldd	r25, Y+16	; 0x10
    2258:	8a 2f       	mov	r24, r26
    225a:	60 96       	adiw	r28, 0x10	; 16
    225c:	0f b6       	in	r0, 0x3f	; 63
    225e:	f8 94       	cli
    2260:	de bf       	out	0x3e, r29	; 62
    2262:	0f be       	out	0x3f, r0	; 63
    2264:	cd bf       	out	0x3d, r28	; 61
    2266:	cf 91       	pop	r28
    2268:	df 91       	pop	r29
    226a:	0f 91       	pop	r16
    226c:	ff 90       	pop	r15
    226e:	ef 90       	pop	r14
    2270:	08 95       	ret

00002272 <__ashrdi3>:
    2272:	ef 92       	push	r14
    2274:	ff 92       	push	r15
    2276:	0f 93       	push	r16
    2278:	df 93       	push	r29
    227a:	cf 93       	push	r28
    227c:	cd b7       	in	r28, 0x3d	; 61
    227e:	de b7       	in	r29, 0x3e	; 62
    2280:	60 97       	sbiw	r28, 0x10	; 16
    2282:	0f b6       	in	r0, 0x3f	; 63
    2284:	f8 94       	cli
    2286:	de bf       	out	0x3e, r29	; 62
    2288:	0f be       	out	0x3f, r0	; 63
    228a:	cd bf       	out	0x3d, r28	; 61
    228c:	a8 2f       	mov	r26, r24
    228e:	00 23       	and	r16, r16
    2290:	09 f4       	brne	.+2      	; 0x2294 <__ashrdi3+0x22>
    2292:	67 c0       	rjmp	.+206    	; 0x2362 <__ashrdi3+0xf0>
    2294:	7e 01       	movw	r14, r28
    2296:	08 94       	sec
    2298:	e1 1c       	adc	r14, r1
    229a:	f1 1c       	adc	r15, r1
    229c:	88 e0       	ldi	r24, 0x08	; 8
    229e:	f7 01       	movw	r30, r14
    22a0:	11 92       	st	Z+, r1
    22a2:	8a 95       	dec	r24
    22a4:	e9 f7       	brne	.-6      	; 0x22a0 <__ashrdi3+0x2e>
    22a6:	29 83       	std	Y+1, r18	; 0x01
    22a8:	3a 83       	std	Y+2, r19	; 0x02
    22aa:	4b 83       	std	Y+3, r20	; 0x03
    22ac:	5c 83       	std	Y+4, r21	; 0x04
    22ae:	6d 83       	std	Y+5, r22	; 0x05
    22b0:	7e 83       	std	Y+6, r23	; 0x06
    22b2:	af 83       	std	Y+7, r26	; 0x07
    22b4:	98 87       	std	Y+8, r25	; 0x08
    22b6:	80 e2       	ldi	r24, 0x20	; 32
    22b8:	80 1b       	sub	r24, r16
    22ba:	4d 81       	ldd	r20, Y+5	; 0x05
    22bc:	5e 81       	ldd	r21, Y+6	; 0x06
    22be:	6f 81       	ldd	r22, Y+7	; 0x07
    22c0:	78 85       	ldd	r23, Y+8	; 0x08
    22c2:	e8 2f       	mov	r30, r24
    22c4:	ff 27       	eor	r31, r31
    22c6:	e7 fd       	sbrc	r30, 7
    22c8:	f0 95       	com	r31
    22ca:	18 16       	cp	r1, r24
    22cc:	b4 f0       	brlt	.+44     	; 0x22fa <__ashrdi3+0x88>
    22ce:	db 01       	movw	r26, r22
    22d0:	ca 01       	movw	r24, r20
    22d2:	bb 0f       	add	r27, r27
    22d4:	88 0b       	sbc	r24, r24
    22d6:	98 2f       	mov	r25, r24
    22d8:	dc 01       	movw	r26, r24
    22da:	8d 87       	std	Y+13, r24	; 0x0d
    22dc:	9e 87       	std	Y+14, r25	; 0x0e
    22de:	af 87       	std	Y+15, r26	; 0x0f
    22e0:	b8 8b       	std	Y+16, r27	; 0x10
    22e2:	88 27       	eor	r24, r24
    22e4:	99 27       	eor	r25, r25
    22e6:	8e 1b       	sub	r24, r30
    22e8:	9f 0b       	sbc	r25, r31
    22ea:	04 c0       	rjmp	.+8      	; 0x22f4 <__ashrdi3+0x82>
    22ec:	75 95       	asr	r23
    22ee:	67 95       	ror	r22
    22f0:	57 95       	ror	r21
    22f2:	47 95       	ror	r20
    22f4:	8a 95       	dec	r24
    22f6:	d2 f7       	brpl	.-12     	; 0x22ec <__ashrdi3+0x7a>
    22f8:	28 c0       	rjmp	.+80     	; 0x234a <__ashrdi3+0xd8>
    22fa:	20 2f       	mov	r18, r16
    22fc:	33 27       	eor	r19, r19
    22fe:	27 fd       	sbrc	r18, 7
    2300:	30 95       	com	r19
    2302:	db 01       	movw	r26, r22
    2304:	ca 01       	movw	r24, r20
    2306:	02 2e       	mov	r0, r18
    2308:	04 c0       	rjmp	.+8      	; 0x2312 <__ashrdi3+0xa0>
    230a:	b5 95       	asr	r27
    230c:	a7 95       	ror	r26
    230e:	97 95       	ror	r25
    2310:	87 95       	ror	r24
    2312:	0a 94       	dec	r0
    2314:	d2 f7       	brpl	.-12     	; 0x230a <__ashrdi3+0x98>
    2316:	8d 87       	std	Y+13, r24	; 0x0d
    2318:	9e 87       	std	Y+14, r25	; 0x0e
    231a:	af 87       	std	Y+15, r26	; 0x0f
    231c:	b8 8b       	std	Y+16, r27	; 0x10
    231e:	04 c0       	rjmp	.+8      	; 0x2328 <__ashrdi3+0xb6>
    2320:	44 0f       	add	r20, r20
    2322:	55 1f       	adc	r21, r21
    2324:	66 1f       	adc	r22, r22
    2326:	77 1f       	adc	r23, r23
    2328:	ea 95       	dec	r30
    232a:	d2 f7       	brpl	.-12     	; 0x2320 <__ashrdi3+0xae>
    232c:	89 81       	ldd	r24, Y+1	; 0x01
    232e:	9a 81       	ldd	r25, Y+2	; 0x02
    2330:	ab 81       	ldd	r26, Y+3	; 0x03
    2332:	bc 81       	ldd	r27, Y+4	; 0x04
    2334:	04 c0       	rjmp	.+8      	; 0x233e <__ashrdi3+0xcc>
    2336:	b6 95       	lsr	r27
    2338:	a7 95       	ror	r26
    233a:	97 95       	ror	r25
    233c:	87 95       	ror	r24
    233e:	2a 95       	dec	r18
    2340:	d2 f7       	brpl	.-12     	; 0x2336 <__ashrdi3+0xc4>
    2342:	48 2b       	or	r20, r24
    2344:	59 2b       	or	r21, r25
    2346:	6a 2b       	or	r22, r26
    2348:	7b 2b       	or	r23, r27
    234a:	49 87       	std	Y+9, r20	; 0x09
    234c:	5a 87       	std	Y+10, r21	; 0x0a
    234e:	6b 87       	std	Y+11, r22	; 0x0b
    2350:	7c 87       	std	Y+12, r23	; 0x0c
    2352:	29 85       	ldd	r18, Y+9	; 0x09
    2354:	3a 85       	ldd	r19, Y+10	; 0x0a
    2356:	4b 85       	ldd	r20, Y+11	; 0x0b
    2358:	5c 85       	ldd	r21, Y+12	; 0x0c
    235a:	6d 85       	ldd	r22, Y+13	; 0x0d
    235c:	7e 85       	ldd	r23, Y+14	; 0x0e
    235e:	af 85       	ldd	r26, Y+15	; 0x0f
    2360:	98 89       	ldd	r25, Y+16	; 0x10
    2362:	8a 2f       	mov	r24, r26
    2364:	60 96       	adiw	r28, 0x10	; 16
    2366:	0f b6       	in	r0, 0x3f	; 63
    2368:	f8 94       	cli
    236a:	de bf       	out	0x3e, r29	; 62
    236c:	0f be       	out	0x3f, r0	; 63
    236e:	cd bf       	out	0x3d, r28	; 61
    2370:	cf 91       	pop	r28
    2372:	df 91       	pop	r29
    2374:	0f 91       	pop	r16
    2376:	ff 90       	pop	r15
    2378:	ef 90       	pop	r14
    237a:	08 95       	ret

0000237c <__clzsi2>:
    237c:	ef 92       	push	r14
    237e:	ff 92       	push	r15
    2380:	0f 93       	push	r16
    2382:	1f 93       	push	r17
    2384:	7b 01       	movw	r14, r22
    2386:	8c 01       	movw	r16, r24
    2388:	80 e0       	ldi	r24, 0x00	; 0
    238a:	e8 16       	cp	r14, r24
    238c:	80 e0       	ldi	r24, 0x00	; 0
    238e:	f8 06       	cpc	r15, r24
    2390:	81 e0       	ldi	r24, 0x01	; 1
    2392:	08 07       	cpc	r16, r24
    2394:	80 e0       	ldi	r24, 0x00	; 0
    2396:	18 07       	cpc	r17, r24
    2398:	88 f4       	brcc	.+34     	; 0x23bc <__clzsi2+0x40>
    239a:	8f ef       	ldi	r24, 0xFF	; 255
    239c:	e8 16       	cp	r14, r24
    239e:	f1 04       	cpc	r15, r1
    23a0:	01 05       	cpc	r16, r1
    23a2:	11 05       	cpc	r17, r1
    23a4:	31 f0       	breq	.+12     	; 0x23b2 <__clzsi2+0x36>
    23a6:	28 f0       	brcs	.+10     	; 0x23b2 <__clzsi2+0x36>
    23a8:	88 e0       	ldi	r24, 0x08	; 8
    23aa:	90 e0       	ldi	r25, 0x00	; 0
    23ac:	a0 e0       	ldi	r26, 0x00	; 0
    23ae:	b0 e0       	ldi	r27, 0x00	; 0
    23b0:	17 c0       	rjmp	.+46     	; 0x23e0 <__clzsi2+0x64>
    23b2:	80 e0       	ldi	r24, 0x00	; 0
    23b4:	90 e0       	ldi	r25, 0x00	; 0
    23b6:	a0 e0       	ldi	r26, 0x00	; 0
    23b8:	b0 e0       	ldi	r27, 0x00	; 0
    23ba:	12 c0       	rjmp	.+36     	; 0x23e0 <__clzsi2+0x64>
    23bc:	80 e0       	ldi	r24, 0x00	; 0
    23be:	e8 16       	cp	r14, r24
    23c0:	80 e0       	ldi	r24, 0x00	; 0
    23c2:	f8 06       	cpc	r15, r24
    23c4:	80 e0       	ldi	r24, 0x00	; 0
    23c6:	08 07       	cpc	r16, r24
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	18 07       	cpc	r17, r24
    23cc:	28 f0       	brcs	.+10     	; 0x23d8 <__clzsi2+0x5c>
    23ce:	88 e1       	ldi	r24, 0x18	; 24
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	a0 e0       	ldi	r26, 0x00	; 0
    23d4:	b0 e0       	ldi	r27, 0x00	; 0
    23d6:	04 c0       	rjmp	.+8      	; 0x23e0 <__clzsi2+0x64>
    23d8:	80 e1       	ldi	r24, 0x10	; 16
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	a0 e0       	ldi	r26, 0x00	; 0
    23de:	b0 e0       	ldi	r27, 0x00	; 0
    23e0:	20 e2       	ldi	r18, 0x20	; 32
    23e2:	30 e0       	ldi	r19, 0x00	; 0
    23e4:	40 e0       	ldi	r20, 0x00	; 0
    23e6:	50 e0       	ldi	r21, 0x00	; 0
    23e8:	28 1b       	sub	r18, r24
    23ea:	39 0b       	sbc	r19, r25
    23ec:	4a 0b       	sbc	r20, r26
    23ee:	5b 0b       	sbc	r21, r27
    23f0:	04 c0       	rjmp	.+8      	; 0x23fa <__clzsi2+0x7e>
    23f2:	16 95       	lsr	r17
    23f4:	07 95       	ror	r16
    23f6:	f7 94       	ror	r15
    23f8:	e7 94       	ror	r14
    23fa:	8a 95       	dec	r24
    23fc:	d2 f7       	brpl	.-12     	; 0x23f2 <__clzsi2+0x76>
    23fe:	f7 01       	movw	r30, r14
    2400:	ea 57       	subi	r30, 0x7A	; 122
    2402:	ff 4f       	sbci	r31, 0xFF	; 255
    2404:	80 81       	ld	r24, Z
    2406:	28 1b       	sub	r18, r24
    2408:	31 09       	sbc	r19, r1
    240a:	41 09       	sbc	r20, r1
    240c:	51 09       	sbc	r21, r1
    240e:	c9 01       	movw	r24, r18
    2410:	1f 91       	pop	r17
    2412:	0f 91       	pop	r16
    2414:	ff 90       	pop	r15
    2416:	ef 90       	pop	r14
    2418:	08 95       	ret

0000241a <__pack_f>:
    241a:	df 92       	push	r13
    241c:	ef 92       	push	r14
    241e:	ff 92       	push	r15
    2420:	0f 93       	push	r16
    2422:	1f 93       	push	r17
    2424:	fc 01       	movw	r30, r24
    2426:	e4 80       	ldd	r14, Z+4	; 0x04
    2428:	f5 80       	ldd	r15, Z+5	; 0x05
    242a:	06 81       	ldd	r16, Z+6	; 0x06
    242c:	17 81       	ldd	r17, Z+7	; 0x07
    242e:	d1 80       	ldd	r13, Z+1	; 0x01
    2430:	80 81       	ld	r24, Z
    2432:	82 30       	cpi	r24, 0x02	; 2
    2434:	48 f4       	brcc	.+18     	; 0x2448 <__pack_f+0x2e>
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	a0 e1       	ldi	r26, 0x10	; 16
    243c:	b0 e0       	ldi	r27, 0x00	; 0
    243e:	e8 2a       	or	r14, r24
    2440:	f9 2a       	or	r15, r25
    2442:	0a 2b       	or	r16, r26
    2444:	1b 2b       	or	r17, r27
    2446:	a5 c0       	rjmp	.+330    	; 0x2592 <__pack_f+0x178>
    2448:	84 30       	cpi	r24, 0x04	; 4
    244a:	09 f4       	brne	.+2      	; 0x244e <__pack_f+0x34>
    244c:	9f c0       	rjmp	.+318    	; 0x258c <__pack_f+0x172>
    244e:	82 30       	cpi	r24, 0x02	; 2
    2450:	21 f4       	brne	.+8      	; 0x245a <__pack_f+0x40>
    2452:	ee 24       	eor	r14, r14
    2454:	ff 24       	eor	r15, r15
    2456:	87 01       	movw	r16, r14
    2458:	05 c0       	rjmp	.+10     	; 0x2464 <__pack_f+0x4a>
    245a:	e1 14       	cp	r14, r1
    245c:	f1 04       	cpc	r15, r1
    245e:	01 05       	cpc	r16, r1
    2460:	11 05       	cpc	r17, r1
    2462:	19 f4       	brne	.+6      	; 0x246a <__pack_f+0x50>
    2464:	e0 e0       	ldi	r30, 0x00	; 0
    2466:	f0 e0       	ldi	r31, 0x00	; 0
    2468:	96 c0       	rjmp	.+300    	; 0x2596 <__pack_f+0x17c>
    246a:	62 81       	ldd	r22, Z+2	; 0x02
    246c:	73 81       	ldd	r23, Z+3	; 0x03
    246e:	9f ef       	ldi	r25, 0xFF	; 255
    2470:	62 38       	cpi	r22, 0x82	; 130
    2472:	79 07       	cpc	r23, r25
    2474:	0c f0       	brlt	.+2      	; 0x2478 <__pack_f+0x5e>
    2476:	5b c0       	rjmp	.+182    	; 0x252e <__pack_f+0x114>
    2478:	22 e8       	ldi	r18, 0x82	; 130
    247a:	3f ef       	ldi	r19, 0xFF	; 255
    247c:	26 1b       	sub	r18, r22
    247e:	37 0b       	sbc	r19, r23
    2480:	2a 31       	cpi	r18, 0x1A	; 26
    2482:	31 05       	cpc	r19, r1
    2484:	2c f0       	brlt	.+10     	; 0x2490 <__pack_f+0x76>
    2486:	20 e0       	ldi	r18, 0x00	; 0
    2488:	30 e0       	ldi	r19, 0x00	; 0
    248a:	40 e0       	ldi	r20, 0x00	; 0
    248c:	50 e0       	ldi	r21, 0x00	; 0
    248e:	2a c0       	rjmp	.+84     	; 0x24e4 <__pack_f+0xca>
    2490:	b8 01       	movw	r22, r16
    2492:	a7 01       	movw	r20, r14
    2494:	02 2e       	mov	r0, r18
    2496:	04 c0       	rjmp	.+8      	; 0x24a0 <__pack_f+0x86>
    2498:	76 95       	lsr	r23
    249a:	67 95       	ror	r22
    249c:	57 95       	ror	r21
    249e:	47 95       	ror	r20
    24a0:	0a 94       	dec	r0
    24a2:	d2 f7       	brpl	.-12     	; 0x2498 <__pack_f+0x7e>
    24a4:	81 e0       	ldi	r24, 0x01	; 1
    24a6:	90 e0       	ldi	r25, 0x00	; 0
    24a8:	a0 e0       	ldi	r26, 0x00	; 0
    24aa:	b0 e0       	ldi	r27, 0x00	; 0
    24ac:	04 c0       	rjmp	.+8      	; 0x24b6 <__pack_f+0x9c>
    24ae:	88 0f       	add	r24, r24
    24b0:	99 1f       	adc	r25, r25
    24b2:	aa 1f       	adc	r26, r26
    24b4:	bb 1f       	adc	r27, r27
    24b6:	2a 95       	dec	r18
    24b8:	d2 f7       	brpl	.-12     	; 0x24ae <__pack_f+0x94>
    24ba:	01 97       	sbiw	r24, 0x01	; 1
    24bc:	a1 09       	sbc	r26, r1
    24be:	b1 09       	sbc	r27, r1
    24c0:	8e 21       	and	r24, r14
    24c2:	9f 21       	and	r25, r15
    24c4:	a0 23       	and	r26, r16
    24c6:	b1 23       	and	r27, r17
    24c8:	00 97       	sbiw	r24, 0x00	; 0
    24ca:	a1 05       	cpc	r26, r1
    24cc:	b1 05       	cpc	r27, r1
    24ce:	21 f0       	breq	.+8      	; 0x24d8 <__pack_f+0xbe>
    24d0:	81 e0       	ldi	r24, 0x01	; 1
    24d2:	90 e0       	ldi	r25, 0x00	; 0
    24d4:	a0 e0       	ldi	r26, 0x00	; 0
    24d6:	b0 e0       	ldi	r27, 0x00	; 0
    24d8:	9a 01       	movw	r18, r20
    24da:	ab 01       	movw	r20, r22
    24dc:	28 2b       	or	r18, r24
    24de:	39 2b       	or	r19, r25
    24e0:	4a 2b       	or	r20, r26
    24e2:	5b 2b       	or	r21, r27
    24e4:	da 01       	movw	r26, r20
    24e6:	c9 01       	movw	r24, r18
    24e8:	8f 77       	andi	r24, 0x7F	; 127
    24ea:	90 70       	andi	r25, 0x00	; 0
    24ec:	a0 70       	andi	r26, 0x00	; 0
    24ee:	b0 70       	andi	r27, 0x00	; 0
    24f0:	80 34       	cpi	r24, 0x40	; 64
    24f2:	91 05       	cpc	r25, r1
    24f4:	a1 05       	cpc	r26, r1
    24f6:	b1 05       	cpc	r27, r1
    24f8:	39 f4       	brne	.+14     	; 0x2508 <__pack_f+0xee>
    24fa:	27 ff       	sbrs	r18, 7
    24fc:	09 c0       	rjmp	.+18     	; 0x2510 <__pack_f+0xf6>
    24fe:	20 5c       	subi	r18, 0xC0	; 192
    2500:	3f 4f       	sbci	r19, 0xFF	; 255
    2502:	4f 4f       	sbci	r20, 0xFF	; 255
    2504:	5f 4f       	sbci	r21, 0xFF	; 255
    2506:	04 c0       	rjmp	.+8      	; 0x2510 <__pack_f+0xf6>
    2508:	21 5c       	subi	r18, 0xC1	; 193
    250a:	3f 4f       	sbci	r19, 0xFF	; 255
    250c:	4f 4f       	sbci	r20, 0xFF	; 255
    250e:	5f 4f       	sbci	r21, 0xFF	; 255
    2510:	e0 e0       	ldi	r30, 0x00	; 0
    2512:	f0 e0       	ldi	r31, 0x00	; 0
    2514:	20 30       	cpi	r18, 0x00	; 0
    2516:	a0 e0       	ldi	r26, 0x00	; 0
    2518:	3a 07       	cpc	r19, r26
    251a:	a0 e0       	ldi	r26, 0x00	; 0
    251c:	4a 07       	cpc	r20, r26
    251e:	a0 e4       	ldi	r26, 0x40	; 64
    2520:	5a 07       	cpc	r21, r26
    2522:	10 f0       	brcs	.+4      	; 0x2528 <__pack_f+0x10e>
    2524:	e1 e0       	ldi	r30, 0x01	; 1
    2526:	f0 e0       	ldi	r31, 0x00	; 0
    2528:	79 01       	movw	r14, r18
    252a:	8a 01       	movw	r16, r20
    252c:	27 c0       	rjmp	.+78     	; 0x257c <__pack_f+0x162>
    252e:	60 38       	cpi	r22, 0x80	; 128
    2530:	71 05       	cpc	r23, r1
    2532:	64 f5       	brge	.+88     	; 0x258c <__pack_f+0x172>
    2534:	fb 01       	movw	r30, r22
    2536:	e1 58       	subi	r30, 0x81	; 129
    2538:	ff 4f       	sbci	r31, 0xFF	; 255
    253a:	d8 01       	movw	r26, r16
    253c:	c7 01       	movw	r24, r14
    253e:	8f 77       	andi	r24, 0x7F	; 127
    2540:	90 70       	andi	r25, 0x00	; 0
    2542:	a0 70       	andi	r26, 0x00	; 0
    2544:	b0 70       	andi	r27, 0x00	; 0
    2546:	80 34       	cpi	r24, 0x40	; 64
    2548:	91 05       	cpc	r25, r1
    254a:	a1 05       	cpc	r26, r1
    254c:	b1 05       	cpc	r27, r1
    254e:	39 f4       	brne	.+14     	; 0x255e <__pack_f+0x144>
    2550:	e7 fe       	sbrs	r14, 7
    2552:	0d c0       	rjmp	.+26     	; 0x256e <__pack_f+0x154>
    2554:	80 e4       	ldi	r24, 0x40	; 64
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	a0 e0       	ldi	r26, 0x00	; 0
    255a:	b0 e0       	ldi	r27, 0x00	; 0
    255c:	04 c0       	rjmp	.+8      	; 0x2566 <__pack_f+0x14c>
    255e:	8f e3       	ldi	r24, 0x3F	; 63
    2560:	90 e0       	ldi	r25, 0x00	; 0
    2562:	a0 e0       	ldi	r26, 0x00	; 0
    2564:	b0 e0       	ldi	r27, 0x00	; 0
    2566:	e8 0e       	add	r14, r24
    2568:	f9 1e       	adc	r15, r25
    256a:	0a 1f       	adc	r16, r26
    256c:	1b 1f       	adc	r17, r27
    256e:	17 ff       	sbrs	r17, 7
    2570:	05 c0       	rjmp	.+10     	; 0x257c <__pack_f+0x162>
    2572:	16 95       	lsr	r17
    2574:	07 95       	ror	r16
    2576:	f7 94       	ror	r15
    2578:	e7 94       	ror	r14
    257a:	31 96       	adiw	r30, 0x01	; 1
    257c:	87 e0       	ldi	r24, 0x07	; 7
    257e:	16 95       	lsr	r17
    2580:	07 95       	ror	r16
    2582:	f7 94       	ror	r15
    2584:	e7 94       	ror	r14
    2586:	8a 95       	dec	r24
    2588:	d1 f7       	brne	.-12     	; 0x257e <__pack_f+0x164>
    258a:	05 c0       	rjmp	.+10     	; 0x2596 <__pack_f+0x17c>
    258c:	ee 24       	eor	r14, r14
    258e:	ff 24       	eor	r15, r15
    2590:	87 01       	movw	r16, r14
    2592:	ef ef       	ldi	r30, 0xFF	; 255
    2594:	f0 e0       	ldi	r31, 0x00	; 0
    2596:	6e 2f       	mov	r22, r30
    2598:	67 95       	ror	r22
    259a:	66 27       	eor	r22, r22
    259c:	67 95       	ror	r22
    259e:	90 2f       	mov	r25, r16
    25a0:	9f 77       	andi	r25, 0x7F	; 127
    25a2:	d7 94       	ror	r13
    25a4:	dd 24       	eor	r13, r13
    25a6:	d7 94       	ror	r13
    25a8:	8e 2f       	mov	r24, r30
    25aa:	86 95       	lsr	r24
    25ac:	49 2f       	mov	r20, r25
    25ae:	46 2b       	or	r20, r22
    25b0:	58 2f       	mov	r21, r24
    25b2:	5d 29       	or	r21, r13
    25b4:	b7 01       	movw	r22, r14
    25b6:	ca 01       	movw	r24, r20
    25b8:	1f 91       	pop	r17
    25ba:	0f 91       	pop	r16
    25bc:	ff 90       	pop	r15
    25be:	ef 90       	pop	r14
    25c0:	df 90       	pop	r13
    25c2:	08 95       	ret

000025c4 <__unpack_f>:
    25c4:	fc 01       	movw	r30, r24
    25c6:	db 01       	movw	r26, r22
    25c8:	40 81       	ld	r20, Z
    25ca:	51 81       	ldd	r21, Z+1	; 0x01
    25cc:	22 81       	ldd	r18, Z+2	; 0x02
    25ce:	62 2f       	mov	r22, r18
    25d0:	6f 77       	andi	r22, 0x7F	; 127
    25d2:	70 e0       	ldi	r23, 0x00	; 0
    25d4:	22 1f       	adc	r18, r18
    25d6:	22 27       	eor	r18, r18
    25d8:	22 1f       	adc	r18, r18
    25da:	93 81       	ldd	r25, Z+3	; 0x03
    25dc:	89 2f       	mov	r24, r25
    25de:	88 0f       	add	r24, r24
    25e0:	82 2b       	or	r24, r18
    25e2:	28 2f       	mov	r18, r24
    25e4:	30 e0       	ldi	r19, 0x00	; 0
    25e6:	99 1f       	adc	r25, r25
    25e8:	99 27       	eor	r25, r25
    25ea:	99 1f       	adc	r25, r25
    25ec:	11 96       	adiw	r26, 0x01	; 1
    25ee:	9c 93       	st	X, r25
    25f0:	11 97       	sbiw	r26, 0x01	; 1
    25f2:	21 15       	cp	r18, r1
    25f4:	31 05       	cpc	r19, r1
    25f6:	a9 f5       	brne	.+106    	; 0x2662 <__unpack_f+0x9e>
    25f8:	41 15       	cp	r20, r1
    25fa:	51 05       	cpc	r21, r1
    25fc:	61 05       	cpc	r22, r1
    25fe:	71 05       	cpc	r23, r1
    2600:	11 f4       	brne	.+4      	; 0x2606 <__unpack_f+0x42>
    2602:	82 e0       	ldi	r24, 0x02	; 2
    2604:	37 c0       	rjmp	.+110    	; 0x2674 <__unpack_f+0xb0>
    2606:	82 e8       	ldi	r24, 0x82	; 130
    2608:	9f ef       	ldi	r25, 0xFF	; 255
    260a:	13 96       	adiw	r26, 0x03	; 3
    260c:	9c 93       	st	X, r25
    260e:	8e 93       	st	-X, r24
    2610:	12 97       	sbiw	r26, 0x02	; 2
    2612:	9a 01       	movw	r18, r20
    2614:	ab 01       	movw	r20, r22
    2616:	67 e0       	ldi	r22, 0x07	; 7
    2618:	22 0f       	add	r18, r18
    261a:	33 1f       	adc	r19, r19
    261c:	44 1f       	adc	r20, r20
    261e:	55 1f       	adc	r21, r21
    2620:	6a 95       	dec	r22
    2622:	d1 f7       	brne	.-12     	; 0x2618 <__unpack_f+0x54>
    2624:	83 e0       	ldi	r24, 0x03	; 3
    2626:	8c 93       	st	X, r24
    2628:	0d c0       	rjmp	.+26     	; 0x2644 <__unpack_f+0x80>
    262a:	22 0f       	add	r18, r18
    262c:	33 1f       	adc	r19, r19
    262e:	44 1f       	adc	r20, r20
    2630:	55 1f       	adc	r21, r21
    2632:	12 96       	adiw	r26, 0x02	; 2
    2634:	8d 91       	ld	r24, X+
    2636:	9c 91       	ld	r25, X
    2638:	13 97       	sbiw	r26, 0x03	; 3
    263a:	01 97       	sbiw	r24, 0x01	; 1
    263c:	13 96       	adiw	r26, 0x03	; 3
    263e:	9c 93       	st	X, r25
    2640:	8e 93       	st	-X, r24
    2642:	12 97       	sbiw	r26, 0x02	; 2
    2644:	20 30       	cpi	r18, 0x00	; 0
    2646:	80 e0       	ldi	r24, 0x00	; 0
    2648:	38 07       	cpc	r19, r24
    264a:	80 e0       	ldi	r24, 0x00	; 0
    264c:	48 07       	cpc	r20, r24
    264e:	80 e4       	ldi	r24, 0x40	; 64
    2650:	58 07       	cpc	r21, r24
    2652:	58 f3       	brcs	.-42     	; 0x262a <__unpack_f+0x66>
    2654:	14 96       	adiw	r26, 0x04	; 4
    2656:	2d 93       	st	X+, r18
    2658:	3d 93       	st	X+, r19
    265a:	4d 93       	st	X+, r20
    265c:	5c 93       	st	X, r21
    265e:	17 97       	sbiw	r26, 0x07	; 7
    2660:	08 95       	ret
    2662:	2f 3f       	cpi	r18, 0xFF	; 255
    2664:	31 05       	cpc	r19, r1
    2666:	79 f4       	brne	.+30     	; 0x2686 <__unpack_f+0xc2>
    2668:	41 15       	cp	r20, r1
    266a:	51 05       	cpc	r21, r1
    266c:	61 05       	cpc	r22, r1
    266e:	71 05       	cpc	r23, r1
    2670:	19 f4       	brne	.+6      	; 0x2678 <__unpack_f+0xb4>
    2672:	84 e0       	ldi	r24, 0x04	; 4
    2674:	8c 93       	st	X, r24
    2676:	08 95       	ret
    2678:	64 ff       	sbrs	r22, 4
    267a:	03 c0       	rjmp	.+6      	; 0x2682 <__unpack_f+0xbe>
    267c:	81 e0       	ldi	r24, 0x01	; 1
    267e:	8c 93       	st	X, r24
    2680:	12 c0       	rjmp	.+36     	; 0x26a6 <__unpack_f+0xe2>
    2682:	1c 92       	st	X, r1
    2684:	10 c0       	rjmp	.+32     	; 0x26a6 <__unpack_f+0xe2>
    2686:	2f 57       	subi	r18, 0x7F	; 127
    2688:	30 40       	sbci	r19, 0x00	; 0
    268a:	13 96       	adiw	r26, 0x03	; 3
    268c:	3c 93       	st	X, r19
    268e:	2e 93       	st	-X, r18
    2690:	12 97       	sbiw	r26, 0x02	; 2
    2692:	83 e0       	ldi	r24, 0x03	; 3
    2694:	8c 93       	st	X, r24
    2696:	87 e0       	ldi	r24, 0x07	; 7
    2698:	44 0f       	add	r20, r20
    269a:	55 1f       	adc	r21, r21
    269c:	66 1f       	adc	r22, r22
    269e:	77 1f       	adc	r23, r23
    26a0:	8a 95       	dec	r24
    26a2:	d1 f7       	brne	.-12     	; 0x2698 <__unpack_f+0xd4>
    26a4:	70 64       	ori	r23, 0x40	; 64
    26a6:	14 96       	adiw	r26, 0x04	; 4
    26a8:	4d 93       	st	X+, r20
    26aa:	5d 93       	st	X+, r21
    26ac:	6d 93       	st	X+, r22
    26ae:	7c 93       	st	X, r23
    26b0:	17 97       	sbiw	r26, 0x07	; 7
    26b2:	08 95       	ret

000026b4 <__fpcmp_parts_f>:
    26b4:	1f 93       	push	r17
    26b6:	dc 01       	movw	r26, r24
    26b8:	fb 01       	movw	r30, r22
    26ba:	9c 91       	ld	r25, X
    26bc:	92 30       	cpi	r25, 0x02	; 2
    26be:	08 f4       	brcc	.+2      	; 0x26c2 <__fpcmp_parts_f+0xe>
    26c0:	47 c0       	rjmp	.+142    	; 0x2750 <__fpcmp_parts_f+0x9c>
    26c2:	80 81       	ld	r24, Z
    26c4:	82 30       	cpi	r24, 0x02	; 2
    26c6:	08 f4       	brcc	.+2      	; 0x26ca <__fpcmp_parts_f+0x16>
    26c8:	43 c0       	rjmp	.+134    	; 0x2750 <__fpcmp_parts_f+0x9c>
    26ca:	94 30       	cpi	r25, 0x04	; 4
    26cc:	51 f4       	brne	.+20     	; 0x26e2 <__fpcmp_parts_f+0x2e>
    26ce:	11 96       	adiw	r26, 0x01	; 1
    26d0:	1c 91       	ld	r17, X
    26d2:	84 30       	cpi	r24, 0x04	; 4
    26d4:	99 f5       	brne	.+102    	; 0x273c <__fpcmp_parts_f+0x88>
    26d6:	81 81       	ldd	r24, Z+1	; 0x01
    26d8:	68 2f       	mov	r22, r24
    26da:	70 e0       	ldi	r23, 0x00	; 0
    26dc:	61 1b       	sub	r22, r17
    26de:	71 09       	sbc	r23, r1
    26e0:	3f c0       	rjmp	.+126    	; 0x2760 <__fpcmp_parts_f+0xac>
    26e2:	84 30       	cpi	r24, 0x04	; 4
    26e4:	21 f0       	breq	.+8      	; 0x26ee <__fpcmp_parts_f+0x3a>
    26e6:	92 30       	cpi	r25, 0x02	; 2
    26e8:	31 f4       	brne	.+12     	; 0x26f6 <__fpcmp_parts_f+0x42>
    26ea:	82 30       	cpi	r24, 0x02	; 2
    26ec:	b9 f1       	breq	.+110    	; 0x275c <__fpcmp_parts_f+0xa8>
    26ee:	81 81       	ldd	r24, Z+1	; 0x01
    26f0:	88 23       	and	r24, r24
    26f2:	89 f1       	breq	.+98     	; 0x2756 <__fpcmp_parts_f+0xa2>
    26f4:	2d c0       	rjmp	.+90     	; 0x2750 <__fpcmp_parts_f+0x9c>
    26f6:	11 96       	adiw	r26, 0x01	; 1
    26f8:	1c 91       	ld	r17, X
    26fa:	11 97       	sbiw	r26, 0x01	; 1
    26fc:	82 30       	cpi	r24, 0x02	; 2
    26fe:	f1 f0       	breq	.+60     	; 0x273c <__fpcmp_parts_f+0x88>
    2700:	81 81       	ldd	r24, Z+1	; 0x01
    2702:	18 17       	cp	r17, r24
    2704:	d9 f4       	brne	.+54     	; 0x273c <__fpcmp_parts_f+0x88>
    2706:	12 96       	adiw	r26, 0x02	; 2
    2708:	2d 91       	ld	r18, X+
    270a:	3c 91       	ld	r19, X
    270c:	13 97       	sbiw	r26, 0x03	; 3
    270e:	82 81       	ldd	r24, Z+2	; 0x02
    2710:	93 81       	ldd	r25, Z+3	; 0x03
    2712:	82 17       	cp	r24, r18
    2714:	93 07       	cpc	r25, r19
    2716:	94 f0       	brlt	.+36     	; 0x273c <__fpcmp_parts_f+0x88>
    2718:	28 17       	cp	r18, r24
    271a:	39 07       	cpc	r19, r25
    271c:	bc f0       	brlt	.+46     	; 0x274c <__fpcmp_parts_f+0x98>
    271e:	14 96       	adiw	r26, 0x04	; 4
    2720:	8d 91       	ld	r24, X+
    2722:	9d 91       	ld	r25, X+
    2724:	0d 90       	ld	r0, X+
    2726:	bc 91       	ld	r27, X
    2728:	a0 2d       	mov	r26, r0
    272a:	24 81       	ldd	r18, Z+4	; 0x04
    272c:	35 81       	ldd	r19, Z+5	; 0x05
    272e:	46 81       	ldd	r20, Z+6	; 0x06
    2730:	57 81       	ldd	r21, Z+7	; 0x07
    2732:	28 17       	cp	r18, r24
    2734:	39 07       	cpc	r19, r25
    2736:	4a 07       	cpc	r20, r26
    2738:	5b 07       	cpc	r21, r27
    273a:	18 f4       	brcc	.+6      	; 0x2742 <__fpcmp_parts_f+0x8e>
    273c:	11 23       	and	r17, r17
    273e:	41 f0       	breq	.+16     	; 0x2750 <__fpcmp_parts_f+0x9c>
    2740:	0a c0       	rjmp	.+20     	; 0x2756 <__fpcmp_parts_f+0xa2>
    2742:	82 17       	cp	r24, r18
    2744:	93 07       	cpc	r25, r19
    2746:	a4 07       	cpc	r26, r20
    2748:	b5 07       	cpc	r27, r21
    274a:	40 f4       	brcc	.+16     	; 0x275c <__fpcmp_parts_f+0xa8>
    274c:	11 23       	and	r17, r17
    274e:	19 f0       	breq	.+6      	; 0x2756 <__fpcmp_parts_f+0xa2>
    2750:	61 e0       	ldi	r22, 0x01	; 1
    2752:	70 e0       	ldi	r23, 0x00	; 0
    2754:	05 c0       	rjmp	.+10     	; 0x2760 <__fpcmp_parts_f+0xac>
    2756:	6f ef       	ldi	r22, 0xFF	; 255
    2758:	7f ef       	ldi	r23, 0xFF	; 255
    275a:	02 c0       	rjmp	.+4      	; 0x2760 <__fpcmp_parts_f+0xac>
    275c:	60 e0       	ldi	r22, 0x00	; 0
    275e:	70 e0       	ldi	r23, 0x00	; 0
    2760:	cb 01       	movw	r24, r22
    2762:	1f 91       	pop	r17
    2764:	08 95       	ret

00002766 <DIO_u8SetPortDir>:
#include "../../SERV/STD_TYPES.h"
#include "../../SERV/BIT_MATH.h"
#include "Dio_reg.h"
#include "Dio_int.h"

uint8 DIO_u8SetPortDir (uint8 u8PortIdCopy ,uint8 u8DirCopy){
    2766:	df 93       	push	r29
    2768:	cf 93       	push	r28
    276a:	00 d0       	rcall	.+0      	; 0x276c <DIO_u8SetPortDir+0x6>
    276c:	00 d0       	rcall	.+0      	; 0x276e <DIO_u8SetPortDir+0x8>
    276e:	0f 92       	push	r0
    2770:	cd b7       	in	r28, 0x3d	; 61
    2772:	de b7       	in	r29, 0x3e	; 62
    2774:	8a 83       	std	Y+2, r24	; 0x02
    2776:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    2778:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    277a:	8a 81       	ldd	r24, Y+2	; 0x02
    277c:	28 2f       	mov	r18, r24
    277e:	30 e0       	ldi	r19, 0x00	; 0
    2780:	3d 83       	std	Y+5, r19	; 0x05
    2782:	2c 83       	std	Y+4, r18	; 0x04
    2784:	8c 81       	ldd	r24, Y+4	; 0x04
    2786:	9d 81       	ldd	r25, Y+5	; 0x05
    2788:	81 30       	cpi	r24, 0x01	; 1
    278a:	91 05       	cpc	r25, r1
    278c:	d1 f0       	breq	.+52     	; 0x27c2 <DIO_u8SetPortDir+0x5c>
    278e:	2c 81       	ldd	r18, Y+4	; 0x04
    2790:	3d 81       	ldd	r19, Y+5	; 0x05
    2792:	22 30       	cpi	r18, 0x02	; 2
    2794:	31 05       	cpc	r19, r1
    2796:	2c f4       	brge	.+10     	; 0x27a2 <DIO_u8SetPortDir+0x3c>
    2798:	8c 81       	ldd	r24, Y+4	; 0x04
    279a:	9d 81       	ldd	r25, Y+5	; 0x05
    279c:	00 97       	sbiw	r24, 0x00	; 0
    279e:	61 f0       	breq	.+24     	; 0x27b8 <DIO_u8SetPortDir+0x52>
    27a0:	1f c0       	rjmp	.+62     	; 0x27e0 <DIO_u8SetPortDir+0x7a>
    27a2:	2c 81       	ldd	r18, Y+4	; 0x04
    27a4:	3d 81       	ldd	r19, Y+5	; 0x05
    27a6:	22 30       	cpi	r18, 0x02	; 2
    27a8:	31 05       	cpc	r19, r1
    27aa:	81 f0       	breq	.+32     	; 0x27cc <DIO_u8SetPortDir+0x66>
    27ac:	8c 81       	ldd	r24, Y+4	; 0x04
    27ae:	9d 81       	ldd	r25, Y+5	; 0x05
    27b0:	83 30       	cpi	r24, 0x03	; 3
    27b2:	91 05       	cpc	r25, r1
    27b4:	81 f0       	breq	.+32     	; 0x27d6 <DIO_u8SetPortDir+0x70>
    27b6:	14 c0       	rjmp	.+40     	; 0x27e0 <DIO_u8SetPortDir+0x7a>
		case PORT_A :DDRA_REG =u8DirCopy ; break;
    27b8:	ea e3       	ldi	r30, 0x3A	; 58
    27ba:	f0 e0       	ldi	r31, 0x00	; 0
    27bc:	8b 81       	ldd	r24, Y+3	; 0x03
    27be:	80 83       	st	Z, r24
    27c0:	11 c0       	rjmp	.+34     	; 0x27e4 <DIO_u8SetPortDir+0x7e>
		case PORT_B :DDRB_REG =u8DirCopy ; break;
    27c2:	e7 e3       	ldi	r30, 0x37	; 55
    27c4:	f0 e0       	ldi	r31, 0x00	; 0
    27c6:	8b 81       	ldd	r24, Y+3	; 0x03
    27c8:	80 83       	st	Z, r24
    27ca:	0c c0       	rjmp	.+24     	; 0x27e4 <DIO_u8SetPortDir+0x7e>
		case PORT_C :DDRC_REG =u8DirCopy ; break;
    27cc:	e4 e3       	ldi	r30, 0x34	; 52
    27ce:	f0 e0       	ldi	r31, 0x00	; 0
    27d0:	8b 81       	ldd	r24, Y+3	; 0x03
    27d2:	80 83       	st	Z, r24
    27d4:	07 c0       	rjmp	.+14     	; 0x27e4 <DIO_u8SetPortDir+0x7e>
		case PORT_D :DDRD_REG =u8DirCopy ; break;
    27d6:	e1 e3       	ldi	r30, 0x31	; 49
    27d8:	f0 e0       	ldi	r31, 0x00	; 0
    27da:	8b 81       	ldd	r24, Y+3	; 0x03
    27dc:	80 83       	st	Z, r24
    27de:	02 c0       	rjmp	.+4      	; 0x27e4 <DIO_u8SetPortDir+0x7e>
		default     : errStatus =E_NOK   ; break;  	
    27e0:	81 e0       	ldi	r24, 0x01	; 1
    27e2:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    27e4:	89 81       	ldd	r24, Y+1	; 0x01
}
    27e6:	0f 90       	pop	r0
    27e8:	0f 90       	pop	r0
    27ea:	0f 90       	pop	r0
    27ec:	0f 90       	pop	r0
    27ee:	0f 90       	pop	r0
    27f0:	cf 91       	pop	r28
    27f2:	df 91       	pop	r29
    27f4:	08 95       	ret

000027f6 <DIO_u8SetPortVal>:
uint8 DIO_u8SetPortVal (uint8 u8PortIdCopy ,uint8 u8ValCopy){
    27f6:	df 93       	push	r29
    27f8:	cf 93       	push	r28
    27fa:	00 d0       	rcall	.+0      	; 0x27fc <DIO_u8SetPortVal+0x6>
    27fc:	00 d0       	rcall	.+0      	; 0x27fe <DIO_u8SetPortVal+0x8>
    27fe:	0f 92       	push	r0
    2800:	cd b7       	in	r28, 0x3d	; 61
    2802:	de b7       	in	r29, 0x3e	; 62
    2804:	8a 83       	std	Y+2, r24	; 0x02
    2806:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    2808:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    280a:	8a 81       	ldd	r24, Y+2	; 0x02
    280c:	28 2f       	mov	r18, r24
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	3d 83       	std	Y+5, r19	; 0x05
    2812:	2c 83       	std	Y+4, r18	; 0x04
    2814:	8c 81       	ldd	r24, Y+4	; 0x04
    2816:	9d 81       	ldd	r25, Y+5	; 0x05
    2818:	81 30       	cpi	r24, 0x01	; 1
    281a:	91 05       	cpc	r25, r1
    281c:	d1 f0       	breq	.+52     	; 0x2852 <DIO_u8SetPortVal+0x5c>
    281e:	2c 81       	ldd	r18, Y+4	; 0x04
    2820:	3d 81       	ldd	r19, Y+5	; 0x05
    2822:	22 30       	cpi	r18, 0x02	; 2
    2824:	31 05       	cpc	r19, r1
    2826:	2c f4       	brge	.+10     	; 0x2832 <DIO_u8SetPortVal+0x3c>
    2828:	8c 81       	ldd	r24, Y+4	; 0x04
    282a:	9d 81       	ldd	r25, Y+5	; 0x05
    282c:	00 97       	sbiw	r24, 0x00	; 0
    282e:	61 f0       	breq	.+24     	; 0x2848 <DIO_u8SetPortVal+0x52>
    2830:	1f c0       	rjmp	.+62     	; 0x2870 <DIO_u8SetPortVal+0x7a>
    2832:	2c 81       	ldd	r18, Y+4	; 0x04
    2834:	3d 81       	ldd	r19, Y+5	; 0x05
    2836:	22 30       	cpi	r18, 0x02	; 2
    2838:	31 05       	cpc	r19, r1
    283a:	81 f0       	breq	.+32     	; 0x285c <DIO_u8SetPortVal+0x66>
    283c:	8c 81       	ldd	r24, Y+4	; 0x04
    283e:	9d 81       	ldd	r25, Y+5	; 0x05
    2840:	83 30       	cpi	r24, 0x03	; 3
    2842:	91 05       	cpc	r25, r1
    2844:	81 f0       	breq	.+32     	; 0x2866 <DIO_u8SetPortVal+0x70>
    2846:	14 c0       	rjmp	.+40     	; 0x2870 <DIO_u8SetPortVal+0x7a>
		case PORT_A :PORTA_REG =u8ValCopy ; break;
    2848:	eb e3       	ldi	r30, 0x3B	; 59
    284a:	f0 e0       	ldi	r31, 0x00	; 0
    284c:	8b 81       	ldd	r24, Y+3	; 0x03
    284e:	80 83       	st	Z, r24
    2850:	11 c0       	rjmp	.+34     	; 0x2874 <DIO_u8SetPortVal+0x7e>
		case PORT_B :PORTB_REG =u8ValCopy ; break;
    2852:	e8 e3       	ldi	r30, 0x38	; 56
    2854:	f0 e0       	ldi	r31, 0x00	; 0
    2856:	8b 81       	ldd	r24, Y+3	; 0x03
    2858:	80 83       	st	Z, r24
    285a:	0c c0       	rjmp	.+24     	; 0x2874 <DIO_u8SetPortVal+0x7e>
		case PORT_C :PORTC_REG =u8ValCopy ; break;
    285c:	e5 e3       	ldi	r30, 0x35	; 53
    285e:	f0 e0       	ldi	r31, 0x00	; 0
    2860:	8b 81       	ldd	r24, Y+3	; 0x03
    2862:	80 83       	st	Z, r24
    2864:	07 c0       	rjmp	.+14     	; 0x2874 <DIO_u8SetPortVal+0x7e>
		case PORT_D :PORTD_REG =u8ValCopy ; break;
    2866:	e2 e3       	ldi	r30, 0x32	; 50
    2868:	f0 e0       	ldi	r31, 0x00	; 0
    286a:	8b 81       	ldd	r24, Y+3	; 0x03
    286c:	80 83       	st	Z, r24
    286e:	02 c0       	rjmp	.+4      	; 0x2874 <DIO_u8SetPortVal+0x7e>
		default     : errStatus =E_NOK    ; break;  	
    2870:	81 e0       	ldi	r24, 0x01	; 1
    2872:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    2874:	89 81       	ldd	r24, Y+1	; 0x01
}
    2876:	0f 90       	pop	r0
    2878:	0f 90       	pop	r0
    287a:	0f 90       	pop	r0
    287c:	0f 90       	pop	r0
    287e:	0f 90       	pop	r0
    2880:	cf 91       	pop	r28
    2882:	df 91       	pop	r29
    2884:	08 95       	ret

00002886 <DIO_u8GetPortVal>:
uint8 DIO_u8GetPortVal (uint8 u8PortIdCopy ,uint8 * u8pValCopy){
    2886:	df 93       	push	r29
    2888:	cf 93       	push	r28
    288a:	00 d0       	rcall	.+0      	; 0x288c <DIO_u8GetPortVal+0x6>
    288c:	00 d0       	rcall	.+0      	; 0x288e <DIO_u8GetPortVal+0x8>
    288e:	00 d0       	rcall	.+0      	; 0x2890 <DIO_u8GetPortVal+0xa>
    2890:	cd b7       	in	r28, 0x3d	; 61
    2892:	de b7       	in	r29, 0x3e	; 62
    2894:	8a 83       	std	Y+2, r24	; 0x02
    2896:	7c 83       	std	Y+4, r23	; 0x04
    2898:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    289a:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    289c:	8a 81       	ldd	r24, Y+2	; 0x02
    289e:	28 2f       	mov	r18, r24
    28a0:	30 e0       	ldi	r19, 0x00	; 0
    28a2:	3e 83       	std	Y+6, r19	; 0x06
    28a4:	2d 83       	std	Y+5, r18	; 0x05
    28a6:	8d 81       	ldd	r24, Y+5	; 0x05
    28a8:	9e 81       	ldd	r25, Y+6	; 0x06
    28aa:	81 30       	cpi	r24, 0x01	; 1
    28ac:	91 05       	cpc	r25, r1
    28ae:	e1 f0       	breq	.+56     	; 0x28e8 <DIO_u8GetPortVal+0x62>
    28b0:	2d 81       	ldd	r18, Y+5	; 0x05
    28b2:	3e 81       	ldd	r19, Y+6	; 0x06
    28b4:	22 30       	cpi	r18, 0x02	; 2
    28b6:	31 05       	cpc	r19, r1
    28b8:	2c f4       	brge	.+10     	; 0x28c4 <DIO_u8GetPortVal+0x3e>
    28ba:	8d 81       	ldd	r24, Y+5	; 0x05
    28bc:	9e 81       	ldd	r25, Y+6	; 0x06
    28be:	00 97       	sbiw	r24, 0x00	; 0
    28c0:	61 f0       	breq	.+24     	; 0x28da <DIO_u8GetPortVal+0x54>
    28c2:	27 c0       	rjmp	.+78     	; 0x2912 <DIO_u8GetPortVal+0x8c>
    28c4:	2d 81       	ldd	r18, Y+5	; 0x05
    28c6:	3e 81       	ldd	r19, Y+6	; 0x06
    28c8:	22 30       	cpi	r18, 0x02	; 2
    28ca:	31 05       	cpc	r19, r1
    28cc:	a1 f0       	breq	.+40     	; 0x28f6 <DIO_u8GetPortVal+0x70>
    28ce:	8d 81       	ldd	r24, Y+5	; 0x05
    28d0:	9e 81       	ldd	r25, Y+6	; 0x06
    28d2:	83 30       	cpi	r24, 0x03	; 3
    28d4:	91 05       	cpc	r25, r1
    28d6:	b1 f0       	breq	.+44     	; 0x2904 <DIO_u8GetPortVal+0x7e>
    28d8:	1c c0       	rjmp	.+56     	; 0x2912 <DIO_u8GetPortVal+0x8c>
		case PORT_A :* u8pValCopy=PINA_REG  ; break;
    28da:	e9 e3       	ldi	r30, 0x39	; 57
    28dc:	f0 e0       	ldi	r31, 0x00	; 0
    28de:	80 81       	ld	r24, Z
    28e0:	eb 81       	ldd	r30, Y+3	; 0x03
    28e2:	fc 81       	ldd	r31, Y+4	; 0x04
    28e4:	80 83       	st	Z, r24
    28e6:	17 c0       	rjmp	.+46     	; 0x2916 <DIO_u8GetPortVal+0x90>
		case PORT_B :* u8pValCopy=PINB_REG  ; break;
    28e8:	e6 e3       	ldi	r30, 0x36	; 54
    28ea:	f0 e0       	ldi	r31, 0x00	; 0
    28ec:	80 81       	ld	r24, Z
    28ee:	eb 81       	ldd	r30, Y+3	; 0x03
    28f0:	fc 81       	ldd	r31, Y+4	; 0x04
    28f2:	80 83       	st	Z, r24
    28f4:	10 c0       	rjmp	.+32     	; 0x2916 <DIO_u8GetPortVal+0x90>
		case PORT_C :* u8pValCopy=PINC_REG  ; break;
    28f6:	e3 e3       	ldi	r30, 0x33	; 51
    28f8:	f0 e0       	ldi	r31, 0x00	; 0
    28fa:	80 81       	ld	r24, Z
    28fc:	eb 81       	ldd	r30, Y+3	; 0x03
    28fe:	fc 81       	ldd	r31, Y+4	; 0x04
    2900:	80 83       	st	Z, r24
    2902:	09 c0       	rjmp	.+18     	; 0x2916 <DIO_u8GetPortVal+0x90>
		case PORT_D :* u8pValCopy=PIND_REG  ; break;
    2904:	e0 e3       	ldi	r30, 0x30	; 48
    2906:	f0 e0       	ldi	r31, 0x00	; 0
    2908:	80 81       	ld	r24, Z
    290a:	eb 81       	ldd	r30, Y+3	; 0x03
    290c:	fc 81       	ldd	r31, Y+4	; 0x04
    290e:	80 83       	st	Z, r24
    2910:	02 c0       	rjmp	.+4      	; 0x2916 <DIO_u8GetPortVal+0x90>
		default     : errStatus =E_NOK      ; break;  	
    2912:	81 e0       	ldi	r24, 0x01	; 1
    2914:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    2916:	89 81       	ldd	r24, Y+1	; 0x01
}
    2918:	26 96       	adiw	r28, 0x06	; 6
    291a:	0f b6       	in	r0, 0x3f	; 63
    291c:	f8 94       	cli
    291e:	de bf       	out	0x3e, r29	; 62
    2920:	0f be       	out	0x3f, r0	; 63
    2922:	cd bf       	out	0x3d, r28	; 61
    2924:	cf 91       	pop	r28
    2926:	df 91       	pop	r29
    2928:	08 95       	ret

0000292a <DIO_u8SetPinDir>:

uint8 DIO_u8SetPinDir (uint8 u8PortIdCopy ,uint8 u8PinIdCopy,uint8 u8DirCopy ){
    292a:	df 93       	push	r29
    292c:	cf 93       	push	r28
    292e:	cd b7       	in	r28, 0x3d	; 61
    2930:	de b7       	in	r29, 0x3e	; 62
    2932:	28 97       	sbiw	r28, 0x08	; 8
    2934:	0f b6       	in	r0, 0x3f	; 63
    2936:	f8 94       	cli
    2938:	de bf       	out	0x3e, r29	; 62
    293a:	0f be       	out	0x3f, r0	; 63
    293c:	cd bf       	out	0x3d, r28	; 61
    293e:	8a 83       	std	Y+2, r24	; 0x02
    2940:	6b 83       	std	Y+3, r22	; 0x03
    2942:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    2944:	19 82       	std	Y+1, r1	; 0x01
	if (u8PinIdCopy>=PIN_0&&u8PinIdCopy<=PIN_7){
    2946:	8b 81       	ldd	r24, Y+3	; 0x03
    2948:	88 30       	cpi	r24, 0x08	; 8
    294a:	08 f0       	brcs	.+2      	; 0x294e <DIO_u8SetPinDir+0x24>
    294c:	f3 c0       	rjmp	.+486    	; 0x2b34 <DIO_u8SetPinDir+0x20a>
		if(u8DirCopy==INPUT){
    294e:	8c 81       	ldd	r24, Y+4	; 0x04
    2950:	88 23       	and	r24, r24
    2952:	09 f0       	breq	.+2      	; 0x2956 <DIO_u8SetPinDir+0x2c>
    2954:	77 c0       	rjmp	.+238    	; 0x2a44 <DIO_u8SetPinDir+0x11a>
			switch(u8PortIdCopy){
    2956:	8a 81       	ldd	r24, Y+2	; 0x02
    2958:	28 2f       	mov	r18, r24
    295a:	30 e0       	ldi	r19, 0x00	; 0
    295c:	38 87       	std	Y+8, r19	; 0x08
    295e:	2f 83       	std	Y+7, r18	; 0x07
    2960:	8f 81       	ldd	r24, Y+7	; 0x07
    2962:	98 85       	ldd	r25, Y+8	; 0x08
    2964:	81 30       	cpi	r24, 0x01	; 1
    2966:	91 05       	cpc	r25, r1
    2968:	59 f1       	breq	.+86     	; 0x29c0 <DIO_u8SetPinDir+0x96>
    296a:	2f 81       	ldd	r18, Y+7	; 0x07
    296c:	38 85       	ldd	r19, Y+8	; 0x08
    296e:	22 30       	cpi	r18, 0x02	; 2
    2970:	31 05       	cpc	r19, r1
    2972:	2c f4       	brge	.+10     	; 0x297e <DIO_u8SetPinDir+0x54>
    2974:	8f 81       	ldd	r24, Y+7	; 0x07
    2976:	98 85       	ldd	r25, Y+8	; 0x08
    2978:	00 97       	sbiw	r24, 0x00	; 0
    297a:	69 f0       	breq	.+26     	; 0x2996 <DIO_u8SetPinDir+0x6c>
    297c:	60 c0       	rjmp	.+192    	; 0x2a3e <DIO_u8SetPinDir+0x114>
    297e:	2f 81       	ldd	r18, Y+7	; 0x07
    2980:	38 85       	ldd	r19, Y+8	; 0x08
    2982:	22 30       	cpi	r18, 0x02	; 2
    2984:	31 05       	cpc	r19, r1
    2986:	89 f1       	breq	.+98     	; 0x29ea <DIO_u8SetPinDir+0xc0>
    2988:	8f 81       	ldd	r24, Y+7	; 0x07
    298a:	98 85       	ldd	r25, Y+8	; 0x08
    298c:	83 30       	cpi	r24, 0x03	; 3
    298e:	91 05       	cpc	r25, r1
    2990:	09 f4       	brne	.+2      	; 0x2994 <DIO_u8SetPinDir+0x6a>
    2992:	40 c0       	rjmp	.+128    	; 0x2a14 <DIO_u8SetPinDir+0xea>
    2994:	54 c0       	rjmp	.+168    	; 0x2a3e <DIO_u8SetPinDir+0x114>
				case PORT_A :CLR_BIT(DDRA_REG,u8PinIdCopy); break;
    2996:	aa e3       	ldi	r26, 0x3A	; 58
    2998:	b0 e0       	ldi	r27, 0x00	; 0
    299a:	ea e3       	ldi	r30, 0x3A	; 58
    299c:	f0 e0       	ldi	r31, 0x00	; 0
    299e:	80 81       	ld	r24, Z
    29a0:	48 2f       	mov	r20, r24
    29a2:	8b 81       	ldd	r24, Y+3	; 0x03
    29a4:	28 2f       	mov	r18, r24
    29a6:	30 e0       	ldi	r19, 0x00	; 0
    29a8:	81 e0       	ldi	r24, 0x01	; 1
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	02 2e       	mov	r0, r18
    29ae:	02 c0       	rjmp	.+4      	; 0x29b4 <DIO_u8SetPinDir+0x8a>
    29b0:	88 0f       	add	r24, r24
    29b2:	99 1f       	adc	r25, r25
    29b4:	0a 94       	dec	r0
    29b6:	e2 f7       	brpl	.-8      	; 0x29b0 <DIO_u8SetPinDir+0x86>
    29b8:	80 95       	com	r24
    29ba:	84 23       	and	r24, r20
    29bc:	8c 93       	st	X, r24
    29be:	ba c0       	rjmp	.+372    	; 0x2b34 <DIO_u8SetPinDir+0x20a>
				case PORT_B :CLR_BIT(DDRB_REG,u8PinIdCopy); break;
    29c0:	a7 e3       	ldi	r26, 0x37	; 55
    29c2:	b0 e0       	ldi	r27, 0x00	; 0
    29c4:	e7 e3       	ldi	r30, 0x37	; 55
    29c6:	f0 e0       	ldi	r31, 0x00	; 0
    29c8:	80 81       	ld	r24, Z
    29ca:	48 2f       	mov	r20, r24
    29cc:	8b 81       	ldd	r24, Y+3	; 0x03
    29ce:	28 2f       	mov	r18, r24
    29d0:	30 e0       	ldi	r19, 0x00	; 0
    29d2:	81 e0       	ldi	r24, 0x01	; 1
    29d4:	90 e0       	ldi	r25, 0x00	; 0
    29d6:	02 2e       	mov	r0, r18
    29d8:	02 c0       	rjmp	.+4      	; 0x29de <DIO_u8SetPinDir+0xb4>
    29da:	88 0f       	add	r24, r24
    29dc:	99 1f       	adc	r25, r25
    29de:	0a 94       	dec	r0
    29e0:	e2 f7       	brpl	.-8      	; 0x29da <DIO_u8SetPinDir+0xb0>
    29e2:	80 95       	com	r24
    29e4:	84 23       	and	r24, r20
    29e6:	8c 93       	st	X, r24
    29e8:	a5 c0       	rjmp	.+330    	; 0x2b34 <DIO_u8SetPinDir+0x20a>
				case PORT_C :CLR_BIT(DDRC_REG,u8PinIdCopy); break;
    29ea:	a4 e3       	ldi	r26, 0x34	; 52
    29ec:	b0 e0       	ldi	r27, 0x00	; 0
    29ee:	e4 e3       	ldi	r30, 0x34	; 52
    29f0:	f0 e0       	ldi	r31, 0x00	; 0
    29f2:	80 81       	ld	r24, Z
    29f4:	48 2f       	mov	r20, r24
    29f6:	8b 81       	ldd	r24, Y+3	; 0x03
    29f8:	28 2f       	mov	r18, r24
    29fa:	30 e0       	ldi	r19, 0x00	; 0
    29fc:	81 e0       	ldi	r24, 0x01	; 1
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	02 2e       	mov	r0, r18
    2a02:	02 c0       	rjmp	.+4      	; 0x2a08 <DIO_u8SetPinDir+0xde>
    2a04:	88 0f       	add	r24, r24
    2a06:	99 1f       	adc	r25, r25
    2a08:	0a 94       	dec	r0
    2a0a:	e2 f7       	brpl	.-8      	; 0x2a04 <DIO_u8SetPinDir+0xda>
    2a0c:	80 95       	com	r24
    2a0e:	84 23       	and	r24, r20
    2a10:	8c 93       	st	X, r24
    2a12:	90 c0       	rjmp	.+288    	; 0x2b34 <DIO_u8SetPinDir+0x20a>
				case PORT_D :CLR_BIT(DDRD_REG,u8PinIdCopy); break;
    2a14:	a1 e3       	ldi	r26, 0x31	; 49
    2a16:	b0 e0       	ldi	r27, 0x00	; 0
    2a18:	e1 e3       	ldi	r30, 0x31	; 49
    2a1a:	f0 e0       	ldi	r31, 0x00	; 0
    2a1c:	80 81       	ld	r24, Z
    2a1e:	48 2f       	mov	r20, r24
    2a20:	8b 81       	ldd	r24, Y+3	; 0x03
    2a22:	28 2f       	mov	r18, r24
    2a24:	30 e0       	ldi	r19, 0x00	; 0
    2a26:	81 e0       	ldi	r24, 0x01	; 1
    2a28:	90 e0       	ldi	r25, 0x00	; 0
    2a2a:	02 2e       	mov	r0, r18
    2a2c:	02 c0       	rjmp	.+4      	; 0x2a32 <DIO_u8SetPinDir+0x108>
    2a2e:	88 0f       	add	r24, r24
    2a30:	99 1f       	adc	r25, r25
    2a32:	0a 94       	dec	r0
    2a34:	e2 f7       	brpl	.-8      	; 0x2a2e <DIO_u8SetPinDir+0x104>
    2a36:	80 95       	com	r24
    2a38:	84 23       	and	r24, r20
    2a3a:	8c 93       	st	X, r24
    2a3c:	7b c0       	rjmp	.+246    	; 0x2b34 <DIO_u8SetPinDir+0x20a>
				default     :errStatus =E_NOK             ; break;
    2a3e:	81 e0       	ldi	r24, 0x01	; 1
    2a40:	89 83       	std	Y+1, r24	; 0x01
    2a42:	78 c0       	rjmp	.+240    	; 0x2b34 <DIO_u8SetPinDir+0x20a>
			}
		}
		else if (u8DirCopy==OUTPUT){
    2a44:	8c 81       	ldd	r24, Y+4	; 0x04
    2a46:	81 30       	cpi	r24, 0x01	; 1
    2a48:	09 f0       	breq	.+2      	; 0x2a4c <DIO_u8SetPinDir+0x122>
    2a4a:	72 c0       	rjmp	.+228    	; 0x2b30 <DIO_u8SetPinDir+0x206>
			switch(u8PortIdCopy){
    2a4c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a4e:	28 2f       	mov	r18, r24
    2a50:	30 e0       	ldi	r19, 0x00	; 0
    2a52:	3e 83       	std	Y+6, r19	; 0x06
    2a54:	2d 83       	std	Y+5, r18	; 0x05
    2a56:	8d 81       	ldd	r24, Y+5	; 0x05
    2a58:	9e 81       	ldd	r25, Y+6	; 0x06
    2a5a:	81 30       	cpi	r24, 0x01	; 1
    2a5c:	91 05       	cpc	r25, r1
    2a5e:	49 f1       	breq	.+82     	; 0x2ab2 <DIO_u8SetPinDir+0x188>
    2a60:	2d 81       	ldd	r18, Y+5	; 0x05
    2a62:	3e 81       	ldd	r19, Y+6	; 0x06
    2a64:	22 30       	cpi	r18, 0x02	; 2
    2a66:	31 05       	cpc	r19, r1
    2a68:	2c f4       	brge	.+10     	; 0x2a74 <DIO_u8SetPinDir+0x14a>
    2a6a:	8d 81       	ldd	r24, Y+5	; 0x05
    2a6c:	9e 81       	ldd	r25, Y+6	; 0x06
    2a6e:	00 97       	sbiw	r24, 0x00	; 0
    2a70:	61 f0       	breq	.+24     	; 0x2a8a <DIO_u8SetPinDir+0x160>
    2a72:	5b c0       	rjmp	.+182    	; 0x2b2a <DIO_u8SetPinDir+0x200>
    2a74:	2d 81       	ldd	r18, Y+5	; 0x05
    2a76:	3e 81       	ldd	r19, Y+6	; 0x06
    2a78:	22 30       	cpi	r18, 0x02	; 2
    2a7a:	31 05       	cpc	r19, r1
    2a7c:	71 f1       	breq	.+92     	; 0x2ada <DIO_u8SetPinDir+0x1b0>
    2a7e:	8d 81       	ldd	r24, Y+5	; 0x05
    2a80:	9e 81       	ldd	r25, Y+6	; 0x06
    2a82:	83 30       	cpi	r24, 0x03	; 3
    2a84:	91 05       	cpc	r25, r1
    2a86:	e9 f1       	breq	.+122    	; 0x2b02 <DIO_u8SetPinDir+0x1d8>
    2a88:	50 c0       	rjmp	.+160    	; 0x2b2a <DIO_u8SetPinDir+0x200>
				case PORT_A :SET_BIT(DDRA_REG,u8PinIdCopy); break;
    2a8a:	aa e3       	ldi	r26, 0x3A	; 58
    2a8c:	b0 e0       	ldi	r27, 0x00	; 0
    2a8e:	ea e3       	ldi	r30, 0x3A	; 58
    2a90:	f0 e0       	ldi	r31, 0x00	; 0
    2a92:	80 81       	ld	r24, Z
    2a94:	48 2f       	mov	r20, r24
    2a96:	8b 81       	ldd	r24, Y+3	; 0x03
    2a98:	28 2f       	mov	r18, r24
    2a9a:	30 e0       	ldi	r19, 0x00	; 0
    2a9c:	81 e0       	ldi	r24, 0x01	; 1
    2a9e:	90 e0       	ldi	r25, 0x00	; 0
    2aa0:	02 2e       	mov	r0, r18
    2aa2:	02 c0       	rjmp	.+4      	; 0x2aa8 <DIO_u8SetPinDir+0x17e>
    2aa4:	88 0f       	add	r24, r24
    2aa6:	99 1f       	adc	r25, r25
    2aa8:	0a 94       	dec	r0
    2aaa:	e2 f7       	brpl	.-8      	; 0x2aa4 <DIO_u8SetPinDir+0x17a>
    2aac:	84 2b       	or	r24, r20
    2aae:	8c 93       	st	X, r24
    2ab0:	41 c0       	rjmp	.+130    	; 0x2b34 <DIO_u8SetPinDir+0x20a>
				case PORT_B :SET_BIT(DDRB_REG,u8PinIdCopy); break;
    2ab2:	a7 e3       	ldi	r26, 0x37	; 55
    2ab4:	b0 e0       	ldi	r27, 0x00	; 0
    2ab6:	e7 e3       	ldi	r30, 0x37	; 55
    2ab8:	f0 e0       	ldi	r31, 0x00	; 0
    2aba:	80 81       	ld	r24, Z
    2abc:	48 2f       	mov	r20, r24
    2abe:	8b 81       	ldd	r24, Y+3	; 0x03
    2ac0:	28 2f       	mov	r18, r24
    2ac2:	30 e0       	ldi	r19, 0x00	; 0
    2ac4:	81 e0       	ldi	r24, 0x01	; 1
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	02 2e       	mov	r0, r18
    2aca:	02 c0       	rjmp	.+4      	; 0x2ad0 <DIO_u8SetPinDir+0x1a6>
    2acc:	88 0f       	add	r24, r24
    2ace:	99 1f       	adc	r25, r25
    2ad0:	0a 94       	dec	r0
    2ad2:	e2 f7       	brpl	.-8      	; 0x2acc <DIO_u8SetPinDir+0x1a2>
    2ad4:	84 2b       	or	r24, r20
    2ad6:	8c 93       	st	X, r24
    2ad8:	2d c0       	rjmp	.+90     	; 0x2b34 <DIO_u8SetPinDir+0x20a>
				case PORT_C :SET_BIT(DDRC_REG,u8PinIdCopy); break;
    2ada:	a4 e3       	ldi	r26, 0x34	; 52
    2adc:	b0 e0       	ldi	r27, 0x00	; 0
    2ade:	e4 e3       	ldi	r30, 0x34	; 52
    2ae0:	f0 e0       	ldi	r31, 0x00	; 0
    2ae2:	80 81       	ld	r24, Z
    2ae4:	48 2f       	mov	r20, r24
    2ae6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ae8:	28 2f       	mov	r18, r24
    2aea:	30 e0       	ldi	r19, 0x00	; 0
    2aec:	81 e0       	ldi	r24, 0x01	; 1
    2aee:	90 e0       	ldi	r25, 0x00	; 0
    2af0:	02 2e       	mov	r0, r18
    2af2:	02 c0       	rjmp	.+4      	; 0x2af8 <DIO_u8SetPinDir+0x1ce>
    2af4:	88 0f       	add	r24, r24
    2af6:	99 1f       	adc	r25, r25
    2af8:	0a 94       	dec	r0
    2afa:	e2 f7       	brpl	.-8      	; 0x2af4 <DIO_u8SetPinDir+0x1ca>
    2afc:	84 2b       	or	r24, r20
    2afe:	8c 93       	st	X, r24
    2b00:	19 c0       	rjmp	.+50     	; 0x2b34 <DIO_u8SetPinDir+0x20a>
				case PORT_D :SET_BIT(DDRD_REG,u8PinIdCopy); break;
    2b02:	a1 e3       	ldi	r26, 0x31	; 49
    2b04:	b0 e0       	ldi	r27, 0x00	; 0
    2b06:	e1 e3       	ldi	r30, 0x31	; 49
    2b08:	f0 e0       	ldi	r31, 0x00	; 0
    2b0a:	80 81       	ld	r24, Z
    2b0c:	48 2f       	mov	r20, r24
    2b0e:	8b 81       	ldd	r24, Y+3	; 0x03
    2b10:	28 2f       	mov	r18, r24
    2b12:	30 e0       	ldi	r19, 0x00	; 0
    2b14:	81 e0       	ldi	r24, 0x01	; 1
    2b16:	90 e0       	ldi	r25, 0x00	; 0
    2b18:	02 2e       	mov	r0, r18
    2b1a:	02 c0       	rjmp	.+4      	; 0x2b20 <DIO_u8SetPinDir+0x1f6>
    2b1c:	88 0f       	add	r24, r24
    2b1e:	99 1f       	adc	r25, r25
    2b20:	0a 94       	dec	r0
    2b22:	e2 f7       	brpl	.-8      	; 0x2b1c <DIO_u8SetPinDir+0x1f2>
    2b24:	84 2b       	or	r24, r20
    2b26:	8c 93       	st	X, r24
    2b28:	05 c0       	rjmp	.+10     	; 0x2b34 <DIO_u8SetPinDir+0x20a>
				default     :errStatus =E_NOK             ; break;
    2b2a:	81 e0       	ldi	r24, 0x01	; 1
    2b2c:	89 83       	std	Y+1, r24	; 0x01
    2b2e:	02 c0       	rjmp	.+4      	; 0x2b34 <DIO_u8SetPinDir+0x20a>
			}
		}
		else {
			errStatus =E_NOK;
    2b30:	81 e0       	ldi	r24, 0x01	; 1
    2b32:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return errStatus;
    2b34:	89 81       	ldd	r24, Y+1	; 0x01
}
    2b36:	28 96       	adiw	r28, 0x08	; 8
    2b38:	0f b6       	in	r0, 0x3f	; 63
    2b3a:	f8 94       	cli
    2b3c:	de bf       	out	0x3e, r29	; 62
    2b3e:	0f be       	out	0x3f, r0	; 63
    2b40:	cd bf       	out	0x3d, r28	; 61
    2b42:	cf 91       	pop	r28
    2b44:	df 91       	pop	r29
    2b46:	08 95       	ret

00002b48 <DIO_u8SetPinVal>:

uint8 DIO_u8SetPinVal (uint8 u8PortIdCopy ,uint8 u8PinIdCopy,uint8 u8ValCopy ){
    2b48:	df 93       	push	r29
    2b4a:	cf 93       	push	r28
    2b4c:	cd b7       	in	r28, 0x3d	; 61
    2b4e:	de b7       	in	r29, 0x3e	; 62
    2b50:	28 97       	sbiw	r28, 0x08	; 8
    2b52:	0f b6       	in	r0, 0x3f	; 63
    2b54:	f8 94       	cli
    2b56:	de bf       	out	0x3e, r29	; 62
    2b58:	0f be       	out	0x3f, r0	; 63
    2b5a:	cd bf       	out	0x3d, r28	; 61
    2b5c:	8a 83       	std	Y+2, r24	; 0x02
    2b5e:	6b 83       	std	Y+3, r22	; 0x03
    2b60:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    2b62:	19 82       	std	Y+1, r1	; 0x01
		if (u8PinIdCopy>=PIN_0&&u8PinIdCopy<=PIN_7){
    2b64:	8b 81       	ldd	r24, Y+3	; 0x03
    2b66:	88 30       	cpi	r24, 0x08	; 8
    2b68:	08 f0       	brcs	.+2      	; 0x2b6c <DIO_u8SetPinVal+0x24>
    2b6a:	f3 c0       	rjmp	.+486    	; 0x2d52 <DIO_u8SetPinVal+0x20a>
		if(u8ValCopy ==LOW){
    2b6c:	8c 81       	ldd	r24, Y+4	; 0x04
    2b6e:	88 23       	and	r24, r24
    2b70:	09 f0       	breq	.+2      	; 0x2b74 <DIO_u8SetPinVal+0x2c>
    2b72:	77 c0       	rjmp	.+238    	; 0x2c62 <DIO_u8SetPinVal+0x11a>
			switch(u8PortIdCopy){
    2b74:	8a 81       	ldd	r24, Y+2	; 0x02
    2b76:	28 2f       	mov	r18, r24
    2b78:	30 e0       	ldi	r19, 0x00	; 0
    2b7a:	38 87       	std	Y+8, r19	; 0x08
    2b7c:	2f 83       	std	Y+7, r18	; 0x07
    2b7e:	8f 81       	ldd	r24, Y+7	; 0x07
    2b80:	98 85       	ldd	r25, Y+8	; 0x08
    2b82:	81 30       	cpi	r24, 0x01	; 1
    2b84:	91 05       	cpc	r25, r1
    2b86:	59 f1       	breq	.+86     	; 0x2bde <DIO_u8SetPinVal+0x96>
    2b88:	2f 81       	ldd	r18, Y+7	; 0x07
    2b8a:	38 85       	ldd	r19, Y+8	; 0x08
    2b8c:	22 30       	cpi	r18, 0x02	; 2
    2b8e:	31 05       	cpc	r19, r1
    2b90:	2c f4       	brge	.+10     	; 0x2b9c <DIO_u8SetPinVal+0x54>
    2b92:	8f 81       	ldd	r24, Y+7	; 0x07
    2b94:	98 85       	ldd	r25, Y+8	; 0x08
    2b96:	00 97       	sbiw	r24, 0x00	; 0
    2b98:	69 f0       	breq	.+26     	; 0x2bb4 <DIO_u8SetPinVal+0x6c>
    2b9a:	60 c0       	rjmp	.+192    	; 0x2c5c <DIO_u8SetPinVal+0x114>
    2b9c:	2f 81       	ldd	r18, Y+7	; 0x07
    2b9e:	38 85       	ldd	r19, Y+8	; 0x08
    2ba0:	22 30       	cpi	r18, 0x02	; 2
    2ba2:	31 05       	cpc	r19, r1
    2ba4:	89 f1       	breq	.+98     	; 0x2c08 <DIO_u8SetPinVal+0xc0>
    2ba6:	8f 81       	ldd	r24, Y+7	; 0x07
    2ba8:	98 85       	ldd	r25, Y+8	; 0x08
    2baa:	83 30       	cpi	r24, 0x03	; 3
    2bac:	91 05       	cpc	r25, r1
    2bae:	09 f4       	brne	.+2      	; 0x2bb2 <DIO_u8SetPinVal+0x6a>
    2bb0:	40 c0       	rjmp	.+128    	; 0x2c32 <DIO_u8SetPinVal+0xea>
    2bb2:	54 c0       	rjmp	.+168    	; 0x2c5c <DIO_u8SetPinVal+0x114>
				case PORT_A :CLR_BIT(PORTA_REG,u8PinIdCopy); break;
    2bb4:	ab e3       	ldi	r26, 0x3B	; 59
    2bb6:	b0 e0       	ldi	r27, 0x00	; 0
    2bb8:	eb e3       	ldi	r30, 0x3B	; 59
    2bba:	f0 e0       	ldi	r31, 0x00	; 0
    2bbc:	80 81       	ld	r24, Z
    2bbe:	48 2f       	mov	r20, r24
    2bc0:	8b 81       	ldd	r24, Y+3	; 0x03
    2bc2:	28 2f       	mov	r18, r24
    2bc4:	30 e0       	ldi	r19, 0x00	; 0
    2bc6:	81 e0       	ldi	r24, 0x01	; 1
    2bc8:	90 e0       	ldi	r25, 0x00	; 0
    2bca:	02 2e       	mov	r0, r18
    2bcc:	02 c0       	rjmp	.+4      	; 0x2bd2 <DIO_u8SetPinVal+0x8a>
    2bce:	88 0f       	add	r24, r24
    2bd0:	99 1f       	adc	r25, r25
    2bd2:	0a 94       	dec	r0
    2bd4:	e2 f7       	brpl	.-8      	; 0x2bce <DIO_u8SetPinVal+0x86>
    2bd6:	80 95       	com	r24
    2bd8:	84 23       	and	r24, r20
    2bda:	8c 93       	st	X, r24
    2bdc:	ba c0       	rjmp	.+372    	; 0x2d52 <DIO_u8SetPinVal+0x20a>
				case PORT_B :CLR_BIT(PORTB_REG,u8PinIdCopy); break;
    2bde:	a8 e3       	ldi	r26, 0x38	; 56
    2be0:	b0 e0       	ldi	r27, 0x00	; 0
    2be2:	e8 e3       	ldi	r30, 0x38	; 56
    2be4:	f0 e0       	ldi	r31, 0x00	; 0
    2be6:	80 81       	ld	r24, Z
    2be8:	48 2f       	mov	r20, r24
    2bea:	8b 81       	ldd	r24, Y+3	; 0x03
    2bec:	28 2f       	mov	r18, r24
    2bee:	30 e0       	ldi	r19, 0x00	; 0
    2bf0:	81 e0       	ldi	r24, 0x01	; 1
    2bf2:	90 e0       	ldi	r25, 0x00	; 0
    2bf4:	02 2e       	mov	r0, r18
    2bf6:	02 c0       	rjmp	.+4      	; 0x2bfc <DIO_u8SetPinVal+0xb4>
    2bf8:	88 0f       	add	r24, r24
    2bfa:	99 1f       	adc	r25, r25
    2bfc:	0a 94       	dec	r0
    2bfe:	e2 f7       	brpl	.-8      	; 0x2bf8 <DIO_u8SetPinVal+0xb0>
    2c00:	80 95       	com	r24
    2c02:	84 23       	and	r24, r20
    2c04:	8c 93       	st	X, r24
    2c06:	a5 c0       	rjmp	.+330    	; 0x2d52 <DIO_u8SetPinVal+0x20a>
				case PORT_C :CLR_BIT(PORTC_REG,u8PinIdCopy); break;
    2c08:	a5 e3       	ldi	r26, 0x35	; 53
    2c0a:	b0 e0       	ldi	r27, 0x00	; 0
    2c0c:	e5 e3       	ldi	r30, 0x35	; 53
    2c0e:	f0 e0       	ldi	r31, 0x00	; 0
    2c10:	80 81       	ld	r24, Z
    2c12:	48 2f       	mov	r20, r24
    2c14:	8b 81       	ldd	r24, Y+3	; 0x03
    2c16:	28 2f       	mov	r18, r24
    2c18:	30 e0       	ldi	r19, 0x00	; 0
    2c1a:	81 e0       	ldi	r24, 0x01	; 1
    2c1c:	90 e0       	ldi	r25, 0x00	; 0
    2c1e:	02 2e       	mov	r0, r18
    2c20:	02 c0       	rjmp	.+4      	; 0x2c26 <DIO_u8SetPinVal+0xde>
    2c22:	88 0f       	add	r24, r24
    2c24:	99 1f       	adc	r25, r25
    2c26:	0a 94       	dec	r0
    2c28:	e2 f7       	brpl	.-8      	; 0x2c22 <DIO_u8SetPinVal+0xda>
    2c2a:	80 95       	com	r24
    2c2c:	84 23       	and	r24, r20
    2c2e:	8c 93       	st	X, r24
    2c30:	90 c0       	rjmp	.+288    	; 0x2d52 <DIO_u8SetPinVal+0x20a>
				case PORT_D :CLR_BIT(PORTD_REG,u8PinIdCopy); break;
    2c32:	a2 e3       	ldi	r26, 0x32	; 50
    2c34:	b0 e0       	ldi	r27, 0x00	; 0
    2c36:	e2 e3       	ldi	r30, 0x32	; 50
    2c38:	f0 e0       	ldi	r31, 0x00	; 0
    2c3a:	80 81       	ld	r24, Z
    2c3c:	48 2f       	mov	r20, r24
    2c3e:	8b 81       	ldd	r24, Y+3	; 0x03
    2c40:	28 2f       	mov	r18, r24
    2c42:	30 e0       	ldi	r19, 0x00	; 0
    2c44:	81 e0       	ldi	r24, 0x01	; 1
    2c46:	90 e0       	ldi	r25, 0x00	; 0
    2c48:	02 2e       	mov	r0, r18
    2c4a:	02 c0       	rjmp	.+4      	; 0x2c50 <DIO_u8SetPinVal+0x108>
    2c4c:	88 0f       	add	r24, r24
    2c4e:	99 1f       	adc	r25, r25
    2c50:	0a 94       	dec	r0
    2c52:	e2 f7       	brpl	.-8      	; 0x2c4c <DIO_u8SetPinVal+0x104>
    2c54:	80 95       	com	r24
    2c56:	84 23       	and	r24, r20
    2c58:	8c 93       	st	X, r24
    2c5a:	7b c0       	rjmp	.+246    	; 0x2d52 <DIO_u8SetPinVal+0x20a>
				default     :errStatus =E_NOK              ;  break;
    2c5c:	81 e0       	ldi	r24, 0x01	; 1
    2c5e:	89 83       	std	Y+1, r24	; 0x01
    2c60:	78 c0       	rjmp	.+240    	; 0x2d52 <DIO_u8SetPinVal+0x20a>
			}
		}
		else if (u8ValCopy ==HIGH){
    2c62:	8c 81       	ldd	r24, Y+4	; 0x04
    2c64:	81 30       	cpi	r24, 0x01	; 1
    2c66:	09 f0       	breq	.+2      	; 0x2c6a <DIO_u8SetPinVal+0x122>
    2c68:	72 c0       	rjmp	.+228    	; 0x2d4e <DIO_u8SetPinVal+0x206>
			switch(u8PortIdCopy){
    2c6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c6c:	28 2f       	mov	r18, r24
    2c6e:	30 e0       	ldi	r19, 0x00	; 0
    2c70:	3e 83       	std	Y+6, r19	; 0x06
    2c72:	2d 83       	std	Y+5, r18	; 0x05
    2c74:	8d 81       	ldd	r24, Y+5	; 0x05
    2c76:	9e 81       	ldd	r25, Y+6	; 0x06
    2c78:	81 30       	cpi	r24, 0x01	; 1
    2c7a:	91 05       	cpc	r25, r1
    2c7c:	49 f1       	breq	.+82     	; 0x2cd0 <DIO_u8SetPinVal+0x188>
    2c7e:	2d 81       	ldd	r18, Y+5	; 0x05
    2c80:	3e 81       	ldd	r19, Y+6	; 0x06
    2c82:	22 30       	cpi	r18, 0x02	; 2
    2c84:	31 05       	cpc	r19, r1
    2c86:	2c f4       	brge	.+10     	; 0x2c92 <DIO_u8SetPinVal+0x14a>
    2c88:	8d 81       	ldd	r24, Y+5	; 0x05
    2c8a:	9e 81       	ldd	r25, Y+6	; 0x06
    2c8c:	00 97       	sbiw	r24, 0x00	; 0
    2c8e:	61 f0       	breq	.+24     	; 0x2ca8 <DIO_u8SetPinVal+0x160>
    2c90:	5b c0       	rjmp	.+182    	; 0x2d48 <DIO_u8SetPinVal+0x200>
    2c92:	2d 81       	ldd	r18, Y+5	; 0x05
    2c94:	3e 81       	ldd	r19, Y+6	; 0x06
    2c96:	22 30       	cpi	r18, 0x02	; 2
    2c98:	31 05       	cpc	r19, r1
    2c9a:	71 f1       	breq	.+92     	; 0x2cf8 <DIO_u8SetPinVal+0x1b0>
    2c9c:	8d 81       	ldd	r24, Y+5	; 0x05
    2c9e:	9e 81       	ldd	r25, Y+6	; 0x06
    2ca0:	83 30       	cpi	r24, 0x03	; 3
    2ca2:	91 05       	cpc	r25, r1
    2ca4:	e9 f1       	breq	.+122    	; 0x2d20 <DIO_u8SetPinVal+0x1d8>
    2ca6:	50 c0       	rjmp	.+160    	; 0x2d48 <DIO_u8SetPinVal+0x200>
				case PORT_A :SET_BIT(PORTA_REG,u8PinIdCopy); break;
    2ca8:	ab e3       	ldi	r26, 0x3B	; 59
    2caa:	b0 e0       	ldi	r27, 0x00	; 0
    2cac:	eb e3       	ldi	r30, 0x3B	; 59
    2cae:	f0 e0       	ldi	r31, 0x00	; 0
    2cb0:	80 81       	ld	r24, Z
    2cb2:	48 2f       	mov	r20, r24
    2cb4:	8b 81       	ldd	r24, Y+3	; 0x03
    2cb6:	28 2f       	mov	r18, r24
    2cb8:	30 e0       	ldi	r19, 0x00	; 0
    2cba:	81 e0       	ldi	r24, 0x01	; 1
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	02 2e       	mov	r0, r18
    2cc0:	02 c0       	rjmp	.+4      	; 0x2cc6 <DIO_u8SetPinVal+0x17e>
    2cc2:	88 0f       	add	r24, r24
    2cc4:	99 1f       	adc	r25, r25
    2cc6:	0a 94       	dec	r0
    2cc8:	e2 f7       	brpl	.-8      	; 0x2cc2 <DIO_u8SetPinVal+0x17a>
    2cca:	84 2b       	or	r24, r20
    2ccc:	8c 93       	st	X, r24
    2cce:	41 c0       	rjmp	.+130    	; 0x2d52 <DIO_u8SetPinVal+0x20a>
				case PORT_B :SET_BIT(PORTB_REG,u8PinIdCopy); break;
    2cd0:	a8 e3       	ldi	r26, 0x38	; 56
    2cd2:	b0 e0       	ldi	r27, 0x00	; 0
    2cd4:	e8 e3       	ldi	r30, 0x38	; 56
    2cd6:	f0 e0       	ldi	r31, 0x00	; 0
    2cd8:	80 81       	ld	r24, Z
    2cda:	48 2f       	mov	r20, r24
    2cdc:	8b 81       	ldd	r24, Y+3	; 0x03
    2cde:	28 2f       	mov	r18, r24
    2ce0:	30 e0       	ldi	r19, 0x00	; 0
    2ce2:	81 e0       	ldi	r24, 0x01	; 1
    2ce4:	90 e0       	ldi	r25, 0x00	; 0
    2ce6:	02 2e       	mov	r0, r18
    2ce8:	02 c0       	rjmp	.+4      	; 0x2cee <DIO_u8SetPinVal+0x1a6>
    2cea:	88 0f       	add	r24, r24
    2cec:	99 1f       	adc	r25, r25
    2cee:	0a 94       	dec	r0
    2cf0:	e2 f7       	brpl	.-8      	; 0x2cea <DIO_u8SetPinVal+0x1a2>
    2cf2:	84 2b       	or	r24, r20
    2cf4:	8c 93       	st	X, r24
    2cf6:	2d c0       	rjmp	.+90     	; 0x2d52 <DIO_u8SetPinVal+0x20a>
				case PORT_C :SET_BIT(PORTC_REG,u8PinIdCopy); break;
    2cf8:	a5 e3       	ldi	r26, 0x35	; 53
    2cfa:	b0 e0       	ldi	r27, 0x00	; 0
    2cfc:	e5 e3       	ldi	r30, 0x35	; 53
    2cfe:	f0 e0       	ldi	r31, 0x00	; 0
    2d00:	80 81       	ld	r24, Z
    2d02:	48 2f       	mov	r20, r24
    2d04:	8b 81       	ldd	r24, Y+3	; 0x03
    2d06:	28 2f       	mov	r18, r24
    2d08:	30 e0       	ldi	r19, 0x00	; 0
    2d0a:	81 e0       	ldi	r24, 0x01	; 1
    2d0c:	90 e0       	ldi	r25, 0x00	; 0
    2d0e:	02 2e       	mov	r0, r18
    2d10:	02 c0       	rjmp	.+4      	; 0x2d16 <DIO_u8SetPinVal+0x1ce>
    2d12:	88 0f       	add	r24, r24
    2d14:	99 1f       	adc	r25, r25
    2d16:	0a 94       	dec	r0
    2d18:	e2 f7       	brpl	.-8      	; 0x2d12 <DIO_u8SetPinVal+0x1ca>
    2d1a:	84 2b       	or	r24, r20
    2d1c:	8c 93       	st	X, r24
    2d1e:	19 c0       	rjmp	.+50     	; 0x2d52 <DIO_u8SetPinVal+0x20a>
				case PORT_D :SET_BIT(PORTD_REG,u8PinIdCopy); break;
    2d20:	a2 e3       	ldi	r26, 0x32	; 50
    2d22:	b0 e0       	ldi	r27, 0x00	; 0
    2d24:	e2 e3       	ldi	r30, 0x32	; 50
    2d26:	f0 e0       	ldi	r31, 0x00	; 0
    2d28:	80 81       	ld	r24, Z
    2d2a:	48 2f       	mov	r20, r24
    2d2c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d2e:	28 2f       	mov	r18, r24
    2d30:	30 e0       	ldi	r19, 0x00	; 0
    2d32:	81 e0       	ldi	r24, 0x01	; 1
    2d34:	90 e0       	ldi	r25, 0x00	; 0
    2d36:	02 2e       	mov	r0, r18
    2d38:	02 c0       	rjmp	.+4      	; 0x2d3e <DIO_u8SetPinVal+0x1f6>
    2d3a:	88 0f       	add	r24, r24
    2d3c:	99 1f       	adc	r25, r25
    2d3e:	0a 94       	dec	r0
    2d40:	e2 f7       	brpl	.-8      	; 0x2d3a <DIO_u8SetPinVal+0x1f2>
    2d42:	84 2b       	or	r24, r20
    2d44:	8c 93       	st	X, r24
    2d46:	05 c0       	rjmp	.+10     	; 0x2d52 <DIO_u8SetPinVal+0x20a>
				default     :errStatus =E_NOK              ; break;
    2d48:	81 e0       	ldi	r24, 0x01	; 1
    2d4a:	89 83       	std	Y+1, r24	; 0x01
    2d4c:	02 c0       	rjmp	.+4      	; 0x2d52 <DIO_u8SetPinVal+0x20a>
			}
		}
		else {
			errStatus =E_NOK;
    2d4e:	81 e0       	ldi	r24, 0x01	; 1
    2d50:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return errStatus;
    2d52:	89 81       	ldd	r24, Y+1	; 0x01

}
    2d54:	28 96       	adiw	r28, 0x08	; 8
    2d56:	0f b6       	in	r0, 0x3f	; 63
    2d58:	f8 94       	cli
    2d5a:	de bf       	out	0x3e, r29	; 62
    2d5c:	0f be       	out	0x3f, r0	; 63
    2d5e:	cd bf       	out	0x3d, r28	; 61
    2d60:	cf 91       	pop	r28
    2d62:	df 91       	pop	r29
    2d64:	08 95       	ret

00002d66 <DIO_u8GetPinVal>:
uint8 DIO_u8GetPinVal (uint8 u8PortIdCopy ,uint8 u8PinIdCopy ,uint8 * u8pValCopy){
    2d66:	df 93       	push	r29
    2d68:	cf 93       	push	r28
    2d6a:	cd b7       	in	r28, 0x3d	; 61
    2d6c:	de b7       	in	r29, 0x3e	; 62
    2d6e:	27 97       	sbiw	r28, 0x07	; 7
    2d70:	0f b6       	in	r0, 0x3f	; 63
    2d72:	f8 94       	cli
    2d74:	de bf       	out	0x3e, r29	; 62
    2d76:	0f be       	out	0x3f, r0	; 63
    2d78:	cd bf       	out	0x3d, r28	; 61
    2d7a:	8a 83       	std	Y+2, r24	; 0x02
    2d7c:	6b 83       	std	Y+3, r22	; 0x03
    2d7e:	5d 83       	std	Y+5, r21	; 0x05
    2d80:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    2d82:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    2d84:	8a 81       	ldd	r24, Y+2	; 0x02
    2d86:	28 2f       	mov	r18, r24
    2d88:	30 e0       	ldi	r19, 0x00	; 0
    2d8a:	3f 83       	std	Y+7, r19	; 0x07
    2d8c:	2e 83       	std	Y+6, r18	; 0x06
    2d8e:	4e 81       	ldd	r20, Y+6	; 0x06
    2d90:	5f 81       	ldd	r21, Y+7	; 0x07
    2d92:	41 30       	cpi	r20, 0x01	; 1
    2d94:	51 05       	cpc	r21, r1
    2d96:	59 f1       	breq	.+86     	; 0x2dee <DIO_u8GetPinVal+0x88>
    2d98:	8e 81       	ldd	r24, Y+6	; 0x06
    2d9a:	9f 81       	ldd	r25, Y+7	; 0x07
    2d9c:	82 30       	cpi	r24, 0x02	; 2
    2d9e:	91 05       	cpc	r25, r1
    2da0:	34 f4       	brge	.+12     	; 0x2dae <DIO_u8GetPinVal+0x48>
    2da2:	2e 81       	ldd	r18, Y+6	; 0x06
    2da4:	3f 81       	ldd	r19, Y+7	; 0x07
    2da6:	21 15       	cp	r18, r1
    2da8:	31 05       	cpc	r19, r1
    2daa:	69 f0       	breq	.+26     	; 0x2dc6 <DIO_u8GetPinVal+0x60>
    2dac:	5c c0       	rjmp	.+184    	; 0x2e66 <DIO_u8GetPinVal+0x100>
    2dae:	4e 81       	ldd	r20, Y+6	; 0x06
    2db0:	5f 81       	ldd	r21, Y+7	; 0x07
    2db2:	42 30       	cpi	r20, 0x02	; 2
    2db4:	51 05       	cpc	r21, r1
    2db6:	79 f1       	breq	.+94     	; 0x2e16 <DIO_u8GetPinVal+0xb0>
    2db8:	8e 81       	ldd	r24, Y+6	; 0x06
    2dba:	9f 81       	ldd	r25, Y+7	; 0x07
    2dbc:	83 30       	cpi	r24, 0x03	; 3
    2dbe:	91 05       	cpc	r25, r1
    2dc0:	09 f4       	brne	.+2      	; 0x2dc4 <DIO_u8GetPinVal+0x5e>
    2dc2:	3d c0       	rjmp	.+122    	; 0x2e3e <DIO_u8GetPinVal+0xd8>
    2dc4:	50 c0       	rjmp	.+160    	; 0x2e66 <DIO_u8GetPinVal+0x100>
		case PORT_A :* u8pValCopy=GET_BIT(PINA_REG,u8PinIdCopy); break;
    2dc6:	e9 e3       	ldi	r30, 0x39	; 57
    2dc8:	f0 e0       	ldi	r31, 0x00	; 0
    2dca:	80 81       	ld	r24, Z
    2dcc:	28 2f       	mov	r18, r24
    2dce:	30 e0       	ldi	r19, 0x00	; 0
    2dd0:	8b 81       	ldd	r24, Y+3	; 0x03
    2dd2:	88 2f       	mov	r24, r24
    2dd4:	90 e0       	ldi	r25, 0x00	; 0
    2dd6:	a9 01       	movw	r20, r18
    2dd8:	02 c0       	rjmp	.+4      	; 0x2dde <DIO_u8GetPinVal+0x78>
    2dda:	55 95       	asr	r21
    2ddc:	47 95       	ror	r20
    2dde:	8a 95       	dec	r24
    2de0:	e2 f7       	brpl	.-8      	; 0x2dda <DIO_u8GetPinVal+0x74>
    2de2:	ca 01       	movw	r24, r20
    2de4:	81 70       	andi	r24, 0x01	; 1
    2de6:	ec 81       	ldd	r30, Y+4	; 0x04
    2de8:	fd 81       	ldd	r31, Y+5	; 0x05
    2dea:	80 83       	st	Z, r24
    2dec:	3e c0       	rjmp	.+124    	; 0x2e6a <DIO_u8GetPinVal+0x104>
	    case PORT_B :* u8pValCopy=GET_BIT(PINB_REG,u8PinIdCopy); break;
    2dee:	e6 e3       	ldi	r30, 0x36	; 54
    2df0:	f0 e0       	ldi	r31, 0x00	; 0
    2df2:	80 81       	ld	r24, Z
    2df4:	28 2f       	mov	r18, r24
    2df6:	30 e0       	ldi	r19, 0x00	; 0
    2df8:	8b 81       	ldd	r24, Y+3	; 0x03
    2dfa:	88 2f       	mov	r24, r24
    2dfc:	90 e0       	ldi	r25, 0x00	; 0
    2dfe:	a9 01       	movw	r20, r18
    2e00:	02 c0       	rjmp	.+4      	; 0x2e06 <DIO_u8GetPinVal+0xa0>
    2e02:	55 95       	asr	r21
    2e04:	47 95       	ror	r20
    2e06:	8a 95       	dec	r24
    2e08:	e2 f7       	brpl	.-8      	; 0x2e02 <DIO_u8GetPinVal+0x9c>
    2e0a:	ca 01       	movw	r24, r20
    2e0c:	81 70       	andi	r24, 0x01	; 1
    2e0e:	ec 81       	ldd	r30, Y+4	; 0x04
    2e10:	fd 81       	ldd	r31, Y+5	; 0x05
    2e12:	80 83       	st	Z, r24
    2e14:	2a c0       	rjmp	.+84     	; 0x2e6a <DIO_u8GetPinVal+0x104>
        case PORT_C :* u8pValCopy=GET_BIT(PINC_REG,u8PinIdCopy); break;
    2e16:	e3 e3       	ldi	r30, 0x33	; 51
    2e18:	f0 e0       	ldi	r31, 0x00	; 0
    2e1a:	80 81       	ld	r24, Z
    2e1c:	28 2f       	mov	r18, r24
    2e1e:	30 e0       	ldi	r19, 0x00	; 0
    2e20:	8b 81       	ldd	r24, Y+3	; 0x03
    2e22:	88 2f       	mov	r24, r24
    2e24:	90 e0       	ldi	r25, 0x00	; 0
    2e26:	a9 01       	movw	r20, r18
    2e28:	02 c0       	rjmp	.+4      	; 0x2e2e <DIO_u8GetPinVal+0xc8>
    2e2a:	55 95       	asr	r21
    2e2c:	47 95       	ror	r20
    2e2e:	8a 95       	dec	r24
    2e30:	e2 f7       	brpl	.-8      	; 0x2e2a <DIO_u8GetPinVal+0xc4>
    2e32:	ca 01       	movw	r24, r20
    2e34:	81 70       	andi	r24, 0x01	; 1
    2e36:	ec 81       	ldd	r30, Y+4	; 0x04
    2e38:	fd 81       	ldd	r31, Y+5	; 0x05
    2e3a:	80 83       	st	Z, r24
    2e3c:	16 c0       	rjmp	.+44     	; 0x2e6a <DIO_u8GetPinVal+0x104>
		case PORT_D :* u8pValCopy=GET_BIT(PIND_REG,u8PinIdCopy); break;
    2e3e:	e0 e3       	ldi	r30, 0x30	; 48
    2e40:	f0 e0       	ldi	r31, 0x00	; 0
    2e42:	80 81       	ld	r24, Z
    2e44:	28 2f       	mov	r18, r24
    2e46:	30 e0       	ldi	r19, 0x00	; 0
    2e48:	8b 81       	ldd	r24, Y+3	; 0x03
    2e4a:	88 2f       	mov	r24, r24
    2e4c:	90 e0       	ldi	r25, 0x00	; 0
    2e4e:	a9 01       	movw	r20, r18
    2e50:	02 c0       	rjmp	.+4      	; 0x2e56 <DIO_u8GetPinVal+0xf0>
    2e52:	55 95       	asr	r21
    2e54:	47 95       	ror	r20
    2e56:	8a 95       	dec	r24
    2e58:	e2 f7       	brpl	.-8      	; 0x2e52 <DIO_u8GetPinVal+0xec>
    2e5a:	ca 01       	movw	r24, r20
    2e5c:	81 70       	andi	r24, 0x01	; 1
    2e5e:	ec 81       	ldd	r30, Y+4	; 0x04
    2e60:	fd 81       	ldd	r31, Y+5	; 0x05
    2e62:	80 83       	st	Z, r24
    2e64:	02 c0       	rjmp	.+4      	; 0x2e6a <DIO_u8GetPinVal+0x104>
		default     :errStatus =E_NOK                          ; break;
    2e66:	81 e0       	ldi	r24, 0x01	; 1
    2e68:	89 83       	std	Y+1, r24	; 0x01
	}	
	return errStatus;
    2e6a:	89 81       	ldd	r24, Y+1	; 0x01
}
    2e6c:	27 96       	adiw	r28, 0x07	; 7
    2e6e:	0f b6       	in	r0, 0x3f	; 63
    2e70:	f8 94       	cli
    2e72:	de bf       	out	0x3e, r29	; 62
    2e74:	0f be       	out	0x3f, r0	; 63
    2e76:	cd bf       	out	0x3d, r28	; 61
    2e78:	cf 91       	pop	r28
    2e7a:	df 91       	pop	r29
    2e7c:	08 95       	ret

00002e7e <DIO_u8TogglePin>:

void  DIO_u8TogglePin(uint8 u8PortIdCopy	,uint8 u8PinIdCopy ){
    2e7e:	df 93       	push	r29
    2e80:	cf 93       	push	r28
    2e82:	00 d0       	rcall	.+0      	; 0x2e84 <DIO_u8TogglePin+0x6>
    2e84:	00 d0       	rcall	.+0      	; 0x2e86 <DIO_u8TogglePin+0x8>
    2e86:	cd b7       	in	r28, 0x3d	; 61
    2e88:	de b7       	in	r29, 0x3e	; 62
    2e8a:	89 83       	std	Y+1, r24	; 0x01
    2e8c:	6a 83       	std	Y+2, r22	; 0x02
	switch(u8PortIdCopy){
    2e8e:	89 81       	ldd	r24, Y+1	; 0x01
    2e90:	28 2f       	mov	r18, r24
    2e92:	30 e0       	ldi	r19, 0x00	; 0
    2e94:	3c 83       	std	Y+4, r19	; 0x04
    2e96:	2b 83       	std	Y+3, r18	; 0x03
    2e98:	8b 81       	ldd	r24, Y+3	; 0x03
    2e9a:	9c 81       	ldd	r25, Y+4	; 0x04
    2e9c:	81 30       	cpi	r24, 0x01	; 1
    2e9e:	91 05       	cpc	r25, r1
    2ea0:	49 f1       	breq	.+82     	; 0x2ef4 <DIO_u8TogglePin+0x76>
    2ea2:	2b 81       	ldd	r18, Y+3	; 0x03
    2ea4:	3c 81       	ldd	r19, Y+4	; 0x04
    2ea6:	22 30       	cpi	r18, 0x02	; 2
    2ea8:	31 05       	cpc	r19, r1
    2eaa:	2c f4       	brge	.+10     	; 0x2eb6 <DIO_u8TogglePin+0x38>
    2eac:	8b 81       	ldd	r24, Y+3	; 0x03
    2eae:	9c 81       	ldd	r25, Y+4	; 0x04
    2eb0:	00 97       	sbiw	r24, 0x00	; 0
    2eb2:	61 f0       	breq	.+24     	; 0x2ecc <DIO_u8TogglePin+0x4e>
    2eb4:	5a c0       	rjmp	.+180    	; 0x2f6a <DIO_u8TogglePin+0xec>
    2eb6:	2b 81       	ldd	r18, Y+3	; 0x03
    2eb8:	3c 81       	ldd	r19, Y+4	; 0x04
    2eba:	22 30       	cpi	r18, 0x02	; 2
    2ebc:	31 05       	cpc	r19, r1
    2ebe:	71 f1       	breq	.+92     	; 0x2f1c <DIO_u8TogglePin+0x9e>
    2ec0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ec2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ec4:	83 30       	cpi	r24, 0x03	; 3
    2ec6:	91 05       	cpc	r25, r1
    2ec8:	e9 f1       	breq	.+122    	; 0x2f44 <DIO_u8TogglePin+0xc6>
    2eca:	4f c0       	rjmp	.+158    	; 0x2f6a <DIO_u8TogglePin+0xec>

		case PORT_A:
            TOG_BIT(PORTA_REG,u8PinIdCopy);
    2ecc:	ab e3       	ldi	r26, 0x3B	; 59
    2ece:	b0 e0       	ldi	r27, 0x00	; 0
    2ed0:	eb e3       	ldi	r30, 0x3B	; 59
    2ed2:	f0 e0       	ldi	r31, 0x00	; 0
    2ed4:	80 81       	ld	r24, Z
    2ed6:	48 2f       	mov	r20, r24
    2ed8:	8a 81       	ldd	r24, Y+2	; 0x02
    2eda:	28 2f       	mov	r18, r24
    2edc:	30 e0       	ldi	r19, 0x00	; 0
    2ede:	81 e0       	ldi	r24, 0x01	; 1
    2ee0:	90 e0       	ldi	r25, 0x00	; 0
    2ee2:	02 2e       	mov	r0, r18
    2ee4:	02 c0       	rjmp	.+4      	; 0x2eea <DIO_u8TogglePin+0x6c>
    2ee6:	88 0f       	add	r24, r24
    2ee8:	99 1f       	adc	r25, r25
    2eea:	0a 94       	dec	r0
    2eec:	e2 f7       	brpl	.-8      	; 0x2ee6 <DIO_u8TogglePin+0x68>
    2eee:	84 27       	eor	r24, r20
    2ef0:	8c 93       	st	X, r24
    2ef2:	3b c0       	rjmp	.+118    	; 0x2f6a <DIO_u8TogglePin+0xec>
			break;

	    case PORT_B:
            TOG_BIT(PORTB_REG,u8PinIdCopy);
    2ef4:	a8 e3       	ldi	r26, 0x38	; 56
    2ef6:	b0 e0       	ldi	r27, 0x00	; 0
    2ef8:	e8 e3       	ldi	r30, 0x38	; 56
    2efa:	f0 e0       	ldi	r31, 0x00	; 0
    2efc:	80 81       	ld	r24, Z
    2efe:	48 2f       	mov	r20, r24
    2f00:	8a 81       	ldd	r24, Y+2	; 0x02
    2f02:	28 2f       	mov	r18, r24
    2f04:	30 e0       	ldi	r19, 0x00	; 0
    2f06:	81 e0       	ldi	r24, 0x01	; 1
    2f08:	90 e0       	ldi	r25, 0x00	; 0
    2f0a:	02 2e       	mov	r0, r18
    2f0c:	02 c0       	rjmp	.+4      	; 0x2f12 <DIO_u8TogglePin+0x94>
    2f0e:	88 0f       	add	r24, r24
    2f10:	99 1f       	adc	r25, r25
    2f12:	0a 94       	dec	r0
    2f14:	e2 f7       	brpl	.-8      	; 0x2f0e <DIO_u8TogglePin+0x90>
    2f16:	84 27       	eor	r24, r20
    2f18:	8c 93       	st	X, r24
    2f1a:	27 c0       	rjmp	.+78     	; 0x2f6a <DIO_u8TogglePin+0xec>
			break;

	    case PORT_C:
            TOG_BIT(PORTC_REG,u8PinIdCopy);
    2f1c:	a5 e3       	ldi	r26, 0x35	; 53
    2f1e:	b0 e0       	ldi	r27, 0x00	; 0
    2f20:	e5 e3       	ldi	r30, 0x35	; 53
    2f22:	f0 e0       	ldi	r31, 0x00	; 0
    2f24:	80 81       	ld	r24, Z
    2f26:	48 2f       	mov	r20, r24
    2f28:	8a 81       	ldd	r24, Y+2	; 0x02
    2f2a:	28 2f       	mov	r18, r24
    2f2c:	30 e0       	ldi	r19, 0x00	; 0
    2f2e:	81 e0       	ldi	r24, 0x01	; 1
    2f30:	90 e0       	ldi	r25, 0x00	; 0
    2f32:	02 2e       	mov	r0, r18
    2f34:	02 c0       	rjmp	.+4      	; 0x2f3a <DIO_u8TogglePin+0xbc>
    2f36:	88 0f       	add	r24, r24
    2f38:	99 1f       	adc	r25, r25
    2f3a:	0a 94       	dec	r0
    2f3c:	e2 f7       	brpl	.-8      	; 0x2f36 <DIO_u8TogglePin+0xb8>
    2f3e:	84 27       	eor	r24, r20
    2f40:	8c 93       	st	X, r24
    2f42:	13 c0       	rjmp	.+38     	; 0x2f6a <DIO_u8TogglePin+0xec>
			break;

		case PORT_D:
            TOG_BIT(PORTD_REG,u8PinIdCopy);
    2f44:	a2 e3       	ldi	r26, 0x32	; 50
    2f46:	b0 e0       	ldi	r27, 0x00	; 0
    2f48:	e2 e3       	ldi	r30, 0x32	; 50
    2f4a:	f0 e0       	ldi	r31, 0x00	; 0
    2f4c:	80 81       	ld	r24, Z
    2f4e:	48 2f       	mov	r20, r24
    2f50:	8a 81       	ldd	r24, Y+2	; 0x02
    2f52:	28 2f       	mov	r18, r24
    2f54:	30 e0       	ldi	r19, 0x00	; 0
    2f56:	81 e0       	ldi	r24, 0x01	; 1
    2f58:	90 e0       	ldi	r25, 0x00	; 0
    2f5a:	02 2e       	mov	r0, r18
    2f5c:	02 c0       	rjmp	.+4      	; 0x2f62 <DIO_u8TogglePin+0xe4>
    2f5e:	88 0f       	add	r24, r24
    2f60:	99 1f       	adc	r25, r25
    2f62:	0a 94       	dec	r0
    2f64:	e2 f7       	brpl	.-8      	; 0x2f5e <DIO_u8TogglePin+0xe0>
    2f66:	84 27       	eor	r24, r20
    2f68:	8c 93       	st	X, r24
			break;
 }
}
    2f6a:	0f 90       	pop	r0
    2f6c:	0f 90       	pop	r0
    2f6e:	0f 90       	pop	r0
    2f70:	0f 90       	pop	r0
    2f72:	cf 91       	pop	r28
    2f74:	df 91       	pop	r29
    2f76:	08 95       	ret

00002f78 <DIO_voidSetLowNibbleDir>:

void DIO_voidSetLowNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
    2f78:	df 93       	push	r29
    2f7a:	cf 93       	push	r28
    2f7c:	00 d0       	rcall	.+0      	; 0x2f7e <DIO_voidSetLowNibbleDir+0x6>
    2f7e:	0f 92       	push	r0
    2f80:	cd b7       	in	r28, 0x3d	; 61
    2f82:	de b7       	in	r29, 0x3e	; 62
    2f84:	8a 83       	std	Y+2, r24	; 0x02
    2f86:	6b 83       	std	Y+3, r22	; 0x03
	for (uint8 i=0;i<=3 ;i++){
    2f88:	19 82       	std	Y+1, r1	; 0x01
    2f8a:	08 c0       	rjmp	.+16     	; 0x2f9c <DIO_voidSetLowNibbleDir+0x24>
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
    2f8c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f8e:	69 81       	ldd	r22, Y+1	; 0x01
    2f90:	4b 81       	ldd	r20, Y+3	; 0x03
    2f92:	0e 94 95 14 	call	0x292a	; 0x292a <DIO_u8SetPinDir>
			break;
 }
}

void DIO_voidSetLowNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
	for (uint8 i=0;i<=3 ;i++){
    2f96:	89 81       	ldd	r24, Y+1	; 0x01
    2f98:	8f 5f       	subi	r24, 0xFF	; 255
    2f9a:	89 83       	std	Y+1, r24	; 0x01
    2f9c:	89 81       	ldd	r24, Y+1	; 0x01
    2f9e:	84 30       	cpi	r24, 0x04	; 4
    2fa0:	a8 f3       	brcs	.-22     	; 0x2f8c <DIO_voidSetLowNibbleDir+0x14>
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
		}
}
    2fa2:	0f 90       	pop	r0
    2fa4:	0f 90       	pop	r0
    2fa6:	0f 90       	pop	r0
    2fa8:	cf 91       	pop	r28
    2faa:	df 91       	pop	r29
    2fac:	08 95       	ret

00002fae <DIO_voidSetHighNibbleDir>:
void DIO_voidSetHighNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
    2fae:	df 93       	push	r29
    2fb0:	cf 93       	push	r28
    2fb2:	00 d0       	rcall	.+0      	; 0x2fb4 <DIO_voidSetHighNibbleDir+0x6>
    2fb4:	0f 92       	push	r0
    2fb6:	cd b7       	in	r28, 0x3d	; 61
    2fb8:	de b7       	in	r29, 0x3e	; 62
    2fba:	8a 83       	std	Y+2, r24	; 0x02
    2fbc:	6b 83       	std	Y+3, r22	; 0x03
	for (uint8 i=4;i<=7 ;i++){
    2fbe:	84 e0       	ldi	r24, 0x04	; 4
    2fc0:	89 83       	std	Y+1, r24	; 0x01
    2fc2:	08 c0       	rjmp	.+16     	; 0x2fd4 <DIO_voidSetHighNibbleDir+0x26>
			DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
    2fc4:	8a 81       	ldd	r24, Y+2	; 0x02
    2fc6:	69 81       	ldd	r22, Y+1	; 0x01
    2fc8:	4b 81       	ldd	r20, Y+3	; 0x03
    2fca:	0e 94 95 14 	call	0x292a	; 0x292a <DIO_u8SetPinDir>
	for (uint8 i=0;i<=3 ;i++){
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
		}
}
void DIO_voidSetHighNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
	for (uint8 i=4;i<=7 ;i++){
    2fce:	89 81       	ldd	r24, Y+1	; 0x01
    2fd0:	8f 5f       	subi	r24, 0xFF	; 255
    2fd2:	89 83       	std	Y+1, r24	; 0x01
    2fd4:	89 81       	ldd	r24, Y+1	; 0x01
    2fd6:	88 30       	cpi	r24, 0x08	; 8
    2fd8:	a8 f3       	brcs	.-22     	; 0x2fc4 <DIO_voidSetHighNibbleDir+0x16>
			DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
			}
}
    2fda:	0f 90       	pop	r0
    2fdc:	0f 90       	pop	r0
    2fde:	0f 90       	pop	r0
    2fe0:	cf 91       	pop	r28
    2fe2:	df 91       	pop	r29
    2fe4:	08 95       	ret

00002fe6 <DIO_voidWriteLowNibble>:
void DIO_voidWriteLowNibble(uint8 u8PortIdCopy ,uint8 u8ValCopy){
    2fe6:	df 93       	push	r29
    2fe8:	cf 93       	push	r28
    2fea:	00 d0       	rcall	.+0      	; 0x2fec <DIO_voidWriteLowNibble+0x6>
    2fec:	00 d0       	rcall	.+0      	; 0x2fee <DIO_voidWriteLowNibble+0x8>
    2fee:	cd b7       	in	r28, 0x3d	; 61
    2ff0:	de b7       	in	r29, 0x3e	; 62
    2ff2:	89 83       	std	Y+1, r24	; 0x01
    2ff4:	6a 83       	std	Y+2, r22	; 0x02
	u8ValCopy&=0x0f; ////to save four low bites make most =0
    2ff6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ff8:	8f 70       	andi	r24, 0x0F	; 15
    2ffa:	8a 83       	std	Y+2, r24	; 0x02
	switch (u8PortIdCopy)
    2ffc:	89 81       	ldd	r24, Y+1	; 0x01
    2ffe:	28 2f       	mov	r18, r24
    3000:	30 e0       	ldi	r19, 0x00	; 0
    3002:	3c 83       	std	Y+4, r19	; 0x04
    3004:	2b 83       	std	Y+3, r18	; 0x03
    3006:	8b 81       	ldd	r24, Y+3	; 0x03
    3008:	9c 81       	ldd	r25, Y+4	; 0x04
    300a:	81 30       	cpi	r24, 0x01	; 1
    300c:	91 05       	cpc	r25, r1
    300e:	29 f1       	breq	.+74     	; 0x305a <DIO_voidWriteLowNibble+0x74>
    3010:	2b 81       	ldd	r18, Y+3	; 0x03
    3012:	3c 81       	ldd	r19, Y+4	; 0x04
    3014:	22 30       	cpi	r18, 0x02	; 2
    3016:	31 05       	cpc	r19, r1
    3018:	2c f4       	brge	.+10     	; 0x3024 <DIO_voidWriteLowNibble+0x3e>
    301a:	8b 81       	ldd	r24, Y+3	; 0x03
    301c:	9c 81       	ldd	r25, Y+4	; 0x04
    301e:	00 97       	sbiw	r24, 0x00	; 0
    3020:	61 f0       	breq	.+24     	; 0x303a <DIO_voidWriteLowNibble+0x54>
    3022:	4a c0       	rjmp	.+148    	; 0x30b8 <DIO_voidWriteLowNibble+0xd2>
    3024:	2b 81       	ldd	r18, Y+3	; 0x03
    3026:	3c 81       	ldd	r19, Y+4	; 0x04
    3028:	22 30       	cpi	r18, 0x02	; 2
    302a:	31 05       	cpc	r19, r1
    302c:	31 f1       	breq	.+76     	; 0x307a <DIO_voidWriteLowNibble+0x94>
    302e:	8b 81       	ldd	r24, Y+3	; 0x03
    3030:	9c 81       	ldd	r25, Y+4	; 0x04
    3032:	83 30       	cpi	r24, 0x03	; 3
    3034:	91 05       	cpc	r25, r1
    3036:	89 f1       	breq	.+98     	; 0x309a <DIO_voidWriteLowNibble+0xb4>
    3038:	3f c0       	rjmp	.+126    	; 0x30b8 <DIO_voidWriteLowNibble+0xd2>
	{
		case PORT_A :
			PORTA_REG &=0xf0;
    303a:	ab e3       	ldi	r26, 0x3B	; 59
    303c:	b0 e0       	ldi	r27, 0x00	; 0
    303e:	eb e3       	ldi	r30, 0x3B	; 59
    3040:	f0 e0       	ldi	r31, 0x00	; 0
    3042:	80 81       	ld	r24, Z
    3044:	80 7f       	andi	r24, 0xF0	; 240
    3046:	8c 93       	st	X, r24
			PORTA_REG|=u8ValCopy;
    3048:	ab e3       	ldi	r26, 0x3B	; 59
    304a:	b0 e0       	ldi	r27, 0x00	; 0
    304c:	eb e3       	ldi	r30, 0x3B	; 59
    304e:	f0 e0       	ldi	r31, 0x00	; 0
    3050:	90 81       	ld	r25, Z
    3052:	8a 81       	ldd	r24, Y+2	; 0x02
    3054:	89 2b       	or	r24, r25
    3056:	8c 93       	st	X, r24
    3058:	2f c0       	rjmp	.+94     	; 0x30b8 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_B :
			PORTB_REG &=0xf0;
    305a:	a8 e3       	ldi	r26, 0x38	; 56
    305c:	b0 e0       	ldi	r27, 0x00	; 0
    305e:	e8 e3       	ldi	r30, 0x38	; 56
    3060:	f0 e0       	ldi	r31, 0x00	; 0
    3062:	80 81       	ld	r24, Z
    3064:	80 7f       	andi	r24, 0xF0	; 240
    3066:	8c 93       	st	X, r24
			PORTB_REG |=u8ValCopy;
    3068:	a8 e3       	ldi	r26, 0x38	; 56
    306a:	b0 e0       	ldi	r27, 0x00	; 0
    306c:	e8 e3       	ldi	r30, 0x38	; 56
    306e:	f0 e0       	ldi	r31, 0x00	; 0
    3070:	90 81       	ld	r25, Z
    3072:	8a 81       	ldd	r24, Y+2	; 0x02
    3074:	89 2b       	or	r24, r25
    3076:	8c 93       	st	X, r24
    3078:	1f c0       	rjmp	.+62     	; 0x30b8 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_C:
			PORTC_REG &=0xf0;
    307a:	a5 e3       	ldi	r26, 0x35	; 53
    307c:	b0 e0       	ldi	r27, 0x00	; 0
    307e:	e5 e3       	ldi	r30, 0x35	; 53
    3080:	f0 e0       	ldi	r31, 0x00	; 0
    3082:	80 81       	ld	r24, Z
    3084:	80 7f       	andi	r24, 0xF0	; 240
    3086:	8c 93       	st	X, r24
			PORTC_REG |=u8ValCopy;
    3088:	a5 e3       	ldi	r26, 0x35	; 53
    308a:	b0 e0       	ldi	r27, 0x00	; 0
    308c:	e5 e3       	ldi	r30, 0x35	; 53
    308e:	f0 e0       	ldi	r31, 0x00	; 0
    3090:	90 81       	ld	r25, Z
    3092:	8a 81       	ldd	r24, Y+2	; 0x02
    3094:	89 2b       	or	r24, r25
    3096:	8c 93       	st	X, r24
    3098:	0f c0       	rjmp	.+30     	; 0x30b8 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_D :
			PORTD_REG &=0xf0;
    309a:	a2 e3       	ldi	r26, 0x32	; 50
    309c:	b0 e0       	ldi	r27, 0x00	; 0
    309e:	e2 e3       	ldi	r30, 0x32	; 50
    30a0:	f0 e0       	ldi	r31, 0x00	; 0
    30a2:	80 81       	ld	r24, Z
    30a4:	80 7f       	andi	r24, 0xF0	; 240
    30a6:	8c 93       	st	X, r24
			PORTD_REG |=u8ValCopy;
    30a8:	a2 e3       	ldi	r26, 0x32	; 50
    30aa:	b0 e0       	ldi	r27, 0x00	; 0
    30ac:	e2 e3       	ldi	r30, 0x32	; 50
    30ae:	f0 e0       	ldi	r31, 0x00	; 0
    30b0:	90 81       	ld	r25, Z
    30b2:	8a 81       	ldd	r24, Y+2	; 0x02
    30b4:	89 2b       	or	r24, r25
    30b6:	8c 93       	st	X, r24
			break;
		default :
		   break;
	}
}
    30b8:	0f 90       	pop	r0
    30ba:	0f 90       	pop	r0
    30bc:	0f 90       	pop	r0
    30be:	0f 90       	pop	r0
    30c0:	cf 91       	pop	r28
    30c2:	df 91       	pop	r29
    30c4:	08 95       	ret

000030c6 <DIO_voidWritHighNibble>:
void DIO_voidWritHighNibble(uint8 u8PortIdCopy ,uint8 u8ValCopy){
    30c6:	df 93       	push	r29
    30c8:	cf 93       	push	r28
    30ca:	00 d0       	rcall	.+0      	; 0x30cc <DIO_voidWritHighNibble+0x6>
    30cc:	00 d0       	rcall	.+0      	; 0x30ce <DIO_voidWritHighNibble+0x8>
    30ce:	cd b7       	in	r28, 0x3d	; 61
    30d0:	de b7       	in	r29, 0x3e	; 62
    30d2:	89 83       	std	Y+1, r24	; 0x01
    30d4:	6a 83       	std	Y+2, r22	; 0x02
	u8ValCopy&=0xf0; ////to save four most bites make low =0
    30d6:	8a 81       	ldd	r24, Y+2	; 0x02
    30d8:	80 7f       	andi	r24, 0xF0	; 240
    30da:	8a 83       	std	Y+2, r24	; 0x02
	switch (u8PortIdCopy)
    30dc:	89 81       	ldd	r24, Y+1	; 0x01
    30de:	28 2f       	mov	r18, r24
    30e0:	30 e0       	ldi	r19, 0x00	; 0
    30e2:	3c 83       	std	Y+4, r19	; 0x04
    30e4:	2b 83       	std	Y+3, r18	; 0x03
    30e6:	8b 81       	ldd	r24, Y+3	; 0x03
    30e8:	9c 81       	ldd	r25, Y+4	; 0x04
    30ea:	81 30       	cpi	r24, 0x01	; 1
    30ec:	91 05       	cpc	r25, r1
    30ee:	29 f1       	breq	.+74     	; 0x313a <DIO_voidWritHighNibble+0x74>
    30f0:	2b 81       	ldd	r18, Y+3	; 0x03
    30f2:	3c 81       	ldd	r19, Y+4	; 0x04
    30f4:	22 30       	cpi	r18, 0x02	; 2
    30f6:	31 05       	cpc	r19, r1
    30f8:	2c f4       	brge	.+10     	; 0x3104 <DIO_voidWritHighNibble+0x3e>
    30fa:	8b 81       	ldd	r24, Y+3	; 0x03
    30fc:	9c 81       	ldd	r25, Y+4	; 0x04
    30fe:	00 97       	sbiw	r24, 0x00	; 0
    3100:	61 f0       	breq	.+24     	; 0x311a <DIO_voidWritHighNibble+0x54>
    3102:	4a c0       	rjmp	.+148    	; 0x3198 <DIO_voidWritHighNibble+0xd2>
    3104:	2b 81       	ldd	r18, Y+3	; 0x03
    3106:	3c 81       	ldd	r19, Y+4	; 0x04
    3108:	22 30       	cpi	r18, 0x02	; 2
    310a:	31 05       	cpc	r19, r1
    310c:	31 f1       	breq	.+76     	; 0x315a <DIO_voidWritHighNibble+0x94>
    310e:	8b 81       	ldd	r24, Y+3	; 0x03
    3110:	9c 81       	ldd	r25, Y+4	; 0x04
    3112:	83 30       	cpi	r24, 0x03	; 3
    3114:	91 05       	cpc	r25, r1
    3116:	89 f1       	breq	.+98     	; 0x317a <DIO_voidWritHighNibble+0xb4>
    3118:	3f c0       	rjmp	.+126    	; 0x3198 <DIO_voidWritHighNibble+0xd2>
	{
		case PORT_A :
			PORTA_REG &=0x0f;
    311a:	ab e3       	ldi	r26, 0x3B	; 59
    311c:	b0 e0       	ldi	r27, 0x00	; 0
    311e:	eb e3       	ldi	r30, 0x3B	; 59
    3120:	f0 e0       	ldi	r31, 0x00	; 0
    3122:	80 81       	ld	r24, Z
    3124:	8f 70       	andi	r24, 0x0F	; 15
    3126:	8c 93       	st	X, r24
			PORTA_REG|=u8ValCopy;
    3128:	ab e3       	ldi	r26, 0x3B	; 59
    312a:	b0 e0       	ldi	r27, 0x00	; 0
    312c:	eb e3       	ldi	r30, 0x3B	; 59
    312e:	f0 e0       	ldi	r31, 0x00	; 0
    3130:	90 81       	ld	r25, Z
    3132:	8a 81       	ldd	r24, Y+2	; 0x02
    3134:	89 2b       	or	r24, r25
    3136:	8c 93       	st	X, r24
    3138:	2f c0       	rjmp	.+94     	; 0x3198 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_B :
			PORTB_REG &=0x0f;
    313a:	a8 e3       	ldi	r26, 0x38	; 56
    313c:	b0 e0       	ldi	r27, 0x00	; 0
    313e:	e8 e3       	ldi	r30, 0x38	; 56
    3140:	f0 e0       	ldi	r31, 0x00	; 0
    3142:	80 81       	ld	r24, Z
    3144:	8f 70       	andi	r24, 0x0F	; 15
    3146:	8c 93       	st	X, r24
			PORTB_REG |=u8ValCopy;
    3148:	a8 e3       	ldi	r26, 0x38	; 56
    314a:	b0 e0       	ldi	r27, 0x00	; 0
    314c:	e8 e3       	ldi	r30, 0x38	; 56
    314e:	f0 e0       	ldi	r31, 0x00	; 0
    3150:	90 81       	ld	r25, Z
    3152:	8a 81       	ldd	r24, Y+2	; 0x02
    3154:	89 2b       	or	r24, r25
    3156:	8c 93       	st	X, r24
    3158:	1f c0       	rjmp	.+62     	; 0x3198 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_C:
			PORTC_REG &=0x0f;
    315a:	a5 e3       	ldi	r26, 0x35	; 53
    315c:	b0 e0       	ldi	r27, 0x00	; 0
    315e:	e5 e3       	ldi	r30, 0x35	; 53
    3160:	f0 e0       	ldi	r31, 0x00	; 0
    3162:	80 81       	ld	r24, Z
    3164:	8f 70       	andi	r24, 0x0F	; 15
    3166:	8c 93       	st	X, r24
			PORTC_REG |=u8ValCopy;
    3168:	a5 e3       	ldi	r26, 0x35	; 53
    316a:	b0 e0       	ldi	r27, 0x00	; 0
    316c:	e5 e3       	ldi	r30, 0x35	; 53
    316e:	f0 e0       	ldi	r31, 0x00	; 0
    3170:	90 81       	ld	r25, Z
    3172:	8a 81       	ldd	r24, Y+2	; 0x02
    3174:	89 2b       	or	r24, r25
    3176:	8c 93       	st	X, r24
    3178:	0f c0       	rjmp	.+30     	; 0x3198 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_D :
			PORTD_REG &=0x0f;
    317a:	a2 e3       	ldi	r26, 0x32	; 50
    317c:	b0 e0       	ldi	r27, 0x00	; 0
    317e:	e2 e3       	ldi	r30, 0x32	; 50
    3180:	f0 e0       	ldi	r31, 0x00	; 0
    3182:	80 81       	ld	r24, Z
    3184:	8f 70       	andi	r24, 0x0F	; 15
    3186:	8c 93       	st	X, r24
			PORTD_REG |=u8ValCopy;
    3188:	a2 e3       	ldi	r26, 0x32	; 50
    318a:	b0 e0       	ldi	r27, 0x00	; 0
    318c:	e2 e3       	ldi	r30, 0x32	; 50
    318e:	f0 e0       	ldi	r31, 0x00	; 0
    3190:	90 81       	ld	r25, Z
    3192:	8a 81       	ldd	r24, Y+2	; 0x02
    3194:	89 2b       	or	r24, r25
    3196:	8c 93       	st	X, r24
			break;
		default :
		   break;
	}
}
    3198:	0f 90       	pop	r0
    319a:	0f 90       	pop	r0
    319c:	0f 90       	pop	r0
    319e:	0f 90       	pop	r0
    31a0:	cf 91       	pop	r28
    31a2:	df 91       	pop	r29
    31a4:	08 95       	ret

000031a6 <LCD_voidInit>:
#include "../../MCAL/DIO/Dio_int.h"
#include "util/delay.h"
#include "lcd_cfg.h"
#include "lcd_prv.h"

void LCD_voidInit(void){
    31a6:	0f 93       	push	r16
    31a8:	1f 93       	push	r17
    31aa:	df 93       	push	r29
    31ac:	cf 93       	push	r28
    31ae:	cd b7       	in	r28, 0x3d	; 61
    31b0:	de b7       	in	r29, 0x3e	; 62
    31b2:	c6 54       	subi	r28, 0x46	; 70
    31b4:	d0 40       	sbci	r29, 0x00	; 0
    31b6:	0f b6       	in	r0, 0x3f	; 63
    31b8:	f8 94       	cli
    31ba:	de bf       	out	0x3e, r29	; 62
    31bc:	0f be       	out	0x3f, r0	; 63
    31be:	cd bf       	out	0x3d, r28	; 61
    31c0:	fe 01       	movw	r30, r28
    31c2:	ed 5b       	subi	r30, 0xBD	; 189
    31c4:	ff 4f       	sbci	r31, 0xFF	; 255
    31c6:	80 e0       	ldi	r24, 0x00	; 0
    31c8:	90 e0       	ldi	r25, 0x00	; 0
    31ca:	a6 e9       	ldi	r26, 0x96	; 150
    31cc:	b3 e4       	ldi	r27, 0x43	; 67
    31ce:	80 83       	st	Z, r24
    31d0:	91 83       	std	Z+1, r25	; 0x01
    31d2:	a2 83       	std	Z+2, r26	; 0x02
    31d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31d6:	8e 01       	movw	r16, r28
    31d8:	01 5c       	subi	r16, 0xC1	; 193
    31da:	1f 4f       	sbci	r17, 0xFF	; 255
    31dc:	fe 01       	movw	r30, r28
    31de:	ed 5b       	subi	r30, 0xBD	; 189
    31e0:	ff 4f       	sbci	r31, 0xFF	; 255
    31e2:	60 81       	ld	r22, Z
    31e4:	71 81       	ldd	r23, Z+1	; 0x01
    31e6:	82 81       	ldd	r24, Z+2	; 0x02
    31e8:	93 81       	ldd	r25, Z+3	; 0x03
    31ea:	20 e0       	ldi	r18, 0x00	; 0
    31ec:	30 e0       	ldi	r19, 0x00	; 0
    31ee:	4a ef       	ldi	r20, 0xFA	; 250
    31f0:	54 e4       	ldi	r21, 0x44	; 68
    31f2:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    31f6:	dc 01       	movw	r26, r24
    31f8:	cb 01       	movw	r24, r22
    31fa:	f8 01       	movw	r30, r16
    31fc:	80 83       	st	Z, r24
    31fe:	91 83       	std	Z+1, r25	; 0x01
    3200:	a2 83       	std	Z+2, r26	; 0x02
    3202:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3204:	fe 01       	movw	r30, r28
    3206:	ff 96       	adiw	r30, 0x3f	; 63
    3208:	60 81       	ld	r22, Z
    320a:	71 81       	ldd	r23, Z+1	; 0x01
    320c:	82 81       	ldd	r24, Z+2	; 0x02
    320e:	93 81       	ldd	r25, Z+3	; 0x03
    3210:	20 e0       	ldi	r18, 0x00	; 0
    3212:	30 e0       	ldi	r19, 0x00	; 0
    3214:	40 e8       	ldi	r20, 0x80	; 128
    3216:	5f e3       	ldi	r21, 0x3F	; 63
    3218:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    321c:	88 23       	and	r24, r24
    321e:	2c f4       	brge	.+10     	; 0x322a <LCD_voidInit+0x84>
		__ticks = 1;
    3220:	81 e0       	ldi	r24, 0x01	; 1
    3222:	90 e0       	ldi	r25, 0x00	; 0
    3224:	9e af       	std	Y+62, r25	; 0x3e
    3226:	8d af       	std	Y+61, r24	; 0x3d
    3228:	46 c0       	rjmp	.+140    	; 0x32b6 <LCD_voidInit+0x110>
	else if (__tmp > 65535)
    322a:	fe 01       	movw	r30, r28
    322c:	ff 96       	adiw	r30, 0x3f	; 63
    322e:	60 81       	ld	r22, Z
    3230:	71 81       	ldd	r23, Z+1	; 0x01
    3232:	82 81       	ldd	r24, Z+2	; 0x02
    3234:	93 81       	ldd	r25, Z+3	; 0x03
    3236:	20 e0       	ldi	r18, 0x00	; 0
    3238:	3f ef       	ldi	r19, 0xFF	; 255
    323a:	4f e7       	ldi	r20, 0x7F	; 127
    323c:	57 e4       	ldi	r21, 0x47	; 71
    323e:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    3242:	18 16       	cp	r1, r24
    3244:	64 f5       	brge	.+88     	; 0x329e <LCD_voidInit+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3246:	fe 01       	movw	r30, r28
    3248:	ed 5b       	subi	r30, 0xBD	; 189
    324a:	ff 4f       	sbci	r31, 0xFF	; 255
    324c:	60 81       	ld	r22, Z
    324e:	71 81       	ldd	r23, Z+1	; 0x01
    3250:	82 81       	ldd	r24, Z+2	; 0x02
    3252:	93 81       	ldd	r25, Z+3	; 0x03
    3254:	20 e0       	ldi	r18, 0x00	; 0
    3256:	30 e0       	ldi	r19, 0x00	; 0
    3258:	40 e2       	ldi	r20, 0x20	; 32
    325a:	51 e4       	ldi	r21, 0x41	; 65
    325c:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3260:	dc 01       	movw	r26, r24
    3262:	cb 01       	movw	r24, r22
    3264:	bc 01       	movw	r22, r24
    3266:	cd 01       	movw	r24, r26
    3268:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    326c:	dc 01       	movw	r26, r24
    326e:	cb 01       	movw	r24, r22
    3270:	9e af       	std	Y+62, r25	; 0x3e
    3272:	8d af       	std	Y+61, r24	; 0x3d
    3274:	0f c0       	rjmp	.+30     	; 0x3294 <LCD_voidInit+0xee>
    3276:	88 ec       	ldi	r24, 0xC8	; 200
    3278:	90 e0       	ldi	r25, 0x00	; 0
    327a:	9c af       	std	Y+60, r25	; 0x3c
    327c:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    327e:	8b ad       	ldd	r24, Y+59	; 0x3b
    3280:	9c ad       	ldd	r25, Y+60	; 0x3c
    3282:	01 97       	sbiw	r24, 0x01	; 1
    3284:	f1 f7       	brne	.-4      	; 0x3282 <LCD_voidInit+0xdc>
    3286:	9c af       	std	Y+60, r25	; 0x3c
    3288:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    328a:	8d ad       	ldd	r24, Y+61	; 0x3d
    328c:	9e ad       	ldd	r25, Y+62	; 0x3e
    328e:	01 97       	sbiw	r24, 0x01	; 1
    3290:	9e af       	std	Y+62, r25	; 0x3e
    3292:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3294:	8d ad       	ldd	r24, Y+61	; 0x3d
    3296:	9e ad       	ldd	r25, Y+62	; 0x3e
    3298:	00 97       	sbiw	r24, 0x00	; 0
    329a:	69 f7       	brne	.-38     	; 0x3276 <LCD_voidInit+0xd0>
    329c:	16 c0       	rjmp	.+44     	; 0x32ca <LCD_voidInit+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    329e:	fe 01       	movw	r30, r28
    32a0:	ff 96       	adiw	r30, 0x3f	; 63
    32a2:	60 81       	ld	r22, Z
    32a4:	71 81       	ldd	r23, Z+1	; 0x01
    32a6:	82 81       	ldd	r24, Z+2	; 0x02
    32a8:	93 81       	ldd	r25, Z+3	; 0x03
    32aa:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    32ae:	dc 01       	movw	r26, r24
    32b0:	cb 01       	movw	r24, r22
    32b2:	9e af       	std	Y+62, r25	; 0x3e
    32b4:	8d af       	std	Y+61, r24	; 0x3d
    32b6:	8d ad       	ldd	r24, Y+61	; 0x3d
    32b8:	9e ad       	ldd	r25, Y+62	; 0x3e
    32ba:	9a af       	std	Y+58, r25	; 0x3a
    32bc:	89 af       	std	Y+57, r24	; 0x39
    32be:	89 ad       	ldd	r24, Y+57	; 0x39
    32c0:	9a ad       	ldd	r25, Y+58	; 0x3a
    32c2:	01 97       	sbiw	r24, 0x01	; 1
    32c4:	f1 f7       	brne	.-4      	; 0x32c2 <LCD_voidInit+0x11c>
    32c6:	9a af       	std	Y+58, r25	; 0x3a
    32c8:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(300);
	DIO_u8SetPinDir(LCD_RS_PORT , LCD_RS_PIN , OUTPUT);
    32ca:	81 e0       	ldi	r24, 0x01	; 1
    32cc:	60 e0       	ldi	r22, 0x00	; 0
    32ce:	41 e0       	ldi	r20, 0x01	; 1
    32d0:	0e 94 95 14 	call	0x292a	; 0x292a <DIO_u8SetPinDir>
	DIO_u8SetPinDir(LCD_RW_PORT , LCD_RW_PIN , OUTPUT);
    32d4:	81 e0       	ldi	r24, 0x01	; 1
    32d6:	61 e0       	ldi	r22, 0x01	; 1
    32d8:	41 e0       	ldi	r20, 0x01	; 1
    32da:	0e 94 95 14 	call	0x292a	; 0x292a <DIO_u8SetPinDir>
	DIO_u8SetPinDir(LCD_EN_PORT , LCD_EN_PIN , OUTPUT);
    32de:	81 e0       	ldi	r24, 0x01	; 1
    32e0:	62 e0       	ldi	r22, 0x02	; 2
    32e2:	41 e0       	ldi	r20, 0x01	; 1
    32e4:	0e 94 95 14 	call	0x292a	; 0x292a <DIO_u8SetPinDir>
	#if LCD_MODE == 0
		DIO_u8SetPortDir(LCD_PORT , FULL_OUTPUT);
    32e8:	80 e0       	ldi	r24, 0x00	; 0
    32ea:	6f ef       	ldi	r22, 0xFF	; 255
    32ec:	0e 94 b3 13 	call	0x2766	; 0x2766 <DIO_u8SetPortDir>
		LCD_voidWriteCmd(LCD_Function_8BIT_2Lines);
    32f0:	88 e3       	ldi	r24, 0x38	; 56
    32f2:	90 e0       	ldi	r25, 0x00	; 0
    32f4:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    32f8:	80 e0       	ldi	r24, 0x00	; 0
    32fa:	90 e0       	ldi	r25, 0x00	; 0
    32fc:	a0 e8       	ldi	r26, 0x80	; 128
    32fe:	bf e3       	ldi	r27, 0x3F	; 63
    3300:	8d ab       	std	Y+53, r24	; 0x35
    3302:	9e ab       	std	Y+54, r25	; 0x36
    3304:	af ab       	std	Y+55, r26	; 0x37
    3306:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3308:	6d a9       	ldd	r22, Y+53	; 0x35
    330a:	7e a9       	ldd	r23, Y+54	; 0x36
    330c:	8f a9       	ldd	r24, Y+55	; 0x37
    330e:	98 ad       	ldd	r25, Y+56	; 0x38
    3310:	20 e0       	ldi	r18, 0x00	; 0
    3312:	30 e0       	ldi	r19, 0x00	; 0
    3314:	4a ef       	ldi	r20, 0xFA	; 250
    3316:	54 e4       	ldi	r21, 0x44	; 68
    3318:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    331c:	dc 01       	movw	r26, r24
    331e:	cb 01       	movw	r24, r22
    3320:	89 ab       	std	Y+49, r24	; 0x31
    3322:	9a ab       	std	Y+50, r25	; 0x32
    3324:	ab ab       	std	Y+51, r26	; 0x33
    3326:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3328:	69 a9       	ldd	r22, Y+49	; 0x31
    332a:	7a a9       	ldd	r23, Y+50	; 0x32
    332c:	8b a9       	ldd	r24, Y+51	; 0x33
    332e:	9c a9       	ldd	r25, Y+52	; 0x34
    3330:	20 e0       	ldi	r18, 0x00	; 0
    3332:	30 e0       	ldi	r19, 0x00	; 0
    3334:	40 e8       	ldi	r20, 0x80	; 128
    3336:	5f e3       	ldi	r21, 0x3F	; 63
    3338:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    333c:	88 23       	and	r24, r24
    333e:	2c f4       	brge	.+10     	; 0x334a <LCD_voidInit+0x1a4>
		__ticks = 1;
    3340:	81 e0       	ldi	r24, 0x01	; 1
    3342:	90 e0       	ldi	r25, 0x00	; 0
    3344:	98 ab       	std	Y+48, r25	; 0x30
    3346:	8f a7       	std	Y+47, r24	; 0x2f
    3348:	3f c0       	rjmp	.+126    	; 0x33c8 <LCD_voidInit+0x222>
	else if (__tmp > 65535)
    334a:	69 a9       	ldd	r22, Y+49	; 0x31
    334c:	7a a9       	ldd	r23, Y+50	; 0x32
    334e:	8b a9       	ldd	r24, Y+51	; 0x33
    3350:	9c a9       	ldd	r25, Y+52	; 0x34
    3352:	20 e0       	ldi	r18, 0x00	; 0
    3354:	3f ef       	ldi	r19, 0xFF	; 255
    3356:	4f e7       	ldi	r20, 0x7F	; 127
    3358:	57 e4       	ldi	r21, 0x47	; 71
    335a:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    335e:	18 16       	cp	r1, r24
    3360:	4c f5       	brge	.+82     	; 0x33b4 <LCD_voidInit+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3362:	6d a9       	ldd	r22, Y+53	; 0x35
    3364:	7e a9       	ldd	r23, Y+54	; 0x36
    3366:	8f a9       	ldd	r24, Y+55	; 0x37
    3368:	98 ad       	ldd	r25, Y+56	; 0x38
    336a:	20 e0       	ldi	r18, 0x00	; 0
    336c:	30 e0       	ldi	r19, 0x00	; 0
    336e:	40 e2       	ldi	r20, 0x20	; 32
    3370:	51 e4       	ldi	r21, 0x41	; 65
    3372:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3376:	dc 01       	movw	r26, r24
    3378:	cb 01       	movw	r24, r22
    337a:	bc 01       	movw	r22, r24
    337c:	cd 01       	movw	r24, r26
    337e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3382:	dc 01       	movw	r26, r24
    3384:	cb 01       	movw	r24, r22
    3386:	98 ab       	std	Y+48, r25	; 0x30
    3388:	8f a7       	std	Y+47, r24	; 0x2f
    338a:	0f c0       	rjmp	.+30     	; 0x33aa <LCD_voidInit+0x204>
    338c:	88 ec       	ldi	r24, 0xC8	; 200
    338e:	90 e0       	ldi	r25, 0x00	; 0
    3390:	9e a7       	std	Y+46, r25	; 0x2e
    3392:	8d a7       	std	Y+45, r24	; 0x2d
    3394:	8d a5       	ldd	r24, Y+45	; 0x2d
    3396:	9e a5       	ldd	r25, Y+46	; 0x2e
    3398:	01 97       	sbiw	r24, 0x01	; 1
    339a:	f1 f7       	brne	.-4      	; 0x3398 <LCD_voidInit+0x1f2>
    339c:	9e a7       	std	Y+46, r25	; 0x2e
    339e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    33a2:	98 a9       	ldd	r25, Y+48	; 0x30
    33a4:	01 97       	sbiw	r24, 0x01	; 1
    33a6:	98 ab       	std	Y+48, r25	; 0x30
    33a8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33aa:	8f a5       	ldd	r24, Y+47	; 0x2f
    33ac:	98 a9       	ldd	r25, Y+48	; 0x30
    33ae:	00 97       	sbiw	r24, 0x00	; 0
    33b0:	69 f7       	brne	.-38     	; 0x338c <LCD_voidInit+0x1e6>
    33b2:	14 c0       	rjmp	.+40     	; 0x33dc <LCD_voidInit+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33b4:	69 a9       	ldd	r22, Y+49	; 0x31
    33b6:	7a a9       	ldd	r23, Y+50	; 0x32
    33b8:	8b a9       	ldd	r24, Y+51	; 0x33
    33ba:	9c a9       	ldd	r25, Y+52	; 0x34
    33bc:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    33c0:	dc 01       	movw	r26, r24
    33c2:	cb 01       	movw	r24, r22
    33c4:	98 ab       	std	Y+48, r25	; 0x30
    33c6:	8f a7       	std	Y+47, r24	; 0x2f
    33c8:	8f a5       	ldd	r24, Y+47	; 0x2f
    33ca:	98 a9       	ldd	r25, Y+48	; 0x30
    33cc:	9c a7       	std	Y+44, r25	; 0x2c
    33ce:	8b a7       	std	Y+43, r24	; 0x2b
    33d0:	8b a5       	ldd	r24, Y+43	; 0x2b
    33d2:	9c a5       	ldd	r25, Y+44	; 0x2c
    33d4:	01 97       	sbiw	r24, 0x01	; 1
    33d6:	f1 f7       	brne	.-4      	; 0x33d4 <LCD_voidInit+0x22e>
    33d8:	9c a7       	std	Y+44, r25	; 0x2c
    33da:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);
		LCD_voidWriteCmd(LCD_DISP_ON_CURSOR_ON);
    33dc:	8e e0       	ldi	r24, 0x0E	; 14
    33de:	90 e0       	ldi	r25, 0x00	; 0
    33e0:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    33e4:	80 e0       	ldi	r24, 0x00	; 0
    33e6:	90 e0       	ldi	r25, 0x00	; 0
    33e8:	a0 e8       	ldi	r26, 0x80	; 128
    33ea:	bf e3       	ldi	r27, 0x3F	; 63
    33ec:	8f a3       	std	Y+39, r24	; 0x27
    33ee:	98 a7       	std	Y+40, r25	; 0x28
    33f0:	a9 a7       	std	Y+41, r26	; 0x29
    33f2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33f4:	6f a1       	ldd	r22, Y+39	; 0x27
    33f6:	78 a5       	ldd	r23, Y+40	; 0x28
    33f8:	89 a5       	ldd	r24, Y+41	; 0x29
    33fa:	9a a5       	ldd	r25, Y+42	; 0x2a
    33fc:	20 e0       	ldi	r18, 0x00	; 0
    33fe:	30 e0       	ldi	r19, 0x00	; 0
    3400:	4a ef       	ldi	r20, 0xFA	; 250
    3402:	54 e4       	ldi	r21, 0x44	; 68
    3404:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3408:	dc 01       	movw	r26, r24
    340a:	cb 01       	movw	r24, r22
    340c:	8b a3       	std	Y+35, r24	; 0x23
    340e:	9c a3       	std	Y+36, r25	; 0x24
    3410:	ad a3       	std	Y+37, r26	; 0x25
    3412:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3414:	6b a1       	ldd	r22, Y+35	; 0x23
    3416:	7c a1       	ldd	r23, Y+36	; 0x24
    3418:	8d a1       	ldd	r24, Y+37	; 0x25
    341a:	9e a1       	ldd	r25, Y+38	; 0x26
    341c:	20 e0       	ldi	r18, 0x00	; 0
    341e:	30 e0       	ldi	r19, 0x00	; 0
    3420:	40 e8       	ldi	r20, 0x80	; 128
    3422:	5f e3       	ldi	r21, 0x3F	; 63
    3424:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    3428:	88 23       	and	r24, r24
    342a:	2c f4       	brge	.+10     	; 0x3436 <LCD_voidInit+0x290>
		__ticks = 1;
    342c:	81 e0       	ldi	r24, 0x01	; 1
    342e:	90 e0       	ldi	r25, 0x00	; 0
    3430:	9a a3       	std	Y+34, r25	; 0x22
    3432:	89 a3       	std	Y+33, r24	; 0x21
    3434:	3f c0       	rjmp	.+126    	; 0x34b4 <LCD_voidInit+0x30e>
	else if (__tmp > 65535)
    3436:	6b a1       	ldd	r22, Y+35	; 0x23
    3438:	7c a1       	ldd	r23, Y+36	; 0x24
    343a:	8d a1       	ldd	r24, Y+37	; 0x25
    343c:	9e a1       	ldd	r25, Y+38	; 0x26
    343e:	20 e0       	ldi	r18, 0x00	; 0
    3440:	3f ef       	ldi	r19, 0xFF	; 255
    3442:	4f e7       	ldi	r20, 0x7F	; 127
    3444:	57 e4       	ldi	r21, 0x47	; 71
    3446:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    344a:	18 16       	cp	r1, r24
    344c:	4c f5       	brge	.+82     	; 0x34a0 <LCD_voidInit+0x2fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    344e:	6f a1       	ldd	r22, Y+39	; 0x27
    3450:	78 a5       	ldd	r23, Y+40	; 0x28
    3452:	89 a5       	ldd	r24, Y+41	; 0x29
    3454:	9a a5       	ldd	r25, Y+42	; 0x2a
    3456:	20 e0       	ldi	r18, 0x00	; 0
    3458:	30 e0       	ldi	r19, 0x00	; 0
    345a:	40 e2       	ldi	r20, 0x20	; 32
    345c:	51 e4       	ldi	r21, 0x41	; 65
    345e:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3462:	dc 01       	movw	r26, r24
    3464:	cb 01       	movw	r24, r22
    3466:	bc 01       	movw	r22, r24
    3468:	cd 01       	movw	r24, r26
    346a:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    346e:	dc 01       	movw	r26, r24
    3470:	cb 01       	movw	r24, r22
    3472:	9a a3       	std	Y+34, r25	; 0x22
    3474:	89 a3       	std	Y+33, r24	; 0x21
    3476:	0f c0       	rjmp	.+30     	; 0x3496 <LCD_voidInit+0x2f0>
    3478:	88 ec       	ldi	r24, 0xC8	; 200
    347a:	90 e0       	ldi	r25, 0x00	; 0
    347c:	98 a3       	std	Y+32, r25	; 0x20
    347e:	8f 8f       	std	Y+31, r24	; 0x1f
    3480:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3482:	98 a1       	ldd	r25, Y+32	; 0x20
    3484:	01 97       	sbiw	r24, 0x01	; 1
    3486:	f1 f7       	brne	.-4      	; 0x3484 <LCD_voidInit+0x2de>
    3488:	98 a3       	std	Y+32, r25	; 0x20
    348a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    348c:	89 a1       	ldd	r24, Y+33	; 0x21
    348e:	9a a1       	ldd	r25, Y+34	; 0x22
    3490:	01 97       	sbiw	r24, 0x01	; 1
    3492:	9a a3       	std	Y+34, r25	; 0x22
    3494:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3496:	89 a1       	ldd	r24, Y+33	; 0x21
    3498:	9a a1       	ldd	r25, Y+34	; 0x22
    349a:	00 97       	sbiw	r24, 0x00	; 0
    349c:	69 f7       	brne	.-38     	; 0x3478 <LCD_voidInit+0x2d2>
    349e:	14 c0       	rjmp	.+40     	; 0x34c8 <LCD_voidInit+0x322>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34a0:	6b a1       	ldd	r22, Y+35	; 0x23
    34a2:	7c a1       	ldd	r23, Y+36	; 0x24
    34a4:	8d a1       	ldd	r24, Y+37	; 0x25
    34a6:	9e a1       	ldd	r25, Y+38	; 0x26
    34a8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    34ac:	dc 01       	movw	r26, r24
    34ae:	cb 01       	movw	r24, r22
    34b0:	9a a3       	std	Y+34, r25	; 0x22
    34b2:	89 a3       	std	Y+33, r24	; 0x21
    34b4:	89 a1       	ldd	r24, Y+33	; 0x21
    34b6:	9a a1       	ldd	r25, Y+34	; 0x22
    34b8:	9e 8f       	std	Y+30, r25	; 0x1e
    34ba:	8d 8f       	std	Y+29, r24	; 0x1d
    34bc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    34be:	9e 8d       	ldd	r25, Y+30	; 0x1e
    34c0:	01 97       	sbiw	r24, 0x01	; 1
    34c2:	f1 f7       	brne	.-4      	; 0x34c0 <LCD_voidInit+0x31a>
    34c4:	9e 8f       	std	Y+30, r25	; 0x1e
    34c6:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);
		LCD_voidWriteCmd(LCD_CLEAR_SCREEN);
    34c8:	81 e0       	ldi	r24, 0x01	; 1
    34ca:	90 e0       	ldi	r25, 0x00	; 0
    34cc:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    34d0:	80 e0       	ldi	r24, 0x00	; 0
    34d2:	90 e0       	ldi	r25, 0x00	; 0
    34d4:	a0 e2       	ldi	r26, 0x20	; 32
    34d6:	b1 e4       	ldi	r27, 0x41	; 65
    34d8:	89 8f       	std	Y+25, r24	; 0x19
    34da:	9a 8f       	std	Y+26, r25	; 0x1a
    34dc:	ab 8f       	std	Y+27, r26	; 0x1b
    34de:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34e0:	69 8d       	ldd	r22, Y+25	; 0x19
    34e2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    34e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    34e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    34e8:	20 e0       	ldi	r18, 0x00	; 0
    34ea:	30 e0       	ldi	r19, 0x00	; 0
    34ec:	4a ef       	ldi	r20, 0xFA	; 250
    34ee:	54 e4       	ldi	r21, 0x44	; 68
    34f0:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    34f4:	dc 01       	movw	r26, r24
    34f6:	cb 01       	movw	r24, r22
    34f8:	8d 8b       	std	Y+21, r24	; 0x15
    34fa:	9e 8b       	std	Y+22, r25	; 0x16
    34fc:	af 8b       	std	Y+23, r26	; 0x17
    34fe:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3500:	6d 89       	ldd	r22, Y+21	; 0x15
    3502:	7e 89       	ldd	r23, Y+22	; 0x16
    3504:	8f 89       	ldd	r24, Y+23	; 0x17
    3506:	98 8d       	ldd	r25, Y+24	; 0x18
    3508:	20 e0       	ldi	r18, 0x00	; 0
    350a:	30 e0       	ldi	r19, 0x00	; 0
    350c:	40 e8       	ldi	r20, 0x80	; 128
    350e:	5f e3       	ldi	r21, 0x3F	; 63
    3510:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    3514:	88 23       	and	r24, r24
    3516:	2c f4       	brge	.+10     	; 0x3522 <LCD_voidInit+0x37c>
		__ticks = 1;
    3518:	81 e0       	ldi	r24, 0x01	; 1
    351a:	90 e0       	ldi	r25, 0x00	; 0
    351c:	9c 8b       	std	Y+20, r25	; 0x14
    351e:	8b 8b       	std	Y+19, r24	; 0x13
    3520:	3f c0       	rjmp	.+126    	; 0x35a0 <LCD_voidInit+0x3fa>
	else if (__tmp > 65535)
    3522:	6d 89       	ldd	r22, Y+21	; 0x15
    3524:	7e 89       	ldd	r23, Y+22	; 0x16
    3526:	8f 89       	ldd	r24, Y+23	; 0x17
    3528:	98 8d       	ldd	r25, Y+24	; 0x18
    352a:	20 e0       	ldi	r18, 0x00	; 0
    352c:	3f ef       	ldi	r19, 0xFF	; 255
    352e:	4f e7       	ldi	r20, 0x7F	; 127
    3530:	57 e4       	ldi	r21, 0x47	; 71
    3532:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    3536:	18 16       	cp	r1, r24
    3538:	4c f5       	brge	.+82     	; 0x358c <LCD_voidInit+0x3e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    353a:	69 8d       	ldd	r22, Y+25	; 0x19
    353c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    353e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3540:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3542:	20 e0       	ldi	r18, 0x00	; 0
    3544:	30 e0       	ldi	r19, 0x00	; 0
    3546:	40 e2       	ldi	r20, 0x20	; 32
    3548:	51 e4       	ldi	r21, 0x41	; 65
    354a:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    354e:	dc 01       	movw	r26, r24
    3550:	cb 01       	movw	r24, r22
    3552:	bc 01       	movw	r22, r24
    3554:	cd 01       	movw	r24, r26
    3556:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    355a:	dc 01       	movw	r26, r24
    355c:	cb 01       	movw	r24, r22
    355e:	9c 8b       	std	Y+20, r25	; 0x14
    3560:	8b 8b       	std	Y+19, r24	; 0x13
    3562:	0f c0       	rjmp	.+30     	; 0x3582 <LCD_voidInit+0x3dc>
    3564:	88 ec       	ldi	r24, 0xC8	; 200
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	9a 8b       	std	Y+18, r25	; 0x12
    356a:	89 8b       	std	Y+17, r24	; 0x11
    356c:	89 89       	ldd	r24, Y+17	; 0x11
    356e:	9a 89       	ldd	r25, Y+18	; 0x12
    3570:	01 97       	sbiw	r24, 0x01	; 1
    3572:	f1 f7       	brne	.-4      	; 0x3570 <LCD_voidInit+0x3ca>
    3574:	9a 8b       	std	Y+18, r25	; 0x12
    3576:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3578:	8b 89       	ldd	r24, Y+19	; 0x13
    357a:	9c 89       	ldd	r25, Y+20	; 0x14
    357c:	01 97       	sbiw	r24, 0x01	; 1
    357e:	9c 8b       	std	Y+20, r25	; 0x14
    3580:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3582:	8b 89       	ldd	r24, Y+19	; 0x13
    3584:	9c 89       	ldd	r25, Y+20	; 0x14
    3586:	00 97       	sbiw	r24, 0x00	; 0
    3588:	69 f7       	brne	.-38     	; 0x3564 <LCD_voidInit+0x3be>
    358a:	14 c0       	rjmp	.+40     	; 0x35b4 <LCD_voidInit+0x40e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    358c:	6d 89       	ldd	r22, Y+21	; 0x15
    358e:	7e 89       	ldd	r23, Y+22	; 0x16
    3590:	8f 89       	ldd	r24, Y+23	; 0x17
    3592:	98 8d       	ldd	r25, Y+24	; 0x18
    3594:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3598:	dc 01       	movw	r26, r24
    359a:	cb 01       	movw	r24, r22
    359c:	9c 8b       	std	Y+20, r25	; 0x14
    359e:	8b 8b       	std	Y+19, r24	; 0x13
    35a0:	8b 89       	ldd	r24, Y+19	; 0x13
    35a2:	9c 89       	ldd	r25, Y+20	; 0x14
    35a4:	98 8b       	std	Y+16, r25	; 0x10
    35a6:	8f 87       	std	Y+15, r24	; 0x0f
    35a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    35aa:	98 89       	ldd	r25, Y+16	; 0x10
    35ac:	01 97       	sbiw	r24, 0x01	; 1
    35ae:	f1 f7       	brne	.-4      	; 0x35ac <LCD_voidInit+0x406>
    35b0:	98 8b       	std	Y+16, r25	; 0x10
    35b2:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(10);
		LCD_voidWriteCmd(LCD_ENTRY_MODE);
    35b4:	86 e0       	ldi	r24, 0x06	; 6
    35b6:	90 e0       	ldi	r25, 0x00	; 0
    35b8:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    35bc:	80 e0       	ldi	r24, 0x00	; 0
    35be:	90 e0       	ldi	r25, 0x00	; 0
    35c0:	a0 e8       	ldi	r26, 0x80	; 128
    35c2:	bf e3       	ldi	r27, 0x3F	; 63
    35c4:	8b 87       	std	Y+11, r24	; 0x0b
    35c6:	9c 87       	std	Y+12, r25	; 0x0c
    35c8:	ad 87       	std	Y+13, r26	; 0x0d
    35ca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    35ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    35d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    35d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    35d4:	20 e0       	ldi	r18, 0x00	; 0
    35d6:	30 e0       	ldi	r19, 0x00	; 0
    35d8:	4a ef       	ldi	r20, 0xFA	; 250
    35da:	54 e4       	ldi	r21, 0x44	; 68
    35dc:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    35e0:	dc 01       	movw	r26, r24
    35e2:	cb 01       	movw	r24, r22
    35e4:	8f 83       	std	Y+7, r24	; 0x07
    35e6:	98 87       	std	Y+8, r25	; 0x08
    35e8:	a9 87       	std	Y+9, r26	; 0x09
    35ea:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    35ec:	6f 81       	ldd	r22, Y+7	; 0x07
    35ee:	78 85       	ldd	r23, Y+8	; 0x08
    35f0:	89 85       	ldd	r24, Y+9	; 0x09
    35f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    35f4:	20 e0       	ldi	r18, 0x00	; 0
    35f6:	30 e0       	ldi	r19, 0x00	; 0
    35f8:	40 e8       	ldi	r20, 0x80	; 128
    35fa:	5f e3       	ldi	r21, 0x3F	; 63
    35fc:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    3600:	88 23       	and	r24, r24
    3602:	2c f4       	brge	.+10     	; 0x360e <LCD_voidInit+0x468>
		__ticks = 1;
    3604:	81 e0       	ldi	r24, 0x01	; 1
    3606:	90 e0       	ldi	r25, 0x00	; 0
    3608:	9e 83       	std	Y+6, r25	; 0x06
    360a:	8d 83       	std	Y+5, r24	; 0x05
    360c:	3f c0       	rjmp	.+126    	; 0x368c <LCD_voidInit+0x4e6>
	else if (__tmp > 65535)
    360e:	6f 81       	ldd	r22, Y+7	; 0x07
    3610:	78 85       	ldd	r23, Y+8	; 0x08
    3612:	89 85       	ldd	r24, Y+9	; 0x09
    3614:	9a 85       	ldd	r25, Y+10	; 0x0a
    3616:	20 e0       	ldi	r18, 0x00	; 0
    3618:	3f ef       	ldi	r19, 0xFF	; 255
    361a:	4f e7       	ldi	r20, 0x7F	; 127
    361c:	57 e4       	ldi	r21, 0x47	; 71
    361e:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    3622:	18 16       	cp	r1, r24
    3624:	4c f5       	brge	.+82     	; 0x3678 <LCD_voidInit+0x4d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3626:	6b 85       	ldd	r22, Y+11	; 0x0b
    3628:	7c 85       	ldd	r23, Y+12	; 0x0c
    362a:	8d 85       	ldd	r24, Y+13	; 0x0d
    362c:	9e 85       	ldd	r25, Y+14	; 0x0e
    362e:	20 e0       	ldi	r18, 0x00	; 0
    3630:	30 e0       	ldi	r19, 0x00	; 0
    3632:	40 e2       	ldi	r20, 0x20	; 32
    3634:	51 e4       	ldi	r21, 0x41	; 65
    3636:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    363a:	dc 01       	movw	r26, r24
    363c:	cb 01       	movw	r24, r22
    363e:	bc 01       	movw	r22, r24
    3640:	cd 01       	movw	r24, r26
    3642:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3646:	dc 01       	movw	r26, r24
    3648:	cb 01       	movw	r24, r22
    364a:	9e 83       	std	Y+6, r25	; 0x06
    364c:	8d 83       	std	Y+5, r24	; 0x05
    364e:	0f c0       	rjmp	.+30     	; 0x366e <LCD_voidInit+0x4c8>
    3650:	88 ec       	ldi	r24, 0xC8	; 200
    3652:	90 e0       	ldi	r25, 0x00	; 0
    3654:	9c 83       	std	Y+4, r25	; 0x04
    3656:	8b 83       	std	Y+3, r24	; 0x03
    3658:	8b 81       	ldd	r24, Y+3	; 0x03
    365a:	9c 81       	ldd	r25, Y+4	; 0x04
    365c:	01 97       	sbiw	r24, 0x01	; 1
    365e:	f1 f7       	brne	.-4      	; 0x365c <LCD_voidInit+0x4b6>
    3660:	9c 83       	std	Y+4, r25	; 0x04
    3662:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3664:	8d 81       	ldd	r24, Y+5	; 0x05
    3666:	9e 81       	ldd	r25, Y+6	; 0x06
    3668:	01 97       	sbiw	r24, 0x01	; 1
    366a:	9e 83       	std	Y+6, r25	; 0x06
    366c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    366e:	8d 81       	ldd	r24, Y+5	; 0x05
    3670:	9e 81       	ldd	r25, Y+6	; 0x06
    3672:	00 97       	sbiw	r24, 0x00	; 0
    3674:	69 f7       	brne	.-38     	; 0x3650 <LCD_voidInit+0x4aa>
    3676:	14 c0       	rjmp	.+40     	; 0x36a0 <LCD_voidInit+0x4fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3678:	6f 81       	ldd	r22, Y+7	; 0x07
    367a:	78 85       	ldd	r23, Y+8	; 0x08
    367c:	89 85       	ldd	r24, Y+9	; 0x09
    367e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3680:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3684:	dc 01       	movw	r26, r24
    3686:	cb 01       	movw	r24, r22
    3688:	9e 83       	std	Y+6, r25	; 0x06
    368a:	8d 83       	std	Y+5, r24	; 0x05
    368c:	8d 81       	ldd	r24, Y+5	; 0x05
    368e:	9e 81       	ldd	r25, Y+6	; 0x06
    3690:	9a 83       	std	Y+2, r25	; 0x02
    3692:	89 83       	std	Y+1, r24	; 0x01
    3694:	89 81       	ldd	r24, Y+1	; 0x01
    3696:	9a 81       	ldd	r25, Y+2	; 0x02
    3698:	01 97       	sbiw	r24, 0x01	; 1
    369a:	f1 f7       	brne	.-4      	; 0x3698 <LCD_voidInit+0x4f2>
    369c:	9a 83       	std	Y+2, r25	; 0x02
    369e:	89 83       	std	Y+1, r24	; 0x01
			LCD_voidWriteCmd(LCD_ENTRY_MODE);
			_delay_ms(1);
	#endif

#endif
}
    36a0:	ca 5b       	subi	r28, 0xBA	; 186
    36a2:	df 4f       	sbci	r29, 0xFF	; 255
    36a4:	0f b6       	in	r0, 0x3f	; 63
    36a6:	f8 94       	cli
    36a8:	de bf       	out	0x3e, r29	; 62
    36aa:	0f be       	out	0x3f, r0	; 63
    36ac:	cd bf       	out	0x3d, r28	; 61
    36ae:	cf 91       	pop	r28
    36b0:	df 91       	pop	r29
    36b2:	1f 91       	pop	r17
    36b4:	0f 91       	pop	r16
    36b6:	08 95       	ret

000036b8 <LCD_voidWriteCmd>:

void LCD_voidWriteCmd(uint8 u8CommandCopy){
    36b8:	df 93       	push	r29
    36ba:	cf 93       	push	r28
    36bc:	0f 92       	push	r0
    36be:	cd b7       	in	r28, 0x3d	; 61
    36c0:	de b7       	in	r29, 0x3e	; 62
    36c2:	89 83       	std	Y+1, r24	; 0x01
	#if LCD_MODE==0
		DIO_u8SetPortVal(LCD_PORT ,u8CommandCopy) ;
    36c4:	80 e0       	ldi	r24, 0x00	; 0
    36c6:	69 81       	ldd	r22, Y+1	; 0x01
    36c8:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <DIO_u8SetPortVal>
		DIO_u8SetPinVal(LCD_RW_PORT , LCD_RW_PIN , LOW);   //write
    36cc:	81 e0       	ldi	r24, 0x01	; 1
    36ce:	61 e0       	ldi	r22, 0x01	; 1
    36d0:	40 e0       	ldi	r20, 0x00	; 0
    36d2:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>
		DIO_u8SetPinVal(LCD_RS_PORT , LCD_RS_PIN , LOW);   //CMD
    36d6:	81 e0       	ldi	r24, 0x01	; 1
    36d8:	60 e0       	ldi	r22, 0x00	; 0
    36da:	40 e0       	ldi	r20, 0x00	; 0
    36dc:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>
		LCD_voidSendEnPulse();
    36e0:	0e 94 ee 1e 	call	0x3ddc	; 0x3ddc <LCD_voidSendEnPulse>
			_delay_ms(2);

		#endif

	#endif
}
    36e4:	0f 90       	pop	r0
    36e6:	cf 91       	pop	r28
    36e8:	df 91       	pop	r29
    36ea:	08 95       	ret

000036ec <LCD_voidWriteChar>:

void LCD_voidWriteChar(uint8 u8CharacterCopy){
    36ec:	df 93       	push	r29
    36ee:	cf 93       	push	r28
    36f0:	0f 92       	push	r0
    36f2:	cd b7       	in	r28, 0x3d	; 61
    36f4:	de b7       	in	r29, 0x3e	; 62
    36f6:	89 83       	std	Y+1, r24	; 0x01
#if LCD_MODE==0
	DIO_u8SetPortVal(LCD_PORT ,u8CharacterCopy) ;
    36f8:	80 e0       	ldi	r24, 0x00	; 0
    36fa:	69 81       	ldd	r22, Y+1	; 0x01
    36fc:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <DIO_u8SetPortVal>
	DIO_u8SetPinVal(LCD_RW_PORT , LCD_RS_PIN , HIGH);   //char
    3700:	81 e0       	ldi	r24, 0x01	; 1
    3702:	60 e0       	ldi	r22, 0x00	; 0
    3704:	41 e0       	ldi	r20, 0x01	; 1
    3706:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>
	DIO_u8SetPinVal(LCD_RS_PORT , LCD_RW_PIN , LOW );   //read
    370a:	81 e0       	ldi	r24, 0x01	; 1
    370c:	61 e0       	ldi	r22, 0x01	; 1
    370e:	40 e0       	ldi	r20, 0x00	; 0
    3710:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>
	LCD_voidSendEnPulse();
    3714:	0e 94 ee 1e 	call	0x3ddc	; 0x3ddc <LCD_voidSendEnPulse>
		_delay_ms(2);

	#endif

#endif
}
    3718:	0f 90       	pop	r0
    371a:	cf 91       	pop	r28
    371c:	df 91       	pop	r29
    371e:	08 95       	ret

00003720 <LCD_voidClearScreen>:

void LCD_voidClearScreen (void){
    3720:	df 93       	push	r29
    3722:	cf 93       	push	r28
    3724:	cd b7       	in	r28, 0x3d	; 61
    3726:	de b7       	in	r29, 0x3e	; 62
    3728:	2e 97       	sbiw	r28, 0x0e	; 14
    372a:	0f b6       	in	r0, 0x3f	; 63
    372c:	f8 94       	cli
    372e:	de bf       	out	0x3e, r29	; 62
    3730:	0f be       	out	0x3f, r0	; 63
    3732:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_CLEAR_SCREEN);
    3734:	81 e0       	ldi	r24, 0x01	; 1
    3736:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    373a:	80 e0       	ldi	r24, 0x00	; 0
    373c:	90 e0       	ldi	r25, 0x00	; 0
    373e:	a0 e2       	ldi	r26, 0x20	; 32
    3740:	b1 e4       	ldi	r27, 0x41	; 65
    3742:	8b 87       	std	Y+11, r24	; 0x0b
    3744:	9c 87       	std	Y+12, r25	; 0x0c
    3746:	ad 87       	std	Y+13, r26	; 0x0d
    3748:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    374a:	6b 85       	ldd	r22, Y+11	; 0x0b
    374c:	7c 85       	ldd	r23, Y+12	; 0x0c
    374e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3750:	9e 85       	ldd	r25, Y+14	; 0x0e
    3752:	20 e0       	ldi	r18, 0x00	; 0
    3754:	30 e0       	ldi	r19, 0x00	; 0
    3756:	4a ef       	ldi	r20, 0xFA	; 250
    3758:	54 e4       	ldi	r21, 0x44	; 68
    375a:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    375e:	dc 01       	movw	r26, r24
    3760:	cb 01       	movw	r24, r22
    3762:	8f 83       	std	Y+7, r24	; 0x07
    3764:	98 87       	std	Y+8, r25	; 0x08
    3766:	a9 87       	std	Y+9, r26	; 0x09
    3768:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    376a:	6f 81       	ldd	r22, Y+7	; 0x07
    376c:	78 85       	ldd	r23, Y+8	; 0x08
    376e:	89 85       	ldd	r24, Y+9	; 0x09
    3770:	9a 85       	ldd	r25, Y+10	; 0x0a
    3772:	20 e0       	ldi	r18, 0x00	; 0
    3774:	30 e0       	ldi	r19, 0x00	; 0
    3776:	40 e8       	ldi	r20, 0x80	; 128
    3778:	5f e3       	ldi	r21, 0x3F	; 63
    377a:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    377e:	88 23       	and	r24, r24
    3780:	2c f4       	brge	.+10     	; 0x378c <LCD_voidClearScreen+0x6c>
		__ticks = 1;
    3782:	81 e0       	ldi	r24, 0x01	; 1
    3784:	90 e0       	ldi	r25, 0x00	; 0
    3786:	9e 83       	std	Y+6, r25	; 0x06
    3788:	8d 83       	std	Y+5, r24	; 0x05
    378a:	3f c0       	rjmp	.+126    	; 0x380a <LCD_voidClearScreen+0xea>
	else if (__tmp > 65535)
    378c:	6f 81       	ldd	r22, Y+7	; 0x07
    378e:	78 85       	ldd	r23, Y+8	; 0x08
    3790:	89 85       	ldd	r24, Y+9	; 0x09
    3792:	9a 85       	ldd	r25, Y+10	; 0x0a
    3794:	20 e0       	ldi	r18, 0x00	; 0
    3796:	3f ef       	ldi	r19, 0xFF	; 255
    3798:	4f e7       	ldi	r20, 0x7F	; 127
    379a:	57 e4       	ldi	r21, 0x47	; 71
    379c:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    37a0:	18 16       	cp	r1, r24
    37a2:	4c f5       	brge	.+82     	; 0x37f6 <LCD_voidClearScreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37a4:	6b 85       	ldd	r22, Y+11	; 0x0b
    37a6:	7c 85       	ldd	r23, Y+12	; 0x0c
    37a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    37aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    37ac:	20 e0       	ldi	r18, 0x00	; 0
    37ae:	30 e0       	ldi	r19, 0x00	; 0
    37b0:	40 e2       	ldi	r20, 0x20	; 32
    37b2:	51 e4       	ldi	r21, 0x41	; 65
    37b4:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    37b8:	dc 01       	movw	r26, r24
    37ba:	cb 01       	movw	r24, r22
    37bc:	bc 01       	movw	r22, r24
    37be:	cd 01       	movw	r24, r26
    37c0:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    37c4:	dc 01       	movw	r26, r24
    37c6:	cb 01       	movw	r24, r22
    37c8:	9e 83       	std	Y+6, r25	; 0x06
    37ca:	8d 83       	std	Y+5, r24	; 0x05
    37cc:	0f c0       	rjmp	.+30     	; 0x37ec <LCD_voidClearScreen+0xcc>
    37ce:	88 ec       	ldi	r24, 0xC8	; 200
    37d0:	90 e0       	ldi	r25, 0x00	; 0
    37d2:	9c 83       	std	Y+4, r25	; 0x04
    37d4:	8b 83       	std	Y+3, r24	; 0x03
    37d6:	8b 81       	ldd	r24, Y+3	; 0x03
    37d8:	9c 81       	ldd	r25, Y+4	; 0x04
    37da:	01 97       	sbiw	r24, 0x01	; 1
    37dc:	f1 f7       	brne	.-4      	; 0x37da <LCD_voidClearScreen+0xba>
    37de:	9c 83       	std	Y+4, r25	; 0x04
    37e0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37e2:	8d 81       	ldd	r24, Y+5	; 0x05
    37e4:	9e 81       	ldd	r25, Y+6	; 0x06
    37e6:	01 97       	sbiw	r24, 0x01	; 1
    37e8:	9e 83       	std	Y+6, r25	; 0x06
    37ea:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37ec:	8d 81       	ldd	r24, Y+5	; 0x05
    37ee:	9e 81       	ldd	r25, Y+6	; 0x06
    37f0:	00 97       	sbiw	r24, 0x00	; 0
    37f2:	69 f7       	brne	.-38     	; 0x37ce <LCD_voidClearScreen+0xae>
    37f4:	14 c0       	rjmp	.+40     	; 0x381e <LCD_voidClearScreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37f6:	6f 81       	ldd	r22, Y+7	; 0x07
    37f8:	78 85       	ldd	r23, Y+8	; 0x08
    37fa:	89 85       	ldd	r24, Y+9	; 0x09
    37fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    37fe:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3802:	dc 01       	movw	r26, r24
    3804:	cb 01       	movw	r24, r22
    3806:	9e 83       	std	Y+6, r25	; 0x06
    3808:	8d 83       	std	Y+5, r24	; 0x05
    380a:	8d 81       	ldd	r24, Y+5	; 0x05
    380c:	9e 81       	ldd	r25, Y+6	; 0x06
    380e:	9a 83       	std	Y+2, r25	; 0x02
    3810:	89 83       	std	Y+1, r24	; 0x01
    3812:	89 81       	ldd	r24, Y+1	; 0x01
    3814:	9a 81       	ldd	r25, Y+2	; 0x02
    3816:	01 97       	sbiw	r24, 0x01	; 1
    3818:	f1 f7       	brne	.-4      	; 0x3816 <LCD_voidClearScreen+0xf6>
    381a:	9a 83       	std	Y+2, r25	; 0x02
    381c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    381e:	2e 96       	adiw	r28, 0x0e	; 14
    3820:	0f b6       	in	r0, 0x3f	; 63
    3822:	f8 94       	cli
    3824:	de bf       	out	0x3e, r29	; 62
    3826:	0f be       	out	0x3f, r0	; 63
    3828:	cd bf       	out	0x3d, r28	; 61
    382a:	cf 91       	pop	r28
    382c:	df 91       	pop	r29
    382e:	08 95       	ret

00003830 <LCD_voidShiftLeft>:

void LCD_voidShiftLeft (void){
    3830:	df 93       	push	r29
    3832:	cf 93       	push	r28
    3834:	cd b7       	in	r28, 0x3d	; 61
    3836:	de b7       	in	r29, 0x3e	; 62
    3838:	2e 97       	sbiw	r28, 0x0e	; 14
    383a:	0f b6       	in	r0, 0x3f	; 63
    383c:	f8 94       	cli
    383e:	de bf       	out	0x3e, r29	; 62
    3840:	0f be       	out	0x3f, r0	; 63
    3842:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_MOVE_CURSOR_LIFT);
    3844:	80 e1       	ldi	r24, 0x10	; 16
    3846:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    384a:	80 e0       	ldi	r24, 0x00	; 0
    384c:	90 e0       	ldi	r25, 0x00	; 0
    384e:	a0 e2       	ldi	r26, 0x20	; 32
    3850:	b1 e4       	ldi	r27, 0x41	; 65
    3852:	8b 87       	std	Y+11, r24	; 0x0b
    3854:	9c 87       	std	Y+12, r25	; 0x0c
    3856:	ad 87       	std	Y+13, r26	; 0x0d
    3858:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    385a:	6b 85       	ldd	r22, Y+11	; 0x0b
    385c:	7c 85       	ldd	r23, Y+12	; 0x0c
    385e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3860:	9e 85       	ldd	r25, Y+14	; 0x0e
    3862:	20 e0       	ldi	r18, 0x00	; 0
    3864:	30 e0       	ldi	r19, 0x00	; 0
    3866:	4a ef       	ldi	r20, 0xFA	; 250
    3868:	54 e4       	ldi	r21, 0x44	; 68
    386a:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    386e:	dc 01       	movw	r26, r24
    3870:	cb 01       	movw	r24, r22
    3872:	8f 83       	std	Y+7, r24	; 0x07
    3874:	98 87       	std	Y+8, r25	; 0x08
    3876:	a9 87       	std	Y+9, r26	; 0x09
    3878:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    387a:	6f 81       	ldd	r22, Y+7	; 0x07
    387c:	78 85       	ldd	r23, Y+8	; 0x08
    387e:	89 85       	ldd	r24, Y+9	; 0x09
    3880:	9a 85       	ldd	r25, Y+10	; 0x0a
    3882:	20 e0       	ldi	r18, 0x00	; 0
    3884:	30 e0       	ldi	r19, 0x00	; 0
    3886:	40 e8       	ldi	r20, 0x80	; 128
    3888:	5f e3       	ldi	r21, 0x3F	; 63
    388a:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    388e:	88 23       	and	r24, r24
    3890:	2c f4       	brge	.+10     	; 0x389c <LCD_voidShiftLeft+0x6c>
		__ticks = 1;
    3892:	81 e0       	ldi	r24, 0x01	; 1
    3894:	90 e0       	ldi	r25, 0x00	; 0
    3896:	9e 83       	std	Y+6, r25	; 0x06
    3898:	8d 83       	std	Y+5, r24	; 0x05
    389a:	3f c0       	rjmp	.+126    	; 0x391a <LCD_voidShiftLeft+0xea>
	else if (__tmp > 65535)
    389c:	6f 81       	ldd	r22, Y+7	; 0x07
    389e:	78 85       	ldd	r23, Y+8	; 0x08
    38a0:	89 85       	ldd	r24, Y+9	; 0x09
    38a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    38a4:	20 e0       	ldi	r18, 0x00	; 0
    38a6:	3f ef       	ldi	r19, 0xFF	; 255
    38a8:	4f e7       	ldi	r20, 0x7F	; 127
    38aa:	57 e4       	ldi	r21, 0x47	; 71
    38ac:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    38b0:	18 16       	cp	r1, r24
    38b2:	4c f5       	brge	.+82     	; 0x3906 <LCD_voidShiftLeft+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38b4:	6b 85       	ldd	r22, Y+11	; 0x0b
    38b6:	7c 85       	ldd	r23, Y+12	; 0x0c
    38b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    38ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    38bc:	20 e0       	ldi	r18, 0x00	; 0
    38be:	30 e0       	ldi	r19, 0x00	; 0
    38c0:	40 e2       	ldi	r20, 0x20	; 32
    38c2:	51 e4       	ldi	r21, 0x41	; 65
    38c4:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    38c8:	dc 01       	movw	r26, r24
    38ca:	cb 01       	movw	r24, r22
    38cc:	bc 01       	movw	r22, r24
    38ce:	cd 01       	movw	r24, r26
    38d0:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    38d4:	dc 01       	movw	r26, r24
    38d6:	cb 01       	movw	r24, r22
    38d8:	9e 83       	std	Y+6, r25	; 0x06
    38da:	8d 83       	std	Y+5, r24	; 0x05
    38dc:	0f c0       	rjmp	.+30     	; 0x38fc <LCD_voidShiftLeft+0xcc>
    38de:	88 ec       	ldi	r24, 0xC8	; 200
    38e0:	90 e0       	ldi	r25, 0x00	; 0
    38e2:	9c 83       	std	Y+4, r25	; 0x04
    38e4:	8b 83       	std	Y+3, r24	; 0x03
    38e6:	8b 81       	ldd	r24, Y+3	; 0x03
    38e8:	9c 81       	ldd	r25, Y+4	; 0x04
    38ea:	01 97       	sbiw	r24, 0x01	; 1
    38ec:	f1 f7       	brne	.-4      	; 0x38ea <LCD_voidShiftLeft+0xba>
    38ee:	9c 83       	std	Y+4, r25	; 0x04
    38f0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38f2:	8d 81       	ldd	r24, Y+5	; 0x05
    38f4:	9e 81       	ldd	r25, Y+6	; 0x06
    38f6:	01 97       	sbiw	r24, 0x01	; 1
    38f8:	9e 83       	std	Y+6, r25	; 0x06
    38fa:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38fc:	8d 81       	ldd	r24, Y+5	; 0x05
    38fe:	9e 81       	ldd	r25, Y+6	; 0x06
    3900:	00 97       	sbiw	r24, 0x00	; 0
    3902:	69 f7       	brne	.-38     	; 0x38de <LCD_voidShiftLeft+0xae>
    3904:	14 c0       	rjmp	.+40     	; 0x392e <LCD_voidShiftLeft+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3906:	6f 81       	ldd	r22, Y+7	; 0x07
    3908:	78 85       	ldd	r23, Y+8	; 0x08
    390a:	89 85       	ldd	r24, Y+9	; 0x09
    390c:	9a 85       	ldd	r25, Y+10	; 0x0a
    390e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3912:	dc 01       	movw	r26, r24
    3914:	cb 01       	movw	r24, r22
    3916:	9e 83       	std	Y+6, r25	; 0x06
    3918:	8d 83       	std	Y+5, r24	; 0x05
    391a:	8d 81       	ldd	r24, Y+5	; 0x05
    391c:	9e 81       	ldd	r25, Y+6	; 0x06
    391e:	9a 83       	std	Y+2, r25	; 0x02
    3920:	89 83       	std	Y+1, r24	; 0x01
    3922:	89 81       	ldd	r24, Y+1	; 0x01
    3924:	9a 81       	ldd	r25, Y+2	; 0x02
    3926:	01 97       	sbiw	r24, 0x01	; 1
    3928:	f1 f7       	brne	.-4      	; 0x3926 <LCD_voidShiftLeft+0xf6>
    392a:	9a 83       	std	Y+2, r25	; 0x02
    392c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    392e:	2e 96       	adiw	r28, 0x0e	; 14
    3930:	0f b6       	in	r0, 0x3f	; 63
    3932:	f8 94       	cli
    3934:	de bf       	out	0x3e, r29	; 62
    3936:	0f be       	out	0x3f, r0	; 63
    3938:	cd bf       	out	0x3d, r28	; 61
    393a:	cf 91       	pop	r28
    393c:	df 91       	pop	r29
    393e:	08 95       	ret

00003940 <LCD_voidShiftRight>:

void LCD_voidShiftRight (void){
    3940:	df 93       	push	r29
    3942:	cf 93       	push	r28
    3944:	cd b7       	in	r28, 0x3d	; 61
    3946:	de b7       	in	r29, 0x3e	; 62
    3948:	2e 97       	sbiw	r28, 0x0e	; 14
    394a:	0f b6       	in	r0, 0x3f	; 63
    394c:	f8 94       	cli
    394e:	de bf       	out	0x3e, r29	; 62
    3950:	0f be       	out	0x3f, r0	; 63
    3952:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_MOVE_CURSOR_RIGHT);
    3954:	84 e1       	ldi	r24, 0x14	; 20
    3956:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    395a:	80 e0       	ldi	r24, 0x00	; 0
    395c:	90 e0       	ldi	r25, 0x00	; 0
    395e:	a0 e2       	ldi	r26, 0x20	; 32
    3960:	b1 e4       	ldi	r27, 0x41	; 65
    3962:	8b 87       	std	Y+11, r24	; 0x0b
    3964:	9c 87       	std	Y+12, r25	; 0x0c
    3966:	ad 87       	std	Y+13, r26	; 0x0d
    3968:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    396a:	6b 85       	ldd	r22, Y+11	; 0x0b
    396c:	7c 85       	ldd	r23, Y+12	; 0x0c
    396e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3970:	9e 85       	ldd	r25, Y+14	; 0x0e
    3972:	20 e0       	ldi	r18, 0x00	; 0
    3974:	30 e0       	ldi	r19, 0x00	; 0
    3976:	4a ef       	ldi	r20, 0xFA	; 250
    3978:	54 e4       	ldi	r21, 0x44	; 68
    397a:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    397e:	dc 01       	movw	r26, r24
    3980:	cb 01       	movw	r24, r22
    3982:	8f 83       	std	Y+7, r24	; 0x07
    3984:	98 87       	std	Y+8, r25	; 0x08
    3986:	a9 87       	std	Y+9, r26	; 0x09
    3988:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    398a:	6f 81       	ldd	r22, Y+7	; 0x07
    398c:	78 85       	ldd	r23, Y+8	; 0x08
    398e:	89 85       	ldd	r24, Y+9	; 0x09
    3990:	9a 85       	ldd	r25, Y+10	; 0x0a
    3992:	20 e0       	ldi	r18, 0x00	; 0
    3994:	30 e0       	ldi	r19, 0x00	; 0
    3996:	40 e8       	ldi	r20, 0x80	; 128
    3998:	5f e3       	ldi	r21, 0x3F	; 63
    399a:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    399e:	88 23       	and	r24, r24
    39a0:	2c f4       	brge	.+10     	; 0x39ac <LCD_voidShiftRight+0x6c>
		__ticks = 1;
    39a2:	81 e0       	ldi	r24, 0x01	; 1
    39a4:	90 e0       	ldi	r25, 0x00	; 0
    39a6:	9e 83       	std	Y+6, r25	; 0x06
    39a8:	8d 83       	std	Y+5, r24	; 0x05
    39aa:	3f c0       	rjmp	.+126    	; 0x3a2a <LCD_voidShiftRight+0xea>
	else if (__tmp > 65535)
    39ac:	6f 81       	ldd	r22, Y+7	; 0x07
    39ae:	78 85       	ldd	r23, Y+8	; 0x08
    39b0:	89 85       	ldd	r24, Y+9	; 0x09
    39b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    39b4:	20 e0       	ldi	r18, 0x00	; 0
    39b6:	3f ef       	ldi	r19, 0xFF	; 255
    39b8:	4f e7       	ldi	r20, 0x7F	; 127
    39ba:	57 e4       	ldi	r21, 0x47	; 71
    39bc:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    39c0:	18 16       	cp	r1, r24
    39c2:	4c f5       	brge	.+82     	; 0x3a16 <LCD_voidShiftRight+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39c4:	6b 85       	ldd	r22, Y+11	; 0x0b
    39c6:	7c 85       	ldd	r23, Y+12	; 0x0c
    39c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    39ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    39cc:	20 e0       	ldi	r18, 0x00	; 0
    39ce:	30 e0       	ldi	r19, 0x00	; 0
    39d0:	40 e2       	ldi	r20, 0x20	; 32
    39d2:	51 e4       	ldi	r21, 0x41	; 65
    39d4:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    39d8:	dc 01       	movw	r26, r24
    39da:	cb 01       	movw	r24, r22
    39dc:	bc 01       	movw	r22, r24
    39de:	cd 01       	movw	r24, r26
    39e0:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    39e4:	dc 01       	movw	r26, r24
    39e6:	cb 01       	movw	r24, r22
    39e8:	9e 83       	std	Y+6, r25	; 0x06
    39ea:	8d 83       	std	Y+5, r24	; 0x05
    39ec:	0f c0       	rjmp	.+30     	; 0x3a0c <LCD_voidShiftRight+0xcc>
    39ee:	88 ec       	ldi	r24, 0xC8	; 200
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	9c 83       	std	Y+4, r25	; 0x04
    39f4:	8b 83       	std	Y+3, r24	; 0x03
    39f6:	8b 81       	ldd	r24, Y+3	; 0x03
    39f8:	9c 81       	ldd	r25, Y+4	; 0x04
    39fa:	01 97       	sbiw	r24, 0x01	; 1
    39fc:	f1 f7       	brne	.-4      	; 0x39fa <LCD_voidShiftRight+0xba>
    39fe:	9c 83       	std	Y+4, r25	; 0x04
    3a00:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a02:	8d 81       	ldd	r24, Y+5	; 0x05
    3a04:	9e 81       	ldd	r25, Y+6	; 0x06
    3a06:	01 97       	sbiw	r24, 0x01	; 1
    3a08:	9e 83       	std	Y+6, r25	; 0x06
    3a0a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a0c:	8d 81       	ldd	r24, Y+5	; 0x05
    3a0e:	9e 81       	ldd	r25, Y+6	; 0x06
    3a10:	00 97       	sbiw	r24, 0x00	; 0
    3a12:	69 f7       	brne	.-38     	; 0x39ee <LCD_voidShiftRight+0xae>
    3a14:	14 c0       	rjmp	.+40     	; 0x3a3e <LCD_voidShiftRight+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a16:	6f 81       	ldd	r22, Y+7	; 0x07
    3a18:	78 85       	ldd	r23, Y+8	; 0x08
    3a1a:	89 85       	ldd	r24, Y+9	; 0x09
    3a1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a1e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3a22:	dc 01       	movw	r26, r24
    3a24:	cb 01       	movw	r24, r22
    3a26:	9e 83       	std	Y+6, r25	; 0x06
    3a28:	8d 83       	std	Y+5, r24	; 0x05
    3a2a:	8d 81       	ldd	r24, Y+5	; 0x05
    3a2c:	9e 81       	ldd	r25, Y+6	; 0x06
    3a2e:	9a 83       	std	Y+2, r25	; 0x02
    3a30:	89 83       	std	Y+1, r24	; 0x01
    3a32:	89 81       	ldd	r24, Y+1	; 0x01
    3a34:	9a 81       	ldd	r25, Y+2	; 0x02
    3a36:	01 97       	sbiw	r24, 0x01	; 1
    3a38:	f1 f7       	brne	.-4      	; 0x3a36 <LCD_voidShiftRight+0xf6>
    3a3a:	9a 83       	std	Y+2, r25	; 0x02
    3a3c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    3a3e:	2e 96       	adiw	r28, 0x0e	; 14
    3a40:	0f b6       	in	r0, 0x3f	; 63
    3a42:	f8 94       	cli
    3a44:	de bf       	out	0x3e, r29	; 62
    3a46:	0f be       	out	0x3f, r0	; 63
    3a48:	cd bf       	out	0x3d, r28	; 61
    3a4a:	cf 91       	pop	r28
    3a4c:	df 91       	pop	r29
    3a4e:	08 95       	ret

00003a50 <LCD_voidMoveCursor>:

void LCD_voidMoveCursor (uint8 u8RowCopy ,uint8 u8ColoumnCopy){
    3a50:	df 93       	push	r29
    3a52:	cf 93       	push	r28
    3a54:	cd b7       	in	r28, 0x3d	; 61
    3a56:	de b7       	in	r29, 0x3e	; 62
    3a58:	61 97       	sbiw	r28, 0x11	; 17
    3a5a:	0f b6       	in	r0, 0x3f	; 63
    3a5c:	f8 94       	cli
    3a5e:	de bf       	out	0x3e, r29	; 62
    3a60:	0f be       	out	0x3f, r0	; 63
    3a62:	cd bf       	out	0x3d, r28	; 61
    3a64:	88 8b       	std	Y+16, r24	; 0x10
    3a66:	69 8b       	std	Y+17, r22	; 0x11
	uint8 copy_u8data;
	//cases un valied
	if(((u8RowCopy<1) ||(u8RowCopy>2)) || (u8ColoumnCopy<1) ||(u8ColoumnCopy>16))
    3a68:	88 89       	ldd	r24, Y+16	; 0x10
    3a6a:	88 23       	and	r24, r24
    3a6c:	49 f0       	breq	.+18     	; 0x3a80 <LCD_voidMoveCursor+0x30>
    3a6e:	88 89       	ldd	r24, Y+16	; 0x10
    3a70:	83 30       	cpi	r24, 0x03	; 3
    3a72:	30 f4       	brcc	.+12     	; 0x3a80 <LCD_voidMoveCursor+0x30>
    3a74:	89 89       	ldd	r24, Y+17	; 0x11
    3a76:	88 23       	and	r24, r24
    3a78:	19 f0       	breq	.+6      	; 0x3a80 <LCD_voidMoveCursor+0x30>
    3a7a:	89 89       	ldd	r24, Y+17	; 0x11
    3a7c:	81 31       	cpi	r24, 0x11	; 17
    3a7e:	18 f0       	brcs	.+6      	; 0x3a86 <LCD_voidMoveCursor+0x36>
	{
		//cursor in first position >>10000000 //load aderess counter with zero
		copy_u8data = 0x80;
    3a80:	80 e8       	ldi	r24, 0x80	; 128
    3a82:	8f 87       	std	Y+15, r24	; 0x0f
    3a84:	0d c0       	rjmp	.+26     	; 0x3aa0 <LCD_voidMoveCursor+0x50>
	}
	else if(u8RowCopy ==1)
    3a86:	88 89       	ldd	r24, Y+16	; 0x10
    3a88:	81 30       	cpi	r24, 0x01	; 1
    3a8a:	21 f4       	brne	.+8      	; 0x3a94 <LCD_voidMoveCursor+0x44>
	{
		//first row in any coloumn
		copy_u8data= 0x80 +(u8ColoumnCopy -1);
    3a8c:	89 89       	ldd	r24, Y+17	; 0x11
    3a8e:	81 58       	subi	r24, 0x81	; 129
    3a90:	8f 87       	std	Y+15, r24	; 0x0f
    3a92:	06 c0       	rjmp	.+12     	; 0x3aa0 <LCD_voidMoveCursor+0x50>
	}
	else if(u8RowCopy ==2)
    3a94:	88 89       	ldd	r24, Y+16	; 0x10
    3a96:	82 30       	cpi	r24, 0x02	; 2
    3a98:	19 f4       	brne	.+6      	; 0x3aa0 <LCD_voidMoveCursor+0x50>
	{
		//first row in any coloumn
		copy_u8data= 0xc0 +(u8ColoumnCopy -1);
    3a9a:	89 89       	ldd	r24, Y+17	; 0x11
    3a9c:	81 54       	subi	r24, 0x41	; 65
    3a9e:	8f 87       	std	Y+15, r24	; 0x0f
	}
	LCD_voidWriteCmd(copy_u8data);
    3aa0:	8f 85       	ldd	r24, Y+15	; 0x0f
    3aa2:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    3aa6:	80 e0       	ldi	r24, 0x00	; 0
    3aa8:	90 e0       	ldi	r25, 0x00	; 0
    3aaa:	a0 e8       	ldi	r26, 0x80	; 128
    3aac:	bf e3       	ldi	r27, 0x3F	; 63
    3aae:	8b 87       	std	Y+11, r24	; 0x0b
    3ab0:	9c 87       	std	Y+12, r25	; 0x0c
    3ab2:	ad 87       	std	Y+13, r26	; 0x0d
    3ab4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ab6:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ab8:	7c 85       	ldd	r23, Y+12	; 0x0c
    3aba:	8d 85       	ldd	r24, Y+13	; 0x0d
    3abc:	9e 85       	ldd	r25, Y+14	; 0x0e
    3abe:	20 e0       	ldi	r18, 0x00	; 0
    3ac0:	30 e0       	ldi	r19, 0x00	; 0
    3ac2:	4a ef       	ldi	r20, 0xFA	; 250
    3ac4:	54 e4       	ldi	r21, 0x44	; 68
    3ac6:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3aca:	dc 01       	movw	r26, r24
    3acc:	cb 01       	movw	r24, r22
    3ace:	8f 83       	std	Y+7, r24	; 0x07
    3ad0:	98 87       	std	Y+8, r25	; 0x08
    3ad2:	a9 87       	std	Y+9, r26	; 0x09
    3ad4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3ad6:	6f 81       	ldd	r22, Y+7	; 0x07
    3ad8:	78 85       	ldd	r23, Y+8	; 0x08
    3ada:	89 85       	ldd	r24, Y+9	; 0x09
    3adc:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ade:	20 e0       	ldi	r18, 0x00	; 0
    3ae0:	30 e0       	ldi	r19, 0x00	; 0
    3ae2:	40 e8       	ldi	r20, 0x80	; 128
    3ae4:	5f e3       	ldi	r21, 0x3F	; 63
    3ae6:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    3aea:	88 23       	and	r24, r24
    3aec:	2c f4       	brge	.+10     	; 0x3af8 <LCD_voidMoveCursor+0xa8>
		__ticks = 1;
    3aee:	81 e0       	ldi	r24, 0x01	; 1
    3af0:	90 e0       	ldi	r25, 0x00	; 0
    3af2:	9e 83       	std	Y+6, r25	; 0x06
    3af4:	8d 83       	std	Y+5, r24	; 0x05
    3af6:	3f c0       	rjmp	.+126    	; 0x3b76 <LCD_voidMoveCursor+0x126>
	else if (__tmp > 65535)
    3af8:	6f 81       	ldd	r22, Y+7	; 0x07
    3afa:	78 85       	ldd	r23, Y+8	; 0x08
    3afc:	89 85       	ldd	r24, Y+9	; 0x09
    3afe:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b00:	20 e0       	ldi	r18, 0x00	; 0
    3b02:	3f ef       	ldi	r19, 0xFF	; 255
    3b04:	4f e7       	ldi	r20, 0x7F	; 127
    3b06:	57 e4       	ldi	r21, 0x47	; 71
    3b08:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    3b0c:	18 16       	cp	r1, r24
    3b0e:	4c f5       	brge	.+82     	; 0x3b62 <LCD_voidMoveCursor+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b10:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b12:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b14:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b16:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b18:	20 e0       	ldi	r18, 0x00	; 0
    3b1a:	30 e0       	ldi	r19, 0x00	; 0
    3b1c:	40 e2       	ldi	r20, 0x20	; 32
    3b1e:	51 e4       	ldi	r21, 0x41	; 65
    3b20:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3b24:	dc 01       	movw	r26, r24
    3b26:	cb 01       	movw	r24, r22
    3b28:	bc 01       	movw	r22, r24
    3b2a:	cd 01       	movw	r24, r26
    3b2c:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3b30:	dc 01       	movw	r26, r24
    3b32:	cb 01       	movw	r24, r22
    3b34:	9e 83       	std	Y+6, r25	; 0x06
    3b36:	8d 83       	std	Y+5, r24	; 0x05
    3b38:	0f c0       	rjmp	.+30     	; 0x3b58 <LCD_voidMoveCursor+0x108>
    3b3a:	88 ec       	ldi	r24, 0xC8	; 200
    3b3c:	90 e0       	ldi	r25, 0x00	; 0
    3b3e:	9c 83       	std	Y+4, r25	; 0x04
    3b40:	8b 83       	std	Y+3, r24	; 0x03
    3b42:	8b 81       	ldd	r24, Y+3	; 0x03
    3b44:	9c 81       	ldd	r25, Y+4	; 0x04
    3b46:	01 97       	sbiw	r24, 0x01	; 1
    3b48:	f1 f7       	brne	.-4      	; 0x3b46 <LCD_voidMoveCursor+0xf6>
    3b4a:	9c 83       	std	Y+4, r25	; 0x04
    3b4c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b4e:	8d 81       	ldd	r24, Y+5	; 0x05
    3b50:	9e 81       	ldd	r25, Y+6	; 0x06
    3b52:	01 97       	sbiw	r24, 0x01	; 1
    3b54:	9e 83       	std	Y+6, r25	; 0x06
    3b56:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b58:	8d 81       	ldd	r24, Y+5	; 0x05
    3b5a:	9e 81       	ldd	r25, Y+6	; 0x06
    3b5c:	00 97       	sbiw	r24, 0x00	; 0
    3b5e:	69 f7       	brne	.-38     	; 0x3b3a <LCD_voidMoveCursor+0xea>
    3b60:	14 c0       	rjmp	.+40     	; 0x3b8a <LCD_voidMoveCursor+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b62:	6f 81       	ldd	r22, Y+7	; 0x07
    3b64:	78 85       	ldd	r23, Y+8	; 0x08
    3b66:	89 85       	ldd	r24, Y+9	; 0x09
    3b68:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b6a:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3b6e:	dc 01       	movw	r26, r24
    3b70:	cb 01       	movw	r24, r22
    3b72:	9e 83       	std	Y+6, r25	; 0x06
    3b74:	8d 83       	std	Y+5, r24	; 0x05
    3b76:	8d 81       	ldd	r24, Y+5	; 0x05
    3b78:	9e 81       	ldd	r25, Y+6	; 0x06
    3b7a:	9a 83       	std	Y+2, r25	; 0x02
    3b7c:	89 83       	std	Y+1, r24	; 0x01
    3b7e:	89 81       	ldd	r24, Y+1	; 0x01
    3b80:	9a 81       	ldd	r25, Y+2	; 0x02
    3b82:	01 97       	sbiw	r24, 0x01	; 1
    3b84:	f1 f7       	brne	.-4      	; 0x3b82 <LCD_voidMoveCursor+0x132>
    3b86:	9a 83       	std	Y+2, r25	; 0x02
    3b88:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3b8a:	61 96       	adiw	r28, 0x11	; 17
    3b8c:	0f b6       	in	r0, 0x3f	; 63
    3b8e:	f8 94       	cli
    3b90:	de bf       	out	0x3e, r29	; 62
    3b92:	0f be       	out	0x3f, r0	; 63
    3b94:	cd bf       	out	0x3d, r28	; 61
    3b96:	cf 91       	pop	r28
    3b98:	df 91       	pop	r29
    3b9a:	08 95       	ret

00003b9c <LCD_voidWriteString>:

void LCD_voidWriteString(uint8 *u8stringCopy){
    3b9c:	df 93       	push	r29
    3b9e:	cf 93       	push	r28
    3ba0:	00 d0       	rcall	.+0      	; 0x3ba2 <LCD_voidWriteString+0x6>
    3ba2:	cd b7       	in	r28, 0x3d	; 61
    3ba4:	de b7       	in	r29, 0x3e	; 62
    3ba6:	9a 83       	std	Y+2, r25	; 0x02
    3ba8:	89 83       	std	Y+1, r24	; 0x01
    3baa:	0a c0       	rjmp	.+20     	; 0x3bc0 <LCD_voidWriteString+0x24>

	while((*u8stringCopy)!= '\0'){
		LCD_voidWriteChar(*u8stringCopy);
    3bac:	e9 81       	ldd	r30, Y+1	; 0x01
    3bae:	fa 81       	ldd	r31, Y+2	; 0x02
    3bb0:	80 81       	ld	r24, Z
    3bb2:	0e 94 76 1b 	call	0x36ec	; 0x36ec <LCD_voidWriteChar>
			u8stringCopy++;
    3bb6:	89 81       	ldd	r24, Y+1	; 0x01
    3bb8:	9a 81       	ldd	r25, Y+2	; 0x02
    3bba:	01 96       	adiw	r24, 0x01	; 1
    3bbc:	9a 83       	std	Y+2, r25	; 0x02
    3bbe:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}

void LCD_voidWriteString(uint8 *u8stringCopy){

	while((*u8stringCopy)!= '\0'){
    3bc0:	e9 81       	ldd	r30, Y+1	; 0x01
    3bc2:	fa 81       	ldd	r31, Y+2	; 0x02
    3bc4:	80 81       	ld	r24, Z
    3bc6:	88 23       	and	r24, r24
    3bc8:	89 f7       	brne	.-30     	; 0x3bac <LCD_voidWriteString+0x10>
		LCD_voidWriteChar(*u8stringCopy);
			u8stringCopy++;
		}
}
    3bca:	0f 90       	pop	r0
    3bcc:	0f 90       	pop	r0
    3bce:	cf 91       	pop	r28
    3bd0:	df 91       	pop	r29
    3bd2:	08 95       	ret

00003bd4 <LCD_voidWriteNumber>:

void LCD_voidWriteNumber(uint32 u32NumberCopy){
    3bd4:	df 93       	push	r29
    3bd6:	cf 93       	push	r28
    3bd8:	cd b7       	in	r28, 0x3d	; 61
    3bda:	de b7       	in	r29, 0x3e	; 62
    3bdc:	2e 97       	sbiw	r28, 0x0e	; 14
    3bde:	0f b6       	in	r0, 0x3f	; 63
    3be0:	f8 94       	cli
    3be2:	de bf       	out	0x3e, r29	; 62
    3be4:	0f be       	out	0x3f, r0	; 63
    3be6:	cd bf       	out	0x3d, r28	; 61
    3be8:	6b 87       	std	Y+11, r22	; 0x0b
    3bea:	7c 87       	std	Y+12, r23	; 0x0c
    3bec:	8d 87       	std	Y+13, r24	; 0x0d
    3bee:	9e 87       	std	Y+14, r25	; 0x0e
	uint8 str[10];
	//transfer the number into string then display
	sprintf(str ,"%lu" ,u32NumberCopy);
    3bf0:	8d b7       	in	r24, 0x3d	; 61
    3bf2:	9e b7       	in	r25, 0x3e	; 62
    3bf4:	08 97       	sbiw	r24, 0x08	; 8
    3bf6:	0f b6       	in	r0, 0x3f	; 63
    3bf8:	f8 94       	cli
    3bfa:	9e bf       	out	0x3e, r25	; 62
    3bfc:	0f be       	out	0x3f, r0	; 63
    3bfe:	8d bf       	out	0x3d, r24	; 61
    3c00:	ed b7       	in	r30, 0x3d	; 61
    3c02:	fe b7       	in	r31, 0x3e	; 62
    3c04:	31 96       	adiw	r30, 0x01	; 1
    3c06:	ce 01       	movw	r24, r28
    3c08:	01 96       	adiw	r24, 0x01	; 1
    3c0a:	91 83       	std	Z+1, r25	; 0x01
    3c0c:	80 83       	st	Z, r24
    3c0e:	80 e6       	ldi	r24, 0x60	; 96
    3c10:	90 e0       	ldi	r25, 0x00	; 0
    3c12:	93 83       	std	Z+3, r25	; 0x03
    3c14:	82 83       	std	Z+2, r24	; 0x02
    3c16:	8b 85       	ldd	r24, Y+11	; 0x0b
    3c18:	9c 85       	ldd	r25, Y+12	; 0x0c
    3c1a:	ad 85       	ldd	r26, Y+13	; 0x0d
    3c1c:	be 85       	ldd	r27, Y+14	; 0x0e
    3c1e:	84 83       	std	Z+4, r24	; 0x04
    3c20:	95 83       	std	Z+5, r25	; 0x05
    3c22:	a6 83       	std	Z+6, r26	; 0x06
    3c24:	b7 83       	std	Z+7, r27	; 0x07
    3c26:	0e 94 49 2c 	call	0x5892	; 0x5892 <sprintf>
    3c2a:	8d b7       	in	r24, 0x3d	; 61
    3c2c:	9e b7       	in	r25, 0x3e	; 62
    3c2e:	08 96       	adiw	r24, 0x08	; 8
    3c30:	0f b6       	in	r0, 0x3f	; 63
    3c32:	f8 94       	cli
    3c34:	9e bf       	out	0x3e, r25	; 62
    3c36:	0f be       	out	0x3f, r0	; 63
    3c38:	8d bf       	out	0x3d, r24	; 61
	LCD_voidWriteString(str);
    3c3a:	ce 01       	movw	r24, r28
    3c3c:	01 96       	adiw	r24, 0x01	; 1
    3c3e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <LCD_voidWriteString>
}
    3c42:	2e 96       	adiw	r28, 0x0e	; 14
    3c44:	0f b6       	in	r0, 0x3f	; 63
    3c46:	f8 94       	cli
    3c48:	de bf       	out	0x3e, r29	; 62
    3c4a:	0f be       	out	0x3f, r0	; 63
    3c4c:	cd bf       	out	0x3d, r28	; 61
    3c4e:	cf 91       	pop	r28
    3c50:	df 91       	pop	r29
    3c52:	08 95       	ret

00003c54 <LCD_voidWriteRealNumber>:

void LCD_voidWriteRealNumber(float32  f32NumberCopy){
    3c54:	df 93       	push	r29
    3c56:	cf 93       	push	r28
    3c58:	cd b7       	in	r28, 0x3d	; 61
    3c5a:	de b7       	in	r29, 0x3e	; 62
    3c5c:	ac 97       	sbiw	r28, 0x2c	; 44
    3c5e:	0f b6       	in	r0, 0x3f	; 63
    3c60:	f8 94       	cli
    3c62:	de bf       	out	0x3e, r29	; 62
    3c64:	0f be       	out	0x3f, r0	; 63
    3c66:	cd bf       	out	0x3d, r28	; 61
    3c68:	6b a3       	std	Y+35, r22	; 0x23
    3c6a:	7c a3       	std	Y+36, r23	; 0x24
    3c6c:	8d a3       	std	Y+37, r24	; 0x25
    3c6e:	9e a3       	std	Y+38, r25	; 0x26
	    uint8 str [16];
		uint8 *tmpsign=(f32NumberCopy < 0)? "-" :"" ;
    3c70:	6b a1       	ldd	r22, Y+35	; 0x23
    3c72:	7c a1       	ldd	r23, Y+36	; 0x24
    3c74:	8d a1       	ldd	r24, Y+37	; 0x25
    3c76:	9e a1       	ldd	r25, Y+38	; 0x26
    3c78:	20 e0       	ldi	r18, 0x00	; 0
    3c7a:	30 e0       	ldi	r19, 0x00	; 0
    3c7c:	40 e0       	ldi	r20, 0x00	; 0
    3c7e:	50 e0       	ldi	r21, 0x00	; 0
    3c80:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    3c84:	88 23       	and	r24, r24
    3c86:	2c f4       	brge	.+10     	; 0x3c92 <LCD_voidWriteRealNumber+0x3e>
    3c88:	24 e6       	ldi	r18, 0x64	; 100
    3c8a:	30 e0       	ldi	r19, 0x00	; 0
    3c8c:	3c a7       	std	Y+44, r19	; 0x2c
    3c8e:	2b a7       	std	Y+43, r18	; 0x2b
    3c90:	04 c0       	rjmp	.+8      	; 0x3c9a <LCD_voidWriteRealNumber+0x46>
    3c92:	46 e6       	ldi	r20, 0x66	; 102
    3c94:	50 e0       	ldi	r21, 0x00	; 0
    3c96:	5c a7       	std	Y+44, r21	; 0x2c
    3c98:	4b a7       	std	Y+43, r20	; 0x2b
    3c9a:	8b a5       	ldd	r24, Y+43	; 0x2b
    3c9c:	9c a5       	ldd	r25, Y+44	; 0x2c
    3c9e:	9a 8b       	std	Y+18, r25	; 0x12
    3ca0:	89 8b       	std	Y+17, r24	; 0x11
		float32 tmpval =(f32NumberCopy < 0)? -f32NumberCopy : f32NumberCopy ;
    3ca2:	6b a1       	ldd	r22, Y+35	; 0x23
    3ca4:	7c a1       	ldd	r23, Y+36	; 0x24
    3ca6:	8d a1       	ldd	r24, Y+37	; 0x25
    3ca8:	9e a1       	ldd	r25, Y+38	; 0x26
    3caa:	20 e0       	ldi	r18, 0x00	; 0
    3cac:	30 e0       	ldi	r19, 0x00	; 0
    3cae:	40 e0       	ldi	r20, 0x00	; 0
    3cb0:	50 e0       	ldi	r21, 0x00	; 0
    3cb2:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    3cb6:	88 23       	and	r24, r24
    3cb8:	64 f4       	brge	.+24     	; 0x3cd2 <LCD_voidWriteRealNumber+0x7e>
    3cba:	8b a1       	ldd	r24, Y+35	; 0x23
    3cbc:	9c a1       	ldd	r25, Y+36	; 0x24
    3cbe:	ad a1       	ldd	r26, Y+37	; 0x25
    3cc0:	be a1       	ldd	r27, Y+38	; 0x26
    3cc2:	9c 01       	movw	r18, r24
    3cc4:	ad 01       	movw	r20, r26
    3cc6:	50 58       	subi	r21, 0x80	; 128
    3cc8:	2f a3       	std	Y+39, r18	; 0x27
    3cca:	38 a7       	std	Y+40, r19	; 0x28
    3ccc:	49 a7       	std	Y+41, r20	; 0x29
    3cce:	5a a7       	std	Y+42, r21	; 0x2a
    3cd0:	08 c0       	rjmp	.+16     	; 0x3ce2 <LCD_voidWriteRealNumber+0x8e>
    3cd2:	8b a1       	ldd	r24, Y+35	; 0x23
    3cd4:	9c a1       	ldd	r25, Y+36	; 0x24
    3cd6:	ad a1       	ldd	r26, Y+37	; 0x25
    3cd8:	be a1       	ldd	r27, Y+38	; 0x26
    3cda:	8f a3       	std	Y+39, r24	; 0x27
    3cdc:	98 a7       	std	Y+40, r25	; 0x28
    3cde:	a9 a7       	std	Y+41, r26	; 0x29
    3ce0:	ba a7       	std	Y+42, r27	; 0x2a
    3ce2:	2f a1       	ldd	r18, Y+39	; 0x27
    3ce4:	38 a5       	ldd	r19, Y+40	; 0x28
    3ce6:	49 a5       	ldd	r20, Y+41	; 0x29
    3ce8:	5a a5       	ldd	r21, Y+42	; 0x2a
    3cea:	2d 87       	std	Y+13, r18	; 0x0d
    3cec:	3e 87       	std	Y+14, r19	; 0x0e
    3cee:	4f 87       	std	Y+15, r20	; 0x0f
    3cf0:	58 8b       	std	Y+16, r21	; 0x10
		sint32 tempint1 = tmpval;
    3cf2:	6d 85       	ldd	r22, Y+13	; 0x0d
    3cf4:	7e 85       	ldd	r23, Y+14	; 0x0e
    3cf6:	8f 85       	ldd	r24, Y+15	; 0x0f
    3cf8:	98 89       	ldd	r25, Y+16	; 0x10
    3cfa:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3cfe:	dc 01       	movw	r26, r24
    3d00:	cb 01       	movw	r24, r22
    3d02:	89 87       	std	Y+9, r24	; 0x09
    3d04:	9a 87       	std	Y+10, r25	; 0x0a
    3d06:	ab 87       	std	Y+11, r26	; 0x0b
    3d08:	bc 87       	std	Y+12, r27	; 0x0c
	    float32 tmpfrac = tmpval - tempint1;
    3d0a:	69 85       	ldd	r22, Y+9	; 0x09
    3d0c:	7a 85       	ldd	r23, Y+10	; 0x0a
    3d0e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3d10:	9c 85       	ldd	r25, Y+12	; 0x0c
    3d12:	0e 94 41 10 	call	0x2082	; 0x2082 <__floatunsisf>
    3d16:	9b 01       	movw	r18, r22
    3d18:	ac 01       	movw	r20, r24
    3d1a:	6d 85       	ldd	r22, Y+13	; 0x0d
    3d1c:	7e 85       	ldd	r23, Y+14	; 0x0e
    3d1e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3d20:	98 89       	ldd	r25, Y+16	; 0x10
    3d22:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <__subsf3>
    3d26:	dc 01       	movw	r26, r24
    3d28:	cb 01       	movw	r24, r22
    3d2a:	8d 83       	std	Y+5, r24	; 0x05
    3d2c:	9e 83       	std	Y+6, r25	; 0x06
    3d2e:	af 83       	std	Y+7, r26	; 0x07
    3d30:	b8 87       	std	Y+8, r27	; 0x08
	    sint32 tempint2 = tmpfrac*10000;
    3d32:	6d 81       	ldd	r22, Y+5	; 0x05
    3d34:	7e 81       	ldd	r23, Y+6	; 0x06
    3d36:	8f 81       	ldd	r24, Y+7	; 0x07
    3d38:	98 85       	ldd	r25, Y+8	; 0x08
    3d3a:	20 e0       	ldi	r18, 0x00	; 0
    3d3c:	30 e4       	ldi	r19, 0x40	; 64
    3d3e:	4c e1       	ldi	r20, 0x1C	; 28
    3d40:	56 e4       	ldi	r21, 0x46	; 70
    3d42:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3d46:	dc 01       	movw	r26, r24
    3d48:	cb 01       	movw	r24, r22
    3d4a:	bc 01       	movw	r22, r24
    3d4c:	cd 01       	movw	r24, r26
    3d4e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3d52:	dc 01       	movw	r26, r24
    3d54:	cb 01       	movw	r24, r22
    3d56:	89 83       	std	Y+1, r24	; 0x01
    3d58:	9a 83       	std	Y+2, r25	; 0x02
    3d5a:	ab 83       	std	Y+3, r26	; 0x03
    3d5c:	bc 83       	std	Y+4, r27	; 0x04
		sprintf(str ,"%s%d.%04d",tmpsign ,tempint1 ,tempint2);
    3d5e:	4d b7       	in	r20, 0x3d	; 61
    3d60:	5e b7       	in	r21, 0x3e	; 62
    3d62:	4e 50       	subi	r20, 0x0E	; 14
    3d64:	50 40       	sbci	r21, 0x00	; 0
    3d66:	0f b6       	in	r0, 0x3f	; 63
    3d68:	f8 94       	cli
    3d6a:	5e bf       	out	0x3e, r21	; 62
    3d6c:	0f be       	out	0x3f, r0	; 63
    3d6e:	4d bf       	out	0x3d, r20	; 61
    3d70:	ed b7       	in	r30, 0x3d	; 61
    3d72:	fe b7       	in	r31, 0x3e	; 62
    3d74:	31 96       	adiw	r30, 0x01	; 1
    3d76:	ce 01       	movw	r24, r28
    3d78:	43 96       	adiw	r24, 0x13	; 19
    3d7a:	91 83       	std	Z+1, r25	; 0x01
    3d7c:	80 83       	st	Z, r24
    3d7e:	87 e6       	ldi	r24, 0x67	; 103
    3d80:	90 e0       	ldi	r25, 0x00	; 0
    3d82:	93 83       	std	Z+3, r25	; 0x03
    3d84:	82 83       	std	Z+2, r24	; 0x02
    3d86:	89 89       	ldd	r24, Y+17	; 0x11
    3d88:	9a 89       	ldd	r25, Y+18	; 0x12
    3d8a:	95 83       	std	Z+5, r25	; 0x05
    3d8c:	84 83       	std	Z+4, r24	; 0x04
    3d8e:	89 85       	ldd	r24, Y+9	; 0x09
    3d90:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d92:	ab 85       	ldd	r26, Y+11	; 0x0b
    3d94:	bc 85       	ldd	r27, Y+12	; 0x0c
    3d96:	86 83       	std	Z+6, r24	; 0x06
    3d98:	97 83       	std	Z+7, r25	; 0x07
    3d9a:	a0 87       	std	Z+8, r26	; 0x08
    3d9c:	b1 87       	std	Z+9, r27	; 0x09
    3d9e:	89 81       	ldd	r24, Y+1	; 0x01
    3da0:	9a 81       	ldd	r25, Y+2	; 0x02
    3da2:	ab 81       	ldd	r26, Y+3	; 0x03
    3da4:	bc 81       	ldd	r27, Y+4	; 0x04
    3da6:	82 87       	std	Z+10, r24	; 0x0a
    3da8:	93 87       	std	Z+11, r25	; 0x0b
    3daa:	a4 87       	std	Z+12, r26	; 0x0c
    3dac:	b5 87       	std	Z+13, r27	; 0x0d
    3dae:	0e 94 49 2c 	call	0x5892	; 0x5892 <sprintf>
    3db2:	8d b7       	in	r24, 0x3d	; 61
    3db4:	9e b7       	in	r25, 0x3e	; 62
    3db6:	0e 96       	adiw	r24, 0x0e	; 14
    3db8:	0f b6       	in	r0, 0x3f	; 63
    3dba:	f8 94       	cli
    3dbc:	9e bf       	out	0x3e, r25	; 62
    3dbe:	0f be       	out	0x3f, r0	; 63
    3dc0:	8d bf       	out	0x3d, r24	; 61
		LCD_voidWriteString(str);
    3dc2:	ce 01       	movw	r24, r28
    3dc4:	43 96       	adiw	r24, 0x13	; 19
    3dc6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <LCD_voidWriteString>
}
    3dca:	ac 96       	adiw	r28, 0x2c	; 44
    3dcc:	0f b6       	in	r0, 0x3f	; 63
    3dce:	f8 94       	cli
    3dd0:	de bf       	out	0x3e, r29	; 62
    3dd2:	0f be       	out	0x3f, r0	; 63
    3dd4:	cd bf       	out	0x3d, r28	; 61
    3dd6:	cf 91       	pop	r28
    3dd8:	df 91       	pop	r29
    3dda:	08 95       	ret

00003ddc <LCD_voidSendEnPulse>:

static LCD_voidSendEnPulse(){
    3ddc:	df 93       	push	r29
    3dde:	cf 93       	push	r28
    3de0:	cd b7       	in	r28, 0x3d	; 61
    3de2:	de b7       	in	r29, 0x3e	; 62
    3de4:	60 97       	sbiw	r28, 0x10	; 16
    3de6:	0f b6       	in	r0, 0x3f	; 63
    3de8:	f8 94       	cli
    3dea:	de bf       	out	0x3e, r29	; 62
    3dec:	0f be       	out	0x3f, r0	; 63
    3dee:	cd bf       	out	0x3d, r28	; 61

	DIO_u8SetPinVal(LCD_EN_PORT , LCD_EN_PIN , HIGH); //ENABLE high
    3df0:	81 e0       	ldi	r24, 0x01	; 1
    3df2:	62 e0       	ldi	r22, 0x02	; 2
    3df4:	41 e0       	ldi	r20, 0x01	; 1
    3df6:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>
    3dfa:	80 e0       	ldi	r24, 0x00	; 0
    3dfc:	90 e0       	ldi	r25, 0x00	; 0
    3dfe:	a0 e0       	ldi	r26, 0x00	; 0
    3e00:	b0 e4       	ldi	r27, 0x40	; 64
    3e02:	8b 87       	std	Y+11, r24	; 0x0b
    3e04:	9c 87       	std	Y+12, r25	; 0x0c
    3e06:	ad 87       	std	Y+13, r26	; 0x0d
    3e08:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e0a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3e0c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3e0e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e10:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e12:	20 e0       	ldi	r18, 0x00	; 0
    3e14:	30 e0       	ldi	r19, 0x00	; 0
    3e16:	4a ef       	ldi	r20, 0xFA	; 250
    3e18:	54 e4       	ldi	r21, 0x44	; 68
    3e1a:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3e1e:	dc 01       	movw	r26, r24
    3e20:	cb 01       	movw	r24, r22
    3e22:	8f 83       	std	Y+7, r24	; 0x07
    3e24:	98 87       	std	Y+8, r25	; 0x08
    3e26:	a9 87       	std	Y+9, r26	; 0x09
    3e28:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3e2a:	6f 81       	ldd	r22, Y+7	; 0x07
    3e2c:	78 85       	ldd	r23, Y+8	; 0x08
    3e2e:	89 85       	ldd	r24, Y+9	; 0x09
    3e30:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e32:	20 e0       	ldi	r18, 0x00	; 0
    3e34:	30 e0       	ldi	r19, 0x00	; 0
    3e36:	40 e8       	ldi	r20, 0x80	; 128
    3e38:	5f e3       	ldi	r21, 0x3F	; 63
    3e3a:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    3e3e:	88 23       	and	r24, r24
    3e40:	2c f4       	brge	.+10     	; 0x3e4c <LCD_voidSendEnPulse+0x70>
		__ticks = 1;
    3e42:	81 e0       	ldi	r24, 0x01	; 1
    3e44:	90 e0       	ldi	r25, 0x00	; 0
    3e46:	9e 83       	std	Y+6, r25	; 0x06
    3e48:	8d 83       	std	Y+5, r24	; 0x05
    3e4a:	3f c0       	rjmp	.+126    	; 0x3eca <LCD_voidSendEnPulse+0xee>
	else if (__tmp > 65535)
    3e4c:	6f 81       	ldd	r22, Y+7	; 0x07
    3e4e:	78 85       	ldd	r23, Y+8	; 0x08
    3e50:	89 85       	ldd	r24, Y+9	; 0x09
    3e52:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e54:	20 e0       	ldi	r18, 0x00	; 0
    3e56:	3f ef       	ldi	r19, 0xFF	; 255
    3e58:	4f e7       	ldi	r20, 0x7F	; 127
    3e5a:	57 e4       	ldi	r21, 0x47	; 71
    3e5c:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    3e60:	18 16       	cp	r1, r24
    3e62:	4c f5       	brge	.+82     	; 0x3eb6 <LCD_voidSendEnPulse+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e64:	6b 85       	ldd	r22, Y+11	; 0x0b
    3e66:	7c 85       	ldd	r23, Y+12	; 0x0c
    3e68:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e6a:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e6c:	20 e0       	ldi	r18, 0x00	; 0
    3e6e:	30 e0       	ldi	r19, 0x00	; 0
    3e70:	40 e2       	ldi	r20, 0x20	; 32
    3e72:	51 e4       	ldi	r21, 0x41	; 65
    3e74:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    3e78:	dc 01       	movw	r26, r24
    3e7a:	cb 01       	movw	r24, r22
    3e7c:	bc 01       	movw	r22, r24
    3e7e:	cd 01       	movw	r24, r26
    3e80:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3e84:	dc 01       	movw	r26, r24
    3e86:	cb 01       	movw	r24, r22
    3e88:	9e 83       	std	Y+6, r25	; 0x06
    3e8a:	8d 83       	std	Y+5, r24	; 0x05
    3e8c:	0f c0       	rjmp	.+30     	; 0x3eac <LCD_voidSendEnPulse+0xd0>
    3e8e:	88 ec       	ldi	r24, 0xC8	; 200
    3e90:	90 e0       	ldi	r25, 0x00	; 0
    3e92:	9c 83       	std	Y+4, r25	; 0x04
    3e94:	8b 83       	std	Y+3, r24	; 0x03
    3e96:	8b 81       	ldd	r24, Y+3	; 0x03
    3e98:	9c 81       	ldd	r25, Y+4	; 0x04
    3e9a:	01 97       	sbiw	r24, 0x01	; 1
    3e9c:	f1 f7       	brne	.-4      	; 0x3e9a <LCD_voidSendEnPulse+0xbe>
    3e9e:	9c 83       	std	Y+4, r25	; 0x04
    3ea0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ea2:	8d 81       	ldd	r24, Y+5	; 0x05
    3ea4:	9e 81       	ldd	r25, Y+6	; 0x06
    3ea6:	01 97       	sbiw	r24, 0x01	; 1
    3ea8:	9e 83       	std	Y+6, r25	; 0x06
    3eaa:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3eac:	8d 81       	ldd	r24, Y+5	; 0x05
    3eae:	9e 81       	ldd	r25, Y+6	; 0x06
    3eb0:	00 97       	sbiw	r24, 0x00	; 0
    3eb2:	69 f7       	brne	.-38     	; 0x3e8e <LCD_voidSendEnPulse+0xb2>
    3eb4:	14 c0       	rjmp	.+40     	; 0x3ede <LCD_voidSendEnPulse+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3eb6:	6f 81       	ldd	r22, Y+7	; 0x07
    3eb8:	78 85       	ldd	r23, Y+8	; 0x08
    3eba:	89 85       	ldd	r24, Y+9	; 0x09
    3ebc:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ebe:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3ec2:	dc 01       	movw	r26, r24
    3ec4:	cb 01       	movw	r24, r22
    3ec6:	9e 83       	std	Y+6, r25	; 0x06
    3ec8:	8d 83       	std	Y+5, r24	; 0x05
    3eca:	8d 81       	ldd	r24, Y+5	; 0x05
    3ecc:	9e 81       	ldd	r25, Y+6	; 0x06
    3ece:	9a 83       	std	Y+2, r25	; 0x02
    3ed0:	89 83       	std	Y+1, r24	; 0x01
    3ed2:	89 81       	ldd	r24, Y+1	; 0x01
    3ed4:	9a 81       	ldd	r25, Y+2	; 0x02
    3ed6:	01 97       	sbiw	r24, 0x01	; 1
    3ed8:	f1 f7       	brne	.-4      	; 0x3ed6 <LCD_voidSendEnPulse+0xfa>
    3eda:	9a 83       	std	Y+2, r25	; 0x02
    3edc:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinVal(LCD_EN_PORT , LCD_EN_PIN , LOW); //ENABLE high
    3ede:	81 e0       	ldi	r24, 0x01	; 1
    3ee0:	62 e0       	ldi	r22, 0x02	; 2
    3ee2:	40 e0       	ldi	r20, 0x00	; 0
    3ee4:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>

}
    3ee8:	60 96       	adiw	r28, 0x10	; 16
    3eea:	0f b6       	in	r0, 0x3f	; 63
    3eec:	f8 94       	cli
    3eee:	de bf       	out	0x3e, r29	; 62
    3ef0:	0f be       	out	0x3f, r0	; 63
    3ef2:	cd bf       	out	0x3d, r28	; 61
    3ef4:	cf 91       	pop	r28
    3ef6:	df 91       	pop	r29
    3ef8:	08 95       	ret

00003efa <Keypad_voidInit>:

#include "KEYPAD_cfg.h"
#include "KEYPAD_int.h"


void Keypad_voidInit (void){
    3efa:	df 93       	push	r29
    3efc:	cf 93       	push	r28
    3efe:	00 d0       	rcall	.+0      	; 0x3f00 <Keypad_voidInit+0x6>
    3f00:	cd b7       	in	r28, 0x3d	; 61
    3f02:	de b7       	in	r29, 0x3e	; 62

	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
    3f04:	1a 82       	std	Y+2, r1	; 0x02
    3f06:	31 c0       	rjmp	.+98     	; 0x3f6a <Keypad_voidInit+0x70>
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
    3f08:	8a 81       	ldd	r24, Y+2	; 0x02
    3f0a:	88 2f       	mov	r24, r24
    3f0c:	90 e0       	ldi	r25, 0x00	; 0
    3f0e:	88 0f       	add	r24, r24
    3f10:	99 1f       	adc	r25, r25
    3f12:	fc 01       	movw	r30, r24
    3f14:	e2 56       	subi	r30, 0x62	; 98
    3f16:	fe 4f       	sbci	r31, 0xFE	; 254
    3f18:	20 81       	ld	r18, Z
    3f1a:	8a 81       	ldd	r24, Y+2	; 0x02
    3f1c:	88 2f       	mov	r24, r24
    3f1e:	90 e0       	ldi	r25, 0x00	; 0
    3f20:	88 0f       	add	r24, r24
    3f22:	99 1f       	adc	r25, r25
    3f24:	fc 01       	movw	r30, r24
    3f26:	e1 56       	subi	r30, 0x61	; 97
    3f28:	fe 4f       	sbci	r31, 0xFE	; 254
    3f2a:	90 81       	ld	r25, Z
    3f2c:	82 2f       	mov	r24, r18
    3f2e:	69 2f       	mov	r22, r25
    3f30:	41 e0       	ldi	r20, 0x01	; 1
    3f32:	0e 94 95 14 	call	0x292a	; 0x292a <DIO_u8SetPinDir>
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
    3f36:	8a 81       	ldd	r24, Y+2	; 0x02
    3f38:	88 2f       	mov	r24, r24
    3f3a:	90 e0       	ldi	r25, 0x00	; 0
    3f3c:	88 0f       	add	r24, r24
    3f3e:	99 1f       	adc	r25, r25
    3f40:	fc 01       	movw	r30, r24
    3f42:	e2 56       	subi	r30, 0x62	; 98
    3f44:	fe 4f       	sbci	r31, 0xFE	; 254
    3f46:	20 81       	ld	r18, Z
    3f48:	8a 81       	ldd	r24, Y+2	; 0x02
    3f4a:	88 2f       	mov	r24, r24
    3f4c:	90 e0       	ldi	r25, 0x00	; 0
    3f4e:	88 0f       	add	r24, r24
    3f50:	99 1f       	adc	r25, r25
    3f52:	fc 01       	movw	r30, r24
    3f54:	e1 56       	subi	r30, 0x61	; 97
    3f56:	fe 4f       	sbci	r31, 0xFE	; 254
    3f58:	90 81       	ld	r25, Z
    3f5a:	82 2f       	mov	r24, r18
    3f5c:	69 2f       	mov	r22, r25
    3f5e:	41 e0       	ldi	r20, 0x01	; 1
    3f60:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>

void Keypad_voidInit (void){

	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
    3f64:	8a 81       	ldd	r24, Y+2	; 0x02
    3f66:	8f 5f       	subi	r24, 0xFF	; 255
    3f68:	8a 83       	std	Y+2, r24	; 0x02
    3f6a:	8a 81       	ldd	r24, Y+2	; 0x02
    3f6c:	84 30       	cpi	r24, 0x04	; 4
    3f6e:	60 f2       	brcs	.-104    	; 0x3f08 <Keypad_voidInit+0xe>
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
	}
	for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ ){
    3f70:	19 82       	std	Y+1, r1	; 0x01
    3f72:	31 c0       	rjmp	.+98     	; 0x3fd6 <Keypad_voidInit+0xdc>
		DIO_u8SetPinDir(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , INPUT );
    3f74:	89 81       	ldd	r24, Y+1	; 0x01
    3f76:	88 2f       	mov	r24, r24
    3f78:	90 e0       	ldi	r25, 0x00	; 0
    3f7a:	88 0f       	add	r24, r24
    3f7c:	99 1f       	adc	r25, r25
    3f7e:	fc 01       	movw	r30, r24
    3f80:	ea 56       	subi	r30, 0x6A	; 106
    3f82:	fe 4f       	sbci	r31, 0xFE	; 254
    3f84:	20 81       	ld	r18, Z
    3f86:	89 81       	ldd	r24, Y+1	; 0x01
    3f88:	88 2f       	mov	r24, r24
    3f8a:	90 e0       	ldi	r25, 0x00	; 0
    3f8c:	88 0f       	add	r24, r24
    3f8e:	99 1f       	adc	r25, r25
    3f90:	fc 01       	movw	r30, r24
    3f92:	e9 56       	subi	r30, 0x69	; 105
    3f94:	fe 4f       	sbci	r31, 0xFE	; 254
    3f96:	90 81       	ld	r25, Z
    3f98:	82 2f       	mov	r24, r18
    3f9a:	69 2f       	mov	r22, r25
    3f9c:	40 e0       	ldi	r20, 0x00	; 0
    3f9e:	0e 94 95 14 	call	0x292a	; 0x292a <DIO_u8SetPinDir>
		//PULLUP
		DIO_u8SetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , HIGH );
    3fa2:	89 81       	ldd	r24, Y+1	; 0x01
    3fa4:	88 2f       	mov	r24, r24
    3fa6:	90 e0       	ldi	r25, 0x00	; 0
    3fa8:	88 0f       	add	r24, r24
    3faa:	99 1f       	adc	r25, r25
    3fac:	fc 01       	movw	r30, r24
    3fae:	ea 56       	subi	r30, 0x6A	; 106
    3fb0:	fe 4f       	sbci	r31, 0xFE	; 254
    3fb2:	20 81       	ld	r18, Z
    3fb4:	89 81       	ldd	r24, Y+1	; 0x01
    3fb6:	88 2f       	mov	r24, r24
    3fb8:	90 e0       	ldi	r25, 0x00	; 0
    3fba:	88 0f       	add	r24, r24
    3fbc:	99 1f       	adc	r25, r25
    3fbe:	fc 01       	movw	r30, r24
    3fc0:	e9 56       	subi	r30, 0x69	; 105
    3fc2:	fe 4f       	sbci	r31, 0xFE	; 254
    3fc4:	90 81       	ld	r25, Z
    3fc6:	82 2f       	mov	r24, r18
    3fc8:	69 2f       	mov	r22, r25
    3fca:	41 e0       	ldi	r20, 0x01	; 1
    3fcc:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
	}
	for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ ){
    3fd0:	89 81       	ldd	r24, Y+1	; 0x01
    3fd2:	8f 5f       	subi	r24, 0xFF	; 255
    3fd4:	89 83       	std	Y+1, r24	; 0x01
    3fd6:	89 81       	ldd	r24, Y+1	; 0x01
    3fd8:	84 30       	cpi	r24, 0x04	; 4
    3fda:	60 f2       	brcs	.-104    	; 0x3f74 <Keypad_voidInit+0x7a>
		DIO_u8SetPinDir(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , INPUT );
		//PULLUP
		DIO_u8SetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , HIGH );
	}
}
    3fdc:	0f 90       	pop	r0
    3fde:	0f 90       	pop	r0
    3fe0:	cf 91       	pop	r28
    3fe2:	df 91       	pop	r29
    3fe4:	08 95       	ret

00003fe6 <keypad_u8CheckPress>:

uint8 keypad_u8CheckPress(void){
    3fe6:	df 93       	push	r29
    3fe8:	cf 93       	push	r28
    3fea:	cd b7       	in	r28, 0x3d	; 61
    3fec:	de b7       	in	r29, 0x3e	; 62
    3fee:	62 97       	sbiw	r28, 0x12	; 18
    3ff0:	0f b6       	in	r0, 0x3f	; 63
    3ff2:	f8 94       	cli
    3ff4:	de bf       	out	0x3e, r29	; 62
    3ff6:	0f be       	out	0x3f, r0	; 63
    3ff8:	cd bf       	out	0x3d, r28	; 61
	uint8 Local_u8KeyPressed  = NOTPRESSED;
    3ffa:	8f ef       	ldi	r24, 0xFF	; 255
    3ffc:	89 8b       	std	Y+17, r24	; 0x11
    3ffe:	ff c0       	rjmp	.+510    	; 0x41fe <keypad_u8CheckPress+0x218>
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
    4000:	18 8a       	std	Y+16, r1	; 0x10
    4002:	f9 c0       	rjmp	.+498    	; 0x41f6 <keypad_u8CheckPress+0x210>
			{
				//activate column
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , LOW );
    4004:	88 89       	ldd	r24, Y+16	; 0x10
    4006:	88 2f       	mov	r24, r24
    4008:	90 e0       	ldi	r25, 0x00	; 0
    400a:	88 0f       	add	r24, r24
    400c:	99 1f       	adc	r25, r25
    400e:	fc 01       	movw	r30, r24
    4010:	e2 56       	subi	r30, 0x62	; 98
    4012:	fe 4f       	sbci	r31, 0xFE	; 254
    4014:	20 81       	ld	r18, Z
    4016:	88 89       	ldd	r24, Y+16	; 0x10
    4018:	88 2f       	mov	r24, r24
    401a:	90 e0       	ldi	r25, 0x00	; 0
    401c:	88 0f       	add	r24, r24
    401e:	99 1f       	adc	r25, r25
    4020:	fc 01       	movw	r30, r24
    4022:	e1 56       	subi	r30, 0x61	; 97
    4024:	fe 4f       	sbci	r31, 0xFE	; 254
    4026:	90 81       	ld	r25, Z
    4028:	82 2f       	mov	r24, r18
    402a:	69 2f       	mov	r22, r25
    402c:	40 e0       	ldi	r20, 0x00	; 0
    402e:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>

				for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ )
    4032:	1f 86       	std	Y+15, r1	; 0x0f
    4034:	c2 c0       	rjmp	.+388    	; 0x41ba <keypad_u8CheckPress+0x1d4>
				{
					//check status of current row
					DIO_u8GetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , &Local_u8RowStatus );
    4036:	8f 85       	ldd	r24, Y+15	; 0x0f
    4038:	88 2f       	mov	r24, r24
    403a:	90 e0       	ldi	r25, 0x00	; 0
    403c:	88 0f       	add	r24, r24
    403e:	99 1f       	adc	r25, r25
    4040:	fc 01       	movw	r30, r24
    4042:	ea 56       	subi	r30, 0x6A	; 106
    4044:	fe 4f       	sbci	r31, 0xFE	; 254
    4046:	40 81       	ld	r20, Z
    4048:	8f 85       	ldd	r24, Y+15	; 0x0f
    404a:	88 2f       	mov	r24, r24
    404c:	90 e0       	ldi	r25, 0x00	; 0
    404e:	88 0f       	add	r24, r24
    4050:	99 1f       	adc	r25, r25
    4052:	fc 01       	movw	r30, r24
    4054:	e9 56       	subi	r30, 0x69	; 105
    4056:	fe 4f       	sbci	r31, 0xFE	; 254
    4058:	90 81       	ld	r25, Z
    405a:	9e 01       	movw	r18, r28
    405c:	2e 5e       	subi	r18, 0xEE	; 238
    405e:	3f 4f       	sbci	r19, 0xFF	; 255
    4060:	84 2f       	mov	r24, r20
    4062:	69 2f       	mov	r22, r25
    4064:	a9 01       	movw	r20, r18
    4066:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <DIO_u8GetPinVal>
					if (Local_u8RowStatus == 0 )
    406a:	8a 89       	ldd	r24, Y+18	; 0x12
    406c:	88 23       	and	r24, r24
    406e:	09 f0       	breq	.+2      	; 0x4072 <keypad_u8CheckPress+0x8c>
    4070:	a1 c0       	rjmp	.+322    	; 0x41b4 <keypad_u8CheckPress+0x1ce>
    4072:	80 e0       	ldi	r24, 0x00	; 0
    4074:	90 e0       	ldi	r25, 0x00	; 0
    4076:	a8 e4       	ldi	r26, 0x48	; 72
    4078:	b2 e4       	ldi	r27, 0x42	; 66
    407a:	8b 87       	std	Y+11, r24	; 0x0b
    407c:	9c 87       	std	Y+12, r25	; 0x0c
    407e:	ad 87       	std	Y+13, r26	; 0x0d
    4080:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4082:	6b 85       	ldd	r22, Y+11	; 0x0b
    4084:	7c 85       	ldd	r23, Y+12	; 0x0c
    4086:	8d 85       	ldd	r24, Y+13	; 0x0d
    4088:	9e 85       	ldd	r25, Y+14	; 0x0e
    408a:	20 e0       	ldi	r18, 0x00	; 0
    408c:	30 e0       	ldi	r19, 0x00	; 0
    408e:	4a ef       	ldi	r20, 0xFA	; 250
    4090:	54 e4       	ldi	r21, 0x44	; 68
    4092:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    4096:	dc 01       	movw	r26, r24
    4098:	cb 01       	movw	r24, r22
    409a:	8f 83       	std	Y+7, r24	; 0x07
    409c:	98 87       	std	Y+8, r25	; 0x08
    409e:	a9 87       	std	Y+9, r26	; 0x09
    40a0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    40a2:	6f 81       	ldd	r22, Y+7	; 0x07
    40a4:	78 85       	ldd	r23, Y+8	; 0x08
    40a6:	89 85       	ldd	r24, Y+9	; 0x09
    40a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    40aa:	20 e0       	ldi	r18, 0x00	; 0
    40ac:	30 e0       	ldi	r19, 0x00	; 0
    40ae:	40 e8       	ldi	r20, 0x80	; 128
    40b0:	5f e3       	ldi	r21, 0x3F	; 63
    40b2:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    40b6:	88 23       	and	r24, r24
    40b8:	2c f4       	brge	.+10     	; 0x40c4 <keypad_u8CheckPress+0xde>
		__ticks = 1;
    40ba:	81 e0       	ldi	r24, 0x01	; 1
    40bc:	90 e0       	ldi	r25, 0x00	; 0
    40be:	9e 83       	std	Y+6, r25	; 0x06
    40c0:	8d 83       	std	Y+5, r24	; 0x05
    40c2:	3f c0       	rjmp	.+126    	; 0x4142 <keypad_u8CheckPress+0x15c>
	else if (__tmp > 65535)
    40c4:	6f 81       	ldd	r22, Y+7	; 0x07
    40c6:	78 85       	ldd	r23, Y+8	; 0x08
    40c8:	89 85       	ldd	r24, Y+9	; 0x09
    40ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    40cc:	20 e0       	ldi	r18, 0x00	; 0
    40ce:	3f ef       	ldi	r19, 0xFF	; 255
    40d0:	4f e7       	ldi	r20, 0x7F	; 127
    40d2:	57 e4       	ldi	r21, 0x47	; 71
    40d4:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    40d8:	18 16       	cp	r1, r24
    40da:	4c f5       	brge	.+82     	; 0x412e <keypad_u8CheckPress+0x148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    40de:	7c 85       	ldd	r23, Y+12	; 0x0c
    40e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    40e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    40e4:	20 e0       	ldi	r18, 0x00	; 0
    40e6:	30 e0       	ldi	r19, 0x00	; 0
    40e8:	40 e2       	ldi	r20, 0x20	; 32
    40ea:	51 e4       	ldi	r21, 0x41	; 65
    40ec:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    40f0:	dc 01       	movw	r26, r24
    40f2:	cb 01       	movw	r24, r22
    40f4:	bc 01       	movw	r22, r24
    40f6:	cd 01       	movw	r24, r26
    40f8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    40fc:	dc 01       	movw	r26, r24
    40fe:	cb 01       	movw	r24, r22
    4100:	9e 83       	std	Y+6, r25	; 0x06
    4102:	8d 83       	std	Y+5, r24	; 0x05
    4104:	0f c0       	rjmp	.+30     	; 0x4124 <keypad_u8CheckPress+0x13e>
    4106:	88 ec       	ldi	r24, 0xC8	; 200
    4108:	90 e0       	ldi	r25, 0x00	; 0
    410a:	9c 83       	std	Y+4, r25	; 0x04
    410c:	8b 83       	std	Y+3, r24	; 0x03
    410e:	8b 81       	ldd	r24, Y+3	; 0x03
    4110:	9c 81       	ldd	r25, Y+4	; 0x04
    4112:	01 97       	sbiw	r24, 0x01	; 1
    4114:	f1 f7       	brne	.-4      	; 0x4112 <keypad_u8CheckPress+0x12c>
    4116:	9c 83       	std	Y+4, r25	; 0x04
    4118:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    411a:	8d 81       	ldd	r24, Y+5	; 0x05
    411c:	9e 81       	ldd	r25, Y+6	; 0x06
    411e:	01 97       	sbiw	r24, 0x01	; 1
    4120:	9e 83       	std	Y+6, r25	; 0x06
    4122:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4124:	8d 81       	ldd	r24, Y+5	; 0x05
    4126:	9e 81       	ldd	r25, Y+6	; 0x06
    4128:	00 97       	sbiw	r24, 0x00	; 0
    412a:	69 f7       	brne	.-38     	; 0x4106 <keypad_u8CheckPress+0x120>
    412c:	14 c0       	rjmp	.+40     	; 0x4156 <keypad_u8CheckPress+0x170>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    412e:	6f 81       	ldd	r22, Y+7	; 0x07
    4130:	78 85       	ldd	r23, Y+8	; 0x08
    4132:	89 85       	ldd	r24, Y+9	; 0x09
    4134:	9a 85       	ldd	r25, Y+10	; 0x0a
    4136:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    413a:	dc 01       	movw	r26, r24
    413c:	cb 01       	movw	r24, r22
    413e:	9e 83       	std	Y+6, r25	; 0x06
    4140:	8d 83       	std	Y+5, r24	; 0x05
    4142:	8d 81       	ldd	r24, Y+5	; 0x05
    4144:	9e 81       	ldd	r25, Y+6	; 0x06
    4146:	9a 83       	std	Y+2, r25	; 0x02
    4148:	89 83       	std	Y+1, r24	; 0x01
    414a:	89 81       	ldd	r24, Y+1	; 0x01
    414c:	9a 81       	ldd	r25, Y+2	; 0x02
    414e:	01 97       	sbiw	r24, 0x01	; 1
    4150:	f1 f7       	brne	.-4      	; 0x414e <keypad_u8CheckPress+0x168>
    4152:	9a 83       	std	Y+2, r25	; 0x02
    4154:	89 83       	std	Y+1, r24	; 0x01
					{
						_delay_ms(50);
						DIO_u8GetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , &Local_u8RowStatus );
    4156:	8f 85       	ldd	r24, Y+15	; 0x0f
    4158:	88 2f       	mov	r24, r24
    415a:	90 e0       	ldi	r25, 0x00	; 0
    415c:	88 0f       	add	r24, r24
    415e:	99 1f       	adc	r25, r25
    4160:	fc 01       	movw	r30, r24
    4162:	ea 56       	subi	r30, 0x6A	; 106
    4164:	fe 4f       	sbci	r31, 0xFE	; 254
    4166:	40 81       	ld	r20, Z
    4168:	8f 85       	ldd	r24, Y+15	; 0x0f
    416a:	88 2f       	mov	r24, r24
    416c:	90 e0       	ldi	r25, 0x00	; 0
    416e:	88 0f       	add	r24, r24
    4170:	99 1f       	adc	r25, r25
    4172:	fc 01       	movw	r30, r24
    4174:	e9 56       	subi	r30, 0x69	; 105
    4176:	fe 4f       	sbci	r31, 0xFE	; 254
    4178:	90 81       	ld	r25, Z
    417a:	9e 01       	movw	r18, r28
    417c:	2e 5e       	subi	r18, 0xEE	; 238
    417e:	3f 4f       	sbci	r19, 0xFF	; 255
    4180:	84 2f       	mov	r24, r20
    4182:	69 2f       	mov	r22, r25
    4184:	a9 01       	movw	r20, r18
    4186:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <DIO_u8GetPinVal>
						if (Local_u8RowStatus == 0 )
    418a:	8a 89       	ldd	r24, Y+18	; 0x12
    418c:	88 23       	and	r24, r24
    418e:	91 f4       	brne	.+36     	; 0x41b4 <keypad_u8CheckPress+0x1ce>
						{
							Local_u8KeyPressed = KEYPAD_au8KeyVal [Local_u8Row][Local_u8Col];
    4190:	8f 85       	ldd	r24, Y+15	; 0x0f
    4192:	48 2f       	mov	r20, r24
    4194:	50 e0       	ldi	r21, 0x00	; 0
    4196:	88 89       	ldd	r24, Y+16	; 0x10
    4198:	28 2f       	mov	r18, r24
    419a:	30 e0       	ldi	r19, 0x00	; 0
    419c:	ca 01       	movw	r24, r20
    419e:	88 0f       	add	r24, r24
    41a0:	99 1f       	adc	r25, r25
    41a2:	88 0f       	add	r24, r24
    41a4:	99 1f       	adc	r25, r25
    41a6:	82 0f       	add	r24, r18
    41a8:	93 1f       	adc	r25, r19
    41aa:	fc 01       	movw	r30, r24
    41ac:	ea 57       	subi	r30, 0x7A	; 122
    41ae:	fe 4f       	sbci	r31, 0xFE	; 254
    41b0:	80 81       	ld	r24, Z
    41b2:	89 8b       	std	Y+17, r24	; 0x11
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
			{
				//activate column
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , LOW );

				for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ )
    41b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    41b6:	8f 5f       	subi	r24, 0xFF	; 255
    41b8:	8f 87       	std	Y+15, r24	; 0x0f
    41ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    41bc:	84 30       	cpi	r24, 0x04	; 4
    41be:	08 f4       	brcc	.+2      	; 0x41c2 <keypad_u8CheckPress+0x1dc>
    41c0:	3a cf       	rjmp	.-396    	; 0x4036 <keypad_u8CheckPress+0x50>
					}

				}

				//Deactivate COl
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
    41c2:	88 89       	ldd	r24, Y+16	; 0x10
    41c4:	88 2f       	mov	r24, r24
    41c6:	90 e0       	ldi	r25, 0x00	; 0
    41c8:	88 0f       	add	r24, r24
    41ca:	99 1f       	adc	r25, r25
    41cc:	fc 01       	movw	r30, r24
    41ce:	e2 56       	subi	r30, 0x62	; 98
    41d0:	fe 4f       	sbci	r31, 0xFE	; 254
    41d2:	20 81       	ld	r18, Z
    41d4:	88 89       	ldd	r24, Y+16	; 0x10
    41d6:	88 2f       	mov	r24, r24
    41d8:	90 e0       	ldi	r25, 0x00	; 0
    41da:	88 0f       	add	r24, r24
    41dc:	99 1f       	adc	r25, r25
    41de:	fc 01       	movw	r30, r24
    41e0:	e1 56       	subi	r30, 0x61	; 97
    41e2:	fe 4f       	sbci	r31, 0xFE	; 254
    41e4:	90 81       	ld	r25, Z
    41e6:	82 2f       	mov	r24, r18
    41e8:	69 2f       	mov	r22, r25
    41ea:	41 e0       	ldi	r20, 0x01	; 1
    41ec:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <DIO_u8SetPinVal>
	uint8 Local_u8KeyPressed  = NOTPRESSED;
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
    41f0:	88 89       	ldd	r24, Y+16	; 0x10
    41f2:	8f 5f       	subi	r24, 0xFF	; 255
    41f4:	88 8b       	std	Y+16, r24	; 0x10
    41f6:	88 89       	ldd	r24, Y+16	; 0x10
    41f8:	84 30       	cpi	r24, 0x04	; 4
    41fa:	08 f4       	brcc	.+2      	; 0x41fe <keypad_u8CheckPress+0x218>
    41fc:	03 cf       	rjmp	.-506    	; 0x4004 <keypad_u8CheckPress+0x1e>
uint8 keypad_u8CheckPress(void){
	uint8 Local_u8KeyPressed  = NOTPRESSED;
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
    41fe:	89 89       	ldd	r24, Y+17	; 0x11
    4200:	8f 3f       	cpi	r24, 0xFF	; 255
    4202:	09 f4       	brne	.+2      	; 0x4206 <keypad_u8CheckPress+0x220>
    4204:	fd ce       	rjmp	.-518    	; 0x4000 <keypad_u8CheckPress+0x1a>

				//Deactivate COl
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
			}
		   }
			return Local_u8KeyPressed ;
    4206:	89 89       	ldd	r24, Y+17	; 0x11

}
    4208:	62 96       	adiw	r28, 0x12	; 18
    420a:	0f b6       	in	r0, 0x3f	; 63
    420c:	f8 94       	cli
    420e:	de bf       	out	0x3e, r29	; 62
    4210:	0f be       	out	0x3f, r0	; 63
    4212:	cd bf       	out	0x3d, r28	; 61
    4214:	cf 91       	pop	r28
    4216:	df 91       	pop	r29
    4218:	08 95       	ret

0000421a <ScanData>:
uint8 FirstNumberSign =false;
uint8 Sign =1;
uint8 OtherNumberSign=false;

uint8 ScanData ()
{
    421a:	df 93       	push	r29
    421c:	cf 93       	push	r28
    421e:	cd b7       	in	r28, 0x3d	; 61
    4220:	de b7       	in	r29, 0x3e	; 62
    4222:	2f 97       	sbiw	r28, 0x0f	; 15
    4224:	0f b6       	in	r0, 0x3f	; 63
    4226:	f8 94       	cli
    4228:	de bf       	out	0x3e, r29	; 62
    422a:	0f be       	out	0x3f, r0	; 63
    422c:	cd bf       	out	0x3d, r28	; 61
	uint8 temp=0;
    422e:	1f 86       	std	Y+15, r1	; 0x0f
	temp = keypad_u8CheckPress();
    4230:	0e 94 f3 1f 	call	0x3fe6	; 0x3fe6 <keypad_u8CheckPress>
    4234:	8f 87       	std	Y+15, r24	; 0x0f
    4236:	9d c0       	rjmp	.+314    	; 0x4372 <ScanData+0x158>
	while(temp!= '=')
	{

		if (temp == 'A')
    4238:	8f 85       	ldd	r24, Y+15	; 0x0f
    423a:	81 34       	cpi	r24, 0x41	; 65
    423c:	29 f4       	brne	.+10     	; 0x4248 <ScanData+0x2e>
		{
			Resetall();
    423e:	0e 94 44 2b 	call	0x5688	; 0x5688 <Resetall>
			LCD_voidWriteCmd(0x01);
    4242:	81 e0       	ldi	r24, 0x01	; 1
    4244:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
		}

		//storing any thing the user input
		if((temp!=0) && (temp != 'A'))
    4248:	8f 85       	ldd	r24, Y+15	; 0x0f
    424a:	88 23       	and	r24, r24
    424c:	09 f4       	brne	.+2      	; 0x4250 <ScanData+0x36>
    424e:	8e c0       	rjmp	.+284    	; 0x436c <ScanData+0x152>
    4250:	8f 85       	ldd	r24, Y+15	; 0x0f
    4252:	81 34       	cpi	r24, 0x41	; 65
    4254:	09 f4       	brne	.+2      	; 0x4258 <ScanData+0x3e>
    4256:	8a c0       	rjmp	.+276    	; 0x436c <ScanData+0x152>
		{

			Digit[DigitCounter]=temp;
    4258:	80 91 ae 01 	lds	r24, 0x01AE
    425c:	88 2f       	mov	r24, r24
    425e:	90 e0       	ldi	r25, 0x00	; 0
    4260:	fc 01       	movw	r30, r24
    4262:	ef 54       	subi	r30, 0x4F	; 79
    4264:	fe 4f       	sbci	r31, 0xFE	; 254
    4266:	8f 85       	ldd	r24, Y+15	; 0x0f
    4268:	80 83       	st	Z, r24
			LCD_voidWriteChar(Digit[DigitCounter]);
    426a:	80 91 ae 01 	lds	r24, 0x01AE
    426e:	88 2f       	mov	r24, r24
    4270:	90 e0       	ldi	r25, 0x00	; 0
    4272:	fc 01       	movw	r30, r24
    4274:	ef 54       	subi	r30, 0x4F	; 79
    4276:	fe 4f       	sbci	r31, 0xFE	; 254
    4278:	80 81       	ld	r24, Z
    427a:	0e 94 76 1b 	call	0x36ec	; 0x36ec <LCD_voidWriteChar>
			DigitCounter++;
    427e:	80 91 ae 01 	lds	r24, 0x01AE
    4282:	8f 5f       	subi	r24, 0xFF	; 255
    4284:	80 93 ae 01 	sts	0x01AE, r24
    4288:	80 e0       	ldi	r24, 0x00	; 0
    428a:	90 e0       	ldi	r25, 0x00	; 0
    428c:	a8 e4       	ldi	r26, 0x48	; 72
    428e:	b2 e4       	ldi	r27, 0x42	; 66
    4290:	8b 87       	std	Y+11, r24	; 0x0b
    4292:	9c 87       	std	Y+12, r25	; 0x0c
    4294:	ad 87       	std	Y+13, r26	; 0x0d
    4296:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4298:	6b 85       	ldd	r22, Y+11	; 0x0b
    429a:	7c 85       	ldd	r23, Y+12	; 0x0c
    429c:	8d 85       	ldd	r24, Y+13	; 0x0d
    429e:	9e 85       	ldd	r25, Y+14	; 0x0e
    42a0:	20 e0       	ldi	r18, 0x00	; 0
    42a2:	30 e0       	ldi	r19, 0x00	; 0
    42a4:	4a ef       	ldi	r20, 0xFA	; 250
    42a6:	54 e4       	ldi	r21, 0x44	; 68
    42a8:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    42ac:	dc 01       	movw	r26, r24
    42ae:	cb 01       	movw	r24, r22
    42b0:	8f 83       	std	Y+7, r24	; 0x07
    42b2:	98 87       	std	Y+8, r25	; 0x08
    42b4:	a9 87       	std	Y+9, r26	; 0x09
    42b6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    42b8:	6f 81       	ldd	r22, Y+7	; 0x07
    42ba:	78 85       	ldd	r23, Y+8	; 0x08
    42bc:	89 85       	ldd	r24, Y+9	; 0x09
    42be:	9a 85       	ldd	r25, Y+10	; 0x0a
    42c0:	20 e0       	ldi	r18, 0x00	; 0
    42c2:	30 e0       	ldi	r19, 0x00	; 0
    42c4:	40 e8       	ldi	r20, 0x80	; 128
    42c6:	5f e3       	ldi	r21, 0x3F	; 63
    42c8:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    42cc:	88 23       	and	r24, r24
    42ce:	2c f4       	brge	.+10     	; 0x42da <ScanData+0xc0>
		__ticks = 1;
    42d0:	81 e0       	ldi	r24, 0x01	; 1
    42d2:	90 e0       	ldi	r25, 0x00	; 0
    42d4:	9e 83       	std	Y+6, r25	; 0x06
    42d6:	8d 83       	std	Y+5, r24	; 0x05
    42d8:	3f c0       	rjmp	.+126    	; 0x4358 <ScanData+0x13e>
	else if (__tmp > 65535)
    42da:	6f 81       	ldd	r22, Y+7	; 0x07
    42dc:	78 85       	ldd	r23, Y+8	; 0x08
    42de:	89 85       	ldd	r24, Y+9	; 0x09
    42e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    42e2:	20 e0       	ldi	r18, 0x00	; 0
    42e4:	3f ef       	ldi	r19, 0xFF	; 255
    42e6:	4f e7       	ldi	r20, 0x7F	; 127
    42e8:	57 e4       	ldi	r21, 0x47	; 71
    42ea:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    42ee:	18 16       	cp	r1, r24
    42f0:	4c f5       	brge	.+82     	; 0x4344 <ScanData+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42f2:	6b 85       	ldd	r22, Y+11	; 0x0b
    42f4:	7c 85       	ldd	r23, Y+12	; 0x0c
    42f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    42f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    42fa:	20 e0       	ldi	r18, 0x00	; 0
    42fc:	30 e0       	ldi	r19, 0x00	; 0
    42fe:	40 e2       	ldi	r20, 0x20	; 32
    4300:	51 e4       	ldi	r21, 0x41	; 65
    4302:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    4306:	dc 01       	movw	r26, r24
    4308:	cb 01       	movw	r24, r22
    430a:	bc 01       	movw	r22, r24
    430c:	cd 01       	movw	r24, r26
    430e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    4312:	dc 01       	movw	r26, r24
    4314:	cb 01       	movw	r24, r22
    4316:	9e 83       	std	Y+6, r25	; 0x06
    4318:	8d 83       	std	Y+5, r24	; 0x05
    431a:	0f c0       	rjmp	.+30     	; 0x433a <ScanData+0x120>
    431c:	88 ec       	ldi	r24, 0xC8	; 200
    431e:	90 e0       	ldi	r25, 0x00	; 0
    4320:	9c 83       	std	Y+4, r25	; 0x04
    4322:	8b 83       	std	Y+3, r24	; 0x03
    4324:	8b 81       	ldd	r24, Y+3	; 0x03
    4326:	9c 81       	ldd	r25, Y+4	; 0x04
    4328:	01 97       	sbiw	r24, 0x01	; 1
    432a:	f1 f7       	brne	.-4      	; 0x4328 <ScanData+0x10e>
    432c:	9c 83       	std	Y+4, r25	; 0x04
    432e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4330:	8d 81       	ldd	r24, Y+5	; 0x05
    4332:	9e 81       	ldd	r25, Y+6	; 0x06
    4334:	01 97       	sbiw	r24, 0x01	; 1
    4336:	9e 83       	std	Y+6, r25	; 0x06
    4338:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    433a:	8d 81       	ldd	r24, Y+5	; 0x05
    433c:	9e 81       	ldd	r25, Y+6	; 0x06
    433e:	00 97       	sbiw	r24, 0x00	; 0
    4340:	69 f7       	brne	.-38     	; 0x431c <ScanData+0x102>
    4342:	14 c0       	rjmp	.+40     	; 0x436c <ScanData+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4344:	6f 81       	ldd	r22, Y+7	; 0x07
    4346:	78 85       	ldd	r23, Y+8	; 0x08
    4348:	89 85       	ldd	r24, Y+9	; 0x09
    434a:	9a 85       	ldd	r25, Y+10	; 0x0a
    434c:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    4350:	dc 01       	movw	r26, r24
    4352:	cb 01       	movw	r24, r22
    4354:	9e 83       	std	Y+6, r25	; 0x06
    4356:	8d 83       	std	Y+5, r24	; 0x05
    4358:	8d 81       	ldd	r24, Y+5	; 0x05
    435a:	9e 81       	ldd	r25, Y+6	; 0x06
    435c:	9a 83       	std	Y+2, r25	; 0x02
    435e:	89 83       	std	Y+1, r24	; 0x01
    4360:	89 81       	ldd	r24, Y+1	; 0x01
    4362:	9a 81       	ldd	r25, Y+2	; 0x02
    4364:	01 97       	sbiw	r24, 0x01	; 1
    4366:	f1 f7       	brne	.-4      	; 0x4364 <ScanData+0x14a>
    4368:	9a 83       	std	Y+2, r25	; 0x02
    436a:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(50);

		}
		temp=keypad_u8CheckPress();
    436c:	0e 94 f3 1f 	call	0x3fe6	; 0x3fe6 <keypad_u8CheckPress>
    4370:	8f 87       	std	Y+15, r24	; 0x0f

uint8 ScanData ()
{
	uint8 temp=0;
	temp = keypad_u8CheckPress();
	while(temp!= '=')
    4372:	8f 85       	ldd	r24, Y+15	; 0x0f
    4374:	8d 33       	cpi	r24, 0x3D	; 61
    4376:	09 f0       	breq	.+2      	; 0x437a <ScanData+0x160>
    4378:	5f cf       	rjmp	.-322    	; 0x4238 <ScanData+0x1e>

		}
		temp=keypad_u8CheckPress();

	}
	Digit[DigitCounter]='=';
    437a:	80 91 ae 01 	lds	r24, 0x01AE
    437e:	88 2f       	mov	r24, r24
    4380:	90 e0       	ldi	r25, 0x00	; 0
    4382:	fc 01       	movw	r30, r24
    4384:	ef 54       	subi	r30, 0x4F	; 79
    4386:	fe 4f       	sbci	r31, 0xFE	; 254
    4388:	8d e3       	ldi	r24, 0x3D	; 61
    438a:	80 83       	st	Z, r24
	LCD_voidWriteChar(Digit[DigitCounter]);
    438c:	80 91 ae 01 	lds	r24, 0x01AE
    4390:	88 2f       	mov	r24, r24
    4392:	90 e0       	ldi	r25, 0x00	; 0
    4394:	fc 01       	movw	r30, r24
    4396:	ef 54       	subi	r30, 0x4F	; 79
    4398:	fe 4f       	sbci	r31, 0xFE	; 254
    439a:	80 81       	ld	r24, Z
    439c:	0e 94 76 1b 	call	0x36ec	; 0x36ec <LCD_voidWriteChar>
	DigitCounter++;
    43a0:	80 91 ae 01 	lds	r24, 0x01AE
    43a4:	8f 5f       	subi	r24, 0xFF	; 255
    43a6:	80 93 ae 01 	sts	0x01AE, r24
	Digit[DigitCounter]='\0'; // to close array
    43aa:	80 91 ae 01 	lds	r24, 0x01AE
    43ae:	88 2f       	mov	r24, r24
    43b0:	90 e0       	ldi	r25, 0x00	; 0
    43b2:	fc 01       	movw	r30, r24
    43b4:	ef 54       	subi	r30, 0x4F	; 79
    43b6:	fe 4f       	sbci	r31, 0xFE	; 254
    43b8:	10 82       	st	Z, r1

	return AnalyzePoint;
    43ba:	82 e0       	ldi	r24, 0x02	; 2

}
    43bc:	2f 96       	adiw	r28, 0x0f	; 15
    43be:	0f b6       	in	r0, 0x3f	; 63
    43c0:	f8 94       	cli
    43c2:	de bf       	out	0x3e, r29	; 62
    43c4:	0f be       	out	0x3f, r0	; 63
    43c6:	cd bf       	out	0x3d, r28	; 61
    43c8:	cf 91       	pop	r28
    43ca:	df 91       	pop	r29
    43cc:	08 95       	ret

000043ce <ConvertToInt>:

sint32 ConvertToInt(uint8 array[]){
    43ce:	df 93       	push	r29
    43d0:	cf 93       	push	r28
    43d2:	cd b7       	in	r28, 0x3d	; 61
    43d4:	de b7       	in	r29, 0x3e	; 62
    43d6:	2e 97       	sbiw	r28, 0x0e	; 14
    43d8:	0f b6       	in	r0, 0x3f	; 63
    43da:	f8 94       	cli
    43dc:	de bf       	out	0x3e, r29	; 62
    43de:	0f be       	out	0x3f, r0	; 63
    43e0:	cd bf       	out	0x3d, r28	; 61
    43e2:	9e 87       	std	Y+14, r25	; 0x0e
    43e4:	8d 87       	std	Y+13, r24	; 0x0d
	sint32 num=0, sign=1, i=-1;
    43e6:	19 86       	std	Y+9, r1	; 0x09
    43e8:	1a 86       	std	Y+10, r1	; 0x0a
    43ea:	1b 86       	std	Y+11, r1	; 0x0b
    43ec:	1c 86       	std	Y+12, r1	; 0x0c
    43ee:	81 e0       	ldi	r24, 0x01	; 1
    43f0:	90 e0       	ldi	r25, 0x00	; 0
    43f2:	a0 e0       	ldi	r26, 0x00	; 0
    43f4:	b0 e0       	ldi	r27, 0x00	; 0
    43f6:	8d 83       	std	Y+5, r24	; 0x05
    43f8:	9e 83       	std	Y+6, r25	; 0x06
    43fa:	af 83       	std	Y+7, r26	; 0x07
    43fc:	b8 87       	std	Y+8, r27	; 0x08
    43fe:	8f ef       	ldi	r24, 0xFF	; 255
    4400:	9f ef       	ldi	r25, 0xFF	; 255
    4402:	af ef       	ldi	r26, 0xFF	; 255
    4404:	bf ef       	ldi	r27, 0xFF	; 255
    4406:	89 83       	std	Y+1, r24	; 0x01
    4408:	9a 83       	std	Y+2, r25	; 0x02
    440a:	ab 83       	std	Y+3, r26	; 0x03
    440c:	bc 83       	std	Y+4, r27	; 0x04

	if(array[0] == '-')    //check if the string is -ve
    440e:	ed 85       	ldd	r30, Y+13	; 0x0d
    4410:	fe 85       	ldd	r31, Y+14	; 0x0e
    4412:	80 81       	ld	r24, Z
    4414:	8d 32       	cpi	r24, 0x2D	; 45
    4416:	91 f5       	brne	.+100    	; 0x447c <ConvertToInt+0xae>
	{
		sign = -1;
    4418:	8f ef       	ldi	r24, 0xFF	; 255
    441a:	9f ef       	ldi	r25, 0xFF	; 255
    441c:	af ef       	ldi	r26, 0xFF	; 255
    441e:	bf ef       	ldi	r27, 0xFF	; 255
    4420:	8d 83       	std	Y+5, r24	; 0x05
    4422:	9e 83       	std	Y+6, r25	; 0x06
    4424:	af 83       	std	Y+7, r26	; 0x07
    4426:	b8 87       	std	Y+8, r27	; 0x08
		i = 0;           //skip the -ve sign to the number
    4428:	19 82       	std	Y+1, r1	; 0x01
    442a:	1a 82       	std	Y+2, r1	; 0x02
    442c:	1b 82       	std	Y+3, r1	; 0x03
    442e:	1c 82       	std	Y+4, r1	; 0x04
    4430:	25 c0       	rjmp	.+74     	; 0x447c <ConvertToInt+0xae>
	}

	while(array[++i] != 0)
	{
		num = (num * 10) + (array[i] - '0');
    4432:	89 85       	ldd	r24, Y+9	; 0x09
    4434:	9a 85       	ldd	r25, Y+10	; 0x0a
    4436:	ab 85       	ldd	r26, Y+11	; 0x0b
    4438:	bc 85       	ldd	r27, Y+12	; 0x0c
    443a:	2a e0       	ldi	r18, 0x0A	; 10
    443c:	30 e0       	ldi	r19, 0x00	; 0
    443e:	40 e0       	ldi	r20, 0x00	; 0
    4440:	50 e0       	ldi	r21, 0x00	; 0
    4442:	bc 01       	movw	r22, r24
    4444:	cd 01       	movw	r24, r26
    4446:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    444a:	ab 01       	movw	r20, r22
    444c:	bc 01       	movw	r22, r24
    444e:	29 81       	ldd	r18, Y+1	; 0x01
    4450:	3a 81       	ldd	r19, Y+2	; 0x02
    4452:	8d 85       	ldd	r24, Y+13	; 0x0d
    4454:	9e 85       	ldd	r25, Y+14	; 0x0e
    4456:	fc 01       	movw	r30, r24
    4458:	e2 0f       	add	r30, r18
    445a:	f3 1f       	adc	r31, r19
    445c:	80 81       	ld	r24, Z
    445e:	88 2f       	mov	r24, r24
    4460:	90 e0       	ldi	r25, 0x00	; 0
    4462:	c0 97       	sbiw	r24, 0x30	; 48
    4464:	aa 27       	eor	r26, r26
    4466:	97 fd       	sbrc	r25, 7
    4468:	a0 95       	com	r26
    446a:	ba 2f       	mov	r27, r26
    446c:	84 0f       	add	r24, r20
    446e:	95 1f       	adc	r25, r21
    4470:	a6 1f       	adc	r26, r22
    4472:	b7 1f       	adc	r27, r23
    4474:	89 87       	std	Y+9, r24	; 0x09
    4476:	9a 87       	std	Y+10, r25	; 0x0a
    4478:	ab 87       	std	Y+11, r26	; 0x0b
    447a:	bc 87       	std	Y+12, r27	; 0x0c
	{
		sign = -1;
		i = 0;           //skip the -ve sign to the number
	}

	while(array[++i] != 0)
    447c:	89 81       	ldd	r24, Y+1	; 0x01
    447e:	9a 81       	ldd	r25, Y+2	; 0x02
    4480:	ab 81       	ldd	r26, Y+3	; 0x03
    4482:	bc 81       	ldd	r27, Y+4	; 0x04
    4484:	01 96       	adiw	r24, 0x01	; 1
    4486:	a1 1d       	adc	r26, r1
    4488:	b1 1d       	adc	r27, r1
    448a:	89 83       	std	Y+1, r24	; 0x01
    448c:	9a 83       	std	Y+2, r25	; 0x02
    448e:	ab 83       	std	Y+3, r26	; 0x03
    4490:	bc 83       	std	Y+4, r27	; 0x04
    4492:	29 81       	ldd	r18, Y+1	; 0x01
    4494:	3a 81       	ldd	r19, Y+2	; 0x02
    4496:	8d 85       	ldd	r24, Y+13	; 0x0d
    4498:	9e 85       	ldd	r25, Y+14	; 0x0e
    449a:	fc 01       	movw	r30, r24
    449c:	e2 0f       	add	r30, r18
    449e:	f3 1f       	adc	r31, r19
    44a0:	80 81       	ld	r24, Z
    44a2:	88 23       	and	r24, r24
    44a4:	31 f6       	brne	.-116    	; 0x4432 <ConvertToInt+0x64>
	{
		num = (num * 10) + (array[i] - '0');
	}

	num *= sign;
    44a6:	89 85       	ldd	r24, Y+9	; 0x09
    44a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    44aa:	ab 85       	ldd	r26, Y+11	; 0x0b
    44ac:	bc 85       	ldd	r27, Y+12	; 0x0c
    44ae:	2d 81       	ldd	r18, Y+5	; 0x05
    44b0:	3e 81       	ldd	r19, Y+6	; 0x06
    44b2:	4f 81       	ldd	r20, Y+7	; 0x07
    44b4:	58 85       	ldd	r21, Y+8	; 0x08
    44b6:	bc 01       	movw	r22, r24
    44b8:	cd 01       	movw	r24, r26
    44ba:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__mulsi3>
    44be:	dc 01       	movw	r26, r24
    44c0:	cb 01       	movw	r24, r22
    44c2:	89 87       	std	Y+9, r24	; 0x09
    44c4:	9a 87       	std	Y+10, r25	; 0x0a
    44c6:	ab 87       	std	Y+11, r26	; 0x0b
    44c8:	bc 87       	std	Y+12, r27	; 0x0c
	return num;
    44ca:	89 85       	ldd	r24, Y+9	; 0x09
    44cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    44ce:	ab 85       	ldd	r26, Y+11	; 0x0b
    44d0:	bc 85       	ldd	r27, Y+12	; 0x0c
}
    44d2:	bc 01       	movw	r22, r24
    44d4:	cd 01       	movw	r24, r26
    44d6:	2e 96       	adiw	r28, 0x0e	; 14
    44d8:	0f b6       	in	r0, 0x3f	; 63
    44da:	f8 94       	cli
    44dc:	de bf       	out	0x3e, r29	; 62
    44de:	0f be       	out	0x3f, r0	; 63
    44e0:	cd bf       	out	0x3d, r28	; 61
    44e2:	cf 91       	pop	r28
    44e4:	df 91       	pop	r29
    44e6:	08 95       	ret

000044e8 <InitArray>:

void InitArray(uint8 array[]){
    44e8:	df 93       	push	r29
    44ea:	cf 93       	push	r28
    44ec:	00 d0       	rcall	.+0      	; 0x44ee <InitArray+0x6>
    44ee:	0f 92       	push	r0
    44f0:	cd b7       	in	r28, 0x3d	; 61
    44f2:	de b7       	in	r29, 0x3e	; 62
    44f4:	9b 83       	std	Y+3, r25	; 0x03
    44f6:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i =0;
    44f8:	19 82       	std	Y+1, r1	; 0x01
    44fa:	0c c0       	rjmp	.+24     	; 0x4514 <InitArray+0x2c>
	while(array[i] != '\0'){
		array[i]='\0';
    44fc:	89 81       	ldd	r24, Y+1	; 0x01
    44fe:	28 2f       	mov	r18, r24
    4500:	30 e0       	ldi	r19, 0x00	; 0
    4502:	8a 81       	ldd	r24, Y+2	; 0x02
    4504:	9b 81       	ldd	r25, Y+3	; 0x03
    4506:	fc 01       	movw	r30, r24
    4508:	e2 0f       	add	r30, r18
    450a:	f3 1f       	adc	r31, r19
    450c:	10 82       	st	Z, r1
		i++;
    450e:	89 81       	ldd	r24, Y+1	; 0x01
    4510:	8f 5f       	subi	r24, 0xFF	; 255
    4512:	89 83       	std	Y+1, r24	; 0x01
	return num;
}

void InitArray(uint8 array[]){
	uint8 i =0;
	while(array[i] != '\0'){
    4514:	89 81       	ldd	r24, Y+1	; 0x01
    4516:	28 2f       	mov	r18, r24
    4518:	30 e0       	ldi	r19, 0x00	; 0
    451a:	8a 81       	ldd	r24, Y+2	; 0x02
    451c:	9b 81       	ldd	r25, Y+3	; 0x03
    451e:	fc 01       	movw	r30, r24
    4520:	e2 0f       	add	r30, r18
    4522:	f3 1f       	adc	r31, r19
    4524:	80 81       	ld	r24, Z
    4526:	88 23       	and	r24, r24
    4528:	49 f7       	brne	.-46     	; 0x44fc <InitArray+0x14>
		array[i]='\0';
		i++;
	}
}
    452a:	0f 90       	pop	r0
    452c:	0f 90       	pop	r0
    452e:	0f 90       	pop	r0
    4530:	cf 91       	pop	r28
    4532:	df 91       	pop	r29
    4534:	08 95       	ret

00004536 <AnalyzeData>:


uint8 AnalyzeData()
{
    4536:	0f 93       	push	r16
    4538:	1f 93       	push	r17
    453a:	df 93       	push	r29
    453c:	cf 93       	push	r28
    453e:	cd b7       	in	r28, 0x3d	; 61
    4540:	de b7       	in	r29, 0x3e	; 62
    4542:	a1 97       	sbiw	r28, 0x21	; 33
    4544:	0f b6       	in	r0, 0x3f	; 63
    4546:	f8 94       	cli
    4548:	de bf       	out	0x3e, r29	; 62
    454a:	0f be       	out	0x3f, r0	; 63
    454c:	cd bf       	out	0x3d, r28	; 61
	uint8 TempArr[MaxNumberOfDigit]={0};
    454e:	80 e1       	ldi	r24, 0x10	; 16
    4550:	fe 01       	movw	r30, r28
    4552:	71 96       	adiw	r30, 0x11	; 17
    4554:	df 01       	movw	r26, r30
    4556:	98 2f       	mov	r25, r24
    4558:	1d 92       	st	X+, r1
    455a:	9a 95       	dec	r25
    455c:	e9 f7       	brne	.-6      	; 0x4558 <AnalyzeData+0x22>
	uint8 TempIndex=0;
    455e:	18 8a       	std	Y+16, r1	; 0x10
	uint8 index=0;
    4560:	1f 86       	std	Y+15, r1	; 0x0f

	Sign =1;
    4562:	81 e0       	ldi	r24, 0x01	; 1
    4564:	80 93 a6 01 	sts	0x01A6, r24
	OtherNumberSign =1;
    4568:	81 e0       	ldi	r24, 0x01	; 1
    456a:	80 93 b0 01 	sts	0x01B0, r24

	if (IsOperation(Digit[0]) && Digit[0]!= '-'&& Digit[0]!= '+') //input ex (*5)
    456e:	80 91 b1 01 	lds	r24, 0x01B1
    4572:	8a 32       	cpi	r24, 0x2A	; 42
    4574:	69 f0       	breq	.+26     	; 0x4590 <AnalyzeData+0x5a>
    4576:	80 91 b1 01 	lds	r24, 0x01B1
    457a:	8b 32       	cpi	r24, 0x2B	; 43
    457c:	49 f0       	breq	.+18     	; 0x4590 <AnalyzeData+0x5a>
    457e:	80 91 b1 01 	lds	r24, 0x01B1
    4582:	8d 32       	cpi	r24, 0x2D	; 45
    4584:	29 f0       	breq	.+10     	; 0x4590 <AnalyzeData+0x5a>
    4586:	80 91 b1 01 	lds	r24, 0x01B1
    458a:	8f 32       	cpi	r24, 0x2F	; 47
    458c:	09 f0       	breq	.+2      	; 0x4590 <AnalyzeData+0x5a>
    458e:	4e c1       	rjmp	.+668    	; 0x482c <AnalyzeData+0x2f6>
    4590:	80 91 b1 01 	lds	r24, 0x01B1
    4594:	8d 32       	cpi	r24, 0x2D	; 45
    4596:	09 f4       	brne	.+2      	; 0x459a <AnalyzeData+0x64>
    4598:	49 c1       	rjmp	.+658    	; 0x482c <AnalyzeData+0x2f6>
    459a:	80 91 b1 01 	lds	r24, 0x01B1
    459e:	8b 32       	cpi	r24, 0x2B	; 43
    45a0:	09 f4       	brne	.+2      	; 0x45a4 <AnalyzeData+0x6e>
    45a2:	44 c1       	rjmp	.+648    	; 0x482c <AnalyzeData+0x2f6>
	{
		LCD_voidWriteString("Syntax error");
    45a4:	81 e7       	ldi	r24, 0x71	; 113
    45a6:	90 e0       	ldi	r25, 0x00	; 0
    45a8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <LCD_voidWriteString>
    45ac:	80 e0       	ldi	r24, 0x00	; 0
    45ae:	90 e0       	ldi	r25, 0x00	; 0
    45b0:	a8 ec       	ldi	r26, 0xC8	; 200
    45b2:	b2 e4       	ldi	r27, 0x42	; 66
    45b4:	8b 87       	std	Y+11, r24	; 0x0b
    45b6:	9c 87       	std	Y+12, r25	; 0x0c
    45b8:	ad 87       	std	Y+13, r26	; 0x0d
    45ba:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    45be:	7c 85       	ldd	r23, Y+12	; 0x0c
    45c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    45c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    45c4:	20 e0       	ldi	r18, 0x00	; 0
    45c6:	30 e0       	ldi	r19, 0x00	; 0
    45c8:	4a ef       	ldi	r20, 0xFA	; 250
    45ca:	54 e4       	ldi	r21, 0x44	; 68
    45cc:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    45d0:	dc 01       	movw	r26, r24
    45d2:	cb 01       	movw	r24, r22
    45d4:	8f 83       	std	Y+7, r24	; 0x07
    45d6:	98 87       	std	Y+8, r25	; 0x08
    45d8:	a9 87       	std	Y+9, r26	; 0x09
    45da:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    45dc:	6f 81       	ldd	r22, Y+7	; 0x07
    45de:	78 85       	ldd	r23, Y+8	; 0x08
    45e0:	89 85       	ldd	r24, Y+9	; 0x09
    45e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    45e4:	20 e0       	ldi	r18, 0x00	; 0
    45e6:	30 e0       	ldi	r19, 0x00	; 0
    45e8:	40 e8       	ldi	r20, 0x80	; 128
    45ea:	5f e3       	ldi	r21, 0x3F	; 63
    45ec:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__ltsf2>
    45f0:	88 23       	and	r24, r24
    45f2:	2c f4       	brge	.+10     	; 0x45fe <AnalyzeData+0xc8>
		__ticks = 1;
    45f4:	81 e0       	ldi	r24, 0x01	; 1
    45f6:	90 e0       	ldi	r25, 0x00	; 0
    45f8:	9e 83       	std	Y+6, r25	; 0x06
    45fa:	8d 83       	std	Y+5, r24	; 0x05
    45fc:	3f c0       	rjmp	.+126    	; 0x467c <AnalyzeData+0x146>
	else if (__tmp > 65535)
    45fe:	6f 81       	ldd	r22, Y+7	; 0x07
    4600:	78 85       	ldd	r23, Y+8	; 0x08
    4602:	89 85       	ldd	r24, Y+9	; 0x09
    4604:	9a 85       	ldd	r25, Y+10	; 0x0a
    4606:	20 e0       	ldi	r18, 0x00	; 0
    4608:	3f ef       	ldi	r19, 0xFF	; 255
    460a:	4f e7       	ldi	r20, 0x7F	; 127
    460c:	57 e4       	ldi	r21, 0x47	; 71
    460e:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__gtsf2>
    4612:	18 16       	cp	r1, r24
    4614:	4c f5       	brge	.+82     	; 0x4668 <AnalyzeData+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4616:	6b 85       	ldd	r22, Y+11	; 0x0b
    4618:	7c 85       	ldd	r23, Y+12	; 0x0c
    461a:	8d 85       	ldd	r24, Y+13	; 0x0d
    461c:	9e 85       	ldd	r25, Y+14	; 0x0e
    461e:	20 e0       	ldi	r18, 0x00	; 0
    4620:	30 e0       	ldi	r19, 0x00	; 0
    4622:	40 e2       	ldi	r20, 0x20	; 32
    4624:	51 e4       	ldi	r21, 0x41	; 65
    4626:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3>
    462a:	dc 01       	movw	r26, r24
    462c:	cb 01       	movw	r24, r22
    462e:	bc 01       	movw	r22, r24
    4630:	cd 01       	movw	r24, r26
    4632:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    4636:	dc 01       	movw	r26, r24
    4638:	cb 01       	movw	r24, r22
    463a:	9e 83       	std	Y+6, r25	; 0x06
    463c:	8d 83       	std	Y+5, r24	; 0x05
    463e:	0f c0       	rjmp	.+30     	; 0x465e <AnalyzeData+0x128>
    4640:	88 ec       	ldi	r24, 0xC8	; 200
    4642:	90 e0       	ldi	r25, 0x00	; 0
    4644:	9c 83       	std	Y+4, r25	; 0x04
    4646:	8b 83       	std	Y+3, r24	; 0x03
    4648:	8b 81       	ldd	r24, Y+3	; 0x03
    464a:	9c 81       	ldd	r25, Y+4	; 0x04
    464c:	01 97       	sbiw	r24, 0x01	; 1
    464e:	f1 f7       	brne	.-4      	; 0x464c <AnalyzeData+0x116>
    4650:	9c 83       	std	Y+4, r25	; 0x04
    4652:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4654:	8d 81       	ldd	r24, Y+5	; 0x05
    4656:	9e 81       	ldd	r25, Y+6	; 0x06
    4658:	01 97       	sbiw	r24, 0x01	; 1
    465a:	9e 83       	std	Y+6, r25	; 0x06
    465c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    465e:	8d 81       	ldd	r24, Y+5	; 0x05
    4660:	9e 81       	ldd	r25, Y+6	; 0x06
    4662:	00 97       	sbiw	r24, 0x00	; 0
    4664:	69 f7       	brne	.-38     	; 0x4640 <AnalyzeData+0x10a>
    4666:	14 c0       	rjmp	.+40     	; 0x4690 <AnalyzeData+0x15a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4668:	6f 81       	ldd	r22, Y+7	; 0x07
    466a:	78 85       	ldd	r23, Y+8	; 0x08
    466c:	89 85       	ldd	r24, Y+9	; 0x09
    466e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4670:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    4674:	dc 01       	movw	r26, r24
    4676:	cb 01       	movw	r24, r22
    4678:	9e 83       	std	Y+6, r25	; 0x06
    467a:	8d 83       	std	Y+5, r24	; 0x05
    467c:	8d 81       	ldd	r24, Y+5	; 0x05
    467e:	9e 81       	ldd	r25, Y+6	; 0x06
    4680:	9a 83       	std	Y+2, r25	; 0x02
    4682:	89 83       	std	Y+1, r24	; 0x01
    4684:	89 81       	ldd	r24, Y+1	; 0x01
    4686:	9a 81       	ldd	r25, Y+2	; 0x02
    4688:	01 97       	sbiw	r24, 0x01	; 1
    468a:	f1 f7       	brne	.-4      	; 0x4688 <AnalyzeData+0x152>
    468c:	9a 83       	std	Y+2, r25	; 0x02
    468e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(100);
		return Reset;
    4690:	19 a2       	std	Y+33, r1	; 0x21
    4692:	f0 c0       	rjmp	.+480    	; 0x4874 <AnalyzeData+0x33e>
	}

	while(DigitCounter != 0)
	{
		if(((Digit[index]>='0') && (Digit[index]<='9')) || ((Digit[index]=='-') && (IsOperation(Digit[index-1])))/*||OtherNumberSign*/)
    4694:	8f 85       	ldd	r24, Y+15	; 0x0f
    4696:	88 2f       	mov	r24, r24
    4698:	90 e0       	ldi	r25, 0x00	; 0
    469a:	fc 01       	movw	r30, r24
    469c:	ef 54       	subi	r30, 0x4F	; 79
    469e:	fe 4f       	sbci	r31, 0xFE	; 254
    46a0:	80 81       	ld	r24, Z
    46a2:	80 33       	cpi	r24, 0x30	; 48
    46a4:	48 f0       	brcs	.+18     	; 0x46b8 <AnalyzeData+0x182>
    46a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    46a8:	88 2f       	mov	r24, r24
    46aa:	90 e0       	ldi	r25, 0x00	; 0
    46ac:	fc 01       	movw	r30, r24
    46ae:	ef 54       	subi	r30, 0x4F	; 79
    46b0:	fe 4f       	sbci	r31, 0xFE	; 254
    46b2:	80 81       	ld	r24, Z
    46b4:	8a 33       	cpi	r24, 0x3A	; 58
    46b6:	88 f1       	brcs	.+98     	; 0x471a <AnalyzeData+0x1e4>
    46b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    46ba:	88 2f       	mov	r24, r24
    46bc:	90 e0       	ldi	r25, 0x00	; 0
    46be:	fc 01       	movw	r30, r24
    46c0:	ef 54       	subi	r30, 0x4F	; 79
    46c2:	fe 4f       	sbci	r31, 0xFE	; 254
    46c4:	80 81       	ld	r24, Z
    46c6:	8d 32       	cpi	r24, 0x2D	; 45
    46c8:	e1 f5       	brne	.+120    	; 0x4742 <AnalyzeData+0x20c>
    46ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    46cc:	88 2f       	mov	r24, r24
    46ce:	90 e0       	ldi	r25, 0x00	; 0
    46d0:	01 97       	sbiw	r24, 0x01	; 1
    46d2:	fc 01       	movw	r30, r24
    46d4:	ef 54       	subi	r30, 0x4F	; 79
    46d6:	fe 4f       	sbci	r31, 0xFE	; 254
    46d8:	80 81       	ld	r24, Z
    46da:	8a 32       	cpi	r24, 0x2A	; 42
    46dc:	f1 f0       	breq	.+60     	; 0x471a <AnalyzeData+0x1e4>
    46de:	8f 85       	ldd	r24, Y+15	; 0x0f
    46e0:	88 2f       	mov	r24, r24
    46e2:	90 e0       	ldi	r25, 0x00	; 0
    46e4:	01 97       	sbiw	r24, 0x01	; 1
    46e6:	fc 01       	movw	r30, r24
    46e8:	ef 54       	subi	r30, 0x4F	; 79
    46ea:	fe 4f       	sbci	r31, 0xFE	; 254
    46ec:	80 81       	ld	r24, Z
    46ee:	8b 32       	cpi	r24, 0x2B	; 43
    46f0:	a1 f0       	breq	.+40     	; 0x471a <AnalyzeData+0x1e4>
    46f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    46f4:	88 2f       	mov	r24, r24
    46f6:	90 e0       	ldi	r25, 0x00	; 0
    46f8:	01 97       	sbiw	r24, 0x01	; 1
    46fa:	fc 01       	movw	r30, r24
    46fc:	ef 54       	subi	r30, 0x4F	; 79
    46fe:	fe 4f       	sbci	r31, 0xFE	; 254
    4700:	80 81       	ld	r24, Z
    4702:	8d 32       	cpi	r24, 0x2D	; 45
    4704:	51 f0       	breq	.+20     	; 0x471a <AnalyzeData+0x1e4>
    4706:	8f 85       	ldd	r24, Y+15	; 0x0f
    4708:	88 2f       	mov	r24, r24
    470a:	90 e0       	ldi	r25, 0x00	; 0
    470c:	01 97       	sbiw	r24, 0x01	; 1
    470e:	fc 01       	movw	r30, r24
    4710:	ef 54       	subi	r30, 0x4F	; 79
    4712:	fe 4f       	sbci	r31, 0xFE	; 254
    4714:	80 81       	ld	r24, Z
    4716:	8f 32       	cpi	r24, 0x2F	; 47
    4718:	a1 f4       	brne	.+40     	; 0x4742 <AnalyzeData+0x20c>
		{
			TempArr[TempIndex]=Digit[index];
    471a:	88 89       	ldd	r24, Y+16	; 0x10
    471c:	28 2f       	mov	r18, r24
    471e:	30 e0       	ldi	r19, 0x00	; 0
    4720:	8f 85       	ldd	r24, Y+15	; 0x0f
    4722:	88 2f       	mov	r24, r24
    4724:	90 e0       	ldi	r25, 0x00	; 0
    4726:	fc 01       	movw	r30, r24
    4728:	ef 54       	subi	r30, 0x4F	; 79
    472a:	fe 4f       	sbci	r31, 0xFE	; 254
    472c:	40 81       	ld	r20, Z
    472e:	ce 01       	movw	r24, r28
    4730:	41 96       	adiw	r24, 0x11	; 17
    4732:	fc 01       	movw	r30, r24
    4734:	e2 0f       	add	r30, r18
    4736:	f3 1f       	adc	r31, r19
    4738:	40 83       	st	Z, r20
			TempIndex++;
    473a:	88 89       	ldd	r24, Y+16	; 0x10
    473c:	8f 5f       	subi	r24, 0xFF	; 255
    473e:	88 8b       	std	Y+16, r24	; 0x10
    4740:	6d c0       	rjmp	.+218    	; 0x481c <AnalyzeData+0x2e6>

		}
		else if (((IsOperation(Digit[index]))||(Digit[index]== '=')))
    4742:	8f 85       	ldd	r24, Y+15	; 0x0f
    4744:	88 2f       	mov	r24, r24
    4746:	90 e0       	ldi	r25, 0x00	; 0
    4748:	fc 01       	movw	r30, r24
    474a:	ef 54       	subi	r30, 0x4F	; 79
    474c:	fe 4f       	sbci	r31, 0xFE	; 254
    474e:	80 81       	ld	r24, Z
    4750:	8a 32       	cpi	r24, 0x2A	; 42
    4752:	29 f1       	breq	.+74     	; 0x479e <AnalyzeData+0x268>
    4754:	8f 85       	ldd	r24, Y+15	; 0x0f
    4756:	88 2f       	mov	r24, r24
    4758:	90 e0       	ldi	r25, 0x00	; 0
    475a:	fc 01       	movw	r30, r24
    475c:	ef 54       	subi	r30, 0x4F	; 79
    475e:	fe 4f       	sbci	r31, 0xFE	; 254
    4760:	80 81       	ld	r24, Z
    4762:	8b 32       	cpi	r24, 0x2B	; 43
    4764:	e1 f0       	breq	.+56     	; 0x479e <AnalyzeData+0x268>
    4766:	8f 85       	ldd	r24, Y+15	; 0x0f
    4768:	88 2f       	mov	r24, r24
    476a:	90 e0       	ldi	r25, 0x00	; 0
    476c:	fc 01       	movw	r30, r24
    476e:	ef 54       	subi	r30, 0x4F	; 79
    4770:	fe 4f       	sbci	r31, 0xFE	; 254
    4772:	80 81       	ld	r24, Z
    4774:	8d 32       	cpi	r24, 0x2D	; 45
    4776:	99 f0       	breq	.+38     	; 0x479e <AnalyzeData+0x268>
    4778:	8f 85       	ldd	r24, Y+15	; 0x0f
    477a:	88 2f       	mov	r24, r24
    477c:	90 e0       	ldi	r25, 0x00	; 0
    477e:	fc 01       	movw	r30, r24
    4780:	ef 54       	subi	r30, 0x4F	; 79
    4782:	fe 4f       	sbci	r31, 0xFE	; 254
    4784:	80 81       	ld	r24, Z
    4786:	8f 32       	cpi	r24, 0x2F	; 47
    4788:	51 f0       	breq	.+20     	; 0x479e <AnalyzeData+0x268>
    478a:	8f 85       	ldd	r24, Y+15	; 0x0f
    478c:	88 2f       	mov	r24, r24
    478e:	90 e0       	ldi	r25, 0x00	; 0
    4790:	fc 01       	movw	r30, r24
    4792:	ef 54       	subi	r30, 0x4F	; 79
    4794:	fe 4f       	sbci	r31, 0xFE	; 254
    4796:	80 81       	ld	r24, Z
    4798:	8d 33       	cpi	r24, 0x3D	; 61
    479a:	09 f0       	breq	.+2      	; 0x479e <AnalyzeData+0x268>
    479c:	3f c0       	rjmp	.+126    	; 0x481c <AnalyzeData+0x2e6>
		{
			Operations[OperationsCounter]=Digit[index];
    479e:	80 91 ad 01 	lds	r24, 0x01AD
    47a2:	28 2f       	mov	r18, r24
    47a4:	30 e0       	ldi	r19, 0x00	; 0
    47a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    47a8:	88 2f       	mov	r24, r24
    47aa:	90 e0       	ldi	r25, 0x00	; 0
    47ac:	fc 01       	movw	r30, r24
    47ae:	ef 54       	subi	r30, 0x4F	; 79
    47b0:	fe 4f       	sbci	r31, 0xFE	; 254
    47b2:	80 81       	ld	r24, Z
    47b4:	f9 01       	movw	r30, r18
    47b6:	ef 5d       	subi	r30, 0xDF	; 223
    47b8:	fd 4f       	sbci	r31, 0xFD	; 253
    47ba:	80 83       	st	Z, r24
			OperationsCounter++;
    47bc:	80 91 ad 01 	lds	r24, 0x01AD
    47c0:	8f 5f       	subi	r24, 0xFF	; 255
    47c2:	80 93 ad 01 	sts	0x01AD, r24
			Operands[OperandsCounter]= ConvertToInt(TempArr)/* Sign*/;
    47c6:	80 91 ac 01 	lds	r24, 0x01AC
    47ca:	08 2f       	mov	r16, r24
    47cc:	10 e0       	ldi	r17, 0x00	; 0
    47ce:	ce 01       	movw	r24, r28
    47d0:	41 96       	adiw	r24, 0x11	; 17
    47d2:	0e 94 e7 21 	call	0x43ce	; 0x43ce <ConvertToInt>
    47d6:	dc 01       	movw	r26, r24
    47d8:	cb 01       	movw	r24, r22
    47da:	9c 01       	movw	r18, r24
    47dc:	ad 01       	movw	r20, r26
    47de:	60 e0       	ldi	r22, 0x00	; 0
    47e0:	70 e0       	ldi	r23, 0x00	; 0
    47e2:	80 e0       	ldi	r24, 0x00	; 0
    47e4:	90 e0       	ldi	r25, 0x00	; 0
    47e6:	f8 01       	movw	r30, r16
    47e8:	ee 0f       	add	r30, r30
    47ea:	ff 1f       	adc	r31, r31
    47ec:	ee 0f       	add	r30, r30
    47ee:	ff 1f       	adc	r31, r31
    47f0:	ee 0f       	add	r30, r30
    47f2:	ff 1f       	adc	r31, r31
    47f4:	ef 53       	subi	r30, 0x3F	; 63
    47f6:	fe 4f       	sbci	r31, 0xFE	; 254
    47f8:	20 83       	st	Z, r18
    47fa:	31 83       	std	Z+1, r19	; 0x01
    47fc:	42 83       	std	Z+2, r20	; 0x02
    47fe:	53 83       	std	Z+3, r21	; 0x03
    4800:	64 83       	std	Z+4, r22	; 0x04
    4802:	75 83       	std	Z+5, r23	; 0x05
    4804:	86 83       	std	Z+6, r24	; 0x06
    4806:	97 83       	std	Z+7, r25	; 0x07
			OperandsCounter++;
    4808:	80 91 ac 01 	lds	r24, 0x01AC
    480c:	8f 5f       	subi	r24, 0xFF	; 255
    480e:	80 93 ac 01 	sts	0x01AC, r24
			InitArray(TempArr);
    4812:	ce 01       	movw	r24, r28
    4814:	41 96       	adiw	r24, 0x11	; 17
    4816:	0e 94 74 22 	call	0x44e8	; 0x44e8 <InitArray>
			TempIndex=0;
    481a:	18 8a       	std	Y+16, r1	; 0x10
		}
		index++;
    481c:	8f 85       	ldd	r24, Y+15	; 0x0f
    481e:	8f 5f       	subi	r24, 0xFF	; 255
    4820:	8f 87       	std	Y+15, r24	; 0x0f
		DigitCounter--;
    4822:	80 91 ae 01 	lds	r24, 0x01AE
    4826:	81 50       	subi	r24, 0x01	; 1
    4828:	80 93 ae 01 	sts	0x01AE, r24
		LCD_voidWriteString("Syntax error");
		_delay_ms(100);
		return Reset;
	}

	while(DigitCounter != 0)
    482c:	80 91 ae 01 	lds	r24, 0x01AE
    4830:	88 23       	and	r24, r24
    4832:	09 f0       	breq	.+2      	; 0x4836 <AnalyzeData+0x300>
    4834:	2f cf       	rjmp	.-418    	; 0x4694 <AnalyzeData+0x15e>
			TempIndex=0;
		}
		index++;
		DigitCounter--;
	}
	Operations[OperationsCounter]='\0';
    4836:	80 91 ad 01 	lds	r24, 0x01AD
    483a:	88 2f       	mov	r24, r24
    483c:	90 e0       	ldi	r25, 0x00	; 0
    483e:	fc 01       	movw	r30, r24
    4840:	ef 5d       	subi	r30, 0xDF	; 223
    4842:	fd 4f       	sbci	r31, 0xFD	; 253
    4844:	10 82       	st	Z, r1
	Operands[OperandsCounter] ='\0';
    4846:	80 91 ac 01 	lds	r24, 0x01AC
    484a:	88 2f       	mov	r24, r24
    484c:	90 e0       	ldi	r25, 0x00	; 0
    484e:	88 0f       	add	r24, r24
    4850:	99 1f       	adc	r25, r25
    4852:	88 0f       	add	r24, r24
    4854:	99 1f       	adc	r25, r25
    4856:	88 0f       	add	r24, r24
    4858:	99 1f       	adc	r25, r25
    485a:	fc 01       	movw	r30, r24
    485c:	ef 53       	subi	r30, 0x3F	; 63
    485e:	fe 4f       	sbci	r31, 0xFE	; 254
    4860:	10 82       	st	Z, r1
    4862:	11 82       	std	Z+1, r1	; 0x01
    4864:	12 82       	std	Z+2, r1	; 0x02
    4866:	13 82       	std	Z+3, r1	; 0x03
    4868:	14 82       	std	Z+4, r1	; 0x04
    486a:	15 82       	std	Z+5, r1	; 0x05
    486c:	16 82       	std	Z+6, r1	; 0x06
    486e:	17 82       	std	Z+7, r1	; 0x07
	return CalculatePoint;
    4870:	a3 e0       	ldi	r26, 0x03	; 3
    4872:	a9 a3       	std	Y+33, r26	; 0x21
    4874:	89 a1       	ldd	r24, Y+33	; 0x21
}
    4876:	a1 96       	adiw	r28, 0x21	; 33
    4878:	0f b6       	in	r0, 0x3f	; 63
    487a:	f8 94       	cli
    487c:	de bf       	out	0x3e, r29	; 62
    487e:	0f be       	out	0x3f, r0	; 63
    4880:	cd bf       	out	0x3d, r28	; 61
    4882:	cf 91       	pop	r28
    4884:	df 91       	pop	r29
    4886:	1f 91       	pop	r17
    4888:	0f 91       	pop	r16
    488a:	08 95       	ret

0000488c <shift_s64array_left>:


void shift_s64array_left(uint64* array ,uint8 start_index){
    488c:	df 93       	push	r29
    488e:	cf 93       	push	r28
    4890:	00 d0       	rcall	.+0      	; 0x4892 <shift_s64array_left+0x6>
    4892:	00 d0       	rcall	.+0      	; 0x4894 <shift_s64array_left+0x8>
    4894:	cd b7       	in	r28, 0x3d	; 61
    4896:	de b7       	in	r29, 0x3e	; 62
    4898:	9b 83       	std	Y+3, r25	; 0x03
    489a:	8a 83       	std	Y+2, r24	; 0x02
    489c:	6c 83       	std	Y+4, r22	; 0x04


	for(uint8 i = start_index;1; i++) {
    489e:	8c 81       	ldd	r24, Y+4	; 0x04
    48a0:	89 83       	std	Y+1, r24	; 0x01

		array[i]=array[i+1];
    48a2:	89 81       	ldd	r24, Y+1	; 0x01
    48a4:	88 2f       	mov	r24, r24
    48a6:	90 e0       	ldi	r25, 0x00	; 0
    48a8:	9c 01       	movw	r18, r24
    48aa:	22 0f       	add	r18, r18
    48ac:	33 1f       	adc	r19, r19
    48ae:	22 0f       	add	r18, r18
    48b0:	33 1f       	adc	r19, r19
    48b2:	22 0f       	add	r18, r18
    48b4:	33 1f       	adc	r19, r19
    48b6:	8a 81       	ldd	r24, Y+2	; 0x02
    48b8:	9b 81       	ldd	r25, Y+3	; 0x03
    48ba:	dc 01       	movw	r26, r24
    48bc:	a2 0f       	add	r26, r18
    48be:	b3 1f       	adc	r27, r19
    48c0:	89 81       	ldd	r24, Y+1	; 0x01
    48c2:	88 2f       	mov	r24, r24
    48c4:	90 e0       	ldi	r25, 0x00	; 0
    48c6:	01 96       	adiw	r24, 0x01	; 1
    48c8:	9c 01       	movw	r18, r24
    48ca:	22 0f       	add	r18, r18
    48cc:	33 1f       	adc	r19, r19
    48ce:	22 0f       	add	r18, r18
    48d0:	33 1f       	adc	r19, r19
    48d2:	22 0f       	add	r18, r18
    48d4:	33 1f       	adc	r19, r19
    48d6:	8a 81       	ldd	r24, Y+2	; 0x02
    48d8:	9b 81       	ldd	r25, Y+3	; 0x03
    48da:	fc 01       	movw	r30, r24
    48dc:	e2 0f       	add	r30, r18
    48de:	f3 1f       	adc	r31, r19
    48e0:	20 81       	ld	r18, Z
    48e2:	31 81       	ldd	r19, Z+1	; 0x01
    48e4:	42 81       	ldd	r20, Z+2	; 0x02
    48e6:	53 81       	ldd	r21, Z+3	; 0x03
    48e8:	64 81       	ldd	r22, Z+4	; 0x04
    48ea:	75 81       	ldd	r23, Z+5	; 0x05
    48ec:	86 81       	ldd	r24, Z+6	; 0x06
    48ee:	97 81       	ldd	r25, Z+7	; 0x07
    48f0:	2c 93       	st	X, r18
    48f2:	11 96       	adiw	r26, 0x01	; 1
    48f4:	3c 93       	st	X, r19
    48f6:	11 97       	sbiw	r26, 0x01	; 1
    48f8:	12 96       	adiw	r26, 0x02	; 2
    48fa:	4c 93       	st	X, r20
    48fc:	12 97       	sbiw	r26, 0x02	; 2
    48fe:	13 96       	adiw	r26, 0x03	; 3
    4900:	5c 93       	st	X, r21
    4902:	13 97       	sbiw	r26, 0x03	; 3
    4904:	14 96       	adiw	r26, 0x04	; 4
    4906:	6c 93       	st	X, r22
    4908:	14 97       	sbiw	r26, 0x04	; 4
    490a:	15 96       	adiw	r26, 0x05	; 5
    490c:	7c 93       	st	X, r23
    490e:	15 97       	sbiw	r26, 0x05	; 5
    4910:	16 96       	adiw	r26, 0x06	; 6
    4912:	8c 93       	st	X, r24
    4914:	16 97       	sbiw	r26, 0x06	; 6
    4916:	17 96       	adiw	r26, 0x07	; 7
    4918:	9c 93       	st	X, r25
    491a:	17 97       	sbiw	r26, 0x07	; 7
		if(array[i] == '\0'){
    491c:	89 81       	ldd	r24, Y+1	; 0x01
    491e:	88 2f       	mov	r24, r24
    4920:	90 e0       	ldi	r25, 0x00	; 0
    4922:	9c 01       	movw	r18, r24
    4924:	22 0f       	add	r18, r18
    4926:	33 1f       	adc	r19, r19
    4928:	22 0f       	add	r18, r18
    492a:	33 1f       	adc	r19, r19
    492c:	22 0f       	add	r18, r18
    492e:	33 1f       	adc	r19, r19
    4930:	8a 81       	ldd	r24, Y+2	; 0x02
    4932:	9b 81       	ldd	r25, Y+3	; 0x03
    4934:	fc 01       	movw	r30, r24
    4936:	e2 0f       	add	r30, r18
    4938:	f3 1f       	adc	r31, r19
    493a:	20 81       	ld	r18, Z
    493c:	31 81       	ldd	r19, Z+1	; 0x01
    493e:	42 81       	ldd	r20, Z+2	; 0x02
    4940:	53 81       	ldd	r21, Z+3	; 0x03
    4942:	64 81       	ldd	r22, Z+4	; 0x04
    4944:	75 81       	ldd	r23, Z+5	; 0x05
    4946:	86 81       	ldd	r24, Z+6	; 0x06
    4948:	97 81       	ldd	r25, Z+7	; 0x07
    494a:	e2 2f       	mov	r30, r18
    494c:	e3 2b       	or	r30, r19
    494e:	e4 2b       	or	r30, r20
    4950:	e5 2b       	or	r30, r21
    4952:	e6 2b       	or	r30, r22
    4954:	e7 2b       	or	r30, r23
    4956:	e8 2b       	or	r30, r24
    4958:	e9 2b       	or	r30, r25
    495a:	ee 23       	and	r30, r30
    495c:	21 f0       	breq	.+8      	; 0x4966 <shift_s64array_left+0xda>


void shift_s64array_left(uint64* array ,uint8 start_index){


	for(uint8 i = start_index;1; i++) {
    495e:	89 81       	ldd	r24, Y+1	; 0x01
    4960:	8f 5f       	subi	r24, 0xFF	; 255
    4962:	89 83       	std	Y+1, r24	; 0x01
    4964:	9e cf       	rjmp	.-196    	; 0x48a2 <shift_s64array_left+0x16>
		array[i]=array[i+1];
		if(array[i] == '\0'){
			break;
		}
	}
}
    4966:	0f 90       	pop	r0
    4968:	0f 90       	pop	r0
    496a:	0f 90       	pop	r0
    496c:	0f 90       	pop	r0
    496e:	cf 91       	pop	r28
    4970:	df 91       	pop	r29
    4972:	08 95       	ret

00004974 <shift_uint8array_left>:

void shift_uint8array_left(uint8 array[] ,uint8 start_index){
    4974:	df 93       	push	r29
    4976:	cf 93       	push	r28
    4978:	00 d0       	rcall	.+0      	; 0x497a <shift_uint8array_left+0x6>
    497a:	00 d0       	rcall	.+0      	; 0x497c <shift_uint8array_left+0x8>
    497c:	cd b7       	in	r28, 0x3d	; 61
    497e:	de b7       	in	r29, 0x3e	; 62
    4980:	9b 83       	std	Y+3, r25	; 0x03
    4982:	8a 83       	std	Y+2, r24	; 0x02
    4984:	6c 83       	std	Y+4, r22	; 0x04


	for(uint8 i = start_index;1; i++) {
    4986:	8c 81       	ldd	r24, Y+4	; 0x04
    4988:	89 83       	std	Y+1, r24	; 0x01

		array[i]=array[i+1];
    498a:	89 81       	ldd	r24, Y+1	; 0x01
    498c:	28 2f       	mov	r18, r24
    498e:	30 e0       	ldi	r19, 0x00	; 0
    4990:	8a 81       	ldd	r24, Y+2	; 0x02
    4992:	9b 81       	ldd	r25, Y+3	; 0x03
    4994:	dc 01       	movw	r26, r24
    4996:	a2 0f       	add	r26, r18
    4998:	b3 1f       	adc	r27, r19
    499a:	89 81       	ldd	r24, Y+1	; 0x01
    499c:	88 2f       	mov	r24, r24
    499e:	90 e0       	ldi	r25, 0x00	; 0
    49a0:	9c 01       	movw	r18, r24
    49a2:	2f 5f       	subi	r18, 0xFF	; 255
    49a4:	3f 4f       	sbci	r19, 0xFF	; 255
    49a6:	8a 81       	ldd	r24, Y+2	; 0x02
    49a8:	9b 81       	ldd	r25, Y+3	; 0x03
    49aa:	fc 01       	movw	r30, r24
    49ac:	e2 0f       	add	r30, r18
    49ae:	f3 1f       	adc	r31, r19
    49b0:	80 81       	ld	r24, Z
    49b2:	8c 93       	st	X, r24
		if(array[i] == '\0'){
    49b4:	89 81       	ldd	r24, Y+1	; 0x01
    49b6:	28 2f       	mov	r18, r24
    49b8:	30 e0       	ldi	r19, 0x00	; 0
    49ba:	8a 81       	ldd	r24, Y+2	; 0x02
    49bc:	9b 81       	ldd	r25, Y+3	; 0x03
    49be:	fc 01       	movw	r30, r24
    49c0:	e2 0f       	add	r30, r18
    49c2:	f3 1f       	adc	r31, r19
    49c4:	80 81       	ld	r24, Z
    49c6:	88 23       	and	r24, r24
    49c8:	21 f0       	breq	.+8      	; 0x49d2 <shift_uint8array_left+0x5e>
}

void shift_uint8array_left(uint8 array[] ,uint8 start_index){


	for(uint8 i = start_index;1; i++) {
    49ca:	89 81       	ldd	r24, Y+1	; 0x01
    49cc:	8f 5f       	subi	r24, 0xFF	; 255
    49ce:	89 83       	std	Y+1, r24	; 0x01
    49d0:	dc cf       	rjmp	.-72     	; 0x498a <shift_uint8array_left+0x16>
		array[i]=array[i+1];
		if(array[i] == '\0'){
			break;
		}
	}
}
    49d2:	0f 90       	pop	r0
    49d4:	0f 90       	pop	r0
    49d6:	0f 90       	pop	r0
    49d8:	0f 90       	pop	r0
    49da:	cf 91       	pop	r28
    49dc:	df 91       	pop	r29
    49de:	08 95       	ret

000049e0 <SubCalculate>:

sint64 SubCalculate(sint64 operand1,sint64 operand2,uint8 operation)
{
    49e0:	8f 92       	push	r8
    49e2:	af 92       	push	r10
    49e4:	bf 92       	push	r11
    49e6:	cf 92       	push	r12
    49e8:	df 92       	push	r13
    49ea:	ef 92       	push	r14
    49ec:	ff 92       	push	r15
    49ee:	0f 93       	push	r16
    49f0:	1f 93       	push	r17
    49f2:	df 93       	push	r29
    49f4:	cf 93       	push	r28
    49f6:	cd b7       	in	r28, 0x3d	; 61
    49f8:	de b7       	in	r29, 0x3e	; 62
    49fa:	c9 57       	subi	r28, 0x79	; 121
    49fc:	d0 40       	sbci	r29, 0x00	; 0
    49fe:	0f b6       	in	r0, 0x3f	; 63
    4a00:	f8 94       	cli
    4a02:	de bf       	out	0x3e, r29	; 62
    4a04:	0f be       	out	0x3f, r0	; 63
    4a06:	cd bf       	out	0x3d, r28	; 61
    4a08:	29 87       	std	Y+9, r18	; 0x09
    4a0a:	3a 87       	std	Y+10, r19	; 0x0a
    4a0c:	4b 87       	std	Y+11, r20	; 0x0b
    4a0e:	5c 87       	std	Y+12, r21	; 0x0c
    4a10:	6d 87       	std	Y+13, r22	; 0x0d
    4a12:	7e 87       	std	Y+14, r23	; 0x0e
    4a14:	8f 87       	std	Y+15, r24	; 0x0f
    4a16:	98 8b       	std	Y+16, r25	; 0x10
    4a18:	a9 8a       	std	Y+17, r10	; 0x11
    4a1a:	ba 8a       	std	Y+18, r11	; 0x12
    4a1c:	cb 8a       	std	Y+19, r12	; 0x13
    4a1e:	dc 8a       	std	Y+20, r13	; 0x14
    4a20:	ed 8a       	std	Y+21, r14	; 0x15
    4a22:	fe 8a       	std	Y+22, r15	; 0x16
    4a24:	0f 8b       	std	Y+23, r16	; 0x17
    4a26:	18 8f       	std	Y+24, r17	; 0x18
    4a28:	89 8e       	std	Y+25, r8	; 0x19
	sint64 return_value = 0;
    4a2a:	19 82       	std	Y+1, r1	; 0x01
    4a2c:	1a 82       	std	Y+2, r1	; 0x02
    4a2e:	1b 82       	std	Y+3, r1	; 0x03
    4a30:	1c 82       	std	Y+4, r1	; 0x04
    4a32:	1d 82       	std	Y+5, r1	; 0x05
    4a34:	1e 82       	std	Y+6, r1	; 0x06
    4a36:	1f 82       	std	Y+7, r1	; 0x07
    4a38:	18 86       	std	Y+8, r1	; 0x08
	if (operation != '=')
    4a3a:	89 8d       	ldd	r24, Y+25	; 0x19
    4a3c:	8d 33       	cpi	r24, 0x3D	; 61
    4a3e:	09 f4       	brne	.+2      	; 0x4a42 <SubCalculate+0x62>
    4a40:	ed c3       	rjmp	.+2010   	; 0x521c <SubCalculate+0x83c>
	{
		switch(operation)
    4a42:	89 8d       	ldd	r24, Y+25	; 0x19
    4a44:	28 2f       	mov	r18, r24
    4a46:	30 e0       	ldi	r19, 0x00	; 0
    4a48:	3b a3       	std	Y+35, r19	; 0x23
    4a4a:	2a a3       	std	Y+34, r18	; 0x22
    4a4c:	8a a1       	ldd	r24, Y+34	; 0x22
    4a4e:	9b a1       	ldd	r25, Y+35	; 0x23
    4a50:	8b 32       	cpi	r24, 0x2B	; 43
    4a52:	91 05       	cpc	r25, r1
    4a54:	c9 f0       	breq	.+50     	; 0x4a88 <SubCalculate+0xa8>
    4a56:	2a a1       	ldd	r18, Y+34	; 0x22
    4a58:	3b a1       	ldd	r19, Y+35	; 0x23
    4a5a:	2c 32       	cpi	r18, 0x2C	; 44
    4a5c:	31 05       	cpc	r19, r1
    4a5e:	3c f4       	brge	.+14     	; 0x4a6e <SubCalculate+0x8e>
    4a60:	8a a1       	ldd	r24, Y+34	; 0x22
    4a62:	9b a1       	ldd	r25, Y+35	; 0x23
    4a64:	8a 32       	cpi	r24, 0x2A	; 42
    4a66:	91 05       	cpc	r25, r1
    4a68:	09 f4       	brne	.+2      	; 0x4a6c <SubCalculate+0x8c>
    4a6a:	82 c3       	rjmp	.+1796   	; 0x5170 <SubCalculate+0x790>
    4a6c:	c6 c3       	rjmp	.+1932   	; 0x51fa <SubCalculate+0x81a>
    4a6e:	2a a1       	ldd	r18, Y+34	; 0x22
    4a70:	3b a1       	ldd	r19, Y+35	; 0x23
    4a72:	2d 32       	cpi	r18, 0x2D	; 45
    4a74:	31 05       	cpc	r19, r1
    4a76:	09 f4       	brne	.+2      	; 0x4a7a <SubCalculate+0x9a>
    4a78:	61 c1       	rjmp	.+706    	; 0x4d3c <SubCalculate+0x35c>
    4a7a:	8a a1       	ldd	r24, Y+34	; 0x22
    4a7c:	9b a1       	ldd	r25, Y+35	; 0x23
    4a7e:	8f 32       	cpi	r24, 0x2F	; 47
    4a80:	91 05       	cpc	r25, r1
    4a82:	09 f4       	brne	.+2      	; 0x4a86 <SubCalculate+0xa6>
    4a84:	98 c3       	rjmp	.+1840   	; 0x51b6 <SubCalculate+0x7d6>
    4a86:	b9 c3       	rjmp	.+1906   	; 0x51fa <SubCalculate+0x81a>
		{
			case '+' :
			return_value = operand1+operand2;
    4a88:	99 85       	ldd	r25, Y+9	; 0x09
    4a8a:	9c a3       	std	Y+36, r25	; 0x24
    4a8c:	2a 85       	ldd	r18, Y+10	; 0x0a
    4a8e:	2d a3       	std	Y+37, r18	; 0x25
    4a90:	3b 85       	ldd	r19, Y+11	; 0x0b
    4a92:	3e a3       	std	Y+38, r19	; 0x26
    4a94:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a96:	8f a3       	std	Y+39, r24	; 0x27
    4a98:	9d 85       	ldd	r25, Y+13	; 0x0d
    4a9a:	98 a7       	std	Y+40, r25	; 0x28
    4a9c:	2e 85       	ldd	r18, Y+14	; 0x0e
    4a9e:	29 a7       	std	Y+41, r18	; 0x29
    4aa0:	3f 85       	ldd	r19, Y+15	; 0x0f
    4aa2:	3a a7       	std	Y+42, r19	; 0x2a
    4aa4:	88 89       	ldd	r24, Y+16	; 0x10
    4aa6:	8b a7       	std	Y+43, r24	; 0x2b
    4aa8:	99 89       	ldd	r25, Y+17	; 0x11
    4aaa:	9c a7       	std	Y+44, r25	; 0x2c
    4aac:	2a 89       	ldd	r18, Y+18	; 0x12
    4aae:	2d a7       	std	Y+45, r18	; 0x2d
    4ab0:	3b 89       	ldd	r19, Y+19	; 0x13
    4ab2:	3e a7       	std	Y+46, r19	; 0x2e
    4ab4:	8c 89       	ldd	r24, Y+20	; 0x14
    4ab6:	8f a7       	std	Y+47, r24	; 0x2f
    4ab8:	9d 89       	ldd	r25, Y+21	; 0x15
    4aba:	98 ab       	std	Y+48, r25	; 0x30
    4abc:	2e 89       	ldd	r18, Y+22	; 0x16
    4abe:	29 ab       	std	Y+49, r18	; 0x31
    4ac0:	3f 89       	ldd	r19, Y+23	; 0x17
    4ac2:	3a ab       	std	Y+50, r19	; 0x32
    4ac4:	88 8d       	ldd	r24, Y+24	; 0x18
    4ac6:	8b ab       	std	Y+51, r24	; 0x33
    4ac8:	9c a1       	ldd	r25, Y+36	; 0x24
    4aca:	2c a5       	ldd	r18, Y+44	; 0x2c
    4acc:	92 0f       	add	r25, r18
    4ace:	9c ab       	std	Y+52, r25	; 0x34
    4ad0:	31 e0       	ldi	r19, 0x01	; 1
    4ad2:	3c af       	std	Y+60, r19	; 0x3c
    4ad4:	8c a9       	ldd	r24, Y+52	; 0x34
    4ad6:	9c a1       	ldd	r25, Y+36	; 0x24
    4ad8:	89 17       	cp	r24, r25
    4ada:	08 f0       	brcs	.+2      	; 0x4ade <SubCalculate+0xfe>
    4adc:	1c ae       	std	Y+60, r1	; 0x3c
    4ade:	2d a1       	ldd	r18, Y+37	; 0x25
    4ae0:	3d a5       	ldd	r19, Y+45	; 0x2d
    4ae2:	23 0f       	add	r18, r19
    4ae4:	2d ab       	std	Y+53, r18	; 0x35
    4ae6:	81 e0       	ldi	r24, 0x01	; 1
    4ae8:	8d af       	std	Y+61, r24	; 0x3d
    4aea:	9d a9       	ldd	r25, Y+53	; 0x35
    4aec:	2d a1       	ldd	r18, Y+37	; 0x25
    4aee:	92 17       	cp	r25, r18
    4af0:	08 f0       	brcs	.+2      	; 0x4af4 <SubCalculate+0x114>
    4af2:	1d ae       	std	Y+61, r1	; 0x3d
    4af4:	3c ad       	ldd	r19, Y+60	; 0x3c
    4af6:	8d a9       	ldd	r24, Y+53	; 0x35
    4af8:	38 0f       	add	r19, r24
    4afa:	3e af       	std	Y+62, r19	; 0x3e
    4afc:	91 e0       	ldi	r25, 0x01	; 1
    4afe:	9f af       	std	Y+63, r25	; 0x3f
    4b00:	2e ad       	ldd	r18, Y+62	; 0x3e
    4b02:	3d a9       	ldd	r19, Y+53	; 0x35
    4b04:	23 17       	cp	r18, r19
    4b06:	08 f0       	brcs	.+2      	; 0x4b0a <SubCalculate+0x12a>
    4b08:	1f ae       	std	Y+63, r1	; 0x3f
    4b0a:	8d ad       	ldd	r24, Y+61	; 0x3d
    4b0c:	9f ad       	ldd	r25, Y+63	; 0x3f
    4b0e:	89 2b       	or	r24, r25
    4b10:	8d af       	std	Y+61, r24	; 0x3d
    4b12:	2e ad       	ldd	r18, Y+62	; 0x3e
    4b14:	2d ab       	std	Y+53, r18	; 0x35
    4b16:	3e a1       	ldd	r19, Y+38	; 0x26
    4b18:	8e a5       	ldd	r24, Y+46	; 0x2e
    4b1a:	38 0f       	add	r19, r24
    4b1c:	3e ab       	std	Y+54, r19	; 0x36
    4b1e:	91 e0       	ldi	r25, 0x01	; 1
    4b20:	21 96       	adiw	r28, 0x01	; 1
    4b22:	9f af       	std	Y+63, r25	; 0x3f
    4b24:	21 97       	sbiw	r28, 0x01	; 1
    4b26:	2e a9       	ldd	r18, Y+54	; 0x36
    4b28:	3e a1       	ldd	r19, Y+38	; 0x26
    4b2a:	23 17       	cp	r18, r19
    4b2c:	18 f0       	brcs	.+6      	; 0x4b34 <SubCalculate+0x154>
    4b2e:	21 96       	adiw	r28, 0x01	; 1
    4b30:	1f ae       	std	Y+63, r1	; 0x3f
    4b32:	21 97       	sbiw	r28, 0x01	; 1
    4b34:	8d ad       	ldd	r24, Y+61	; 0x3d
    4b36:	9e a9       	ldd	r25, Y+54	; 0x36
    4b38:	89 0f       	add	r24, r25
    4b3a:	22 96       	adiw	r28, 0x02	; 2
    4b3c:	8f af       	std	Y+63, r24	; 0x3f
    4b3e:	22 97       	sbiw	r28, 0x02	; 2
    4b40:	21 e0       	ldi	r18, 0x01	; 1
    4b42:	23 96       	adiw	r28, 0x03	; 3
    4b44:	2f af       	std	Y+63, r18	; 0x3f
    4b46:	23 97       	sbiw	r28, 0x03	; 3
    4b48:	22 96       	adiw	r28, 0x02	; 2
    4b4a:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b4c:	22 97       	sbiw	r28, 0x02	; 2
    4b4e:	8e a9       	ldd	r24, Y+54	; 0x36
    4b50:	38 17       	cp	r19, r24
    4b52:	18 f0       	brcs	.+6      	; 0x4b5a <SubCalculate+0x17a>
    4b54:	23 96       	adiw	r28, 0x03	; 3
    4b56:	1f ae       	std	Y+63, r1	; 0x3f
    4b58:	23 97       	sbiw	r28, 0x03	; 3
    4b5a:	21 96       	adiw	r28, 0x01	; 1
    4b5c:	9f ad       	ldd	r25, Y+63	; 0x3f
    4b5e:	21 97       	sbiw	r28, 0x01	; 1
    4b60:	23 96       	adiw	r28, 0x03	; 3
    4b62:	2f ad       	ldd	r18, Y+63	; 0x3f
    4b64:	23 97       	sbiw	r28, 0x03	; 3
    4b66:	92 2b       	or	r25, r18
    4b68:	21 96       	adiw	r28, 0x01	; 1
    4b6a:	9f af       	std	Y+63, r25	; 0x3f
    4b6c:	21 97       	sbiw	r28, 0x01	; 1
    4b6e:	22 96       	adiw	r28, 0x02	; 2
    4b70:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b72:	22 97       	sbiw	r28, 0x02	; 2
    4b74:	3e ab       	std	Y+54, r19	; 0x36
    4b76:	8f a1       	ldd	r24, Y+39	; 0x27
    4b78:	9f a5       	ldd	r25, Y+47	; 0x2f
    4b7a:	89 0f       	add	r24, r25
    4b7c:	8f ab       	std	Y+55, r24	; 0x37
    4b7e:	21 e0       	ldi	r18, 0x01	; 1
    4b80:	24 96       	adiw	r28, 0x04	; 4
    4b82:	2f af       	std	Y+63, r18	; 0x3f
    4b84:	24 97       	sbiw	r28, 0x04	; 4
    4b86:	3f a9       	ldd	r19, Y+55	; 0x37
    4b88:	8f a1       	ldd	r24, Y+39	; 0x27
    4b8a:	38 17       	cp	r19, r24
    4b8c:	18 f0       	brcs	.+6      	; 0x4b94 <SubCalculate+0x1b4>
    4b8e:	24 96       	adiw	r28, 0x04	; 4
    4b90:	1f ae       	std	Y+63, r1	; 0x3f
    4b92:	24 97       	sbiw	r28, 0x04	; 4
    4b94:	21 96       	adiw	r28, 0x01	; 1
    4b96:	9f ad       	ldd	r25, Y+63	; 0x3f
    4b98:	21 97       	sbiw	r28, 0x01	; 1
    4b9a:	2f a9       	ldd	r18, Y+55	; 0x37
    4b9c:	92 0f       	add	r25, r18
    4b9e:	25 96       	adiw	r28, 0x05	; 5
    4ba0:	9f af       	std	Y+63, r25	; 0x3f
    4ba2:	25 97       	sbiw	r28, 0x05	; 5
    4ba4:	31 e0       	ldi	r19, 0x01	; 1
    4ba6:	26 96       	adiw	r28, 0x06	; 6
    4ba8:	3f af       	std	Y+63, r19	; 0x3f
    4baa:	26 97       	sbiw	r28, 0x06	; 6
    4bac:	25 96       	adiw	r28, 0x05	; 5
    4bae:	8f ad       	ldd	r24, Y+63	; 0x3f
    4bb0:	25 97       	sbiw	r28, 0x05	; 5
    4bb2:	9f a9       	ldd	r25, Y+55	; 0x37
    4bb4:	89 17       	cp	r24, r25
    4bb6:	18 f0       	brcs	.+6      	; 0x4bbe <SubCalculate+0x1de>
    4bb8:	26 96       	adiw	r28, 0x06	; 6
    4bba:	1f ae       	std	Y+63, r1	; 0x3f
    4bbc:	26 97       	sbiw	r28, 0x06	; 6
    4bbe:	24 96       	adiw	r28, 0x04	; 4
    4bc0:	2f ad       	ldd	r18, Y+63	; 0x3f
    4bc2:	24 97       	sbiw	r28, 0x04	; 4
    4bc4:	26 96       	adiw	r28, 0x06	; 6
    4bc6:	3f ad       	ldd	r19, Y+63	; 0x3f
    4bc8:	26 97       	sbiw	r28, 0x06	; 6
    4bca:	23 2b       	or	r18, r19
    4bcc:	24 96       	adiw	r28, 0x04	; 4
    4bce:	2f af       	std	Y+63, r18	; 0x3f
    4bd0:	24 97       	sbiw	r28, 0x04	; 4
    4bd2:	25 96       	adiw	r28, 0x05	; 5
    4bd4:	8f ad       	ldd	r24, Y+63	; 0x3f
    4bd6:	25 97       	sbiw	r28, 0x05	; 5
    4bd8:	8f ab       	std	Y+55, r24	; 0x37
    4bda:	98 a5       	ldd	r25, Y+40	; 0x28
    4bdc:	28 a9       	ldd	r18, Y+48	; 0x30
    4bde:	92 0f       	add	r25, r18
    4be0:	98 af       	std	Y+56, r25	; 0x38
    4be2:	31 e0       	ldi	r19, 0x01	; 1
    4be4:	27 96       	adiw	r28, 0x07	; 7
    4be6:	3f af       	std	Y+63, r19	; 0x3f
    4be8:	27 97       	sbiw	r28, 0x07	; 7
    4bea:	88 ad       	ldd	r24, Y+56	; 0x38
    4bec:	98 a5       	ldd	r25, Y+40	; 0x28
    4bee:	89 17       	cp	r24, r25
    4bf0:	18 f0       	brcs	.+6      	; 0x4bf8 <SubCalculate+0x218>
    4bf2:	27 96       	adiw	r28, 0x07	; 7
    4bf4:	1f ae       	std	Y+63, r1	; 0x3f
    4bf6:	27 97       	sbiw	r28, 0x07	; 7
    4bf8:	24 96       	adiw	r28, 0x04	; 4
    4bfa:	2f ad       	ldd	r18, Y+63	; 0x3f
    4bfc:	24 97       	sbiw	r28, 0x04	; 4
    4bfe:	38 ad       	ldd	r19, Y+56	; 0x38
    4c00:	23 0f       	add	r18, r19
    4c02:	28 96       	adiw	r28, 0x08	; 8
    4c04:	2f af       	std	Y+63, r18	; 0x3f
    4c06:	28 97       	sbiw	r28, 0x08	; 8
    4c08:	81 e0       	ldi	r24, 0x01	; 1
    4c0a:	29 96       	adiw	r28, 0x09	; 9
    4c0c:	8f af       	std	Y+63, r24	; 0x3f
    4c0e:	29 97       	sbiw	r28, 0x09	; 9
    4c10:	28 96       	adiw	r28, 0x08	; 8
    4c12:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c14:	28 97       	sbiw	r28, 0x08	; 8
    4c16:	28 ad       	ldd	r18, Y+56	; 0x38
    4c18:	92 17       	cp	r25, r18
    4c1a:	18 f0       	brcs	.+6      	; 0x4c22 <SubCalculate+0x242>
    4c1c:	29 96       	adiw	r28, 0x09	; 9
    4c1e:	1f ae       	std	Y+63, r1	; 0x3f
    4c20:	29 97       	sbiw	r28, 0x09	; 9
    4c22:	27 96       	adiw	r28, 0x07	; 7
    4c24:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c26:	27 97       	sbiw	r28, 0x07	; 7
    4c28:	29 96       	adiw	r28, 0x09	; 9
    4c2a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c2c:	29 97       	sbiw	r28, 0x09	; 9
    4c2e:	38 2b       	or	r19, r24
    4c30:	27 96       	adiw	r28, 0x07	; 7
    4c32:	3f af       	std	Y+63, r19	; 0x3f
    4c34:	27 97       	sbiw	r28, 0x07	; 7
    4c36:	28 96       	adiw	r28, 0x08	; 8
    4c38:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c3a:	28 97       	sbiw	r28, 0x08	; 8
    4c3c:	98 af       	std	Y+56, r25	; 0x38
    4c3e:	29 a5       	ldd	r18, Y+41	; 0x29
    4c40:	39 a9       	ldd	r19, Y+49	; 0x31
    4c42:	23 0f       	add	r18, r19
    4c44:	29 af       	std	Y+57, r18	; 0x39
    4c46:	81 e0       	ldi	r24, 0x01	; 1
    4c48:	2a 96       	adiw	r28, 0x0a	; 10
    4c4a:	8f af       	std	Y+63, r24	; 0x3f
    4c4c:	2a 97       	sbiw	r28, 0x0a	; 10
    4c4e:	99 ad       	ldd	r25, Y+57	; 0x39
    4c50:	29 a5       	ldd	r18, Y+41	; 0x29
    4c52:	92 17       	cp	r25, r18
    4c54:	18 f0       	brcs	.+6      	; 0x4c5c <SubCalculate+0x27c>
    4c56:	2a 96       	adiw	r28, 0x0a	; 10
    4c58:	1f ae       	std	Y+63, r1	; 0x3f
    4c5a:	2a 97       	sbiw	r28, 0x0a	; 10
    4c5c:	27 96       	adiw	r28, 0x07	; 7
    4c5e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c60:	27 97       	sbiw	r28, 0x07	; 7
    4c62:	89 ad       	ldd	r24, Y+57	; 0x39
    4c64:	38 0f       	add	r19, r24
    4c66:	2b 96       	adiw	r28, 0x0b	; 11
    4c68:	3f af       	std	Y+63, r19	; 0x3f
    4c6a:	2b 97       	sbiw	r28, 0x0b	; 11
    4c6c:	91 e0       	ldi	r25, 0x01	; 1
    4c6e:	2c 96       	adiw	r28, 0x0c	; 12
    4c70:	9f af       	std	Y+63, r25	; 0x3f
    4c72:	2c 97       	sbiw	r28, 0x0c	; 12
    4c74:	2b 96       	adiw	r28, 0x0b	; 11
    4c76:	2f ad       	ldd	r18, Y+63	; 0x3f
    4c78:	2b 97       	sbiw	r28, 0x0b	; 11
    4c7a:	39 ad       	ldd	r19, Y+57	; 0x39
    4c7c:	23 17       	cp	r18, r19
    4c7e:	18 f0       	brcs	.+6      	; 0x4c86 <SubCalculate+0x2a6>
    4c80:	2c 96       	adiw	r28, 0x0c	; 12
    4c82:	1f ae       	std	Y+63, r1	; 0x3f
    4c84:	2c 97       	sbiw	r28, 0x0c	; 12
    4c86:	2a 96       	adiw	r28, 0x0a	; 10
    4c88:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c8a:	2a 97       	sbiw	r28, 0x0a	; 10
    4c8c:	2c 96       	adiw	r28, 0x0c	; 12
    4c8e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c90:	2c 97       	sbiw	r28, 0x0c	; 12
    4c92:	89 2b       	or	r24, r25
    4c94:	2a 96       	adiw	r28, 0x0a	; 10
    4c96:	8f af       	std	Y+63, r24	; 0x3f
    4c98:	2a 97       	sbiw	r28, 0x0a	; 10
    4c9a:	2b 96       	adiw	r28, 0x0b	; 11
    4c9c:	2f ad       	ldd	r18, Y+63	; 0x3f
    4c9e:	2b 97       	sbiw	r28, 0x0b	; 11
    4ca0:	29 af       	std	Y+57, r18	; 0x39
    4ca2:	3a a5       	ldd	r19, Y+42	; 0x2a
    4ca4:	8a a9       	ldd	r24, Y+50	; 0x32
    4ca6:	38 0f       	add	r19, r24
    4ca8:	3a af       	std	Y+58, r19	; 0x3a
    4caa:	91 e0       	ldi	r25, 0x01	; 1
    4cac:	2d 96       	adiw	r28, 0x0d	; 13
    4cae:	9f af       	std	Y+63, r25	; 0x3f
    4cb0:	2d 97       	sbiw	r28, 0x0d	; 13
    4cb2:	2a ad       	ldd	r18, Y+58	; 0x3a
    4cb4:	3a a5       	ldd	r19, Y+42	; 0x2a
    4cb6:	23 17       	cp	r18, r19
    4cb8:	18 f0       	brcs	.+6      	; 0x4cc0 <SubCalculate+0x2e0>
    4cba:	2d 96       	adiw	r28, 0x0d	; 13
    4cbc:	1f ae       	std	Y+63, r1	; 0x3f
    4cbe:	2d 97       	sbiw	r28, 0x0d	; 13
    4cc0:	2a 96       	adiw	r28, 0x0a	; 10
    4cc2:	8f ad       	ldd	r24, Y+63	; 0x3f
    4cc4:	2a 97       	sbiw	r28, 0x0a	; 10
    4cc6:	9a ad       	ldd	r25, Y+58	; 0x3a
    4cc8:	89 0f       	add	r24, r25
    4cca:	2e 96       	adiw	r28, 0x0e	; 14
    4ccc:	8f af       	std	Y+63, r24	; 0x3f
    4cce:	2e 97       	sbiw	r28, 0x0e	; 14
    4cd0:	21 e0       	ldi	r18, 0x01	; 1
    4cd2:	2f 96       	adiw	r28, 0x0f	; 15
    4cd4:	2f af       	std	Y+63, r18	; 0x3f
    4cd6:	2f 97       	sbiw	r28, 0x0f	; 15
    4cd8:	2e 96       	adiw	r28, 0x0e	; 14
    4cda:	3f ad       	ldd	r19, Y+63	; 0x3f
    4cdc:	2e 97       	sbiw	r28, 0x0e	; 14
    4cde:	8a ad       	ldd	r24, Y+58	; 0x3a
    4ce0:	38 17       	cp	r19, r24
    4ce2:	18 f0       	brcs	.+6      	; 0x4cea <SubCalculate+0x30a>
    4ce4:	2f 96       	adiw	r28, 0x0f	; 15
    4ce6:	1f ae       	std	Y+63, r1	; 0x3f
    4ce8:	2f 97       	sbiw	r28, 0x0f	; 15
    4cea:	2d 96       	adiw	r28, 0x0d	; 13
    4cec:	9f ad       	ldd	r25, Y+63	; 0x3f
    4cee:	2d 97       	sbiw	r28, 0x0d	; 13
    4cf0:	2f 96       	adiw	r28, 0x0f	; 15
    4cf2:	2f ad       	ldd	r18, Y+63	; 0x3f
    4cf4:	2f 97       	sbiw	r28, 0x0f	; 15
    4cf6:	92 2b       	or	r25, r18
    4cf8:	2d 96       	adiw	r28, 0x0d	; 13
    4cfa:	9f af       	std	Y+63, r25	; 0x3f
    4cfc:	2d 97       	sbiw	r28, 0x0d	; 13
    4cfe:	2e 96       	adiw	r28, 0x0e	; 14
    4d00:	3f ad       	ldd	r19, Y+63	; 0x3f
    4d02:	2e 97       	sbiw	r28, 0x0e	; 14
    4d04:	3a af       	std	Y+58, r19	; 0x3a
    4d06:	8b a5       	ldd	r24, Y+43	; 0x2b
    4d08:	9b a9       	ldd	r25, Y+51	; 0x33
    4d0a:	89 0f       	add	r24, r25
    4d0c:	8b af       	std	Y+59, r24	; 0x3b
    4d0e:	2d 96       	adiw	r28, 0x0d	; 13
    4d10:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d12:	2d 97       	sbiw	r28, 0x0d	; 13
    4d14:	2b ad       	ldd	r18, Y+59	; 0x3b
    4d16:	82 0f       	add	r24, r18
    4d18:	8b af       	std	Y+59, r24	; 0x3b
    4d1a:	3c a9       	ldd	r19, Y+52	; 0x34
    4d1c:	39 83       	std	Y+1, r19	; 0x01
    4d1e:	8d a9       	ldd	r24, Y+53	; 0x35
    4d20:	8a 83       	std	Y+2, r24	; 0x02
    4d22:	9e a9       	ldd	r25, Y+54	; 0x36
    4d24:	9b 83       	std	Y+3, r25	; 0x03
    4d26:	2f a9       	ldd	r18, Y+55	; 0x37
    4d28:	2c 83       	std	Y+4, r18	; 0x04
    4d2a:	38 ad       	ldd	r19, Y+56	; 0x38
    4d2c:	3d 83       	std	Y+5, r19	; 0x05
    4d2e:	89 ad       	ldd	r24, Y+57	; 0x39
    4d30:	8e 83       	std	Y+6, r24	; 0x06
    4d32:	9a ad       	ldd	r25, Y+58	; 0x3a
    4d34:	9f 83       	std	Y+7, r25	; 0x07
    4d36:	2b ad       	ldd	r18, Y+59	; 0x3b
    4d38:	28 87       	std	Y+8, r18	; 0x08
    4d3a:	5f c2       	rjmp	.+1214   	; 0x51fa <SubCalculate+0x81a>
			break;
			case '-' :
			return_value = operand1-operand2;
    4d3c:	39 85       	ldd	r19, Y+9	; 0x09
    4d3e:	60 96       	adiw	r28, 0x10	; 16
    4d40:	3f af       	std	Y+63, r19	; 0x3f
    4d42:	60 97       	sbiw	r28, 0x10	; 16
    4d44:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d46:	61 96       	adiw	r28, 0x11	; 17
    4d48:	8f af       	std	Y+63, r24	; 0x3f
    4d4a:	61 97       	sbiw	r28, 0x11	; 17
    4d4c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d4e:	62 96       	adiw	r28, 0x12	; 18
    4d50:	9f af       	std	Y+63, r25	; 0x3f
    4d52:	62 97       	sbiw	r28, 0x12	; 18
    4d54:	2c 85       	ldd	r18, Y+12	; 0x0c
    4d56:	63 96       	adiw	r28, 0x13	; 19
    4d58:	2f af       	std	Y+63, r18	; 0x3f
    4d5a:	63 97       	sbiw	r28, 0x13	; 19
    4d5c:	3d 85       	ldd	r19, Y+13	; 0x0d
    4d5e:	64 96       	adiw	r28, 0x14	; 20
    4d60:	3f af       	std	Y+63, r19	; 0x3f
    4d62:	64 97       	sbiw	r28, 0x14	; 20
    4d64:	8e 85       	ldd	r24, Y+14	; 0x0e
    4d66:	65 96       	adiw	r28, 0x15	; 21
    4d68:	8f af       	std	Y+63, r24	; 0x3f
    4d6a:	65 97       	sbiw	r28, 0x15	; 21
    4d6c:	9f 85       	ldd	r25, Y+15	; 0x0f
    4d6e:	66 96       	adiw	r28, 0x16	; 22
    4d70:	9f af       	std	Y+63, r25	; 0x3f
    4d72:	66 97       	sbiw	r28, 0x16	; 22
    4d74:	28 89       	ldd	r18, Y+16	; 0x10
    4d76:	67 96       	adiw	r28, 0x17	; 23
    4d78:	2f af       	std	Y+63, r18	; 0x3f
    4d7a:	67 97       	sbiw	r28, 0x17	; 23
    4d7c:	39 89       	ldd	r19, Y+17	; 0x11
    4d7e:	68 96       	adiw	r28, 0x18	; 24
    4d80:	3f af       	std	Y+63, r19	; 0x3f
    4d82:	68 97       	sbiw	r28, 0x18	; 24
    4d84:	8a 89       	ldd	r24, Y+18	; 0x12
    4d86:	69 96       	adiw	r28, 0x19	; 25
    4d88:	8f af       	std	Y+63, r24	; 0x3f
    4d8a:	69 97       	sbiw	r28, 0x19	; 25
    4d8c:	9b 89       	ldd	r25, Y+19	; 0x13
    4d8e:	6a 96       	adiw	r28, 0x1a	; 26
    4d90:	9f af       	std	Y+63, r25	; 0x3f
    4d92:	6a 97       	sbiw	r28, 0x1a	; 26
    4d94:	2c 89       	ldd	r18, Y+20	; 0x14
    4d96:	6b 96       	adiw	r28, 0x1b	; 27
    4d98:	2f af       	std	Y+63, r18	; 0x3f
    4d9a:	6b 97       	sbiw	r28, 0x1b	; 27
    4d9c:	3d 89       	ldd	r19, Y+21	; 0x15
    4d9e:	6c 96       	adiw	r28, 0x1c	; 28
    4da0:	3f af       	std	Y+63, r19	; 0x3f
    4da2:	6c 97       	sbiw	r28, 0x1c	; 28
    4da4:	8e 89       	ldd	r24, Y+22	; 0x16
    4da6:	6d 96       	adiw	r28, 0x1d	; 29
    4da8:	8f af       	std	Y+63, r24	; 0x3f
    4daa:	6d 97       	sbiw	r28, 0x1d	; 29
    4dac:	9f 89       	ldd	r25, Y+23	; 0x17
    4dae:	6e 96       	adiw	r28, 0x1e	; 30
    4db0:	9f af       	std	Y+63, r25	; 0x3f
    4db2:	6e 97       	sbiw	r28, 0x1e	; 30
    4db4:	28 8d       	ldd	r18, Y+24	; 0x18
    4db6:	6f 96       	adiw	r28, 0x1f	; 31
    4db8:	2f af       	std	Y+63, r18	; 0x3f
    4dba:	6f 97       	sbiw	r28, 0x1f	; 31
    4dbc:	60 96       	adiw	r28, 0x10	; 16
    4dbe:	3f ad       	ldd	r19, Y+63	; 0x3f
    4dc0:	60 97       	sbiw	r28, 0x10	; 16
    4dc2:	68 96       	adiw	r28, 0x18	; 24
    4dc4:	8f ad       	ldd	r24, Y+63	; 0x3f
    4dc6:	68 97       	sbiw	r28, 0x18	; 24
    4dc8:	38 1b       	sub	r19, r24
    4dca:	a0 96       	adiw	r28, 0x20	; 32
    4dcc:	3f af       	std	Y+63, r19	; 0x3f
    4dce:	a0 97       	sbiw	r28, 0x20	; 32
    4dd0:	91 e0       	ldi	r25, 0x01	; 1
    4dd2:	a8 96       	adiw	r28, 0x28	; 40
    4dd4:	9f af       	std	Y+63, r25	; 0x3f
    4dd6:	a8 97       	sbiw	r28, 0x28	; 40
    4dd8:	a0 96       	adiw	r28, 0x20	; 32
    4dda:	2f ad       	ldd	r18, Y+63	; 0x3f
    4ddc:	a0 97       	sbiw	r28, 0x20	; 32
    4dde:	60 96       	adiw	r28, 0x10	; 16
    4de0:	3f ad       	ldd	r19, Y+63	; 0x3f
    4de2:	60 97       	sbiw	r28, 0x10	; 16
    4de4:	32 17       	cp	r19, r18
    4de6:	18 f0       	brcs	.+6      	; 0x4dee <SubCalculate+0x40e>
    4de8:	a8 96       	adiw	r28, 0x28	; 40
    4dea:	1f ae       	std	Y+63, r1	; 0x3f
    4dec:	a8 97       	sbiw	r28, 0x28	; 40
    4dee:	61 96       	adiw	r28, 0x11	; 17
    4df0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4df2:	61 97       	sbiw	r28, 0x11	; 17
    4df4:	69 96       	adiw	r28, 0x19	; 25
    4df6:	9f ad       	ldd	r25, Y+63	; 0x3f
    4df8:	69 97       	sbiw	r28, 0x19	; 25
    4dfa:	89 1b       	sub	r24, r25
    4dfc:	a1 96       	adiw	r28, 0x21	; 33
    4dfe:	8f af       	std	Y+63, r24	; 0x3f
    4e00:	a1 97       	sbiw	r28, 0x21	; 33
    4e02:	21 e0       	ldi	r18, 0x01	; 1
    4e04:	a9 96       	adiw	r28, 0x29	; 41
    4e06:	2f af       	std	Y+63, r18	; 0x3f
    4e08:	a9 97       	sbiw	r28, 0x29	; 41
    4e0a:	a1 96       	adiw	r28, 0x21	; 33
    4e0c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4e0e:	a1 97       	sbiw	r28, 0x21	; 33
    4e10:	61 96       	adiw	r28, 0x11	; 17
    4e12:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e14:	61 97       	sbiw	r28, 0x11	; 17
    4e16:	83 17       	cp	r24, r19
    4e18:	18 f0       	brcs	.+6      	; 0x4e20 <SubCalculate+0x440>
    4e1a:	a9 96       	adiw	r28, 0x29	; 41
    4e1c:	1f ae       	std	Y+63, r1	; 0x3f
    4e1e:	a9 97       	sbiw	r28, 0x29	; 41
    4e20:	a1 96       	adiw	r28, 0x21	; 33
    4e22:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e24:	a1 97       	sbiw	r28, 0x21	; 33
    4e26:	a8 96       	adiw	r28, 0x28	; 40
    4e28:	2f ad       	ldd	r18, Y+63	; 0x3f
    4e2a:	a8 97       	sbiw	r28, 0x28	; 40
    4e2c:	92 1b       	sub	r25, r18
    4e2e:	aa 96       	adiw	r28, 0x2a	; 42
    4e30:	9f af       	std	Y+63, r25	; 0x3f
    4e32:	aa 97       	sbiw	r28, 0x2a	; 42
    4e34:	31 e0       	ldi	r19, 0x01	; 1
    4e36:	ab 96       	adiw	r28, 0x2b	; 43
    4e38:	3f af       	std	Y+63, r19	; 0x3f
    4e3a:	ab 97       	sbiw	r28, 0x2b	; 43
    4e3c:	aa 96       	adiw	r28, 0x2a	; 42
    4e3e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e40:	aa 97       	sbiw	r28, 0x2a	; 42
    4e42:	a1 96       	adiw	r28, 0x21	; 33
    4e44:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e46:	a1 97       	sbiw	r28, 0x21	; 33
    4e48:	98 17       	cp	r25, r24
    4e4a:	18 f0       	brcs	.+6      	; 0x4e52 <SubCalculate+0x472>
    4e4c:	ab 96       	adiw	r28, 0x2b	; 43
    4e4e:	1f ae       	std	Y+63, r1	; 0x3f
    4e50:	ab 97       	sbiw	r28, 0x2b	; 43
    4e52:	a9 96       	adiw	r28, 0x29	; 41
    4e54:	2f ad       	ldd	r18, Y+63	; 0x3f
    4e56:	a9 97       	sbiw	r28, 0x29	; 41
    4e58:	ab 96       	adiw	r28, 0x2b	; 43
    4e5a:	3f ad       	ldd	r19, Y+63	; 0x3f
    4e5c:	ab 97       	sbiw	r28, 0x2b	; 43
    4e5e:	23 2b       	or	r18, r19
    4e60:	a9 96       	adiw	r28, 0x29	; 41
    4e62:	2f af       	std	Y+63, r18	; 0x3f
    4e64:	a9 97       	sbiw	r28, 0x29	; 41
    4e66:	aa 96       	adiw	r28, 0x2a	; 42
    4e68:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e6a:	aa 97       	sbiw	r28, 0x2a	; 42
    4e6c:	a1 96       	adiw	r28, 0x21	; 33
    4e6e:	8f af       	std	Y+63, r24	; 0x3f
    4e70:	a1 97       	sbiw	r28, 0x21	; 33
    4e72:	62 96       	adiw	r28, 0x12	; 18
    4e74:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e76:	62 97       	sbiw	r28, 0x12	; 18
    4e78:	6a 96       	adiw	r28, 0x1a	; 26
    4e7a:	2f ad       	ldd	r18, Y+63	; 0x3f
    4e7c:	6a 97       	sbiw	r28, 0x1a	; 26
    4e7e:	92 1b       	sub	r25, r18
    4e80:	a2 96       	adiw	r28, 0x22	; 34
    4e82:	9f af       	std	Y+63, r25	; 0x3f
    4e84:	a2 97       	sbiw	r28, 0x22	; 34
    4e86:	31 e0       	ldi	r19, 0x01	; 1
    4e88:	ac 96       	adiw	r28, 0x2c	; 44
    4e8a:	3f af       	std	Y+63, r19	; 0x3f
    4e8c:	ac 97       	sbiw	r28, 0x2c	; 44
    4e8e:	a2 96       	adiw	r28, 0x22	; 34
    4e90:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e92:	a2 97       	sbiw	r28, 0x22	; 34
    4e94:	62 96       	adiw	r28, 0x12	; 18
    4e96:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e98:	62 97       	sbiw	r28, 0x12	; 18
    4e9a:	98 17       	cp	r25, r24
    4e9c:	18 f0       	brcs	.+6      	; 0x4ea4 <SubCalculate+0x4c4>
    4e9e:	ac 96       	adiw	r28, 0x2c	; 44
    4ea0:	1f ae       	std	Y+63, r1	; 0x3f
    4ea2:	ac 97       	sbiw	r28, 0x2c	; 44
    4ea4:	a2 96       	adiw	r28, 0x22	; 34
    4ea6:	2f ad       	ldd	r18, Y+63	; 0x3f
    4ea8:	a2 97       	sbiw	r28, 0x22	; 34
    4eaa:	a9 96       	adiw	r28, 0x29	; 41
    4eac:	3f ad       	ldd	r19, Y+63	; 0x3f
    4eae:	a9 97       	sbiw	r28, 0x29	; 41
    4eb0:	23 1b       	sub	r18, r19
    4eb2:	ad 96       	adiw	r28, 0x2d	; 45
    4eb4:	2f af       	std	Y+63, r18	; 0x3f
    4eb6:	ad 97       	sbiw	r28, 0x2d	; 45
    4eb8:	81 e0       	ldi	r24, 0x01	; 1
    4eba:	ae 96       	adiw	r28, 0x2e	; 46
    4ebc:	8f af       	std	Y+63, r24	; 0x3f
    4ebe:	ae 97       	sbiw	r28, 0x2e	; 46
    4ec0:	ad 96       	adiw	r28, 0x2d	; 45
    4ec2:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ec4:	ad 97       	sbiw	r28, 0x2d	; 45
    4ec6:	a2 96       	adiw	r28, 0x22	; 34
    4ec8:	2f ad       	ldd	r18, Y+63	; 0x3f
    4eca:	a2 97       	sbiw	r28, 0x22	; 34
    4ecc:	29 17       	cp	r18, r25
    4ece:	18 f0       	brcs	.+6      	; 0x4ed6 <SubCalculate+0x4f6>
    4ed0:	ae 96       	adiw	r28, 0x2e	; 46
    4ed2:	1f ae       	std	Y+63, r1	; 0x3f
    4ed4:	ae 97       	sbiw	r28, 0x2e	; 46
    4ed6:	ac 96       	adiw	r28, 0x2c	; 44
    4ed8:	3f ad       	ldd	r19, Y+63	; 0x3f
    4eda:	ac 97       	sbiw	r28, 0x2c	; 44
    4edc:	ae 96       	adiw	r28, 0x2e	; 46
    4ede:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ee0:	ae 97       	sbiw	r28, 0x2e	; 46
    4ee2:	38 2b       	or	r19, r24
    4ee4:	ac 96       	adiw	r28, 0x2c	; 44
    4ee6:	3f af       	std	Y+63, r19	; 0x3f
    4ee8:	ac 97       	sbiw	r28, 0x2c	; 44
    4eea:	ad 96       	adiw	r28, 0x2d	; 45
    4eec:	9f ad       	ldd	r25, Y+63	; 0x3f
    4eee:	ad 97       	sbiw	r28, 0x2d	; 45
    4ef0:	a2 96       	adiw	r28, 0x22	; 34
    4ef2:	9f af       	std	Y+63, r25	; 0x3f
    4ef4:	a2 97       	sbiw	r28, 0x22	; 34
    4ef6:	63 96       	adiw	r28, 0x13	; 19
    4ef8:	2f ad       	ldd	r18, Y+63	; 0x3f
    4efa:	63 97       	sbiw	r28, 0x13	; 19
    4efc:	6b 96       	adiw	r28, 0x1b	; 27
    4efe:	3f ad       	ldd	r19, Y+63	; 0x3f
    4f00:	6b 97       	sbiw	r28, 0x1b	; 27
    4f02:	23 1b       	sub	r18, r19
    4f04:	a3 96       	adiw	r28, 0x23	; 35
    4f06:	2f af       	std	Y+63, r18	; 0x3f
    4f08:	a3 97       	sbiw	r28, 0x23	; 35
    4f0a:	81 e0       	ldi	r24, 0x01	; 1
    4f0c:	af 96       	adiw	r28, 0x2f	; 47
    4f0e:	8f af       	std	Y+63, r24	; 0x3f
    4f10:	af 97       	sbiw	r28, 0x2f	; 47
    4f12:	a3 96       	adiw	r28, 0x23	; 35
    4f14:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f16:	a3 97       	sbiw	r28, 0x23	; 35
    4f18:	63 96       	adiw	r28, 0x13	; 19
    4f1a:	2f ad       	ldd	r18, Y+63	; 0x3f
    4f1c:	63 97       	sbiw	r28, 0x13	; 19
    4f1e:	29 17       	cp	r18, r25
    4f20:	18 f0       	brcs	.+6      	; 0x4f28 <SubCalculate+0x548>
    4f22:	af 96       	adiw	r28, 0x2f	; 47
    4f24:	1f ae       	std	Y+63, r1	; 0x3f
    4f26:	af 97       	sbiw	r28, 0x2f	; 47
    4f28:	a3 96       	adiw	r28, 0x23	; 35
    4f2a:	3f ad       	ldd	r19, Y+63	; 0x3f
    4f2c:	a3 97       	sbiw	r28, 0x23	; 35
    4f2e:	ac 96       	adiw	r28, 0x2c	; 44
    4f30:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f32:	ac 97       	sbiw	r28, 0x2c	; 44
    4f34:	38 1b       	sub	r19, r24
    4f36:	e0 96       	adiw	r28, 0x30	; 48
    4f38:	3f af       	std	Y+63, r19	; 0x3f
    4f3a:	e0 97       	sbiw	r28, 0x30	; 48
    4f3c:	91 e0       	ldi	r25, 0x01	; 1
    4f3e:	e1 96       	adiw	r28, 0x31	; 49
    4f40:	9f af       	std	Y+63, r25	; 0x3f
    4f42:	e1 97       	sbiw	r28, 0x31	; 49
    4f44:	e0 96       	adiw	r28, 0x30	; 48
    4f46:	2f ad       	ldd	r18, Y+63	; 0x3f
    4f48:	e0 97       	sbiw	r28, 0x30	; 48
    4f4a:	a3 96       	adiw	r28, 0x23	; 35
    4f4c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4f4e:	a3 97       	sbiw	r28, 0x23	; 35
    4f50:	32 17       	cp	r19, r18
    4f52:	18 f0       	brcs	.+6      	; 0x4f5a <SubCalculate+0x57a>
    4f54:	e1 96       	adiw	r28, 0x31	; 49
    4f56:	1f ae       	std	Y+63, r1	; 0x3f
    4f58:	e1 97       	sbiw	r28, 0x31	; 49
    4f5a:	af 96       	adiw	r28, 0x2f	; 47
    4f5c:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f5e:	af 97       	sbiw	r28, 0x2f	; 47
    4f60:	e1 96       	adiw	r28, 0x31	; 49
    4f62:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f64:	e1 97       	sbiw	r28, 0x31	; 49
    4f66:	89 2b       	or	r24, r25
    4f68:	af 96       	adiw	r28, 0x2f	; 47
    4f6a:	8f af       	std	Y+63, r24	; 0x3f
    4f6c:	af 97       	sbiw	r28, 0x2f	; 47
    4f6e:	e0 96       	adiw	r28, 0x30	; 48
    4f70:	2f ad       	ldd	r18, Y+63	; 0x3f
    4f72:	e0 97       	sbiw	r28, 0x30	; 48
    4f74:	a3 96       	adiw	r28, 0x23	; 35
    4f76:	2f af       	std	Y+63, r18	; 0x3f
    4f78:	a3 97       	sbiw	r28, 0x23	; 35
    4f7a:	64 96       	adiw	r28, 0x14	; 20
    4f7c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4f7e:	64 97       	sbiw	r28, 0x14	; 20
    4f80:	6c 96       	adiw	r28, 0x1c	; 28
    4f82:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f84:	6c 97       	sbiw	r28, 0x1c	; 28
    4f86:	38 1b       	sub	r19, r24
    4f88:	a4 96       	adiw	r28, 0x24	; 36
    4f8a:	3f af       	std	Y+63, r19	; 0x3f
    4f8c:	a4 97       	sbiw	r28, 0x24	; 36
    4f8e:	91 e0       	ldi	r25, 0x01	; 1
    4f90:	e2 96       	adiw	r28, 0x32	; 50
    4f92:	9f af       	std	Y+63, r25	; 0x3f
    4f94:	e2 97       	sbiw	r28, 0x32	; 50
    4f96:	a4 96       	adiw	r28, 0x24	; 36
    4f98:	2f ad       	ldd	r18, Y+63	; 0x3f
    4f9a:	a4 97       	sbiw	r28, 0x24	; 36
    4f9c:	64 96       	adiw	r28, 0x14	; 20
    4f9e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4fa0:	64 97       	sbiw	r28, 0x14	; 20
    4fa2:	32 17       	cp	r19, r18
    4fa4:	18 f0       	brcs	.+6      	; 0x4fac <SubCalculate+0x5cc>
    4fa6:	e2 96       	adiw	r28, 0x32	; 50
    4fa8:	1f ae       	std	Y+63, r1	; 0x3f
    4faa:	e2 97       	sbiw	r28, 0x32	; 50
    4fac:	a4 96       	adiw	r28, 0x24	; 36
    4fae:	8f ad       	ldd	r24, Y+63	; 0x3f
    4fb0:	a4 97       	sbiw	r28, 0x24	; 36
    4fb2:	af 96       	adiw	r28, 0x2f	; 47
    4fb4:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fb6:	af 97       	sbiw	r28, 0x2f	; 47
    4fb8:	89 1b       	sub	r24, r25
    4fba:	e3 96       	adiw	r28, 0x33	; 51
    4fbc:	8f af       	std	Y+63, r24	; 0x3f
    4fbe:	e3 97       	sbiw	r28, 0x33	; 51
    4fc0:	21 e0       	ldi	r18, 0x01	; 1
    4fc2:	e4 96       	adiw	r28, 0x34	; 52
    4fc4:	2f af       	std	Y+63, r18	; 0x3f
    4fc6:	e4 97       	sbiw	r28, 0x34	; 52
    4fc8:	e3 96       	adiw	r28, 0x33	; 51
    4fca:	3f ad       	ldd	r19, Y+63	; 0x3f
    4fcc:	e3 97       	sbiw	r28, 0x33	; 51
    4fce:	a4 96       	adiw	r28, 0x24	; 36
    4fd0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4fd2:	a4 97       	sbiw	r28, 0x24	; 36
    4fd4:	83 17       	cp	r24, r19
    4fd6:	18 f0       	brcs	.+6      	; 0x4fde <SubCalculate+0x5fe>
    4fd8:	e4 96       	adiw	r28, 0x34	; 52
    4fda:	1f ae       	std	Y+63, r1	; 0x3f
    4fdc:	e4 97       	sbiw	r28, 0x34	; 52
    4fde:	e2 96       	adiw	r28, 0x32	; 50
    4fe0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fe2:	e2 97       	sbiw	r28, 0x32	; 50
    4fe4:	e4 96       	adiw	r28, 0x34	; 52
    4fe6:	2f ad       	ldd	r18, Y+63	; 0x3f
    4fe8:	e4 97       	sbiw	r28, 0x34	; 52
    4fea:	92 2b       	or	r25, r18
    4fec:	e2 96       	adiw	r28, 0x32	; 50
    4fee:	9f af       	std	Y+63, r25	; 0x3f
    4ff0:	e2 97       	sbiw	r28, 0x32	; 50
    4ff2:	e3 96       	adiw	r28, 0x33	; 51
    4ff4:	3f ad       	ldd	r19, Y+63	; 0x3f
    4ff6:	e3 97       	sbiw	r28, 0x33	; 51
    4ff8:	a4 96       	adiw	r28, 0x24	; 36
    4ffa:	3f af       	std	Y+63, r19	; 0x3f
    4ffc:	a4 97       	sbiw	r28, 0x24	; 36
    4ffe:	65 96       	adiw	r28, 0x15	; 21
    5000:	8f ad       	ldd	r24, Y+63	; 0x3f
    5002:	65 97       	sbiw	r28, 0x15	; 21
    5004:	6d 96       	adiw	r28, 0x1d	; 29
    5006:	9f ad       	ldd	r25, Y+63	; 0x3f
    5008:	6d 97       	sbiw	r28, 0x1d	; 29
    500a:	89 1b       	sub	r24, r25
    500c:	a5 96       	adiw	r28, 0x25	; 37
    500e:	8f af       	std	Y+63, r24	; 0x3f
    5010:	a5 97       	sbiw	r28, 0x25	; 37
    5012:	21 e0       	ldi	r18, 0x01	; 1
    5014:	e5 96       	adiw	r28, 0x35	; 53
    5016:	2f af       	std	Y+63, r18	; 0x3f
    5018:	e5 97       	sbiw	r28, 0x35	; 53
    501a:	a5 96       	adiw	r28, 0x25	; 37
    501c:	3f ad       	ldd	r19, Y+63	; 0x3f
    501e:	a5 97       	sbiw	r28, 0x25	; 37
    5020:	65 96       	adiw	r28, 0x15	; 21
    5022:	8f ad       	ldd	r24, Y+63	; 0x3f
    5024:	65 97       	sbiw	r28, 0x15	; 21
    5026:	83 17       	cp	r24, r19
    5028:	18 f0       	brcs	.+6      	; 0x5030 <SubCalculate+0x650>
    502a:	e5 96       	adiw	r28, 0x35	; 53
    502c:	1f ae       	std	Y+63, r1	; 0x3f
    502e:	e5 97       	sbiw	r28, 0x35	; 53
    5030:	a5 96       	adiw	r28, 0x25	; 37
    5032:	9f ad       	ldd	r25, Y+63	; 0x3f
    5034:	a5 97       	sbiw	r28, 0x25	; 37
    5036:	e2 96       	adiw	r28, 0x32	; 50
    5038:	2f ad       	ldd	r18, Y+63	; 0x3f
    503a:	e2 97       	sbiw	r28, 0x32	; 50
    503c:	92 1b       	sub	r25, r18
    503e:	e6 96       	adiw	r28, 0x36	; 54
    5040:	9f af       	std	Y+63, r25	; 0x3f
    5042:	e6 97       	sbiw	r28, 0x36	; 54
    5044:	31 e0       	ldi	r19, 0x01	; 1
    5046:	e7 96       	adiw	r28, 0x37	; 55
    5048:	3f af       	std	Y+63, r19	; 0x3f
    504a:	e7 97       	sbiw	r28, 0x37	; 55
    504c:	e6 96       	adiw	r28, 0x36	; 54
    504e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5050:	e6 97       	sbiw	r28, 0x36	; 54
    5052:	a5 96       	adiw	r28, 0x25	; 37
    5054:	9f ad       	ldd	r25, Y+63	; 0x3f
    5056:	a5 97       	sbiw	r28, 0x25	; 37
    5058:	98 17       	cp	r25, r24
    505a:	18 f0       	brcs	.+6      	; 0x5062 <SubCalculate+0x682>
    505c:	e7 96       	adiw	r28, 0x37	; 55
    505e:	1f ae       	std	Y+63, r1	; 0x3f
    5060:	e7 97       	sbiw	r28, 0x37	; 55
    5062:	e5 96       	adiw	r28, 0x35	; 53
    5064:	2f ad       	ldd	r18, Y+63	; 0x3f
    5066:	e5 97       	sbiw	r28, 0x35	; 53
    5068:	e7 96       	adiw	r28, 0x37	; 55
    506a:	3f ad       	ldd	r19, Y+63	; 0x3f
    506c:	e7 97       	sbiw	r28, 0x37	; 55
    506e:	23 2b       	or	r18, r19
    5070:	e5 96       	adiw	r28, 0x35	; 53
    5072:	2f af       	std	Y+63, r18	; 0x3f
    5074:	e5 97       	sbiw	r28, 0x35	; 53
    5076:	e6 96       	adiw	r28, 0x36	; 54
    5078:	8f ad       	ldd	r24, Y+63	; 0x3f
    507a:	e6 97       	sbiw	r28, 0x36	; 54
    507c:	a5 96       	adiw	r28, 0x25	; 37
    507e:	8f af       	std	Y+63, r24	; 0x3f
    5080:	a5 97       	sbiw	r28, 0x25	; 37
    5082:	66 96       	adiw	r28, 0x16	; 22
    5084:	9f ad       	ldd	r25, Y+63	; 0x3f
    5086:	66 97       	sbiw	r28, 0x16	; 22
    5088:	6e 96       	adiw	r28, 0x1e	; 30
    508a:	2f ad       	ldd	r18, Y+63	; 0x3f
    508c:	6e 97       	sbiw	r28, 0x1e	; 30
    508e:	92 1b       	sub	r25, r18
    5090:	a6 96       	adiw	r28, 0x26	; 38
    5092:	9f af       	std	Y+63, r25	; 0x3f
    5094:	a6 97       	sbiw	r28, 0x26	; 38
    5096:	31 e0       	ldi	r19, 0x01	; 1
    5098:	e8 96       	adiw	r28, 0x38	; 56
    509a:	3f af       	std	Y+63, r19	; 0x3f
    509c:	e8 97       	sbiw	r28, 0x38	; 56
    509e:	a6 96       	adiw	r28, 0x26	; 38
    50a0:	8f ad       	ldd	r24, Y+63	; 0x3f
    50a2:	a6 97       	sbiw	r28, 0x26	; 38
    50a4:	66 96       	adiw	r28, 0x16	; 22
    50a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    50a8:	66 97       	sbiw	r28, 0x16	; 22
    50aa:	98 17       	cp	r25, r24
    50ac:	18 f0       	brcs	.+6      	; 0x50b4 <SubCalculate+0x6d4>
    50ae:	e8 96       	adiw	r28, 0x38	; 56
    50b0:	1f ae       	std	Y+63, r1	; 0x3f
    50b2:	e8 97       	sbiw	r28, 0x38	; 56
    50b4:	a6 96       	adiw	r28, 0x26	; 38
    50b6:	2f ad       	ldd	r18, Y+63	; 0x3f
    50b8:	a6 97       	sbiw	r28, 0x26	; 38
    50ba:	e5 96       	adiw	r28, 0x35	; 53
    50bc:	3f ad       	ldd	r19, Y+63	; 0x3f
    50be:	e5 97       	sbiw	r28, 0x35	; 53
    50c0:	23 1b       	sub	r18, r19
    50c2:	e9 96       	adiw	r28, 0x39	; 57
    50c4:	2f af       	std	Y+63, r18	; 0x3f
    50c6:	e9 97       	sbiw	r28, 0x39	; 57
    50c8:	81 e0       	ldi	r24, 0x01	; 1
    50ca:	ea 96       	adiw	r28, 0x3a	; 58
    50cc:	8f af       	std	Y+63, r24	; 0x3f
    50ce:	ea 97       	sbiw	r28, 0x3a	; 58
    50d0:	e9 96       	adiw	r28, 0x39	; 57
    50d2:	9f ad       	ldd	r25, Y+63	; 0x3f
    50d4:	e9 97       	sbiw	r28, 0x39	; 57
    50d6:	a6 96       	adiw	r28, 0x26	; 38
    50d8:	2f ad       	ldd	r18, Y+63	; 0x3f
    50da:	a6 97       	sbiw	r28, 0x26	; 38
    50dc:	29 17       	cp	r18, r25
    50de:	18 f0       	brcs	.+6      	; 0x50e6 <SubCalculate+0x706>
    50e0:	ea 96       	adiw	r28, 0x3a	; 58
    50e2:	1f ae       	std	Y+63, r1	; 0x3f
    50e4:	ea 97       	sbiw	r28, 0x3a	; 58
    50e6:	e8 96       	adiw	r28, 0x38	; 56
    50e8:	3f ad       	ldd	r19, Y+63	; 0x3f
    50ea:	e8 97       	sbiw	r28, 0x38	; 56
    50ec:	ea 96       	adiw	r28, 0x3a	; 58
    50ee:	8f ad       	ldd	r24, Y+63	; 0x3f
    50f0:	ea 97       	sbiw	r28, 0x3a	; 58
    50f2:	38 2b       	or	r19, r24
    50f4:	e8 96       	adiw	r28, 0x38	; 56
    50f6:	3f af       	std	Y+63, r19	; 0x3f
    50f8:	e8 97       	sbiw	r28, 0x38	; 56
    50fa:	e9 96       	adiw	r28, 0x39	; 57
    50fc:	9f ad       	ldd	r25, Y+63	; 0x3f
    50fe:	e9 97       	sbiw	r28, 0x39	; 57
    5100:	a6 96       	adiw	r28, 0x26	; 38
    5102:	9f af       	std	Y+63, r25	; 0x3f
    5104:	a6 97       	sbiw	r28, 0x26	; 38
    5106:	67 96       	adiw	r28, 0x17	; 23
    5108:	2f ad       	ldd	r18, Y+63	; 0x3f
    510a:	67 97       	sbiw	r28, 0x17	; 23
    510c:	6f 96       	adiw	r28, 0x1f	; 31
    510e:	3f ad       	ldd	r19, Y+63	; 0x3f
    5110:	6f 97       	sbiw	r28, 0x1f	; 31
    5112:	23 1b       	sub	r18, r19
    5114:	a7 96       	adiw	r28, 0x27	; 39
    5116:	2f af       	std	Y+63, r18	; 0x3f
    5118:	a7 97       	sbiw	r28, 0x27	; 39
    511a:	a7 96       	adiw	r28, 0x27	; 39
    511c:	8f ad       	ldd	r24, Y+63	; 0x3f
    511e:	a7 97       	sbiw	r28, 0x27	; 39
    5120:	e8 96       	adiw	r28, 0x38	; 56
    5122:	9f ad       	ldd	r25, Y+63	; 0x3f
    5124:	e8 97       	sbiw	r28, 0x38	; 56
    5126:	89 1b       	sub	r24, r25
    5128:	a7 96       	adiw	r28, 0x27	; 39
    512a:	8f af       	std	Y+63, r24	; 0x3f
    512c:	a7 97       	sbiw	r28, 0x27	; 39
    512e:	a0 96       	adiw	r28, 0x20	; 32
    5130:	2f ad       	ldd	r18, Y+63	; 0x3f
    5132:	a0 97       	sbiw	r28, 0x20	; 32
    5134:	29 83       	std	Y+1, r18	; 0x01
    5136:	a1 96       	adiw	r28, 0x21	; 33
    5138:	3f ad       	ldd	r19, Y+63	; 0x3f
    513a:	a1 97       	sbiw	r28, 0x21	; 33
    513c:	3a 83       	std	Y+2, r19	; 0x02
    513e:	a2 96       	adiw	r28, 0x22	; 34
    5140:	8f ad       	ldd	r24, Y+63	; 0x3f
    5142:	a2 97       	sbiw	r28, 0x22	; 34
    5144:	8b 83       	std	Y+3, r24	; 0x03
    5146:	a3 96       	adiw	r28, 0x23	; 35
    5148:	9f ad       	ldd	r25, Y+63	; 0x3f
    514a:	a3 97       	sbiw	r28, 0x23	; 35
    514c:	9c 83       	std	Y+4, r25	; 0x04
    514e:	a4 96       	adiw	r28, 0x24	; 36
    5150:	2f ad       	ldd	r18, Y+63	; 0x3f
    5152:	a4 97       	sbiw	r28, 0x24	; 36
    5154:	2d 83       	std	Y+5, r18	; 0x05
    5156:	a5 96       	adiw	r28, 0x25	; 37
    5158:	3f ad       	ldd	r19, Y+63	; 0x3f
    515a:	a5 97       	sbiw	r28, 0x25	; 37
    515c:	3e 83       	std	Y+6, r19	; 0x06
    515e:	a6 96       	adiw	r28, 0x26	; 38
    5160:	8f ad       	ldd	r24, Y+63	; 0x3f
    5162:	a6 97       	sbiw	r28, 0x26	; 38
    5164:	8f 83       	std	Y+7, r24	; 0x07
    5166:	a7 96       	adiw	r28, 0x27	; 39
    5168:	9f ad       	ldd	r25, Y+63	; 0x3f
    516a:	a7 97       	sbiw	r28, 0x27	; 39
    516c:	98 87       	std	Y+8, r25	; 0x08
    516e:	45 c0       	rjmp	.+138    	; 0x51fa <SubCalculate+0x81a>
			break;
			case '*' :
			return_value = operand1*operand2;
    5170:	29 85       	ldd	r18, Y+9	; 0x09
    5172:	3a 85       	ldd	r19, Y+10	; 0x0a
    5174:	4b 85       	ldd	r20, Y+11	; 0x0b
    5176:	5c 85       	ldd	r21, Y+12	; 0x0c
    5178:	6d 85       	ldd	r22, Y+13	; 0x0d
    517a:	7e 85       	ldd	r23, Y+14	; 0x0e
    517c:	8f 85       	ldd	r24, Y+15	; 0x0f
    517e:	98 89       	ldd	r25, Y+16	; 0x10
    5180:	a9 88       	ldd	r10, Y+17	; 0x11
    5182:	ba 88       	ldd	r11, Y+18	; 0x12
    5184:	cb 88       	ldd	r12, Y+19	; 0x13
    5186:	dc 88       	ldd	r13, Y+20	; 0x14
    5188:	ed 88       	ldd	r14, Y+21	; 0x15
    518a:	fe 88       	ldd	r15, Y+22	; 0x16
    518c:	0f 89       	ldd	r16, Y+23	; 0x17
    518e:	18 8d       	ldd	r17, Y+24	; 0x18
    5190:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    5194:	a2 2e       	mov	r10, r18
    5196:	b3 2e       	mov	r11, r19
    5198:	c4 2e       	mov	r12, r20
    519a:	d5 2e       	mov	r13, r21
    519c:	e6 2e       	mov	r14, r22
    519e:	f7 2e       	mov	r15, r23
    51a0:	08 2f       	mov	r16, r24
    51a2:	19 2f       	mov	r17, r25
    51a4:	a9 82       	std	Y+1, r10	; 0x01
    51a6:	ba 82       	std	Y+2, r11	; 0x02
    51a8:	cb 82       	std	Y+3, r12	; 0x03
    51aa:	dc 82       	std	Y+4, r13	; 0x04
    51ac:	ed 82       	std	Y+5, r14	; 0x05
    51ae:	fe 82       	std	Y+6, r15	; 0x06
    51b0:	0f 83       	std	Y+7, r16	; 0x07
    51b2:	18 87       	std	Y+8, r17	; 0x08
    51b4:	22 c0       	rjmp	.+68     	; 0x51fa <SubCalculate+0x81a>
			break;
			case '/' :
			return_value = operand1/operand2;
    51b6:	29 85       	ldd	r18, Y+9	; 0x09
    51b8:	3a 85       	ldd	r19, Y+10	; 0x0a
    51ba:	4b 85       	ldd	r20, Y+11	; 0x0b
    51bc:	5c 85       	ldd	r21, Y+12	; 0x0c
    51be:	6d 85       	ldd	r22, Y+13	; 0x0d
    51c0:	7e 85       	ldd	r23, Y+14	; 0x0e
    51c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    51c4:	98 89       	ldd	r25, Y+16	; 0x10
    51c6:	a9 88       	ldd	r10, Y+17	; 0x11
    51c8:	ba 88       	ldd	r11, Y+18	; 0x12
    51ca:	cb 88       	ldd	r12, Y+19	; 0x13
    51cc:	dc 88       	ldd	r13, Y+20	; 0x14
    51ce:	ed 88       	ldd	r14, Y+21	; 0x15
    51d0:	fe 88       	ldd	r15, Y+22	; 0x16
    51d2:	0f 89       	ldd	r16, Y+23	; 0x17
    51d4:	18 8d       	ldd	r17, Y+24	; 0x18
    51d6:	0e 94 87 03 	call	0x70e	; 0x70e <__divdi3>
    51da:	a2 2e       	mov	r10, r18
    51dc:	b3 2e       	mov	r11, r19
    51de:	c4 2e       	mov	r12, r20
    51e0:	d5 2e       	mov	r13, r21
    51e2:	e6 2e       	mov	r14, r22
    51e4:	f7 2e       	mov	r15, r23
    51e6:	08 2f       	mov	r16, r24
    51e8:	19 2f       	mov	r17, r25
    51ea:	a9 82       	std	Y+1, r10	; 0x01
    51ec:	ba 82       	std	Y+2, r11	; 0x02
    51ee:	cb 82       	std	Y+3, r12	; 0x03
    51f0:	dc 82       	std	Y+4, r13	; 0x04
    51f2:	ed 82       	std	Y+5, r14	; 0x05
    51f4:	fe 82       	std	Y+6, r15	; 0x06
    51f6:	0f 83       	std	Y+7, r16	; 0x07
    51f8:	18 87       	std	Y+8, r17	; 0x08
			break;
		}

		return return_value;
    51fa:	29 81       	ldd	r18, Y+1	; 0x01
    51fc:	2a 8f       	std	Y+26, r18	; 0x1a
    51fe:	3a 81       	ldd	r19, Y+2	; 0x02
    5200:	3b 8f       	std	Y+27, r19	; 0x1b
    5202:	8b 81       	ldd	r24, Y+3	; 0x03
    5204:	8c 8f       	std	Y+28, r24	; 0x1c
    5206:	9c 81       	ldd	r25, Y+4	; 0x04
    5208:	9d 8f       	std	Y+29, r25	; 0x1d
    520a:	2d 81       	ldd	r18, Y+5	; 0x05
    520c:	2e 8f       	std	Y+30, r18	; 0x1e
    520e:	3e 81       	ldd	r19, Y+6	; 0x06
    5210:	3f 8f       	std	Y+31, r19	; 0x1f
    5212:	8f 81       	ldd	r24, Y+7	; 0x07
    5214:	88 a3       	std	Y+32, r24	; 0x20
    5216:	98 85       	ldd	r25, Y+8	; 0x08
    5218:	99 a3       	std	Y+33, r25	; 0x21
    521a:	08 c0       	rjmp	.+16     	; 0x522c <SubCalculate+0x84c>
	}

	return 0;
    521c:	1a 8e       	std	Y+26, r1	; 0x1a
    521e:	1b 8e       	std	Y+27, r1	; 0x1b
    5220:	1c 8e       	std	Y+28, r1	; 0x1c
    5222:	1d 8e       	std	Y+29, r1	; 0x1d
    5224:	1e 8e       	std	Y+30, r1	; 0x1e
    5226:	1f 8e       	std	Y+31, r1	; 0x1f
    5228:	18 a2       	std	Y+32, r1	; 0x20
    522a:	19 a2       	std	Y+33, r1	; 0x21
    522c:	aa 8c       	ldd	r10, Y+26	; 0x1a
    522e:	bb 8c       	ldd	r11, Y+27	; 0x1b
    5230:	cc 8c       	ldd	r12, Y+28	; 0x1c
    5232:	dd 8c       	ldd	r13, Y+29	; 0x1d
    5234:	ee 8c       	ldd	r14, Y+30	; 0x1e
    5236:	ff 8c       	ldd	r15, Y+31	; 0x1f
    5238:	08 a1       	ldd	r16, Y+32	; 0x20
    523a:	19 a1       	ldd	r17, Y+33	; 0x21
}
    523c:	2a 2d       	mov	r18, r10
    523e:	3b 2d       	mov	r19, r11
    5240:	4c 2d       	mov	r20, r12
    5242:	5d 2d       	mov	r21, r13
    5244:	6e 2d       	mov	r22, r14
    5246:	7f 2d       	mov	r23, r15
    5248:	80 2f       	mov	r24, r16
    524a:	91 2f       	mov	r25, r17
    524c:	c7 58       	subi	r28, 0x87	; 135
    524e:	df 4f       	sbci	r29, 0xFF	; 255
    5250:	0f b6       	in	r0, 0x3f	; 63
    5252:	f8 94       	cli
    5254:	de bf       	out	0x3e, r29	; 62
    5256:	0f be       	out	0x3f, r0	; 63
    5258:	cd bf       	out	0x3d, r28	; 61
    525a:	cf 91       	pop	r28
    525c:	df 91       	pop	r29
    525e:	1f 91       	pop	r17
    5260:	0f 91       	pop	r16
    5262:	ff 90       	pop	r15
    5264:	ef 90       	pop	r14
    5266:	df 90       	pop	r13
    5268:	cf 90       	pop	r12
    526a:	bf 90       	pop	r11
    526c:	af 90       	pop	r10
    526e:	8f 90       	pop	r8
    5270:	08 95       	ret

00005272 <calculate>:

uint8 calculate(){
    5272:	2f 92       	push	r2
    5274:	3f 92       	push	r3
    5276:	4f 92       	push	r4
    5278:	5f 92       	push	r5
    527a:	6f 92       	push	r6
    527c:	7f 92       	push	r7
    527e:	8f 92       	push	r8
    5280:	9f 92       	push	r9
    5282:	af 92       	push	r10
    5284:	bf 92       	push	r11
    5286:	cf 92       	push	r12
    5288:	df 92       	push	r13
    528a:	ef 92       	push	r14
    528c:	ff 92       	push	r15
    528e:	0f 93       	push	r16
    5290:	1f 93       	push	r17
    5292:	df 93       	push	r29
    5294:	cf 93       	push	r28
    5296:	00 d0       	rcall	.+0      	; 0x5298 <calculate+0x26>
    5298:	00 d0       	rcall	.+0      	; 0x529a <calculate+0x28>
    529a:	00 d0       	rcall	.+0      	; 0x529c <calculate+0x2a>
    529c:	cd b7       	in	r28, 0x3d	; 61
    529e:	de b7       	in	r29, 0x3e	; 62
	uint8 Operations_index=0 , Operands_index;
    52a0:	1a 82       	std	Y+2, r1	; 0x02
    52a2:	f9 c0       	rjmp	.+498    	; 0x5496 <calculate+0x224>

	while((Operations[Operations_index] != '=') && (Operations[Operations_index] != '\0') )
	{
		if (Operations[Operations_index] == '*')
    52a4:	8a 81       	ldd	r24, Y+2	; 0x02
    52a6:	88 2f       	mov	r24, r24
    52a8:	90 e0       	ldi	r25, 0x00	; 0
    52aa:	fc 01       	movw	r30, r24
    52ac:	ef 5d       	subi	r30, 0xDF	; 223
    52ae:	fd 4f       	sbci	r31, 0xFD	; 253
    52b0:	80 81       	ld	r24, Z
    52b2:	8a 32       	cpi	r24, 0x2A	; 42
    52b4:	09 f0       	breq	.+2      	; 0x52b8 <calculate+0x46>
    52b6:	71 c0       	rjmp	.+226    	; 0x539a <calculate+0x128>
		{
			Operands[Operations_index] = Operands[Operations_index] * Operands[Operations_index+1];
    52b8:	8a 81       	ldd	r24, Y+2	; 0x02
    52ba:	28 2f       	mov	r18, r24
    52bc:	30 e0       	ldi	r19, 0x00	; 0
    52be:	3e 83       	std	Y+6, r19	; 0x06
    52c0:	2d 83       	std	Y+5, r18	; 0x05
    52c2:	8a 81       	ldd	r24, Y+2	; 0x02
    52c4:	88 2f       	mov	r24, r24
    52c6:	90 e0       	ldi	r25, 0x00	; 0
    52c8:	88 0f       	add	r24, r24
    52ca:	99 1f       	adc	r25, r25
    52cc:	88 0f       	add	r24, r24
    52ce:	99 1f       	adc	r25, r25
    52d0:	88 0f       	add	r24, r24
    52d2:	99 1f       	adc	r25, r25
    52d4:	fc 01       	movw	r30, r24
    52d6:	ef 53       	subi	r30, 0x3F	; 63
    52d8:	fe 4f       	sbci	r31, 0xFE	; 254
    52da:	a0 80       	ld	r10, Z
    52dc:	b1 80       	ldd	r11, Z+1	; 0x01
    52de:	c2 80       	ldd	r12, Z+2	; 0x02
    52e0:	d3 80       	ldd	r13, Z+3	; 0x03
    52e2:	e4 80       	ldd	r14, Z+4	; 0x04
    52e4:	f5 80       	ldd	r15, Z+5	; 0x05
    52e6:	06 81       	ldd	r16, Z+6	; 0x06
    52e8:	17 81       	ldd	r17, Z+7	; 0x07
    52ea:	8a 81       	ldd	r24, Y+2	; 0x02
    52ec:	88 2f       	mov	r24, r24
    52ee:	90 e0       	ldi	r25, 0x00	; 0
    52f0:	01 96       	adiw	r24, 0x01	; 1
    52f2:	88 0f       	add	r24, r24
    52f4:	99 1f       	adc	r25, r25
    52f6:	88 0f       	add	r24, r24
    52f8:	99 1f       	adc	r25, r25
    52fa:	88 0f       	add	r24, r24
    52fc:	99 1f       	adc	r25, r25
    52fe:	fc 01       	movw	r30, r24
    5300:	ef 53       	subi	r30, 0x3F	; 63
    5302:	fe 4f       	sbci	r31, 0xFE	; 254
    5304:	20 80       	ld	r2, Z
    5306:	31 80       	ldd	r3, Z+1	; 0x01
    5308:	42 80       	ldd	r4, Z+2	; 0x02
    530a:	53 80       	ldd	r5, Z+3	; 0x03
    530c:	64 80       	ldd	r6, Z+4	; 0x04
    530e:	75 80       	ldd	r7, Z+5	; 0x05
    5310:	86 80       	ldd	r8, Z+6	; 0x06
    5312:	97 80       	ldd	r9, Z+7	; 0x07
    5314:	2a 2d       	mov	r18, r10
    5316:	3b 2d       	mov	r19, r11
    5318:	4c 2d       	mov	r20, r12
    531a:	5d 2d       	mov	r21, r13
    531c:	6e 2d       	mov	r22, r14
    531e:	7f 2d       	mov	r23, r15
    5320:	80 2f       	mov	r24, r16
    5322:	91 2f       	mov	r25, r17
    5324:	a2 2c       	mov	r10, r2
    5326:	b3 2c       	mov	r11, r3
    5328:	c4 2c       	mov	r12, r4
    532a:	d5 2c       	mov	r13, r5
    532c:	e6 2c       	mov	r14, r6
    532e:	f7 2c       	mov	r15, r7
    5330:	08 2d       	mov	r16, r8
    5332:	19 2d       	mov	r17, r9
    5334:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    5338:	a2 2e       	mov	r10, r18
    533a:	b3 2e       	mov	r11, r19
    533c:	c4 2e       	mov	r12, r20
    533e:	d5 2e       	mov	r13, r21
    5340:	e6 2e       	mov	r14, r22
    5342:	f7 2e       	mov	r15, r23
    5344:	08 2f       	mov	r16, r24
    5346:	19 2f       	mov	r17, r25
    5348:	2a 2d       	mov	r18, r10
    534a:	3b 2d       	mov	r19, r11
    534c:	4c 2d       	mov	r20, r12
    534e:	5d 2d       	mov	r21, r13
    5350:	6e 2d       	mov	r22, r14
    5352:	7f 2d       	mov	r23, r15
    5354:	80 2f       	mov	r24, r16
    5356:	91 2f       	mov	r25, r17
    5358:	ed 81       	ldd	r30, Y+5	; 0x05
    535a:	fe 81       	ldd	r31, Y+6	; 0x06
    535c:	ee 0f       	add	r30, r30
    535e:	ff 1f       	adc	r31, r31
    5360:	ee 0f       	add	r30, r30
    5362:	ff 1f       	adc	r31, r31
    5364:	ee 0f       	add	r30, r30
    5366:	ff 1f       	adc	r31, r31
    5368:	ef 53       	subi	r30, 0x3F	; 63
    536a:	fe 4f       	sbci	r31, 0xFE	; 254
    536c:	20 83       	st	Z, r18
    536e:	31 83       	std	Z+1, r19	; 0x01
    5370:	42 83       	std	Z+2, r20	; 0x02
    5372:	53 83       	std	Z+3, r21	; 0x03
    5374:	64 83       	std	Z+4, r22	; 0x04
    5376:	75 83       	std	Z+5, r23	; 0x05
    5378:	86 83       	std	Z+6, r24	; 0x06
    537a:	97 83       	std	Z+7, r25	; 0x07
			shift_s64array_left((uint64*)Operands,Operations_index+1);
    537c:	21 ec       	ldi	r18, 0xC1	; 193
    537e:	31 e0       	ldi	r19, 0x01	; 1
    5380:	8a 81       	ldd	r24, Y+2	; 0x02
    5382:	48 2f       	mov	r20, r24
    5384:	4f 5f       	subi	r20, 0xFF	; 255
    5386:	c9 01       	movw	r24, r18
    5388:	64 2f       	mov	r22, r20
    538a:	0e 94 46 24 	call	0x488c	; 0x488c <shift_s64array_left>
			shift_uint8array_left(Operations,Operations_index);
    538e:	81 e2       	ldi	r24, 0x21	; 33
    5390:	92 e0       	ldi	r25, 0x02	; 2
    5392:	6a 81       	ldd	r22, Y+2	; 0x02
    5394:	0e 94 ba 24 	call	0x4974	; 0x4974 <shift_uint8array_left>
    5398:	7e c0       	rjmp	.+252    	; 0x5496 <calculate+0x224>

		}
		else if (Operations[Operations_index] == '/')
    539a:	8a 81       	ldd	r24, Y+2	; 0x02
    539c:	88 2f       	mov	r24, r24
    539e:	90 e0       	ldi	r25, 0x00	; 0
    53a0:	fc 01       	movw	r30, r24
    53a2:	ef 5d       	subi	r30, 0xDF	; 223
    53a4:	fd 4f       	sbci	r31, 0xFD	; 253
    53a6:	80 81       	ld	r24, Z
    53a8:	8f 32       	cpi	r24, 0x2F	; 47
    53aa:	09 f0       	breq	.+2      	; 0x53ae <calculate+0x13c>
    53ac:	71 c0       	rjmp	.+226    	; 0x5490 <calculate+0x21e>
		{
			Operands[Operations_index] = Operands[Operations_index] / Operands[Operations_index+1];
    53ae:	8a 81       	ldd	r24, Y+2	; 0x02
    53b0:	28 2f       	mov	r18, r24
    53b2:	30 e0       	ldi	r19, 0x00	; 0
    53b4:	3c 83       	std	Y+4, r19	; 0x04
    53b6:	2b 83       	std	Y+3, r18	; 0x03
    53b8:	8a 81       	ldd	r24, Y+2	; 0x02
    53ba:	88 2f       	mov	r24, r24
    53bc:	90 e0       	ldi	r25, 0x00	; 0
    53be:	88 0f       	add	r24, r24
    53c0:	99 1f       	adc	r25, r25
    53c2:	88 0f       	add	r24, r24
    53c4:	99 1f       	adc	r25, r25
    53c6:	88 0f       	add	r24, r24
    53c8:	99 1f       	adc	r25, r25
    53ca:	fc 01       	movw	r30, r24
    53cc:	ef 53       	subi	r30, 0x3F	; 63
    53ce:	fe 4f       	sbci	r31, 0xFE	; 254
    53d0:	a0 80       	ld	r10, Z
    53d2:	b1 80       	ldd	r11, Z+1	; 0x01
    53d4:	c2 80       	ldd	r12, Z+2	; 0x02
    53d6:	d3 80       	ldd	r13, Z+3	; 0x03
    53d8:	e4 80       	ldd	r14, Z+4	; 0x04
    53da:	f5 80       	ldd	r15, Z+5	; 0x05
    53dc:	06 81       	ldd	r16, Z+6	; 0x06
    53de:	17 81       	ldd	r17, Z+7	; 0x07
    53e0:	8a 81       	ldd	r24, Y+2	; 0x02
    53e2:	88 2f       	mov	r24, r24
    53e4:	90 e0       	ldi	r25, 0x00	; 0
    53e6:	01 96       	adiw	r24, 0x01	; 1
    53e8:	88 0f       	add	r24, r24
    53ea:	99 1f       	adc	r25, r25
    53ec:	88 0f       	add	r24, r24
    53ee:	99 1f       	adc	r25, r25
    53f0:	88 0f       	add	r24, r24
    53f2:	99 1f       	adc	r25, r25
    53f4:	fc 01       	movw	r30, r24
    53f6:	ef 53       	subi	r30, 0x3F	; 63
    53f8:	fe 4f       	sbci	r31, 0xFE	; 254
    53fa:	20 80       	ld	r2, Z
    53fc:	31 80       	ldd	r3, Z+1	; 0x01
    53fe:	42 80       	ldd	r4, Z+2	; 0x02
    5400:	53 80       	ldd	r5, Z+3	; 0x03
    5402:	64 80       	ldd	r6, Z+4	; 0x04
    5404:	75 80       	ldd	r7, Z+5	; 0x05
    5406:	86 80       	ldd	r8, Z+6	; 0x06
    5408:	97 80       	ldd	r9, Z+7	; 0x07
    540a:	2a 2d       	mov	r18, r10
    540c:	3b 2d       	mov	r19, r11
    540e:	4c 2d       	mov	r20, r12
    5410:	5d 2d       	mov	r21, r13
    5412:	6e 2d       	mov	r22, r14
    5414:	7f 2d       	mov	r23, r15
    5416:	80 2f       	mov	r24, r16
    5418:	91 2f       	mov	r25, r17
    541a:	a2 2c       	mov	r10, r2
    541c:	b3 2c       	mov	r11, r3
    541e:	c4 2c       	mov	r12, r4
    5420:	d5 2c       	mov	r13, r5
    5422:	e6 2c       	mov	r14, r6
    5424:	f7 2c       	mov	r15, r7
    5426:	08 2d       	mov	r16, r8
    5428:	19 2d       	mov	r17, r9
    542a:	0e 94 87 03 	call	0x70e	; 0x70e <__divdi3>
    542e:	a2 2e       	mov	r10, r18
    5430:	b3 2e       	mov	r11, r19
    5432:	c4 2e       	mov	r12, r20
    5434:	d5 2e       	mov	r13, r21
    5436:	e6 2e       	mov	r14, r22
    5438:	f7 2e       	mov	r15, r23
    543a:	08 2f       	mov	r16, r24
    543c:	19 2f       	mov	r17, r25
    543e:	2a 2d       	mov	r18, r10
    5440:	3b 2d       	mov	r19, r11
    5442:	4c 2d       	mov	r20, r12
    5444:	5d 2d       	mov	r21, r13
    5446:	6e 2d       	mov	r22, r14
    5448:	7f 2d       	mov	r23, r15
    544a:	80 2f       	mov	r24, r16
    544c:	91 2f       	mov	r25, r17
    544e:	eb 81       	ldd	r30, Y+3	; 0x03
    5450:	fc 81       	ldd	r31, Y+4	; 0x04
    5452:	ee 0f       	add	r30, r30
    5454:	ff 1f       	adc	r31, r31
    5456:	ee 0f       	add	r30, r30
    5458:	ff 1f       	adc	r31, r31
    545a:	ee 0f       	add	r30, r30
    545c:	ff 1f       	adc	r31, r31
    545e:	ef 53       	subi	r30, 0x3F	; 63
    5460:	fe 4f       	sbci	r31, 0xFE	; 254
    5462:	20 83       	st	Z, r18
    5464:	31 83       	std	Z+1, r19	; 0x01
    5466:	42 83       	std	Z+2, r20	; 0x02
    5468:	53 83       	std	Z+3, r21	; 0x03
    546a:	64 83       	std	Z+4, r22	; 0x04
    546c:	75 83       	std	Z+5, r23	; 0x05
    546e:	86 83       	std	Z+6, r24	; 0x06
    5470:	97 83       	std	Z+7, r25	; 0x07
			shift_s64array_left((uint64*)Operands,Operations_index+1);
    5472:	21 ec       	ldi	r18, 0xC1	; 193
    5474:	31 e0       	ldi	r19, 0x01	; 1
    5476:	8a 81       	ldd	r24, Y+2	; 0x02
    5478:	48 2f       	mov	r20, r24
    547a:	4f 5f       	subi	r20, 0xFF	; 255
    547c:	c9 01       	movw	r24, r18
    547e:	64 2f       	mov	r22, r20
    5480:	0e 94 46 24 	call	0x488c	; 0x488c <shift_s64array_left>
			shift_uint8array_left(Operations,Operations_index);
    5484:	81 e2       	ldi	r24, 0x21	; 33
    5486:	92 e0       	ldi	r25, 0x02	; 2
    5488:	6a 81       	ldd	r22, Y+2	; 0x02
    548a:	0e 94 ba 24 	call	0x4974	; 0x4974 <shift_uint8array_left>
    548e:	03 c0       	rjmp	.+6      	; 0x5496 <calculate+0x224>

		}
		else
		{
			Operations_index++;
    5490:	8a 81       	ldd	r24, Y+2	; 0x02
    5492:	8f 5f       	subi	r24, 0xFF	; 255
    5494:	8a 83       	std	Y+2, r24	; 0x02
}

uint8 calculate(){
	uint8 Operations_index=0 , Operands_index;

	while((Operations[Operations_index] != '=') && (Operations[Operations_index] != '\0') )
    5496:	8a 81       	ldd	r24, Y+2	; 0x02
    5498:	88 2f       	mov	r24, r24
    549a:	90 e0       	ldi	r25, 0x00	; 0
    549c:	fc 01       	movw	r30, r24
    549e:	ef 5d       	subi	r30, 0xDF	; 223
    54a0:	fd 4f       	sbci	r31, 0xFD	; 253
    54a2:	80 81       	ld	r24, Z
    54a4:	8d 33       	cpi	r24, 0x3D	; 61
    54a6:	51 f0       	breq	.+20     	; 0x54bc <calculate+0x24a>
    54a8:	8a 81       	ldd	r24, Y+2	; 0x02
    54aa:	88 2f       	mov	r24, r24
    54ac:	90 e0       	ldi	r25, 0x00	; 0
    54ae:	fc 01       	movw	r30, r24
    54b0:	ef 5d       	subi	r30, 0xDF	; 223
    54b2:	fd 4f       	sbci	r31, 0xFD	; 253
    54b4:	80 81       	ld	r24, Z
    54b6:	88 23       	and	r24, r24
    54b8:	09 f0       	breq	.+2      	; 0x54bc <calculate+0x24a>
    54ba:	f4 ce       	rjmp	.-536    	; 0x52a4 <calculate+0x32>
		{
			Operations_index++;
		}
	}

	Operations_index=0; Operands_index =1;
    54bc:	1a 82       	std	Y+2, r1	; 0x02
    54be:	81 e0       	ldi	r24, 0x01	; 1
    54c0:	89 83       	std	Y+1, r24	; 0x01
	Result = Operands[0];
    54c2:	a0 90 c1 01 	lds	r10, 0x01C1
    54c6:	b0 90 c2 01 	lds	r11, 0x01C2
    54ca:	c0 90 c3 01 	lds	r12, 0x01C3
    54ce:	d0 90 c4 01 	lds	r13, 0x01C4
    54d2:	e0 90 c5 01 	lds	r14, 0x01C5
    54d6:	f0 90 c6 01 	lds	r15, 0x01C6
    54da:	00 91 c7 01 	lds	r16, 0x01C7
    54de:	10 91 c8 01 	lds	r17, 0x01C8
    54e2:	2a 2d       	mov	r18, r10
    54e4:	3b 2d       	mov	r19, r11
    54e6:	4c 2d       	mov	r20, r12
    54e8:	5d 2d       	mov	r21, r13
    54ea:	6e 2d       	mov	r22, r14
    54ec:	7f 2d       	mov	r23, r15
    54ee:	80 2f       	mov	r24, r16
    54f0:	91 2f       	mov	r25, r17
    54f2:	0e 94 8c 02 	call	0x518	; 0x518 <__floatdisf>
    54f6:	dc 01       	movw	r26, r24
    54f8:	cb 01       	movw	r24, r22
    54fa:	80 93 a8 01 	sts	0x01A8, r24
    54fe:	90 93 a9 01 	sts	0x01A9, r25
    5502:	a0 93 aa 01 	sts	0x01AA, r26
    5506:	b0 93 ab 01 	sts	0x01AB, r27
    550a:	64 c0       	rjmp	.+200    	; 0x55d4 <calculate+0x362>
	while((Operations[Operations_index] != '=') && (Operands[Operands_index] != '\0') )
	{
		Result =SubCalculate(Result,Operands[Operands_index],Operations[Operations_index]);
    550c:	80 91 a8 01 	lds	r24, 0x01A8
    5510:	90 91 a9 01 	lds	r25, 0x01A9
    5514:	a0 91 aa 01 	lds	r26, 0x01AA
    5518:	b0 91 ab 01 	lds	r27, 0x01AB
    551c:	bc 01       	movw	r22, r24
    551e:	cd 01       	movw	r24, r26
    5520:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__fixsfdi>
    5524:	a2 2e       	mov	r10, r18
    5526:	b3 2e       	mov	r11, r19
    5528:	c4 2e       	mov	r12, r20
    552a:	d5 2e       	mov	r13, r21
    552c:	e6 2e       	mov	r14, r22
    552e:	f7 2e       	mov	r15, r23
    5530:	08 2f       	mov	r16, r24
    5532:	19 2f       	mov	r17, r25
    5534:	89 81       	ldd	r24, Y+1	; 0x01
    5536:	88 2f       	mov	r24, r24
    5538:	90 e0       	ldi	r25, 0x00	; 0
    553a:	88 0f       	add	r24, r24
    553c:	99 1f       	adc	r25, r25
    553e:	88 0f       	add	r24, r24
    5540:	99 1f       	adc	r25, r25
    5542:	88 0f       	add	r24, r24
    5544:	99 1f       	adc	r25, r25
    5546:	fc 01       	movw	r30, r24
    5548:	ef 53       	subi	r30, 0x3F	; 63
    554a:	fe 4f       	sbci	r31, 0xFE	; 254
    554c:	20 80       	ld	r2, Z
    554e:	31 80       	ldd	r3, Z+1	; 0x01
    5550:	42 80       	ldd	r4, Z+2	; 0x02
    5552:	53 80       	ldd	r5, Z+3	; 0x03
    5554:	64 80       	ldd	r6, Z+4	; 0x04
    5556:	75 80       	ldd	r7, Z+5	; 0x05
    5558:	86 80       	ldd	r8, Z+6	; 0x06
    555a:	97 80       	ldd	r9, Z+7	; 0x07
    555c:	8a 81       	ldd	r24, Y+2	; 0x02
    555e:	88 2f       	mov	r24, r24
    5560:	90 e0       	ldi	r25, 0x00	; 0
    5562:	fc 01       	movw	r30, r24
    5564:	ef 5d       	subi	r30, 0xDF	; 223
    5566:	fd 4f       	sbci	r31, 0xFD	; 253
    5568:	e0 81       	ld	r30, Z
    556a:	2a 2d       	mov	r18, r10
    556c:	3b 2d       	mov	r19, r11
    556e:	4c 2d       	mov	r20, r12
    5570:	5d 2d       	mov	r21, r13
    5572:	6e 2d       	mov	r22, r14
    5574:	7f 2d       	mov	r23, r15
    5576:	80 2f       	mov	r24, r16
    5578:	91 2f       	mov	r25, r17
    557a:	a2 2c       	mov	r10, r2
    557c:	b3 2c       	mov	r11, r3
    557e:	c4 2c       	mov	r12, r4
    5580:	d5 2c       	mov	r13, r5
    5582:	e6 2c       	mov	r14, r6
    5584:	f7 2c       	mov	r15, r7
    5586:	08 2d       	mov	r16, r8
    5588:	19 2d       	mov	r17, r9
    558a:	8e 2e       	mov	r8, r30
    558c:	0e 94 f0 24 	call	0x49e0	; 0x49e0 <SubCalculate>
    5590:	a2 2e       	mov	r10, r18
    5592:	b3 2e       	mov	r11, r19
    5594:	c4 2e       	mov	r12, r20
    5596:	d5 2e       	mov	r13, r21
    5598:	e6 2e       	mov	r14, r22
    559a:	f7 2e       	mov	r15, r23
    559c:	08 2f       	mov	r16, r24
    559e:	19 2f       	mov	r17, r25
    55a0:	2a 2d       	mov	r18, r10
    55a2:	3b 2d       	mov	r19, r11
    55a4:	4c 2d       	mov	r20, r12
    55a6:	5d 2d       	mov	r21, r13
    55a8:	6e 2d       	mov	r22, r14
    55aa:	7f 2d       	mov	r23, r15
    55ac:	80 2f       	mov	r24, r16
    55ae:	91 2f       	mov	r25, r17
    55b0:	0e 94 8c 02 	call	0x518	; 0x518 <__floatdisf>
    55b4:	dc 01       	movw	r26, r24
    55b6:	cb 01       	movw	r24, r22
    55b8:	80 93 a8 01 	sts	0x01A8, r24
    55bc:	90 93 a9 01 	sts	0x01A9, r25
    55c0:	a0 93 aa 01 	sts	0x01AA, r26
    55c4:	b0 93 ab 01 	sts	0x01AB, r27
		Operations_index++;
    55c8:	8a 81       	ldd	r24, Y+2	; 0x02
    55ca:	8f 5f       	subi	r24, 0xFF	; 255
    55cc:	8a 83       	std	Y+2, r24	; 0x02
		Operands_index++;
    55ce:	89 81       	ldd	r24, Y+1	; 0x01
    55d0:	8f 5f       	subi	r24, 0xFF	; 255
    55d2:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	Operations_index=0; Operands_index =1;
	Result = Operands[0];
	while((Operations[Operations_index] != '=') && (Operands[Operands_index] != '\0') )
    55d4:	8a 81       	ldd	r24, Y+2	; 0x02
    55d6:	88 2f       	mov	r24, r24
    55d8:	90 e0       	ldi	r25, 0x00	; 0
    55da:	fc 01       	movw	r30, r24
    55dc:	ef 5d       	subi	r30, 0xDF	; 223
    55de:	fd 4f       	sbci	r31, 0xFD	; 253
    55e0:	80 81       	ld	r24, Z
    55e2:	8d 33       	cpi	r24, 0x3D	; 61
    55e4:	f9 f0       	breq	.+62     	; 0x5624 <calculate+0x3b2>
    55e6:	89 81       	ldd	r24, Y+1	; 0x01
    55e8:	88 2f       	mov	r24, r24
    55ea:	90 e0       	ldi	r25, 0x00	; 0
    55ec:	88 0f       	add	r24, r24
    55ee:	99 1f       	adc	r25, r25
    55f0:	88 0f       	add	r24, r24
    55f2:	99 1f       	adc	r25, r25
    55f4:	88 0f       	add	r24, r24
    55f6:	99 1f       	adc	r25, r25
    55f8:	fc 01       	movw	r30, r24
    55fa:	ef 53       	subi	r30, 0x3F	; 63
    55fc:	fe 4f       	sbci	r31, 0xFE	; 254
    55fe:	20 81       	ld	r18, Z
    5600:	31 81       	ldd	r19, Z+1	; 0x01
    5602:	42 81       	ldd	r20, Z+2	; 0x02
    5604:	53 81       	ldd	r21, Z+3	; 0x03
    5606:	64 81       	ldd	r22, Z+4	; 0x04
    5608:	75 81       	ldd	r23, Z+5	; 0x05
    560a:	86 81       	ldd	r24, Z+6	; 0x06
    560c:	97 81       	ldd	r25, Z+7	; 0x07
    560e:	e2 2f       	mov	r30, r18
    5610:	e3 2b       	or	r30, r19
    5612:	e4 2b       	or	r30, r20
    5614:	e5 2b       	or	r30, r21
    5616:	e6 2b       	or	r30, r22
    5618:	e7 2b       	or	r30, r23
    561a:	e8 2b       	or	r30, r24
    561c:	e9 2b       	or	r30, r25
    561e:	ee 23       	and	r30, r30
    5620:	09 f0       	breq	.+2      	; 0x5624 <calculate+0x3b2>
    5622:	74 cf       	rjmp	.-280    	; 0x550c <calculate+0x29a>
		Result =SubCalculate(Result,Operands[Operands_index],Operations[Operations_index]);
		Operations_index++;
		Operands_index++;
	}

	return DisplayPoint;
    5624:	84 e0       	ldi	r24, 0x04	; 4
}
    5626:	26 96       	adiw	r28, 0x06	; 6
    5628:	0f b6       	in	r0, 0x3f	; 63
    562a:	f8 94       	cli
    562c:	de bf       	out	0x3e, r29	; 62
    562e:	0f be       	out	0x3f, r0	; 63
    5630:	cd bf       	out	0x3d, r28	; 61
    5632:	cf 91       	pop	r28
    5634:	df 91       	pop	r29
    5636:	1f 91       	pop	r17
    5638:	0f 91       	pop	r16
    563a:	ff 90       	pop	r15
    563c:	ef 90       	pop	r14
    563e:	df 90       	pop	r13
    5640:	cf 90       	pop	r12
    5642:	bf 90       	pop	r11
    5644:	af 90       	pop	r10
    5646:	9f 90       	pop	r9
    5648:	8f 90       	pop	r8
    564a:	7f 90       	pop	r7
    564c:	6f 90       	pop	r6
    564e:	5f 90       	pop	r5
    5650:	4f 90       	pop	r4
    5652:	3f 90       	pop	r3
    5654:	2f 90       	pop	r2
    5656:	08 95       	ret

00005658 <display>:

uint8  display()
{
    5658:	df 93       	push	r29
    565a:	cf 93       	push	r28
    565c:	cd b7       	in	r28, 0x3d	; 61
    565e:	de b7       	in	r29, 0x3e	; 62

	LCD_voidMoveCursor(2,1);
    5660:	82 e0       	ldi	r24, 0x02	; 2
    5662:	61 e0       	ldi	r22, 0x01	; 1
    5664:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <LCD_voidMoveCursor>
	LCD_voidWriteRealNumber(Result);
    5668:	80 91 a8 01 	lds	r24, 0x01A8
    566c:	90 91 a9 01 	lds	r25, 0x01A9
    5670:	a0 91 aa 01 	lds	r26, 0x01AA
    5674:	b0 91 ab 01 	lds	r27, 0x01AB
    5678:	bc 01       	movw	r22, r24
    567a:	cd 01       	movw	r24, r26
    567c:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <LCD_voidWriteRealNumber>

	return Reset;
    5680:	80 e0       	ldi	r24, 0x00	; 0
}
    5682:	cf 91       	pop	r28
    5684:	df 91       	pop	r29
    5686:	08 95       	ret

00005688 <Resetall>:

uint8  Resetall()
{
    5688:	df 93       	push	r29
    568a:	cf 93       	push	r28
    568c:	0f 92       	push	r0
    568e:	cd b7       	in	r28, 0x3d	; 61
    5690:	de b7       	in	r29, 0x3e	; 62
	uint8 index=0;
    5692:	19 82       	std	Y+1, r1	; 0x01
	for(index=0;index<MaxNumberOfDigit;index++)
    5694:	19 82       	std	Y+1, r1	; 0x01
    5696:	0a c0       	rjmp	.+20     	; 0x56ac <Resetall+0x24>
	Digit[index]=0;
    5698:	89 81       	ldd	r24, Y+1	; 0x01
    569a:	88 2f       	mov	r24, r24
    569c:	90 e0       	ldi	r25, 0x00	; 0
    569e:	fc 01       	movw	r30, r24
    56a0:	ef 54       	subi	r30, 0x4F	; 79
    56a2:	fe 4f       	sbci	r31, 0xFE	; 254
    56a4:	10 82       	st	Z, r1
}

uint8  Resetall()
{
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
    56a6:	89 81       	ldd	r24, Y+1	; 0x01
    56a8:	8f 5f       	subi	r24, 0xFF	; 255
    56aa:	89 83       	std	Y+1, r24	; 0x01
    56ac:	89 81       	ldd	r24, Y+1	; 0x01
    56ae:	80 31       	cpi	r24, 0x10	; 16
    56b0:	98 f3       	brcs	.-26     	; 0x5698 <Resetall+0x10>
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
    56b2:	19 82       	std	Y+1, r1	; 0x01
    56b4:	17 c0       	rjmp	.+46     	; 0x56e4 <Resetall+0x5c>
	Operands[index]=0;
    56b6:	89 81       	ldd	r24, Y+1	; 0x01
    56b8:	88 2f       	mov	r24, r24
    56ba:	90 e0       	ldi	r25, 0x00	; 0
    56bc:	88 0f       	add	r24, r24
    56be:	99 1f       	adc	r25, r25
    56c0:	88 0f       	add	r24, r24
    56c2:	99 1f       	adc	r25, r25
    56c4:	88 0f       	add	r24, r24
    56c6:	99 1f       	adc	r25, r25
    56c8:	fc 01       	movw	r30, r24
    56ca:	ef 53       	subi	r30, 0x3F	; 63
    56cc:	fe 4f       	sbci	r31, 0xFE	; 254
    56ce:	10 82       	st	Z, r1
    56d0:	11 82       	std	Z+1, r1	; 0x01
    56d2:	12 82       	std	Z+2, r1	; 0x02
    56d4:	13 82       	std	Z+3, r1	; 0x03
    56d6:	14 82       	std	Z+4, r1	; 0x04
    56d8:	15 82       	std	Z+5, r1	; 0x05
    56da:	16 82       	std	Z+6, r1	; 0x06
    56dc:	17 82       	std	Z+7, r1	; 0x07
uint8  Resetall()
{
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
    56de:	89 81       	ldd	r24, Y+1	; 0x01
    56e0:	8f 5f       	subi	r24, 0xFF	; 255
    56e2:	89 83       	std	Y+1, r24	; 0x01
    56e4:	89 81       	ldd	r24, Y+1	; 0x01
    56e6:	8c 30       	cpi	r24, 0x0C	; 12
    56e8:	30 f3       	brcs	.-52     	; 0x56b6 <Resetall+0x2e>
	Operands[index]=0;
	for(index=0;index<MaxNumberOfOperations;index++)
    56ea:	19 82       	std	Y+1, r1	; 0x01
    56ec:	0a c0       	rjmp	.+20     	; 0x5702 <Resetall+0x7a>
	Operations[index]=0;
    56ee:	89 81       	ldd	r24, Y+1	; 0x01
    56f0:	88 2f       	mov	r24, r24
    56f2:	90 e0       	ldi	r25, 0x00	; 0
    56f4:	fc 01       	movw	r30, r24
    56f6:	ef 5d       	subi	r30, 0xDF	; 223
    56f8:	fd 4f       	sbci	r31, 0xFD	; 253
    56fa:	10 82       	st	Z, r1
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
	Operands[index]=0;
	for(index=0;index<MaxNumberOfOperations;index++)
    56fc:	89 81       	ldd	r24, Y+1	; 0x01
    56fe:	8f 5f       	subi	r24, 0xFF	; 255
    5700:	89 83       	std	Y+1, r24	; 0x01
    5702:	89 81       	ldd	r24, Y+1	; 0x01
    5704:	8b 30       	cpi	r24, 0x0B	; 11
    5706:	98 f3       	brcs	.-26     	; 0x56ee <Resetall+0x66>
	Operations[index]=0;
	OperandsCounter=0;
    5708:	10 92 ac 01 	sts	0x01AC, r1
	OperationsCounter=0;
    570c:	10 92 ad 01 	sts	0x01AD, r1
	DigitCounter=0;
    5710:	10 92 ae 01 	sts	0x01AE, r1
	Result=0;
    5714:	80 e0       	ldi	r24, 0x00	; 0
    5716:	90 e0       	ldi	r25, 0x00	; 0
    5718:	a0 e0       	ldi	r26, 0x00	; 0
    571a:	b0 e0       	ldi	r27, 0x00	; 0
    571c:	80 93 a8 01 	sts	0x01A8, r24
    5720:	90 93 a9 01 	sts	0x01A9, r25
    5724:	a0 93 aa 01 	sts	0x01AA, r26
    5728:	b0 93 ab 01 	sts	0x01AB, r27

	return StartPoint;
    572c:	81 e0       	ldi	r24, 0x01	; 1
}
    572e:	0f 90       	pop	r0
    5730:	cf 91       	pop	r28
    5732:	df 91       	pop	r29
    5734:	08 95       	ret

00005736 <main>:
#include "../HAL/KEYPAD/KEYPAD_int.h"
#include "../HAL/LCD/LCD_int.h"
#include "calculator.h"
#include <util/delay.h>

void main (void){
    5736:	df 93       	push	r29
    5738:	cf 93       	push	r28
    573a:	0f 92       	push	r0
    573c:	cd b7       	in	r28, 0x3d	; 61
    573e:	de b7       	in	r29, 0x3e	; 62
	LCD_voidInit();
    5740:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <LCD_voidInit>
	Keypad_voidInit();
    5744:	0e 94 7d 1f 	call	0x3efa	; 0x3efa <Keypad_voidInit>
	uint8 Flag;

		while(1)
		{

					Flag=StartPoint;
    5748:	81 e0       	ldi	r24, 0x01	; 1
    574a:	89 83       	std	Y+1, r24	; 0x01
    574c:	03 c0       	rjmp	.+6      	; 0x5754 <main+0x1e>
					while(Flag==StartPoint)		{   Flag=ScanData();	  }
    574e:	0e 94 0d 21 	call	0x421a	; 0x421a <ScanData>
    5752:	89 83       	std	Y+1, r24	; 0x01
    5754:	89 81       	ldd	r24, Y+1	; 0x01
    5756:	81 30       	cpi	r24, 0x01	; 1
    5758:	d1 f3       	breq	.-12     	; 0x574e <main+0x18>
    575a:	03 c0       	rjmp	.+6      	; 0x5762 <main+0x2c>
					while(Flag==AnalyzePoint)	{   Flag=AnalyzeData();	  }
    575c:	0e 94 9b 22 	call	0x4536	; 0x4536 <AnalyzeData>
    5760:	89 83       	std	Y+1, r24	; 0x01
    5762:	89 81       	ldd	r24, Y+1	; 0x01
    5764:	82 30       	cpi	r24, 0x02	; 2
    5766:	d1 f3       	breq	.-12     	; 0x575c <main+0x26>
    5768:	03 c0       	rjmp	.+6      	; 0x5770 <main+0x3a>
					while(Flag==CalculatePoint)	{   Flag=calculate();     }
    576a:	0e 94 39 29 	call	0x5272	; 0x5272 <calculate>
    576e:	89 83       	std	Y+1, r24	; 0x01
    5770:	89 81       	ldd	r24, Y+1	; 0x01
    5772:	83 30       	cpi	r24, 0x03	; 3
    5774:	d1 f3       	breq	.-12     	; 0x576a <main+0x34>
    5776:	03 c0       	rjmp	.+6      	; 0x577e <main+0x48>
					while(Flag==DisplayPoint)	{   Flag=display();	      }
    5778:	0e 94 2c 2b 	call	0x5658	; 0x5658 <display>
    577c:	89 83       	std	Y+1, r24	; 0x01
    577e:	89 81       	ldd	r24, Y+1	; 0x01
    5780:	84 30       	cpi	r24, 0x04	; 4
    5782:	d1 f3       	breq	.-12     	; 0x5778 <main+0x42>
    5784:	03 c0       	rjmp	.+6      	; 0x578c <main+0x56>
					while(Flag==Reset)			{   Flag=Resetall();      }
    5786:	0e 94 44 2b 	call	0x5688	; 0x5688 <Resetall>
    578a:	89 83       	std	Y+1, r24	; 0x01
    578c:	89 81       	ldd	r24, Y+1	; 0x01
    578e:	88 23       	and	r24, r24
    5790:	d1 f3       	breq	.-12     	; 0x5786 <main+0x50>

					while(keypad_u8CheckPress()!='A'){}
    5792:	0e 94 f3 1f 	call	0x3fe6	; 0x3fe6 <keypad_u8CheckPress>
    5796:	81 34       	cpi	r24, 0x41	; 65
    5798:	e1 f7       	brne	.-8      	; 0x5792 <main+0x5c>
					LCD_voidWriteCmd(0X01);
    579a:	81 e0       	ldi	r24, 0x01	; 1
    579c:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <LCD_voidWriteCmd>
    57a0:	d3 cf       	rjmp	.-90     	; 0x5748 <main+0x12>

000057a2 <__mulsi3>:
    57a2:	62 9f       	mul	r22, r18
    57a4:	d0 01       	movw	r26, r0
    57a6:	73 9f       	mul	r23, r19
    57a8:	f0 01       	movw	r30, r0
    57aa:	82 9f       	mul	r24, r18
    57ac:	e0 0d       	add	r30, r0
    57ae:	f1 1d       	adc	r31, r1
    57b0:	64 9f       	mul	r22, r20
    57b2:	e0 0d       	add	r30, r0
    57b4:	f1 1d       	adc	r31, r1
    57b6:	92 9f       	mul	r25, r18
    57b8:	f0 0d       	add	r31, r0
    57ba:	83 9f       	mul	r24, r19
    57bc:	f0 0d       	add	r31, r0
    57be:	74 9f       	mul	r23, r20
    57c0:	f0 0d       	add	r31, r0
    57c2:	65 9f       	mul	r22, r21
    57c4:	f0 0d       	add	r31, r0
    57c6:	99 27       	eor	r25, r25
    57c8:	72 9f       	mul	r23, r18
    57ca:	b0 0d       	add	r27, r0
    57cc:	e1 1d       	adc	r30, r1
    57ce:	f9 1f       	adc	r31, r25
    57d0:	63 9f       	mul	r22, r19
    57d2:	b0 0d       	add	r27, r0
    57d4:	e1 1d       	adc	r30, r1
    57d6:	f9 1f       	adc	r31, r25
    57d8:	bd 01       	movw	r22, r26
    57da:	cf 01       	movw	r24, r30
    57dc:	11 24       	eor	r1, r1
    57de:	08 95       	ret

000057e0 <__udivmodsi4>:
    57e0:	a1 e2       	ldi	r26, 0x21	; 33
    57e2:	1a 2e       	mov	r1, r26
    57e4:	aa 1b       	sub	r26, r26
    57e6:	bb 1b       	sub	r27, r27
    57e8:	fd 01       	movw	r30, r26
    57ea:	0d c0       	rjmp	.+26     	; 0x5806 <__udivmodsi4_ep>

000057ec <__udivmodsi4_loop>:
    57ec:	aa 1f       	adc	r26, r26
    57ee:	bb 1f       	adc	r27, r27
    57f0:	ee 1f       	adc	r30, r30
    57f2:	ff 1f       	adc	r31, r31
    57f4:	a2 17       	cp	r26, r18
    57f6:	b3 07       	cpc	r27, r19
    57f8:	e4 07       	cpc	r30, r20
    57fa:	f5 07       	cpc	r31, r21
    57fc:	20 f0       	brcs	.+8      	; 0x5806 <__udivmodsi4_ep>
    57fe:	a2 1b       	sub	r26, r18
    5800:	b3 0b       	sbc	r27, r19
    5802:	e4 0b       	sbc	r30, r20
    5804:	f5 0b       	sbc	r31, r21

00005806 <__udivmodsi4_ep>:
    5806:	66 1f       	adc	r22, r22
    5808:	77 1f       	adc	r23, r23
    580a:	88 1f       	adc	r24, r24
    580c:	99 1f       	adc	r25, r25
    580e:	1a 94       	dec	r1
    5810:	69 f7       	brne	.-38     	; 0x57ec <__udivmodsi4_loop>
    5812:	60 95       	com	r22
    5814:	70 95       	com	r23
    5816:	80 95       	com	r24
    5818:	90 95       	com	r25
    581a:	9b 01       	movw	r18, r22
    581c:	ac 01       	movw	r20, r24
    581e:	bd 01       	movw	r22, r26
    5820:	cf 01       	movw	r24, r30
    5822:	08 95       	ret

00005824 <__prologue_saves__>:
    5824:	2f 92       	push	r2
    5826:	3f 92       	push	r3
    5828:	4f 92       	push	r4
    582a:	5f 92       	push	r5
    582c:	6f 92       	push	r6
    582e:	7f 92       	push	r7
    5830:	8f 92       	push	r8
    5832:	9f 92       	push	r9
    5834:	af 92       	push	r10
    5836:	bf 92       	push	r11
    5838:	cf 92       	push	r12
    583a:	df 92       	push	r13
    583c:	ef 92       	push	r14
    583e:	ff 92       	push	r15
    5840:	0f 93       	push	r16
    5842:	1f 93       	push	r17
    5844:	cf 93       	push	r28
    5846:	df 93       	push	r29
    5848:	cd b7       	in	r28, 0x3d	; 61
    584a:	de b7       	in	r29, 0x3e	; 62
    584c:	ca 1b       	sub	r28, r26
    584e:	db 0b       	sbc	r29, r27
    5850:	0f b6       	in	r0, 0x3f	; 63
    5852:	f8 94       	cli
    5854:	de bf       	out	0x3e, r29	; 62
    5856:	0f be       	out	0x3f, r0	; 63
    5858:	cd bf       	out	0x3d, r28	; 61
    585a:	09 94       	ijmp

0000585c <__epilogue_restores__>:
    585c:	2a 88       	ldd	r2, Y+18	; 0x12
    585e:	39 88       	ldd	r3, Y+17	; 0x11
    5860:	48 88       	ldd	r4, Y+16	; 0x10
    5862:	5f 84       	ldd	r5, Y+15	; 0x0f
    5864:	6e 84       	ldd	r6, Y+14	; 0x0e
    5866:	7d 84       	ldd	r7, Y+13	; 0x0d
    5868:	8c 84       	ldd	r8, Y+12	; 0x0c
    586a:	9b 84       	ldd	r9, Y+11	; 0x0b
    586c:	aa 84       	ldd	r10, Y+10	; 0x0a
    586e:	b9 84       	ldd	r11, Y+9	; 0x09
    5870:	c8 84       	ldd	r12, Y+8	; 0x08
    5872:	df 80       	ldd	r13, Y+7	; 0x07
    5874:	ee 80       	ldd	r14, Y+6	; 0x06
    5876:	fd 80       	ldd	r15, Y+5	; 0x05
    5878:	0c 81       	ldd	r16, Y+4	; 0x04
    587a:	1b 81       	ldd	r17, Y+3	; 0x03
    587c:	aa 81       	ldd	r26, Y+2	; 0x02
    587e:	b9 81       	ldd	r27, Y+1	; 0x01
    5880:	ce 0f       	add	r28, r30
    5882:	d1 1d       	adc	r29, r1
    5884:	0f b6       	in	r0, 0x3f	; 63
    5886:	f8 94       	cli
    5888:	de bf       	out	0x3e, r29	; 62
    588a:	0f be       	out	0x3f, r0	; 63
    588c:	cd bf       	out	0x3d, r28	; 61
    588e:	ed 01       	movw	r28, r26
    5890:	08 95       	ret

00005892 <sprintf>:
    5892:	ae e0       	ldi	r26, 0x0E	; 14
    5894:	b0 e0       	ldi	r27, 0x00	; 0
    5896:	ef e4       	ldi	r30, 0x4F	; 79
    5898:	fc e2       	ldi	r31, 0x2C	; 44
    589a:	0c 94 20 2c 	jmp	0x5840	; 0x5840 <__prologue_saves__+0x1c>
    589e:	0d 89       	ldd	r16, Y+21	; 0x15
    58a0:	1e 89       	ldd	r17, Y+22	; 0x16
    58a2:	86 e0       	ldi	r24, 0x06	; 6
    58a4:	8c 83       	std	Y+4, r24	; 0x04
    58a6:	1a 83       	std	Y+2, r17	; 0x02
    58a8:	09 83       	std	Y+1, r16	; 0x01
    58aa:	8f ef       	ldi	r24, 0xFF	; 255
    58ac:	9f e7       	ldi	r25, 0x7F	; 127
    58ae:	9e 83       	std	Y+6, r25	; 0x06
    58b0:	8d 83       	std	Y+5, r24	; 0x05
    58b2:	9e 01       	movw	r18, r28
    58b4:	27 5e       	subi	r18, 0xE7	; 231
    58b6:	3f 4f       	sbci	r19, 0xFF	; 255
    58b8:	ce 01       	movw	r24, r28
    58ba:	01 96       	adiw	r24, 0x01	; 1
    58bc:	6f 89       	ldd	r22, Y+23	; 0x17
    58be:	78 8d       	ldd	r23, Y+24	; 0x18
    58c0:	a9 01       	movw	r20, r18
    58c2:	0e 94 6d 2c 	call	0x58da	; 0x58da <vfprintf>
    58c6:	2f 81       	ldd	r18, Y+7	; 0x07
    58c8:	38 85       	ldd	r19, Y+8	; 0x08
    58ca:	02 0f       	add	r16, r18
    58cc:	13 1f       	adc	r17, r19
    58ce:	f8 01       	movw	r30, r16
    58d0:	10 82       	st	Z, r1
    58d2:	2e 96       	adiw	r28, 0x0e	; 14
    58d4:	e4 e0       	ldi	r30, 0x04	; 4
    58d6:	0c 94 3c 2c 	jmp	0x5878	; 0x5878 <__epilogue_restores__+0x1c>

000058da <vfprintf>:
    58da:	ab e0       	ldi	r26, 0x0B	; 11
    58dc:	b0 e0       	ldi	r27, 0x00	; 0
    58de:	e3 e7       	ldi	r30, 0x73	; 115
    58e0:	fc e2       	ldi	r31, 0x2C	; 44
    58e2:	0c 94 12 2c 	jmp	0x5824	; 0x5824 <__prologue_saves__>
    58e6:	3c 01       	movw	r6, r24
    58e8:	2b 01       	movw	r4, r22
    58ea:	5a 01       	movw	r10, r20
    58ec:	fc 01       	movw	r30, r24
    58ee:	17 82       	std	Z+7, r1	; 0x07
    58f0:	16 82       	std	Z+6, r1	; 0x06
    58f2:	83 81       	ldd	r24, Z+3	; 0x03
    58f4:	81 fd       	sbrc	r24, 1
    58f6:	03 c0       	rjmp	.+6      	; 0x58fe <vfprintf+0x24>
    58f8:	6f ef       	ldi	r22, 0xFF	; 255
    58fa:	7f ef       	ldi	r23, 0xFF	; 255
    58fc:	c6 c1       	rjmp	.+908    	; 0x5c8a <vfprintf+0x3b0>
    58fe:	9a e0       	ldi	r25, 0x0A	; 10
    5900:	89 2e       	mov	r8, r25
    5902:	1e 01       	movw	r2, r28
    5904:	08 94       	sec
    5906:	21 1c       	adc	r2, r1
    5908:	31 1c       	adc	r3, r1
    590a:	f3 01       	movw	r30, r6
    590c:	23 81       	ldd	r18, Z+3	; 0x03
    590e:	f2 01       	movw	r30, r4
    5910:	23 fd       	sbrc	r18, 3
    5912:	85 91       	lpm	r24, Z+
    5914:	23 ff       	sbrs	r18, 3
    5916:	81 91       	ld	r24, Z+
    5918:	2f 01       	movw	r4, r30
    591a:	88 23       	and	r24, r24
    591c:	09 f4       	brne	.+2      	; 0x5920 <vfprintf+0x46>
    591e:	b2 c1       	rjmp	.+868    	; 0x5c84 <vfprintf+0x3aa>
    5920:	85 32       	cpi	r24, 0x25	; 37
    5922:	39 f4       	brne	.+14     	; 0x5932 <vfprintf+0x58>
    5924:	23 fd       	sbrc	r18, 3
    5926:	85 91       	lpm	r24, Z+
    5928:	23 ff       	sbrs	r18, 3
    592a:	81 91       	ld	r24, Z+
    592c:	2f 01       	movw	r4, r30
    592e:	85 32       	cpi	r24, 0x25	; 37
    5930:	29 f4       	brne	.+10     	; 0x593c <vfprintf+0x62>
    5932:	90 e0       	ldi	r25, 0x00	; 0
    5934:	b3 01       	movw	r22, r6
    5936:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    593a:	e7 cf       	rjmp	.-50     	; 0x590a <vfprintf+0x30>
    593c:	98 2f       	mov	r25, r24
    593e:	ff 24       	eor	r15, r15
    5940:	ee 24       	eor	r14, r14
    5942:	99 24       	eor	r9, r9
    5944:	ff e1       	ldi	r31, 0x1F	; 31
    5946:	ff 15       	cp	r31, r15
    5948:	d0 f0       	brcs	.+52     	; 0x597e <vfprintf+0xa4>
    594a:	9b 32       	cpi	r25, 0x2B	; 43
    594c:	69 f0       	breq	.+26     	; 0x5968 <vfprintf+0x8e>
    594e:	9c 32       	cpi	r25, 0x2C	; 44
    5950:	28 f4       	brcc	.+10     	; 0x595c <vfprintf+0x82>
    5952:	90 32       	cpi	r25, 0x20	; 32
    5954:	59 f0       	breq	.+22     	; 0x596c <vfprintf+0x92>
    5956:	93 32       	cpi	r25, 0x23	; 35
    5958:	91 f4       	brne	.+36     	; 0x597e <vfprintf+0xa4>
    595a:	0e c0       	rjmp	.+28     	; 0x5978 <vfprintf+0x9e>
    595c:	9d 32       	cpi	r25, 0x2D	; 45
    595e:	49 f0       	breq	.+18     	; 0x5972 <vfprintf+0x98>
    5960:	90 33       	cpi	r25, 0x30	; 48
    5962:	69 f4       	brne	.+26     	; 0x597e <vfprintf+0xa4>
    5964:	41 e0       	ldi	r20, 0x01	; 1
    5966:	24 c0       	rjmp	.+72     	; 0x59b0 <vfprintf+0xd6>
    5968:	52 e0       	ldi	r21, 0x02	; 2
    596a:	f5 2a       	or	r15, r21
    596c:	84 e0       	ldi	r24, 0x04	; 4
    596e:	f8 2a       	or	r15, r24
    5970:	28 c0       	rjmp	.+80     	; 0x59c2 <vfprintf+0xe8>
    5972:	98 e0       	ldi	r25, 0x08	; 8
    5974:	f9 2a       	or	r15, r25
    5976:	25 c0       	rjmp	.+74     	; 0x59c2 <vfprintf+0xe8>
    5978:	e0 e1       	ldi	r30, 0x10	; 16
    597a:	fe 2a       	or	r15, r30
    597c:	22 c0       	rjmp	.+68     	; 0x59c2 <vfprintf+0xe8>
    597e:	f7 fc       	sbrc	r15, 7
    5980:	29 c0       	rjmp	.+82     	; 0x59d4 <vfprintf+0xfa>
    5982:	89 2f       	mov	r24, r25
    5984:	80 53       	subi	r24, 0x30	; 48
    5986:	8a 30       	cpi	r24, 0x0A	; 10
    5988:	70 f4       	brcc	.+28     	; 0x59a6 <vfprintf+0xcc>
    598a:	f6 fe       	sbrs	r15, 6
    598c:	05 c0       	rjmp	.+10     	; 0x5998 <vfprintf+0xbe>
    598e:	98 9c       	mul	r9, r8
    5990:	90 2c       	mov	r9, r0
    5992:	11 24       	eor	r1, r1
    5994:	98 0e       	add	r9, r24
    5996:	15 c0       	rjmp	.+42     	; 0x59c2 <vfprintf+0xe8>
    5998:	e8 9c       	mul	r14, r8
    599a:	e0 2c       	mov	r14, r0
    599c:	11 24       	eor	r1, r1
    599e:	e8 0e       	add	r14, r24
    59a0:	f0 e2       	ldi	r31, 0x20	; 32
    59a2:	ff 2a       	or	r15, r31
    59a4:	0e c0       	rjmp	.+28     	; 0x59c2 <vfprintf+0xe8>
    59a6:	9e 32       	cpi	r25, 0x2E	; 46
    59a8:	29 f4       	brne	.+10     	; 0x59b4 <vfprintf+0xda>
    59aa:	f6 fc       	sbrc	r15, 6
    59ac:	6b c1       	rjmp	.+726    	; 0x5c84 <vfprintf+0x3aa>
    59ae:	40 e4       	ldi	r20, 0x40	; 64
    59b0:	f4 2a       	or	r15, r20
    59b2:	07 c0       	rjmp	.+14     	; 0x59c2 <vfprintf+0xe8>
    59b4:	9c 36       	cpi	r25, 0x6C	; 108
    59b6:	19 f4       	brne	.+6      	; 0x59be <vfprintf+0xe4>
    59b8:	50 e8       	ldi	r21, 0x80	; 128
    59ba:	f5 2a       	or	r15, r21
    59bc:	02 c0       	rjmp	.+4      	; 0x59c2 <vfprintf+0xe8>
    59be:	98 36       	cpi	r25, 0x68	; 104
    59c0:	49 f4       	brne	.+18     	; 0x59d4 <vfprintf+0xfa>
    59c2:	f2 01       	movw	r30, r4
    59c4:	23 fd       	sbrc	r18, 3
    59c6:	95 91       	lpm	r25, Z+
    59c8:	23 ff       	sbrs	r18, 3
    59ca:	91 91       	ld	r25, Z+
    59cc:	2f 01       	movw	r4, r30
    59ce:	99 23       	and	r25, r25
    59d0:	09 f0       	breq	.+2      	; 0x59d4 <vfprintf+0xfa>
    59d2:	b8 cf       	rjmp	.-144    	; 0x5944 <vfprintf+0x6a>
    59d4:	89 2f       	mov	r24, r25
    59d6:	85 54       	subi	r24, 0x45	; 69
    59d8:	83 30       	cpi	r24, 0x03	; 3
    59da:	18 f0       	brcs	.+6      	; 0x59e2 <vfprintf+0x108>
    59dc:	80 52       	subi	r24, 0x20	; 32
    59de:	83 30       	cpi	r24, 0x03	; 3
    59e0:	38 f4       	brcc	.+14     	; 0x59f0 <vfprintf+0x116>
    59e2:	44 e0       	ldi	r20, 0x04	; 4
    59e4:	50 e0       	ldi	r21, 0x00	; 0
    59e6:	a4 0e       	add	r10, r20
    59e8:	b5 1e       	adc	r11, r21
    59ea:	5f e3       	ldi	r21, 0x3F	; 63
    59ec:	59 83       	std	Y+1, r21	; 0x01
    59ee:	0f c0       	rjmp	.+30     	; 0x5a0e <vfprintf+0x134>
    59f0:	93 36       	cpi	r25, 0x63	; 99
    59f2:	31 f0       	breq	.+12     	; 0x5a00 <vfprintf+0x126>
    59f4:	93 37       	cpi	r25, 0x73	; 115
    59f6:	79 f0       	breq	.+30     	; 0x5a16 <vfprintf+0x13c>
    59f8:	93 35       	cpi	r25, 0x53	; 83
    59fa:	09 f0       	breq	.+2      	; 0x59fe <vfprintf+0x124>
    59fc:	56 c0       	rjmp	.+172    	; 0x5aaa <vfprintf+0x1d0>
    59fe:	20 c0       	rjmp	.+64     	; 0x5a40 <vfprintf+0x166>
    5a00:	f5 01       	movw	r30, r10
    5a02:	80 81       	ld	r24, Z
    5a04:	89 83       	std	Y+1, r24	; 0x01
    5a06:	42 e0       	ldi	r20, 0x02	; 2
    5a08:	50 e0       	ldi	r21, 0x00	; 0
    5a0a:	a4 0e       	add	r10, r20
    5a0c:	b5 1e       	adc	r11, r21
    5a0e:	61 01       	movw	r12, r2
    5a10:	01 e0       	ldi	r16, 0x01	; 1
    5a12:	10 e0       	ldi	r17, 0x00	; 0
    5a14:	12 c0       	rjmp	.+36     	; 0x5a3a <vfprintf+0x160>
    5a16:	f5 01       	movw	r30, r10
    5a18:	c0 80       	ld	r12, Z
    5a1a:	d1 80       	ldd	r13, Z+1	; 0x01
    5a1c:	f6 fc       	sbrc	r15, 6
    5a1e:	03 c0       	rjmp	.+6      	; 0x5a26 <vfprintf+0x14c>
    5a20:	6f ef       	ldi	r22, 0xFF	; 255
    5a22:	7f ef       	ldi	r23, 0xFF	; 255
    5a24:	02 c0       	rjmp	.+4      	; 0x5a2a <vfprintf+0x150>
    5a26:	69 2d       	mov	r22, r9
    5a28:	70 e0       	ldi	r23, 0x00	; 0
    5a2a:	42 e0       	ldi	r20, 0x02	; 2
    5a2c:	50 e0       	ldi	r21, 0x00	; 0
    5a2e:	a4 0e       	add	r10, r20
    5a30:	b5 1e       	adc	r11, r21
    5a32:	c6 01       	movw	r24, r12
    5a34:	0e 94 55 2e 	call	0x5caa	; 0x5caa <strnlen>
    5a38:	8c 01       	movw	r16, r24
    5a3a:	5f e7       	ldi	r21, 0x7F	; 127
    5a3c:	f5 22       	and	r15, r21
    5a3e:	14 c0       	rjmp	.+40     	; 0x5a68 <vfprintf+0x18e>
    5a40:	f5 01       	movw	r30, r10
    5a42:	c0 80       	ld	r12, Z
    5a44:	d1 80       	ldd	r13, Z+1	; 0x01
    5a46:	f6 fc       	sbrc	r15, 6
    5a48:	03 c0       	rjmp	.+6      	; 0x5a50 <vfprintf+0x176>
    5a4a:	6f ef       	ldi	r22, 0xFF	; 255
    5a4c:	7f ef       	ldi	r23, 0xFF	; 255
    5a4e:	02 c0       	rjmp	.+4      	; 0x5a54 <vfprintf+0x17a>
    5a50:	69 2d       	mov	r22, r9
    5a52:	70 e0       	ldi	r23, 0x00	; 0
    5a54:	42 e0       	ldi	r20, 0x02	; 2
    5a56:	50 e0       	ldi	r21, 0x00	; 0
    5a58:	a4 0e       	add	r10, r20
    5a5a:	b5 1e       	adc	r11, r21
    5a5c:	c6 01       	movw	r24, r12
    5a5e:	0e 94 4a 2e 	call	0x5c94	; 0x5c94 <strnlen_P>
    5a62:	8c 01       	movw	r16, r24
    5a64:	50 e8       	ldi	r21, 0x80	; 128
    5a66:	f5 2a       	or	r15, r21
    5a68:	f3 fe       	sbrs	r15, 3
    5a6a:	07 c0       	rjmp	.+14     	; 0x5a7a <vfprintf+0x1a0>
    5a6c:	1a c0       	rjmp	.+52     	; 0x5aa2 <vfprintf+0x1c8>
    5a6e:	80 e2       	ldi	r24, 0x20	; 32
    5a70:	90 e0       	ldi	r25, 0x00	; 0
    5a72:	b3 01       	movw	r22, r6
    5a74:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    5a78:	ea 94       	dec	r14
    5a7a:	8e 2d       	mov	r24, r14
    5a7c:	90 e0       	ldi	r25, 0x00	; 0
    5a7e:	08 17       	cp	r16, r24
    5a80:	19 07       	cpc	r17, r25
    5a82:	a8 f3       	brcs	.-22     	; 0x5a6e <vfprintf+0x194>
    5a84:	0e c0       	rjmp	.+28     	; 0x5aa2 <vfprintf+0x1c8>
    5a86:	f6 01       	movw	r30, r12
    5a88:	f7 fc       	sbrc	r15, 7
    5a8a:	85 91       	lpm	r24, Z+
    5a8c:	f7 fe       	sbrs	r15, 7
    5a8e:	81 91       	ld	r24, Z+
    5a90:	6f 01       	movw	r12, r30
    5a92:	90 e0       	ldi	r25, 0x00	; 0
    5a94:	b3 01       	movw	r22, r6
    5a96:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    5a9a:	e1 10       	cpse	r14, r1
    5a9c:	ea 94       	dec	r14
    5a9e:	01 50       	subi	r16, 0x01	; 1
    5aa0:	10 40       	sbci	r17, 0x00	; 0
    5aa2:	01 15       	cp	r16, r1
    5aa4:	11 05       	cpc	r17, r1
    5aa6:	79 f7       	brne	.-34     	; 0x5a86 <vfprintf+0x1ac>
    5aa8:	ea c0       	rjmp	.+468    	; 0x5c7e <vfprintf+0x3a4>
    5aaa:	94 36       	cpi	r25, 0x64	; 100
    5aac:	11 f0       	breq	.+4      	; 0x5ab2 <vfprintf+0x1d8>
    5aae:	99 36       	cpi	r25, 0x69	; 105
    5ab0:	69 f5       	brne	.+90     	; 0x5b0c <vfprintf+0x232>
    5ab2:	f7 fe       	sbrs	r15, 7
    5ab4:	08 c0       	rjmp	.+16     	; 0x5ac6 <vfprintf+0x1ec>
    5ab6:	f5 01       	movw	r30, r10
    5ab8:	20 81       	ld	r18, Z
    5aba:	31 81       	ldd	r19, Z+1	; 0x01
    5abc:	42 81       	ldd	r20, Z+2	; 0x02
    5abe:	53 81       	ldd	r21, Z+3	; 0x03
    5ac0:	84 e0       	ldi	r24, 0x04	; 4
    5ac2:	90 e0       	ldi	r25, 0x00	; 0
    5ac4:	0a c0       	rjmp	.+20     	; 0x5ada <vfprintf+0x200>
    5ac6:	f5 01       	movw	r30, r10
    5ac8:	80 81       	ld	r24, Z
    5aca:	91 81       	ldd	r25, Z+1	; 0x01
    5acc:	9c 01       	movw	r18, r24
    5ace:	44 27       	eor	r20, r20
    5ad0:	37 fd       	sbrc	r19, 7
    5ad2:	40 95       	com	r20
    5ad4:	54 2f       	mov	r21, r20
    5ad6:	82 e0       	ldi	r24, 0x02	; 2
    5ad8:	90 e0       	ldi	r25, 0x00	; 0
    5ada:	a8 0e       	add	r10, r24
    5adc:	b9 1e       	adc	r11, r25
    5ade:	9f e6       	ldi	r25, 0x6F	; 111
    5ae0:	f9 22       	and	r15, r25
    5ae2:	57 ff       	sbrs	r21, 7
    5ae4:	09 c0       	rjmp	.+18     	; 0x5af8 <vfprintf+0x21e>
    5ae6:	50 95       	com	r21
    5ae8:	40 95       	com	r20
    5aea:	30 95       	com	r19
    5aec:	21 95       	neg	r18
    5aee:	3f 4f       	sbci	r19, 0xFF	; 255
    5af0:	4f 4f       	sbci	r20, 0xFF	; 255
    5af2:	5f 4f       	sbci	r21, 0xFF	; 255
    5af4:	e0 e8       	ldi	r30, 0x80	; 128
    5af6:	fe 2a       	or	r15, r30
    5af8:	ca 01       	movw	r24, r20
    5afa:	b9 01       	movw	r22, r18
    5afc:	a1 01       	movw	r20, r2
    5afe:	2a e0       	ldi	r18, 0x0A	; 10
    5b00:	30 e0       	ldi	r19, 0x00	; 0
    5b02:	0e 94 8c 2e 	call	0x5d18	; 0x5d18 <__ultoa_invert>
    5b06:	d8 2e       	mov	r13, r24
    5b08:	d2 18       	sub	r13, r2
    5b0a:	40 c0       	rjmp	.+128    	; 0x5b8c <vfprintf+0x2b2>
    5b0c:	95 37       	cpi	r25, 0x75	; 117
    5b0e:	29 f4       	brne	.+10     	; 0x5b1a <vfprintf+0x240>
    5b10:	1f 2d       	mov	r17, r15
    5b12:	1f 7e       	andi	r17, 0xEF	; 239
    5b14:	2a e0       	ldi	r18, 0x0A	; 10
    5b16:	30 e0       	ldi	r19, 0x00	; 0
    5b18:	1d c0       	rjmp	.+58     	; 0x5b54 <vfprintf+0x27a>
    5b1a:	1f 2d       	mov	r17, r15
    5b1c:	19 7f       	andi	r17, 0xF9	; 249
    5b1e:	9f 36       	cpi	r25, 0x6F	; 111
    5b20:	61 f0       	breq	.+24     	; 0x5b3a <vfprintf+0x260>
    5b22:	90 37       	cpi	r25, 0x70	; 112
    5b24:	20 f4       	brcc	.+8      	; 0x5b2e <vfprintf+0x254>
    5b26:	98 35       	cpi	r25, 0x58	; 88
    5b28:	09 f0       	breq	.+2      	; 0x5b2c <vfprintf+0x252>
    5b2a:	ac c0       	rjmp	.+344    	; 0x5c84 <vfprintf+0x3aa>
    5b2c:	0f c0       	rjmp	.+30     	; 0x5b4c <vfprintf+0x272>
    5b2e:	90 37       	cpi	r25, 0x70	; 112
    5b30:	39 f0       	breq	.+14     	; 0x5b40 <vfprintf+0x266>
    5b32:	98 37       	cpi	r25, 0x78	; 120
    5b34:	09 f0       	breq	.+2      	; 0x5b38 <vfprintf+0x25e>
    5b36:	a6 c0       	rjmp	.+332    	; 0x5c84 <vfprintf+0x3aa>
    5b38:	04 c0       	rjmp	.+8      	; 0x5b42 <vfprintf+0x268>
    5b3a:	28 e0       	ldi	r18, 0x08	; 8
    5b3c:	30 e0       	ldi	r19, 0x00	; 0
    5b3e:	0a c0       	rjmp	.+20     	; 0x5b54 <vfprintf+0x27a>
    5b40:	10 61       	ori	r17, 0x10	; 16
    5b42:	14 fd       	sbrc	r17, 4
    5b44:	14 60       	ori	r17, 0x04	; 4
    5b46:	20 e1       	ldi	r18, 0x10	; 16
    5b48:	30 e0       	ldi	r19, 0x00	; 0
    5b4a:	04 c0       	rjmp	.+8      	; 0x5b54 <vfprintf+0x27a>
    5b4c:	14 fd       	sbrc	r17, 4
    5b4e:	16 60       	ori	r17, 0x06	; 6
    5b50:	20 e1       	ldi	r18, 0x10	; 16
    5b52:	32 e0       	ldi	r19, 0x02	; 2
    5b54:	17 ff       	sbrs	r17, 7
    5b56:	08 c0       	rjmp	.+16     	; 0x5b68 <vfprintf+0x28e>
    5b58:	f5 01       	movw	r30, r10
    5b5a:	60 81       	ld	r22, Z
    5b5c:	71 81       	ldd	r23, Z+1	; 0x01
    5b5e:	82 81       	ldd	r24, Z+2	; 0x02
    5b60:	93 81       	ldd	r25, Z+3	; 0x03
    5b62:	44 e0       	ldi	r20, 0x04	; 4
    5b64:	50 e0       	ldi	r21, 0x00	; 0
    5b66:	08 c0       	rjmp	.+16     	; 0x5b78 <vfprintf+0x29e>
    5b68:	f5 01       	movw	r30, r10
    5b6a:	80 81       	ld	r24, Z
    5b6c:	91 81       	ldd	r25, Z+1	; 0x01
    5b6e:	bc 01       	movw	r22, r24
    5b70:	80 e0       	ldi	r24, 0x00	; 0
    5b72:	90 e0       	ldi	r25, 0x00	; 0
    5b74:	42 e0       	ldi	r20, 0x02	; 2
    5b76:	50 e0       	ldi	r21, 0x00	; 0
    5b78:	a4 0e       	add	r10, r20
    5b7a:	b5 1e       	adc	r11, r21
    5b7c:	a1 01       	movw	r20, r2
    5b7e:	0e 94 8c 2e 	call	0x5d18	; 0x5d18 <__ultoa_invert>
    5b82:	d8 2e       	mov	r13, r24
    5b84:	d2 18       	sub	r13, r2
    5b86:	8f e7       	ldi	r24, 0x7F	; 127
    5b88:	f8 2e       	mov	r15, r24
    5b8a:	f1 22       	and	r15, r17
    5b8c:	f6 fe       	sbrs	r15, 6
    5b8e:	0b c0       	rjmp	.+22     	; 0x5ba6 <vfprintf+0x2cc>
    5b90:	5e ef       	ldi	r21, 0xFE	; 254
    5b92:	f5 22       	and	r15, r21
    5b94:	d9 14       	cp	r13, r9
    5b96:	38 f4       	brcc	.+14     	; 0x5ba6 <vfprintf+0x2cc>
    5b98:	f4 fe       	sbrs	r15, 4
    5b9a:	07 c0       	rjmp	.+14     	; 0x5baa <vfprintf+0x2d0>
    5b9c:	f2 fc       	sbrc	r15, 2
    5b9e:	05 c0       	rjmp	.+10     	; 0x5baa <vfprintf+0x2d0>
    5ba0:	8f ee       	ldi	r24, 0xEF	; 239
    5ba2:	f8 22       	and	r15, r24
    5ba4:	02 c0       	rjmp	.+4      	; 0x5baa <vfprintf+0x2d0>
    5ba6:	1d 2d       	mov	r17, r13
    5ba8:	01 c0       	rjmp	.+2      	; 0x5bac <vfprintf+0x2d2>
    5baa:	19 2d       	mov	r17, r9
    5bac:	f4 fe       	sbrs	r15, 4
    5bae:	0d c0       	rjmp	.+26     	; 0x5bca <vfprintf+0x2f0>
    5bb0:	fe 01       	movw	r30, r28
    5bb2:	ed 0d       	add	r30, r13
    5bb4:	f1 1d       	adc	r31, r1
    5bb6:	80 81       	ld	r24, Z
    5bb8:	80 33       	cpi	r24, 0x30	; 48
    5bba:	19 f4       	brne	.+6      	; 0x5bc2 <vfprintf+0x2e8>
    5bbc:	99 ee       	ldi	r25, 0xE9	; 233
    5bbe:	f9 22       	and	r15, r25
    5bc0:	08 c0       	rjmp	.+16     	; 0x5bd2 <vfprintf+0x2f8>
    5bc2:	1f 5f       	subi	r17, 0xFF	; 255
    5bc4:	f2 fe       	sbrs	r15, 2
    5bc6:	05 c0       	rjmp	.+10     	; 0x5bd2 <vfprintf+0x2f8>
    5bc8:	03 c0       	rjmp	.+6      	; 0x5bd0 <vfprintf+0x2f6>
    5bca:	8f 2d       	mov	r24, r15
    5bcc:	86 78       	andi	r24, 0x86	; 134
    5bce:	09 f0       	breq	.+2      	; 0x5bd2 <vfprintf+0x2f8>
    5bd0:	1f 5f       	subi	r17, 0xFF	; 255
    5bd2:	0f 2d       	mov	r16, r15
    5bd4:	f3 fc       	sbrc	r15, 3
    5bd6:	14 c0       	rjmp	.+40     	; 0x5c00 <vfprintf+0x326>
    5bd8:	f0 fe       	sbrs	r15, 0
    5bda:	0f c0       	rjmp	.+30     	; 0x5bfa <vfprintf+0x320>
    5bdc:	1e 15       	cp	r17, r14
    5bde:	10 f0       	brcs	.+4      	; 0x5be4 <vfprintf+0x30a>
    5be0:	9d 2c       	mov	r9, r13
    5be2:	0b c0       	rjmp	.+22     	; 0x5bfa <vfprintf+0x320>
    5be4:	9d 2c       	mov	r9, r13
    5be6:	9e 0c       	add	r9, r14
    5be8:	91 1a       	sub	r9, r17
    5bea:	1e 2d       	mov	r17, r14
    5bec:	06 c0       	rjmp	.+12     	; 0x5bfa <vfprintf+0x320>
    5bee:	80 e2       	ldi	r24, 0x20	; 32
    5bf0:	90 e0       	ldi	r25, 0x00	; 0
    5bf2:	b3 01       	movw	r22, r6
    5bf4:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    5bf8:	1f 5f       	subi	r17, 0xFF	; 255
    5bfa:	1e 15       	cp	r17, r14
    5bfc:	c0 f3       	brcs	.-16     	; 0x5bee <vfprintf+0x314>
    5bfe:	04 c0       	rjmp	.+8      	; 0x5c08 <vfprintf+0x32e>
    5c00:	1e 15       	cp	r17, r14
    5c02:	10 f4       	brcc	.+4      	; 0x5c08 <vfprintf+0x32e>
    5c04:	e1 1a       	sub	r14, r17
    5c06:	01 c0       	rjmp	.+2      	; 0x5c0a <vfprintf+0x330>
    5c08:	ee 24       	eor	r14, r14
    5c0a:	04 ff       	sbrs	r16, 4
    5c0c:	0f c0       	rjmp	.+30     	; 0x5c2c <vfprintf+0x352>
    5c0e:	80 e3       	ldi	r24, 0x30	; 48
    5c10:	90 e0       	ldi	r25, 0x00	; 0
    5c12:	b3 01       	movw	r22, r6
    5c14:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    5c18:	02 ff       	sbrs	r16, 2
    5c1a:	1d c0       	rjmp	.+58     	; 0x5c56 <vfprintf+0x37c>
    5c1c:	01 fd       	sbrc	r16, 1
    5c1e:	03 c0       	rjmp	.+6      	; 0x5c26 <vfprintf+0x34c>
    5c20:	88 e7       	ldi	r24, 0x78	; 120
    5c22:	90 e0       	ldi	r25, 0x00	; 0
    5c24:	0e c0       	rjmp	.+28     	; 0x5c42 <vfprintf+0x368>
    5c26:	88 e5       	ldi	r24, 0x58	; 88
    5c28:	90 e0       	ldi	r25, 0x00	; 0
    5c2a:	0b c0       	rjmp	.+22     	; 0x5c42 <vfprintf+0x368>
    5c2c:	80 2f       	mov	r24, r16
    5c2e:	86 78       	andi	r24, 0x86	; 134
    5c30:	91 f0       	breq	.+36     	; 0x5c56 <vfprintf+0x37c>
    5c32:	01 ff       	sbrs	r16, 1
    5c34:	02 c0       	rjmp	.+4      	; 0x5c3a <vfprintf+0x360>
    5c36:	8b e2       	ldi	r24, 0x2B	; 43
    5c38:	01 c0       	rjmp	.+2      	; 0x5c3c <vfprintf+0x362>
    5c3a:	80 e2       	ldi	r24, 0x20	; 32
    5c3c:	f7 fc       	sbrc	r15, 7
    5c3e:	8d e2       	ldi	r24, 0x2D	; 45
    5c40:	90 e0       	ldi	r25, 0x00	; 0
    5c42:	b3 01       	movw	r22, r6
    5c44:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    5c48:	06 c0       	rjmp	.+12     	; 0x5c56 <vfprintf+0x37c>
    5c4a:	80 e3       	ldi	r24, 0x30	; 48
    5c4c:	90 e0       	ldi	r25, 0x00	; 0
    5c4e:	b3 01       	movw	r22, r6
    5c50:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    5c54:	9a 94       	dec	r9
    5c56:	d9 14       	cp	r13, r9
    5c58:	c0 f3       	brcs	.-16     	; 0x5c4a <vfprintf+0x370>
    5c5a:	da 94       	dec	r13
    5c5c:	f1 01       	movw	r30, r2
    5c5e:	ed 0d       	add	r30, r13
    5c60:	f1 1d       	adc	r31, r1
    5c62:	80 81       	ld	r24, Z
    5c64:	90 e0       	ldi	r25, 0x00	; 0
    5c66:	b3 01       	movw	r22, r6
    5c68:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    5c6c:	dd 20       	and	r13, r13
    5c6e:	a9 f7       	brne	.-22     	; 0x5c5a <vfprintf+0x380>
    5c70:	06 c0       	rjmp	.+12     	; 0x5c7e <vfprintf+0x3a4>
    5c72:	80 e2       	ldi	r24, 0x20	; 32
    5c74:	90 e0       	ldi	r25, 0x00	; 0
    5c76:	b3 01       	movw	r22, r6
    5c78:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <fputc>
    5c7c:	ea 94       	dec	r14
    5c7e:	ee 20       	and	r14, r14
    5c80:	c1 f7       	brne	.-16     	; 0x5c72 <vfprintf+0x398>
    5c82:	43 ce       	rjmp	.-890    	; 0x590a <vfprintf+0x30>
    5c84:	f3 01       	movw	r30, r6
    5c86:	66 81       	ldd	r22, Z+6	; 0x06
    5c88:	77 81       	ldd	r23, Z+7	; 0x07
    5c8a:	cb 01       	movw	r24, r22
    5c8c:	2b 96       	adiw	r28, 0x0b	; 11
    5c8e:	e2 e1       	ldi	r30, 0x12	; 18
    5c90:	0c 94 2e 2c 	jmp	0x585c	; 0x585c <__epilogue_restores__>

00005c94 <strnlen_P>:
    5c94:	fc 01       	movw	r30, r24
    5c96:	05 90       	lpm	r0, Z+
    5c98:	61 50       	subi	r22, 0x01	; 1
    5c9a:	70 40       	sbci	r23, 0x00	; 0
    5c9c:	01 10       	cpse	r0, r1
    5c9e:	d8 f7       	brcc	.-10     	; 0x5c96 <strnlen_P+0x2>
    5ca0:	80 95       	com	r24
    5ca2:	90 95       	com	r25
    5ca4:	8e 0f       	add	r24, r30
    5ca6:	9f 1f       	adc	r25, r31
    5ca8:	08 95       	ret

00005caa <strnlen>:
    5caa:	fc 01       	movw	r30, r24
    5cac:	61 50       	subi	r22, 0x01	; 1
    5cae:	70 40       	sbci	r23, 0x00	; 0
    5cb0:	01 90       	ld	r0, Z+
    5cb2:	01 10       	cpse	r0, r1
    5cb4:	d8 f7       	brcc	.-10     	; 0x5cac <strnlen+0x2>
    5cb6:	80 95       	com	r24
    5cb8:	90 95       	com	r25
    5cba:	8e 0f       	add	r24, r30
    5cbc:	9f 1f       	adc	r25, r31
    5cbe:	08 95       	ret

00005cc0 <fputc>:
    5cc0:	0f 93       	push	r16
    5cc2:	1f 93       	push	r17
    5cc4:	cf 93       	push	r28
    5cc6:	df 93       	push	r29
    5cc8:	8c 01       	movw	r16, r24
    5cca:	eb 01       	movw	r28, r22
    5ccc:	8b 81       	ldd	r24, Y+3	; 0x03
    5cce:	81 ff       	sbrs	r24, 1
    5cd0:	1b c0       	rjmp	.+54     	; 0x5d08 <fputc+0x48>
    5cd2:	82 ff       	sbrs	r24, 2
    5cd4:	0d c0       	rjmp	.+26     	; 0x5cf0 <fputc+0x30>
    5cd6:	2e 81       	ldd	r18, Y+6	; 0x06
    5cd8:	3f 81       	ldd	r19, Y+7	; 0x07
    5cda:	8c 81       	ldd	r24, Y+4	; 0x04
    5cdc:	9d 81       	ldd	r25, Y+5	; 0x05
    5cde:	28 17       	cp	r18, r24
    5ce0:	39 07       	cpc	r19, r25
    5ce2:	64 f4       	brge	.+24     	; 0x5cfc <fputc+0x3c>
    5ce4:	e8 81       	ld	r30, Y
    5ce6:	f9 81       	ldd	r31, Y+1	; 0x01
    5ce8:	01 93       	st	Z+, r16
    5cea:	f9 83       	std	Y+1, r31	; 0x01
    5cec:	e8 83       	st	Y, r30
    5cee:	06 c0       	rjmp	.+12     	; 0x5cfc <fputc+0x3c>
    5cf0:	e8 85       	ldd	r30, Y+8	; 0x08
    5cf2:	f9 85       	ldd	r31, Y+9	; 0x09
    5cf4:	80 2f       	mov	r24, r16
    5cf6:	09 95       	icall
    5cf8:	89 2b       	or	r24, r25
    5cfa:	31 f4       	brne	.+12     	; 0x5d08 <fputc+0x48>
    5cfc:	8e 81       	ldd	r24, Y+6	; 0x06
    5cfe:	9f 81       	ldd	r25, Y+7	; 0x07
    5d00:	01 96       	adiw	r24, 0x01	; 1
    5d02:	9f 83       	std	Y+7, r25	; 0x07
    5d04:	8e 83       	std	Y+6, r24	; 0x06
    5d06:	02 c0       	rjmp	.+4      	; 0x5d0c <fputc+0x4c>
    5d08:	0f ef       	ldi	r16, 0xFF	; 255
    5d0a:	1f ef       	ldi	r17, 0xFF	; 255
    5d0c:	c8 01       	movw	r24, r16
    5d0e:	df 91       	pop	r29
    5d10:	cf 91       	pop	r28
    5d12:	1f 91       	pop	r17
    5d14:	0f 91       	pop	r16
    5d16:	08 95       	ret

00005d18 <__ultoa_invert>:
    5d18:	fa 01       	movw	r30, r20
    5d1a:	aa 27       	eor	r26, r26
    5d1c:	28 30       	cpi	r18, 0x08	; 8
    5d1e:	51 f1       	breq	.+84     	; 0x5d74 <__ultoa_invert+0x5c>
    5d20:	20 31       	cpi	r18, 0x10	; 16
    5d22:	81 f1       	breq	.+96     	; 0x5d84 <__ultoa_invert+0x6c>
    5d24:	e8 94       	clt
    5d26:	6f 93       	push	r22
    5d28:	6e 7f       	andi	r22, 0xFE	; 254
    5d2a:	6e 5f       	subi	r22, 0xFE	; 254
    5d2c:	7f 4f       	sbci	r23, 0xFF	; 255
    5d2e:	8f 4f       	sbci	r24, 0xFF	; 255
    5d30:	9f 4f       	sbci	r25, 0xFF	; 255
    5d32:	af 4f       	sbci	r26, 0xFF	; 255
    5d34:	b1 e0       	ldi	r27, 0x01	; 1
    5d36:	3e d0       	rcall	.+124    	; 0x5db4 <__ultoa_invert+0x9c>
    5d38:	b4 e0       	ldi	r27, 0x04	; 4
    5d3a:	3c d0       	rcall	.+120    	; 0x5db4 <__ultoa_invert+0x9c>
    5d3c:	67 0f       	add	r22, r23
    5d3e:	78 1f       	adc	r23, r24
    5d40:	89 1f       	adc	r24, r25
    5d42:	9a 1f       	adc	r25, r26
    5d44:	a1 1d       	adc	r26, r1
    5d46:	68 0f       	add	r22, r24
    5d48:	79 1f       	adc	r23, r25
    5d4a:	8a 1f       	adc	r24, r26
    5d4c:	91 1d       	adc	r25, r1
    5d4e:	a1 1d       	adc	r26, r1
    5d50:	6a 0f       	add	r22, r26
    5d52:	71 1d       	adc	r23, r1
    5d54:	81 1d       	adc	r24, r1
    5d56:	91 1d       	adc	r25, r1
    5d58:	a1 1d       	adc	r26, r1
    5d5a:	20 d0       	rcall	.+64     	; 0x5d9c <__ultoa_invert+0x84>
    5d5c:	09 f4       	brne	.+2      	; 0x5d60 <__ultoa_invert+0x48>
    5d5e:	68 94       	set
    5d60:	3f 91       	pop	r19
    5d62:	2a e0       	ldi	r18, 0x0A	; 10
    5d64:	26 9f       	mul	r18, r22
    5d66:	11 24       	eor	r1, r1
    5d68:	30 19       	sub	r19, r0
    5d6a:	30 5d       	subi	r19, 0xD0	; 208
    5d6c:	31 93       	st	Z+, r19
    5d6e:	de f6       	brtc	.-74     	; 0x5d26 <__ultoa_invert+0xe>
    5d70:	cf 01       	movw	r24, r30
    5d72:	08 95       	ret
    5d74:	46 2f       	mov	r20, r22
    5d76:	47 70       	andi	r20, 0x07	; 7
    5d78:	40 5d       	subi	r20, 0xD0	; 208
    5d7a:	41 93       	st	Z+, r20
    5d7c:	b3 e0       	ldi	r27, 0x03	; 3
    5d7e:	0f d0       	rcall	.+30     	; 0x5d9e <__ultoa_invert+0x86>
    5d80:	c9 f7       	brne	.-14     	; 0x5d74 <__ultoa_invert+0x5c>
    5d82:	f6 cf       	rjmp	.-20     	; 0x5d70 <__ultoa_invert+0x58>
    5d84:	46 2f       	mov	r20, r22
    5d86:	4f 70       	andi	r20, 0x0F	; 15
    5d88:	40 5d       	subi	r20, 0xD0	; 208
    5d8a:	4a 33       	cpi	r20, 0x3A	; 58
    5d8c:	18 f0       	brcs	.+6      	; 0x5d94 <__ultoa_invert+0x7c>
    5d8e:	49 5d       	subi	r20, 0xD9	; 217
    5d90:	31 fd       	sbrc	r19, 1
    5d92:	40 52       	subi	r20, 0x20	; 32
    5d94:	41 93       	st	Z+, r20
    5d96:	02 d0       	rcall	.+4      	; 0x5d9c <__ultoa_invert+0x84>
    5d98:	a9 f7       	brne	.-22     	; 0x5d84 <__ultoa_invert+0x6c>
    5d9a:	ea cf       	rjmp	.-44     	; 0x5d70 <__ultoa_invert+0x58>
    5d9c:	b4 e0       	ldi	r27, 0x04	; 4
    5d9e:	a6 95       	lsr	r26
    5da0:	97 95       	ror	r25
    5da2:	87 95       	ror	r24
    5da4:	77 95       	ror	r23
    5da6:	67 95       	ror	r22
    5da8:	ba 95       	dec	r27
    5daa:	c9 f7       	brne	.-14     	; 0x5d9e <__ultoa_invert+0x86>
    5dac:	00 97       	sbiw	r24, 0x00	; 0
    5dae:	61 05       	cpc	r22, r1
    5db0:	71 05       	cpc	r23, r1
    5db2:	08 95       	ret
    5db4:	9b 01       	movw	r18, r22
    5db6:	ac 01       	movw	r20, r24
    5db8:	0a 2e       	mov	r0, r26
    5dba:	06 94       	lsr	r0
    5dbc:	57 95       	ror	r21
    5dbe:	47 95       	ror	r20
    5dc0:	37 95       	ror	r19
    5dc2:	27 95       	ror	r18
    5dc4:	ba 95       	dec	r27
    5dc6:	c9 f7       	brne	.-14     	; 0x5dba <__ultoa_invert+0xa2>
    5dc8:	62 0f       	add	r22, r18
    5dca:	73 1f       	adc	r23, r19
    5dcc:	84 1f       	adc	r24, r20
    5dce:	95 1f       	adc	r25, r21
    5dd0:	a0 1d       	adc	r26, r0
    5dd2:	08 95       	ret

00005dd4 <_exit>:
    5dd4:	f8 94       	cli

00005dd6 <__stop_program>:
    5dd6:	ff cf       	rjmp	.-2      	; 0x5dd6 <__stop_program>
