
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000058b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000148  00800060  000058b4  00005948  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000088  008001a8  008001a8  00005a90  2**0
                  ALLOC
  3 .stab         00002c4c  00000000  00000000  00005a90  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000155f  00000000  00000000  000086dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  00009c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000251  00000000  00000000  00009e3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002c57  00000000  00000000  0000a08c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000015a4  00000000  00000000  0000cce3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014b6  00000000  00000000  0000e287  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  0000f740  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000371  00000000  00000000  0000f960  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001b17  00000000  00000000  0000fcd1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  000117e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 eb       	ldi	r30, 0xB4	; 180
      68:	f8 e5       	ldi	r31, 0x58	; 88
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 3a       	cpi	r26, 0xA8	; 168
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a8 ea       	ldi	r26, 0xA8	; 168
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 33       	cpi	r26, 0x30	; 48
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 09 29 	call	0x5212	; 0x5212 <main>
      8a:	0c 94 58 2c 	jmp	0x58b0	; 0x58b0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 80 29 	jmp	0x5300	; 0x5300 <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 9c 29 	jmp	0x5338	; 0x5338 <__epilogue_restores__>

00000288 <__fixunssfsi>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	1f 93       	push	r17
     290:	7b 01       	movw	r14, r22
     292:	8c 01       	movw	r16, r24
     294:	20 e0       	ldi	r18, 0x00	; 0
     296:	30 e0       	ldi	r19, 0x00	; 0
     298:	40 e0       	ldi	r20, 0x00	; 0
     29a:	5f e4       	ldi	r21, 0x4F	; 79
     29c:	0e 94 67 0d 	call	0x1ace	; 0x1ace <__gesf2>
     2a0:	88 23       	and	r24, r24
     2a2:	8c f0       	brlt	.+34     	; 0x2c6 <__fixunssfsi+0x3e>
     2a4:	c8 01       	movw	r24, r16
     2a6:	b7 01       	movw	r22, r14
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	5f e4       	ldi	r21, 0x4F	; 79
     2b0:	0e 94 df 0b 	call	0x17be	; 0x17be <__subsf3>
     2b4:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__fixsfsi>
     2b8:	9b 01       	movw	r18, r22
     2ba:	ac 01       	movw	r20, r24
     2bc:	20 50       	subi	r18, 0x00	; 0
     2be:	30 40       	sbci	r19, 0x00	; 0
     2c0:	40 40       	sbci	r20, 0x00	; 0
     2c2:	50 48       	sbci	r21, 0x80	; 128
     2c4:	06 c0       	rjmp	.+12     	; 0x2d2 <__fixunssfsi+0x4a>
     2c6:	c8 01       	movw	r24, r16
     2c8:	b7 01       	movw	r22, r14
     2ca:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__fixsfsi>
     2ce:	9b 01       	movw	r18, r22
     2d0:	ac 01       	movw	r20, r24
     2d2:	b9 01       	movw	r22, r18
     2d4:	ca 01       	movw	r24, r20
     2d6:	1f 91       	pop	r17
     2d8:	0f 91       	pop	r16
     2da:	ff 90       	pop	r15
     2dc:	ef 90       	pop	r14
     2de:	08 95       	ret

000002e0 <__floatdisf>:
     2e0:	a4 e0       	ldi	r26, 0x04	; 4
     2e2:	b0 e0       	ldi	r27, 0x00	; 0
     2e4:	e6 e7       	ldi	r30, 0x76	; 118
     2e6:	f1 e0       	ldi	r31, 0x01	; 1
     2e8:	0c 94 82 29 	jmp	0x5304	; 0x5304 <__prologue_saves__+0x4>
     2ec:	49 01       	movw	r8, r18
     2ee:	5a 01       	movw	r10, r20
     2f0:	6b 01       	movw	r12, r22
     2f2:	7c 01       	movw	r14, r24
     2f4:	d5 01       	movw	r26, r10
     2f6:	c4 01       	movw	r24, r8
     2f8:	9c 01       	movw	r18, r24
     2fa:	ad 01       	movw	r20, r26
     2fc:	55 0f       	add	r21, r21
     2fe:	22 0b       	sbc	r18, r18
     300:	32 2f       	mov	r19, r18
     302:	a9 01       	movw	r20, r18
     304:	88 15       	cp	r24, r8
     306:	99 f4       	brne	.+38     	; 0x32e <__floatdisf+0x4e>
     308:	99 15       	cp	r25, r9
     30a:	89 f4       	brne	.+34     	; 0x32e <__floatdisf+0x4e>
     30c:	aa 15       	cp	r26, r10
     30e:	79 f4       	brne	.+30     	; 0x32e <__floatdisf+0x4e>
     310:	bb 15       	cp	r27, r11
     312:	69 f4       	brne	.+26     	; 0x32e <__floatdisf+0x4e>
     314:	2c 15       	cp	r18, r12
     316:	59 f4       	brne	.+22     	; 0x32e <__floatdisf+0x4e>
     318:	2d 15       	cp	r18, r13
     31a:	49 f4       	brne	.+18     	; 0x32e <__floatdisf+0x4e>
     31c:	2e 15       	cp	r18, r14
     31e:	39 f4       	brne	.+14     	; 0x32e <__floatdisf+0x4e>
     320:	2f 15       	cp	r18, r15
     322:	29 f4       	brne	.+10     	; 0x32e <__floatdisf+0x4e>
     324:	c5 01       	movw	r24, r10
     326:	b4 01       	movw	r22, r8
     328:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <__floatsisf>
     32c:	d0 c0       	rjmp	.+416    	; 0x4ce <__floatdisf+0x1ee>
     32e:	94 01       	movw	r18, r8
     330:	a5 01       	movw	r20, r10
     332:	b6 01       	movw	r22, r12
     334:	c7 01       	movw	r24, r14
     336:	00 e2       	ldi	r16, 0x20	; 32
     338:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__ashrdi3>
     33c:	c9 01       	movw	r24, r18
     33e:	a4 2f       	mov	r26, r20
     340:	b5 2f       	mov	r27, r21
     342:	b7 ff       	sbrs	r27, 7
     344:	07 c0       	rjmp	.+14     	; 0x354 <__floatdisf+0x74>
     346:	b0 95       	com	r27
     348:	a0 95       	com	r26
     34a:	90 95       	com	r25
     34c:	81 95       	neg	r24
     34e:	9f 4f       	sbci	r25, 0xFF	; 255
     350:	af 4f       	sbci	r26, 0xFF	; 255
     352:	bf 4f       	sbci	r27, 0xFF	; 255
     354:	80 30       	cpi	r24, 0x00	; 0
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	92 07       	cpc	r25, r18
     35a:	21 e0       	ldi	r18, 0x01	; 1
     35c:	a2 07       	cpc	r26, r18
     35e:	20 e0       	ldi	r18, 0x00	; 0
     360:	b2 07       	cpc	r27, r18
     362:	80 f4       	brcc	.+32     	; 0x384 <__floatdisf+0xa4>
     364:	8f 3f       	cpi	r24, 0xFF	; 255
     366:	91 05       	cpc	r25, r1
     368:	a1 05       	cpc	r26, r1
     36a:	b1 05       	cpc	r27, r1
     36c:	31 f0       	breq	.+12     	; 0x37a <__floatdisf+0x9a>
     36e:	28 f0       	brcs	.+10     	; 0x37a <__floatdisf+0x9a>
     370:	28 e0       	ldi	r18, 0x08	; 8
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	40 e0       	ldi	r20, 0x00	; 0
     376:	50 e0       	ldi	r21, 0x00	; 0
     378:	16 c0       	rjmp	.+44     	; 0x3a6 <__floatdisf+0xc6>
     37a:	20 e0       	ldi	r18, 0x00	; 0
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	40 e0       	ldi	r20, 0x00	; 0
     380:	50 e0       	ldi	r21, 0x00	; 0
     382:	11 c0       	rjmp	.+34     	; 0x3a6 <__floatdisf+0xc6>
     384:	80 30       	cpi	r24, 0x00	; 0
     386:	30 e0       	ldi	r19, 0x00	; 0
     388:	93 07       	cpc	r25, r19
     38a:	30 e0       	ldi	r19, 0x00	; 0
     38c:	a3 07       	cpc	r26, r19
     38e:	31 e0       	ldi	r19, 0x01	; 1
     390:	b3 07       	cpc	r27, r19
     392:	28 f0       	brcs	.+10     	; 0x39e <__floatdisf+0xbe>
     394:	28 e1       	ldi	r18, 0x18	; 24
     396:	30 e0       	ldi	r19, 0x00	; 0
     398:	40 e0       	ldi	r20, 0x00	; 0
     39a:	50 e0       	ldi	r21, 0x00	; 0
     39c:	04 c0       	rjmp	.+8      	; 0x3a6 <__floatdisf+0xc6>
     39e:	20 e1       	ldi	r18, 0x10	; 16
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	40 e0       	ldi	r20, 0x00	; 0
     3a4:	50 e0       	ldi	r21, 0x00	; 0
     3a6:	60 e2       	ldi	r22, 0x20	; 32
     3a8:	46 2e       	mov	r4, r22
     3aa:	51 2c       	mov	r5, r1
     3ac:	61 2c       	mov	r6, r1
     3ae:	71 2c       	mov	r7, r1
     3b0:	42 1a       	sub	r4, r18
     3b2:	53 0a       	sbc	r5, r19
     3b4:	64 0a       	sbc	r6, r20
     3b6:	75 0a       	sbc	r7, r21
     3b8:	04 c0       	rjmp	.+8      	; 0x3c2 <__floatdisf+0xe2>
     3ba:	b6 95       	lsr	r27
     3bc:	a7 95       	ror	r26
     3be:	97 95       	ror	r25
     3c0:	87 95       	ror	r24
     3c2:	2a 95       	dec	r18
     3c4:	d2 f7       	brpl	.-12     	; 0x3ba <__floatdisf+0xda>
     3c6:	fc 01       	movw	r30, r24
     3c8:	ea 57       	subi	r30, 0x7A	; 122
     3ca:	ff 4f       	sbci	r31, 0xFF	; 255
     3cc:	80 81       	ld	r24, Z
     3ce:	48 1a       	sub	r4, r24
     3d0:	51 08       	sbc	r5, r1
     3d2:	61 08       	sbc	r6, r1
     3d4:	71 08       	sbc	r7, r1
     3d6:	41 14       	cp	r4, r1
     3d8:	51 04       	cpc	r5, r1
     3da:	61 04       	cpc	r6, r1
     3dc:	71 04       	cpc	r7, r1
     3de:	29 f4       	brne	.+10     	; 0x3ea <__floatdisf+0x10a>
     3e0:	60 e0       	ldi	r22, 0x00	; 0
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	9f ed       	ldi	r25, 0xDF	; 223
     3e8:	72 c0       	rjmp	.+228    	; 0x4ce <__floatdisf+0x1ee>
     3ea:	81 e2       	ldi	r24, 0x21	; 33
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	a0 e0       	ldi	r26, 0x00	; 0
     3f0:	b0 e0       	ldi	r27, 0x00	; 0
     3f2:	84 19       	sub	r24, r4
     3f4:	95 09       	sbc	r25, r5
     3f6:	a6 09       	sbc	r26, r6
     3f8:	b7 09       	sbc	r27, r7
     3fa:	89 83       	std	Y+1, r24	; 0x01
     3fc:	9a 83       	std	Y+2, r25	; 0x02
     3fe:	ab 83       	std	Y+3, r26	; 0x03
     400:	bc 83       	std	Y+4, r27	; 0x04
     402:	19 81       	ldd	r17, Y+1	; 0x01
     404:	94 01       	movw	r18, r8
     406:	a5 01       	movw	r20, r10
     408:	b6 01       	movw	r22, r12
     40a:	c7 01       	movw	r24, r14
     40c:	01 2f       	mov	r16, r17
     40e:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__ashrdi3>
     412:	c9 01       	movw	r24, r18
     414:	da 01       	movw	r26, r20
     416:	2c 01       	movw	r4, r24
     418:	3d 01       	movw	r6, r26
     41a:	80 e2       	ldi	r24, 0x20	; 32
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	a9 81       	ldd	r26, Y+1	; 0x01
     420:	ba 81       	ldd	r27, Y+2	; 0x02
     422:	8a 1b       	sub	r24, r26
     424:	9b 0b       	sbc	r25, r27
     426:	a5 01       	movw	r20, r10
     428:	94 01       	movw	r18, r8
     42a:	04 c0       	rjmp	.+8      	; 0x434 <__floatdisf+0x154>
     42c:	22 0f       	add	r18, r18
     42e:	33 1f       	adc	r19, r19
     430:	44 1f       	adc	r20, r20
     432:	55 1f       	adc	r21, r21
     434:	8a 95       	dec	r24
     436:	d2 f7       	brpl	.-12     	; 0x42c <__floatdisf+0x14c>
     438:	21 15       	cp	r18, r1
     43a:	31 05       	cpc	r19, r1
     43c:	41 05       	cpc	r20, r1
     43e:	51 05       	cpc	r21, r1
     440:	41 f0       	breq	.+16     	; 0x452 <__floatdisf+0x172>
     442:	81 e0       	ldi	r24, 0x01	; 1
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	a0 e0       	ldi	r26, 0x00	; 0
     448:	b0 e0       	ldi	r27, 0x00	; 0
     44a:	48 2a       	or	r4, r24
     44c:	59 2a       	or	r5, r25
     44e:	6a 2a       	or	r6, r26
     450:	7b 2a       	or	r7, r27
     452:	29 81       	ldd	r18, Y+1	; 0x01
     454:	3a 81       	ldd	r19, Y+2	; 0x02
     456:	4b 81       	ldd	r20, Y+3	; 0x03
     458:	5c 81       	ldd	r21, Y+4	; 0x04
     45a:	20 32       	cpi	r18, 0x20	; 32
     45c:	31 05       	cpc	r19, r1
     45e:	41 05       	cpc	r20, r1
     460:	51 05       	cpc	r21, r1
     462:	59 f4       	brne	.+22     	; 0x47a <__floatdisf+0x19a>
     464:	0f 2e       	mov	r0, r31
     466:	f0 e0       	ldi	r31, 0x00	; 0
     468:	cf 2e       	mov	r12, r31
     46a:	f0 e0       	ldi	r31, 0x00	; 0
     46c:	df 2e       	mov	r13, r31
     46e:	f0 e8       	ldi	r31, 0x80	; 128
     470:	ef 2e       	mov	r14, r31
     472:	ff e4       	ldi	r31, 0x4F	; 79
     474:	ff 2e       	mov	r15, r31
     476:	f0 2d       	mov	r31, r0
     478:	22 c0       	rjmp	.+68     	; 0x4be <__floatdisf+0x1de>
     47a:	89 81       	ldd	r24, Y+1	; 0x01
     47c:	9a 81       	ldd	r25, Y+2	; 0x02
     47e:	ab 81       	ldd	r26, Y+3	; 0x03
     480:	bc 81       	ldd	r27, Y+4	; 0x04
     482:	4f 97       	sbiw	r24, 0x1f	; 31
     484:	a1 05       	cpc	r26, r1
     486:	b1 05       	cpc	r27, r1
     488:	59 f4       	brne	.+22     	; 0x4a0 <__floatdisf+0x1c0>
     48a:	0f 2e       	mov	r0, r31
     48c:	f0 e0       	ldi	r31, 0x00	; 0
     48e:	cf 2e       	mov	r12, r31
     490:	f0 e0       	ldi	r31, 0x00	; 0
     492:	df 2e       	mov	r13, r31
     494:	f0 e0       	ldi	r31, 0x00	; 0
     496:	ef 2e       	mov	r14, r31
     498:	ff e4       	ldi	r31, 0x4F	; 79
     49a:	ff 2e       	mov	r15, r31
     49c:	f0 2d       	mov	r31, r0
     49e:	0f c0       	rjmp	.+30     	; 0x4be <__floatdisf+0x1de>
     4a0:	61 e0       	ldi	r22, 0x01	; 1
     4a2:	70 e0       	ldi	r23, 0x00	; 0
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	04 c0       	rjmp	.+8      	; 0x4b2 <__floatdisf+0x1d2>
     4aa:	66 0f       	add	r22, r22
     4ac:	77 1f       	adc	r23, r23
     4ae:	88 1f       	adc	r24, r24
     4b0:	99 1f       	adc	r25, r25
     4b2:	1a 95       	dec	r17
     4b4:	d2 f7       	brpl	.-12     	; 0x4aa <__floatdisf+0x1ca>
     4b6:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <__floatsisf>
     4ba:	6b 01       	movw	r12, r22
     4bc:	7c 01       	movw	r14, r24
     4be:	c3 01       	movw	r24, r6
     4c0:	b2 01       	movw	r22, r4
     4c2:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <__floatsisf>
     4c6:	a7 01       	movw	r20, r14
     4c8:	96 01       	movw	r18, r12
     4ca:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
     4ce:	24 96       	adiw	r28, 0x04	; 4
     4d0:	e0 e1       	ldi	r30, 0x10	; 16
     4d2:	0c 94 9e 29 	jmp	0x533c	; 0x533c <__epilogue_restores__+0x4>

000004d6 <__divdi3>:
     4d6:	a2 e7       	ldi	r26, 0x72	; 114
     4d8:	b0 e0       	ldi	r27, 0x00	; 0
     4da:	e1 e7       	ldi	r30, 0x71	; 113
     4dc:	f2 e0       	ldi	r31, 0x02	; 2
     4de:	0c 94 80 29 	jmp	0x5300	; 0x5300 <__prologue_saves__>
     4e2:	98 2e       	mov	r9, r24
     4e4:	89 2e       	mov	r8, r25
     4e6:	71 2e       	mov	r7, r17
     4e8:	88 e0       	ldi	r24, 0x08	; 8
     4ea:	fe 01       	movw	r30, r28
     4ec:	31 96       	adiw	r30, 0x01	; 1
     4ee:	df 01       	movw	r26, r30
     4f0:	68 2e       	mov	r6, r24
     4f2:	1d 92       	st	X+, r1
     4f4:	6a 94       	dec	r6
     4f6:	e9 f7       	brne	.-6      	; 0x4f2 <__divdi3+0x1c>
     4f8:	29 83       	std	Y+1, r18	; 0x01
     4fa:	3a 83       	std	Y+2, r19	; 0x02
     4fc:	4b 83       	std	Y+3, r20	; 0x03
     4fe:	5c 83       	std	Y+4, r21	; 0x04
     500:	6d 83       	std	Y+5, r22	; 0x05
     502:	7e 83       	std	Y+6, r23	; 0x06
     504:	9f 82       	std	Y+7, r9	; 0x07
     506:	98 87       	std	Y+8, r25	; 0x08
     508:	fe 01       	movw	r30, r28
     50a:	39 96       	adiw	r30, 0x09	; 9
     50c:	df 01       	movw	r26, r30
     50e:	1d 92       	st	X+, r1
     510:	8a 95       	dec	r24
     512:	e9 f7       	brne	.-6      	; 0x50e <__divdi3+0x38>
     514:	a9 86       	std	Y+9, r10	; 0x09
     516:	ba 86       	std	Y+10, r11	; 0x0a
     518:	cb 86       	std	Y+11, r12	; 0x0b
     51a:	dc 86       	std	Y+12, r13	; 0x0c
     51c:	ed 86       	std	Y+13, r14	; 0x0d
     51e:	fe 86       	std	Y+14, r15	; 0x0e
     520:	0f 87       	std	Y+15, r16	; 0x0f
     522:	18 8b       	std	Y+16, r17	; 0x10
     524:	8d 81       	ldd	r24, Y+5	; 0x05
     526:	9e 81       	ldd	r25, Y+6	; 0x06
     528:	af 81       	ldd	r26, Y+7	; 0x07
     52a:	b8 85       	ldd	r27, Y+8	; 0x08
     52c:	b7 fd       	sbrc	r27, 7
     52e:	07 c0       	rjmp	.+14     	; 0x53e <__divdi3+0x68>
     530:	e1 96       	adiw	r28, 0x31	; 49
     532:	1c ae       	std	Y+60, r1	; 0x3c
     534:	1d ae       	std	Y+61, r1	; 0x3d
     536:	1e ae       	std	Y+62, r1	; 0x3e
     538:	1f ae       	std	Y+63, r1	; 0x3f
     53a:	e1 97       	sbiw	r28, 0x31	; 49
     53c:	64 c0       	rjmp	.+200    	; 0x606 <__divdi3+0x130>
     53e:	21 95       	neg	r18
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	12 16       	cp	r1, r18
     544:	08 f0       	brcs	.+2      	; 0x548 <__divdi3+0x72>
     546:	80 e0       	ldi	r24, 0x00	; 0
     548:	31 95       	neg	r19
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	13 16       	cp	r1, r19
     54e:	08 f0       	brcs	.+2      	; 0x552 <__divdi3+0x7c>
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	b3 2f       	mov	r27, r19
     554:	b8 1b       	sub	r27, r24
     556:	81 e0       	ldi	r24, 0x01	; 1
     558:	3b 17       	cp	r19, r27
     55a:	08 f0       	brcs	.+2      	; 0x55e <__divdi3+0x88>
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	98 2b       	or	r25, r24
     560:	41 95       	neg	r20
     562:	31 e0       	ldi	r19, 0x01	; 1
     564:	14 16       	cp	r1, r20
     566:	08 f0       	brcs	.+2      	; 0x56a <__divdi3+0x94>
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	a4 2f       	mov	r26, r20
     56c:	a9 1b       	sub	r26, r25
     56e:	81 e0       	ldi	r24, 0x01	; 1
     570:	4a 17       	cp	r20, r26
     572:	08 f0       	brcs	.+2      	; 0x576 <__divdi3+0xa0>
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	38 2b       	or	r19, r24
     578:	51 95       	neg	r21
     57a:	91 e0       	ldi	r25, 0x01	; 1
     57c:	15 16       	cp	r1, r21
     57e:	08 f0       	brcs	.+2      	; 0x582 <__divdi3+0xac>
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	f5 2f       	mov	r31, r21
     584:	f3 1b       	sub	r31, r19
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	5f 17       	cp	r21, r31
     58a:	08 f0       	brcs	.+2      	; 0x58e <__divdi3+0xb8>
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	98 2b       	or	r25, r24
     590:	61 95       	neg	r22
     592:	31 e0       	ldi	r19, 0x01	; 1
     594:	16 16       	cp	r1, r22
     596:	08 f0       	brcs	.+2      	; 0x59a <__divdi3+0xc4>
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	e6 2f       	mov	r30, r22
     59c:	e9 1b       	sub	r30, r25
     59e:	81 e0       	ldi	r24, 0x01	; 1
     5a0:	6e 17       	cp	r22, r30
     5a2:	08 f0       	brcs	.+2      	; 0x5a6 <__divdi3+0xd0>
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	38 2b       	or	r19, r24
     5a8:	71 95       	neg	r23
     5aa:	41 e0       	ldi	r20, 0x01	; 1
     5ac:	17 16       	cp	r1, r23
     5ae:	08 f0       	brcs	.+2      	; 0x5b2 <__divdi3+0xdc>
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	57 2f       	mov	r21, r23
     5b4:	53 1b       	sub	r21, r19
     5b6:	81 e0       	ldi	r24, 0x01	; 1
     5b8:	75 17       	cp	r23, r21
     5ba:	08 f0       	brcs	.+2      	; 0x5be <__divdi3+0xe8>
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	48 2b       	or	r20, r24
     5c0:	89 2d       	mov	r24, r9
     5c2:	81 95       	neg	r24
     5c4:	91 e0       	ldi	r25, 0x01	; 1
     5c6:	18 16       	cp	r1, r24
     5c8:	08 f0       	brcs	.+2      	; 0x5cc <__divdi3+0xf6>
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	68 2e       	mov	r6, r24
     5ce:	64 1a       	sub	r6, r20
     5d0:	46 2d       	mov	r20, r6
     5d2:	31 e0       	ldi	r19, 0x01	; 1
     5d4:	86 15       	cp	r24, r6
     5d6:	08 f0       	brcs	.+2      	; 0x5da <__divdi3+0x104>
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	93 2b       	or	r25, r19
     5dc:	88 2d       	mov	r24, r8
     5de:	81 95       	neg	r24
     5e0:	89 1b       	sub	r24, r25
     5e2:	29 83       	std	Y+1, r18	; 0x01
     5e4:	ba 83       	std	Y+2, r27	; 0x02
     5e6:	ab 83       	std	Y+3, r26	; 0x03
     5e8:	fc 83       	std	Y+4, r31	; 0x04
     5ea:	ed 83       	std	Y+5, r30	; 0x05
     5ec:	5e 83       	std	Y+6, r21	; 0x06
     5ee:	4f 83       	std	Y+7, r20	; 0x07
     5f0:	88 87       	std	Y+8, r24	; 0x08
     5f2:	2f ef       	ldi	r18, 0xFF	; 255
     5f4:	3f ef       	ldi	r19, 0xFF	; 255
     5f6:	4f ef       	ldi	r20, 0xFF	; 255
     5f8:	5f ef       	ldi	r21, 0xFF	; 255
     5fa:	e1 96       	adiw	r28, 0x31	; 49
     5fc:	2c af       	std	Y+60, r18	; 0x3c
     5fe:	3d af       	std	Y+61, r19	; 0x3d
     600:	4e af       	std	Y+62, r20	; 0x3e
     602:	5f af       	std	Y+63, r21	; 0x3f
     604:	e1 97       	sbiw	r28, 0x31	; 49
     606:	8d 85       	ldd	r24, Y+13	; 0x0d
     608:	9e 85       	ldd	r25, Y+14	; 0x0e
     60a:	af 85       	ldd	r26, Y+15	; 0x0f
     60c:	b8 89       	ldd	r27, Y+16	; 0x10
     60e:	b7 ff       	sbrs	r27, 7
     610:	6a c0       	rjmp	.+212    	; 0x6e6 <__divdi3+0x210>
     612:	e1 96       	adiw	r28, 0x31	; 49
     614:	4c ad       	ldd	r20, Y+60	; 0x3c
     616:	5d ad       	ldd	r21, Y+61	; 0x3d
     618:	6e ad       	ldd	r22, Y+62	; 0x3e
     61a:	7f ad       	ldd	r23, Y+63	; 0x3f
     61c:	e1 97       	sbiw	r28, 0x31	; 49
     61e:	40 95       	com	r20
     620:	50 95       	com	r21
     622:	60 95       	com	r22
     624:	70 95       	com	r23
     626:	e1 96       	adiw	r28, 0x31	; 49
     628:	4c af       	std	Y+60, r20	; 0x3c
     62a:	5d af       	std	Y+61, r21	; 0x3d
     62c:	6e af       	std	Y+62, r22	; 0x3e
     62e:	7f af       	std	Y+63, r23	; 0x3f
     630:	e1 97       	sbiw	r28, 0x31	; 49
     632:	a1 94       	neg	r10
     634:	81 e0       	ldi	r24, 0x01	; 1
     636:	1a 14       	cp	r1, r10
     638:	08 f0       	brcs	.+2      	; 0x63c <__divdi3+0x166>
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	b1 94       	neg	r11
     63e:	91 e0       	ldi	r25, 0x01	; 1
     640:	1b 14       	cp	r1, r11
     642:	08 f0       	brcs	.+2      	; 0x646 <__divdi3+0x170>
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	6b 2d       	mov	r22, r11
     648:	68 1b       	sub	r22, r24
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	b6 16       	cp	r11, r22
     64e:	08 f0       	brcs	.+2      	; 0x652 <__divdi3+0x17c>
     650:	80 e0       	ldi	r24, 0x00	; 0
     652:	98 2b       	or	r25, r24
     654:	c1 94       	neg	r12
     656:	21 e0       	ldi	r18, 0x01	; 1
     658:	1c 14       	cp	r1, r12
     65a:	08 f0       	brcs	.+2      	; 0x65e <__divdi3+0x188>
     65c:	20 e0       	ldi	r18, 0x00	; 0
     65e:	5c 2d       	mov	r21, r12
     660:	59 1b       	sub	r21, r25
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	c5 16       	cp	r12, r21
     666:	08 f0       	brcs	.+2      	; 0x66a <__divdi3+0x194>
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	28 2b       	or	r18, r24
     66c:	d1 94       	neg	r13
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	1d 14       	cp	r1, r13
     672:	08 f0       	brcs	.+2      	; 0x676 <__divdi3+0x1a0>
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	4d 2d       	mov	r20, r13
     678:	42 1b       	sub	r20, r18
     67a:	81 e0       	ldi	r24, 0x01	; 1
     67c:	d4 16       	cp	r13, r20
     67e:	08 f0       	brcs	.+2      	; 0x682 <__divdi3+0x1ac>
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	98 2b       	or	r25, r24
     684:	e1 94       	neg	r14
     686:	21 e0       	ldi	r18, 0x01	; 1
     688:	1e 14       	cp	r1, r14
     68a:	08 f0       	brcs	.+2      	; 0x68e <__divdi3+0x1b8>
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	3e 2d       	mov	r19, r14
     690:	39 1b       	sub	r19, r25
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	e3 16       	cp	r14, r19
     696:	08 f0       	brcs	.+2      	; 0x69a <__divdi3+0x1c4>
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	28 2b       	or	r18, r24
     69c:	f1 94       	neg	r15
     69e:	91 e0       	ldi	r25, 0x01	; 1
     6a0:	1f 14       	cp	r1, r15
     6a2:	08 f0       	brcs	.+2      	; 0x6a6 <__divdi3+0x1d0>
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	7f 2d       	mov	r23, r15
     6a8:	72 1b       	sub	r23, r18
     6aa:	27 2f       	mov	r18, r23
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	f7 16       	cp	r15, r23
     6b0:	08 f0       	brcs	.+2      	; 0x6b4 <__divdi3+0x1de>
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	98 2b       	or	r25, r24
     6b6:	01 95       	neg	r16
     6b8:	11 e0       	ldi	r17, 0x01	; 1
     6ba:	10 16       	cp	r1, r16
     6bc:	08 f0       	brcs	.+2      	; 0x6c0 <__divdi3+0x1ea>
     6be:	10 e0       	ldi	r17, 0x00	; 0
     6c0:	80 2f       	mov	r24, r16
     6c2:	89 1b       	sub	r24, r25
     6c4:	98 2f       	mov	r25, r24
     6c6:	81 e0       	ldi	r24, 0x01	; 1
     6c8:	09 17       	cp	r16, r25
     6ca:	08 f0       	brcs	.+2      	; 0x6ce <__divdi3+0x1f8>
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	18 2b       	or	r17, r24
     6d0:	87 2d       	mov	r24, r7
     6d2:	81 95       	neg	r24
     6d4:	81 1b       	sub	r24, r17
     6d6:	a9 86       	std	Y+9, r10	; 0x09
     6d8:	6a 87       	std	Y+10, r22	; 0x0a
     6da:	5b 87       	std	Y+11, r21	; 0x0b
     6dc:	4c 87       	std	Y+12, r20	; 0x0c
     6de:	3d 87       	std	Y+13, r19	; 0x0d
     6e0:	2e 87       	std	Y+14, r18	; 0x0e
     6e2:	9f 87       	std	Y+15, r25	; 0x0f
     6e4:	88 8b       	std	Y+16, r24	; 0x10
     6e6:	99 81       	ldd	r25, Y+1	; 0x01
     6e8:	2a 81       	ldd	r18, Y+2	; 0x02
     6ea:	3b 81       	ldd	r19, Y+3	; 0x03
     6ec:	4c 81       	ldd	r20, Y+4	; 0x04
     6ee:	5d 81       	ldd	r21, Y+5	; 0x05
     6f0:	6e 81       	ldd	r22, Y+6	; 0x06
     6f2:	7f 81       	ldd	r23, Y+7	; 0x07
     6f4:	a8 85       	ldd	r26, Y+8	; 0x08
     6f6:	b9 85       	ldd	r27, Y+9	; 0x09
     6f8:	1a 85       	ldd	r17, Y+10	; 0x0a
     6fa:	0b 85       	ldd	r16, Y+11	; 0x0b
     6fc:	fc 84       	ldd	r15, Y+12	; 0x0c
     6fe:	ed 84       	ldd	r14, Y+13	; 0x0d
     700:	de 84       	ldd	r13, Y+14	; 0x0e
     702:	cf 84       	ldd	r12, Y+15	; 0x0f
     704:	b8 88       	ldd	r11, Y+16	; 0x10
     706:	88 e0       	ldi	r24, 0x08	; 8
     708:	e1 e1       	ldi	r30, 0x11	; 17
     70a:	8e 2e       	mov	r8, r30
     70c:	91 2c       	mov	r9, r1
     70e:	8c 0e       	add	r8, r28
     710:	9d 1e       	adc	r9, r29
     712:	f4 01       	movw	r30, r8
     714:	68 2e       	mov	r6, r24
     716:	11 92       	st	Z+, r1
     718:	6a 94       	dec	r6
     71a:	e9 f7       	brne	.-6      	; 0x716 <__divdi3+0x240>
     71c:	99 8b       	std	Y+17, r25	; 0x11
     71e:	2a 8b       	std	Y+18, r18	; 0x12
     720:	3b 8b       	std	Y+19, r19	; 0x13
     722:	4c 8b       	std	Y+20, r20	; 0x14
     724:	5d 8b       	std	Y+21, r21	; 0x15
     726:	6e 8b       	std	Y+22, r22	; 0x16
     728:	7f 8b       	std	Y+23, r23	; 0x17
     72a:	a8 8f       	std	Y+24, r26	; 0x18
     72c:	9e 01       	movw	r18, r28
     72e:	27 5e       	subi	r18, 0xE7	; 231
     730:	3f 4f       	sbci	r19, 0xFF	; 255
     732:	f9 01       	movw	r30, r18
     734:	11 92       	st	Z+, r1
     736:	8a 95       	dec	r24
     738:	e9 f7       	brne	.-6      	; 0x734 <__divdi3+0x25e>
     73a:	b9 8f       	std	Y+25, r27	; 0x19
     73c:	1a 8f       	std	Y+26, r17	; 0x1a
     73e:	0b 8f       	std	Y+27, r16	; 0x1b
     740:	fc 8e       	std	Y+28, r15	; 0x1c
     742:	ed 8e       	std	Y+29, r14	; 0x1d
     744:	de 8e       	std	Y+30, r13	; 0x1e
     746:	cf 8e       	std	Y+31, r12	; 0x1f
     748:	b8 a2       	std	Y+32, r11	; 0x20
     74a:	29 8c       	ldd	r2, Y+25	; 0x19
     74c:	3a 8c       	ldd	r3, Y+26	; 0x1a
     74e:	4b 8c       	ldd	r4, Y+27	; 0x1b
     750:	5c 8c       	ldd	r5, Y+28	; 0x1c
     752:	ed 8c       	ldd	r14, Y+29	; 0x1d
     754:	fe 8c       	ldd	r15, Y+30	; 0x1e
     756:	0f 8d       	ldd	r16, Y+31	; 0x1f
     758:	18 a1       	ldd	r17, Y+32	; 0x20
     75a:	69 88       	ldd	r6, Y+17	; 0x11
     75c:	7a 88       	ldd	r7, Y+18	; 0x12
     75e:	8b 88       	ldd	r8, Y+19	; 0x13
     760:	9c 88       	ldd	r9, Y+20	; 0x14
     762:	21 96       	adiw	r28, 0x01	; 1
     764:	6c ae       	std	Y+60, r6	; 0x3c
     766:	7d ae       	std	Y+61, r7	; 0x3d
     768:	8e ae       	std	Y+62, r8	; 0x3e
     76a:	9f ae       	std	Y+63, r9	; 0x3f
     76c:	21 97       	sbiw	r28, 0x01	; 1
     76e:	6d 88       	ldd	r6, Y+21	; 0x15
     770:	7e 88       	ldd	r7, Y+22	; 0x16
     772:	8f 88       	ldd	r8, Y+23	; 0x17
     774:	98 8c       	ldd	r9, Y+24	; 0x18
     776:	e1 14       	cp	r14, r1
     778:	f1 04       	cpc	r15, r1
     77a:	01 05       	cpc	r16, r1
     77c:	11 05       	cpc	r17, r1
     77e:	09 f0       	breq	.+2      	; 0x782 <__divdi3+0x2ac>
     780:	d9 c3       	rjmp	.+1970   	; 0xf34 <__stack+0x6d5>
     782:	62 14       	cp	r6, r2
     784:	73 04       	cpc	r7, r3
     786:	84 04       	cpc	r8, r4
     788:	95 04       	cpc	r9, r5
     78a:	08 f0       	brcs	.+2      	; 0x78e <__divdi3+0x2b8>
     78c:	57 c1       	rjmp	.+686    	; 0xa3c <__stack+0x1dd>
     78e:	00 e0       	ldi	r16, 0x00	; 0
     790:	20 16       	cp	r2, r16
     792:	00 e0       	ldi	r16, 0x00	; 0
     794:	30 06       	cpc	r3, r16
     796:	01 e0       	ldi	r16, 0x01	; 1
     798:	40 06       	cpc	r4, r16
     79a:	00 e0       	ldi	r16, 0x00	; 0
     79c:	50 06       	cpc	r5, r16
     79e:	88 f4       	brcc	.+34     	; 0x7c2 <__divdi3+0x2ec>
     7a0:	1f ef       	ldi	r17, 0xFF	; 255
     7a2:	21 16       	cp	r2, r17
     7a4:	31 04       	cpc	r3, r1
     7a6:	41 04       	cpc	r4, r1
     7a8:	51 04       	cpc	r5, r1
     7aa:	39 f0       	breq	.+14     	; 0x7ba <__divdi3+0x2e4>
     7ac:	30 f0       	brcs	.+12     	; 0x7ba <__divdi3+0x2e4>
     7ae:	48 e0       	ldi	r20, 0x08	; 8
     7b0:	e4 2e       	mov	r14, r20
     7b2:	f1 2c       	mov	r15, r1
     7b4:	01 2d       	mov	r16, r1
     7b6:	11 2d       	mov	r17, r1
     7b8:	18 c0       	rjmp	.+48     	; 0x7ea <__divdi3+0x314>
     7ba:	ee 24       	eor	r14, r14
     7bc:	ff 24       	eor	r15, r15
     7be:	87 01       	movw	r16, r14
     7c0:	14 c0       	rjmp	.+40     	; 0x7ea <__divdi3+0x314>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	22 16       	cp	r2, r18
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	32 06       	cpc	r3, r18
     7ca:	20 e0       	ldi	r18, 0x00	; 0
     7cc:	42 06       	cpc	r4, r18
     7ce:	21 e0       	ldi	r18, 0x01	; 1
     7d0:	52 06       	cpc	r5, r18
     7d2:	30 f0       	brcs	.+12     	; 0x7e0 <__divdi3+0x30a>
     7d4:	38 e1       	ldi	r19, 0x18	; 24
     7d6:	e3 2e       	mov	r14, r19
     7d8:	f1 2c       	mov	r15, r1
     7da:	01 2d       	mov	r16, r1
     7dc:	11 2d       	mov	r17, r1
     7de:	05 c0       	rjmp	.+10     	; 0x7ea <__divdi3+0x314>
     7e0:	20 e1       	ldi	r18, 0x10	; 16
     7e2:	e2 2e       	mov	r14, r18
     7e4:	f1 2c       	mov	r15, r1
     7e6:	01 2d       	mov	r16, r1
     7e8:	11 2d       	mov	r17, r1
     7ea:	d2 01       	movw	r26, r4
     7ec:	c1 01       	movw	r24, r2
     7ee:	0e 2c       	mov	r0, r14
     7f0:	04 c0       	rjmp	.+8      	; 0x7fa <__divdi3+0x324>
     7f2:	b6 95       	lsr	r27
     7f4:	a7 95       	ror	r26
     7f6:	97 95       	ror	r25
     7f8:	87 95       	ror	r24
     7fa:	0a 94       	dec	r0
     7fc:	d2 f7       	brpl	.-12     	; 0x7f2 <__divdi3+0x31c>
     7fe:	8a 57       	subi	r24, 0x7A	; 122
     800:	9f 4f       	sbci	r25, 0xFF	; 255
     802:	dc 01       	movw	r26, r24
     804:	2c 91       	ld	r18, X
     806:	80 e2       	ldi	r24, 0x20	; 32
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e0       	ldi	r26, 0x00	; 0
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	8e 19       	sub	r24, r14
     810:	9f 09       	sbc	r25, r15
     812:	a0 0b       	sbc	r26, r16
     814:	b1 0b       	sbc	r27, r17
     816:	7c 01       	movw	r14, r24
     818:	8d 01       	movw	r16, r26
     81a:	e2 1a       	sub	r14, r18
     81c:	f1 08       	sbc	r15, r1
     81e:	01 09       	sbc	r16, r1
     820:	11 09       	sbc	r17, r1
     822:	e1 14       	cp	r14, r1
     824:	f1 04       	cpc	r15, r1
     826:	01 05       	cpc	r16, r1
     828:	11 05       	cpc	r17, r1
     82a:	d1 f1       	breq	.+116    	; 0x8a0 <__stack+0x41>
     82c:	0e 2c       	mov	r0, r14
     82e:	04 c0       	rjmp	.+8      	; 0x838 <__divdi3+0x362>
     830:	22 0c       	add	r2, r2
     832:	33 1c       	adc	r3, r3
     834:	44 1c       	adc	r4, r4
     836:	55 1c       	adc	r5, r5
     838:	0a 94       	dec	r0
     83a:	d2 f7       	brpl	.-12     	; 0x830 <__divdi3+0x35a>
     83c:	a4 01       	movw	r20, r8
     83e:	93 01       	movw	r18, r6
     840:	0e 2c       	mov	r0, r14
     842:	04 c0       	rjmp	.+8      	; 0x84c <__divdi3+0x376>
     844:	22 0f       	add	r18, r18
     846:	33 1f       	adc	r19, r19
     848:	44 1f       	adc	r20, r20
     84a:	55 1f       	adc	r21, r21
     84c:	0a 94       	dec	r0
     84e:	d2 f7       	brpl	.-12     	; 0x844 <__divdi3+0x36e>
     850:	80 e2       	ldi	r24, 0x20	; 32
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	8e 19       	sub	r24, r14
     856:	9f 09       	sbc	r25, r15
     858:	21 96       	adiw	r28, 0x01	; 1
     85a:	6c ac       	ldd	r6, Y+60	; 0x3c
     85c:	7d ac       	ldd	r7, Y+61	; 0x3d
     85e:	8e ac       	ldd	r8, Y+62	; 0x3e
     860:	9f ac       	ldd	r9, Y+63	; 0x3f
     862:	21 97       	sbiw	r28, 0x01	; 1
     864:	04 c0       	rjmp	.+8      	; 0x86e <__stack+0xf>
     866:	96 94       	lsr	r9
     868:	87 94       	ror	r8
     86a:	77 94       	ror	r7
     86c:	67 94       	ror	r6
     86e:	8a 95       	dec	r24
     870:	d2 f7       	brpl	.-12     	; 0x866 <__stack+0x7>
     872:	62 2a       	or	r6, r18
     874:	73 2a       	or	r7, r19
     876:	84 2a       	or	r8, r20
     878:	95 2a       	or	r9, r21
     87a:	21 96       	adiw	r28, 0x01	; 1
     87c:	ac ac       	ldd	r10, Y+60	; 0x3c
     87e:	bd ac       	ldd	r11, Y+61	; 0x3d
     880:	ce ac       	ldd	r12, Y+62	; 0x3e
     882:	df ac       	ldd	r13, Y+63	; 0x3f
     884:	21 97       	sbiw	r28, 0x01	; 1
     886:	04 c0       	rjmp	.+8      	; 0x890 <__stack+0x31>
     888:	aa 0c       	add	r10, r10
     88a:	bb 1c       	adc	r11, r11
     88c:	cc 1c       	adc	r12, r12
     88e:	dd 1c       	adc	r13, r13
     890:	ea 94       	dec	r14
     892:	d2 f7       	brpl	.-12     	; 0x888 <__stack+0x29>
     894:	21 96       	adiw	r28, 0x01	; 1
     896:	ac ae       	std	Y+60, r10	; 0x3c
     898:	bd ae       	std	Y+61, r11	; 0x3d
     89a:	ce ae       	std	Y+62, r12	; 0x3e
     89c:	df ae       	std	Y+63, r13	; 0x3f
     89e:	21 97       	sbiw	r28, 0x01	; 1
     8a0:	62 01       	movw	r12, r4
     8a2:	ee 24       	eor	r14, r14
     8a4:	ff 24       	eor	r15, r15
     8a6:	29 96       	adiw	r28, 0x09	; 9
     8a8:	cc ae       	std	Y+60, r12	; 0x3c
     8aa:	dd ae       	std	Y+61, r13	; 0x3d
     8ac:	ee ae       	std	Y+62, r14	; 0x3e
     8ae:	ff ae       	std	Y+63, r15	; 0x3f
     8b0:	29 97       	sbiw	r28, 0x09	; 9
     8b2:	92 01       	movw	r18, r4
     8b4:	81 01       	movw	r16, r2
     8b6:	20 70       	andi	r18, 0x00	; 0
     8b8:	30 70       	andi	r19, 0x00	; 0
     8ba:	2d 96       	adiw	r28, 0x0d	; 13
     8bc:	0c af       	std	Y+60, r16	; 0x3c
     8be:	1d af       	std	Y+61, r17	; 0x3d
     8c0:	2e af       	std	Y+62, r18	; 0x3e
     8c2:	3f af       	std	Y+63, r19	; 0x3f
     8c4:	2d 97       	sbiw	r28, 0x0d	; 13
     8c6:	c4 01       	movw	r24, r8
     8c8:	b3 01       	movw	r22, r6
     8ca:	a7 01       	movw	r20, r14
     8cc:	96 01       	movw	r18, r12
     8ce:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     8d2:	7b 01       	movw	r14, r22
     8d4:	8c 01       	movw	r16, r24
     8d6:	c4 01       	movw	r24, r8
     8d8:	b3 01       	movw	r22, r6
     8da:	29 96       	adiw	r28, 0x09	; 9
     8dc:	2c ad       	ldd	r18, Y+60	; 0x3c
     8de:	3d ad       	ldd	r19, Y+61	; 0x3d
     8e0:	4e ad       	ldd	r20, Y+62	; 0x3e
     8e2:	5f ad       	ldd	r21, Y+63	; 0x3f
     8e4:	29 97       	sbiw	r28, 0x09	; 9
     8e6:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     8ea:	c9 01       	movw	r24, r18
     8ec:	da 01       	movw	r26, r20
     8ee:	3c 01       	movw	r6, r24
     8f0:	4d 01       	movw	r8, r26
     8f2:	c4 01       	movw	r24, r8
     8f4:	b3 01       	movw	r22, r6
     8f6:	2d 96       	adiw	r28, 0x0d	; 13
     8f8:	2c ad       	ldd	r18, Y+60	; 0x3c
     8fa:	3d ad       	ldd	r19, Y+61	; 0x3d
     8fc:	4e ad       	ldd	r20, Y+62	; 0x3e
     8fe:	5f ad       	ldd	r21, Y+63	; 0x3f
     900:	2d 97       	sbiw	r28, 0x0d	; 13
     902:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	87 01       	movw	r16, r14
     90c:	ff 24       	eor	r15, r15
     90e:	ee 24       	eor	r14, r14
     910:	21 96       	adiw	r28, 0x01	; 1
     912:	ac ac       	ldd	r10, Y+60	; 0x3c
     914:	bd ac       	ldd	r11, Y+61	; 0x3d
     916:	ce ac       	ldd	r12, Y+62	; 0x3e
     918:	df ac       	ldd	r13, Y+63	; 0x3f
     91a:	21 97       	sbiw	r28, 0x01	; 1
     91c:	c6 01       	movw	r24, r12
     91e:	aa 27       	eor	r26, r26
     920:	bb 27       	eor	r27, r27
     922:	57 01       	movw	r10, r14
     924:	68 01       	movw	r12, r16
     926:	a8 2a       	or	r10, r24
     928:	b9 2a       	or	r11, r25
     92a:	ca 2a       	or	r12, r26
     92c:	db 2a       	or	r13, r27
     92e:	a2 16       	cp	r10, r18
     930:	b3 06       	cpc	r11, r19
     932:	c4 06       	cpc	r12, r20
     934:	d5 06       	cpc	r13, r21
     936:	e0 f4       	brcc	.+56     	; 0x970 <__stack+0x111>
     938:	08 94       	sec
     93a:	61 08       	sbc	r6, r1
     93c:	71 08       	sbc	r7, r1
     93e:	81 08       	sbc	r8, r1
     940:	91 08       	sbc	r9, r1
     942:	a2 0c       	add	r10, r2
     944:	b3 1c       	adc	r11, r3
     946:	c4 1c       	adc	r12, r4
     948:	d5 1c       	adc	r13, r5
     94a:	a2 14       	cp	r10, r2
     94c:	b3 04       	cpc	r11, r3
     94e:	c4 04       	cpc	r12, r4
     950:	d5 04       	cpc	r13, r5
     952:	70 f0       	brcs	.+28     	; 0x970 <__stack+0x111>
     954:	a2 16       	cp	r10, r18
     956:	b3 06       	cpc	r11, r19
     958:	c4 06       	cpc	r12, r20
     95a:	d5 06       	cpc	r13, r21
     95c:	48 f4       	brcc	.+18     	; 0x970 <__stack+0x111>
     95e:	08 94       	sec
     960:	61 08       	sbc	r6, r1
     962:	71 08       	sbc	r7, r1
     964:	81 08       	sbc	r8, r1
     966:	91 08       	sbc	r9, r1
     968:	a2 0c       	add	r10, r2
     96a:	b3 1c       	adc	r11, r3
     96c:	c4 1c       	adc	r12, r4
     96e:	d5 1c       	adc	r13, r5
     970:	a2 1a       	sub	r10, r18
     972:	b3 0a       	sbc	r11, r19
     974:	c4 0a       	sbc	r12, r20
     976:	d5 0a       	sbc	r13, r21
     978:	c6 01       	movw	r24, r12
     97a:	b5 01       	movw	r22, r10
     97c:	29 96       	adiw	r28, 0x09	; 9
     97e:	2c ad       	ldd	r18, Y+60	; 0x3c
     980:	3d ad       	ldd	r19, Y+61	; 0x3d
     982:	4e ad       	ldd	r20, Y+62	; 0x3e
     984:	5f ad       	ldd	r21, Y+63	; 0x3f
     986:	29 97       	sbiw	r28, 0x09	; 9
     988:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     98c:	7b 01       	movw	r14, r22
     98e:	8c 01       	movw	r16, r24
     990:	c6 01       	movw	r24, r12
     992:	b5 01       	movw	r22, r10
     994:	29 96       	adiw	r28, 0x09	; 9
     996:	2c ad       	ldd	r18, Y+60	; 0x3c
     998:	3d ad       	ldd	r19, Y+61	; 0x3d
     99a:	4e ad       	ldd	r20, Y+62	; 0x3e
     99c:	5f ad       	ldd	r21, Y+63	; 0x3f
     99e:	29 97       	sbiw	r28, 0x09	; 9
     9a0:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     9a4:	c9 01       	movw	r24, r18
     9a6:	da 01       	movw	r26, r20
     9a8:	5c 01       	movw	r10, r24
     9aa:	6d 01       	movw	r12, r26
     9ac:	c6 01       	movw	r24, r12
     9ae:	b5 01       	movw	r22, r10
     9b0:	2d 96       	adiw	r28, 0x0d	; 13
     9b2:	2c ad       	ldd	r18, Y+60	; 0x3c
     9b4:	3d ad       	ldd	r19, Y+61	; 0x3d
     9b6:	4e ad       	ldd	r20, Y+62	; 0x3e
     9b8:	5f ad       	ldd	r21, Y+63	; 0x3f
     9ba:	2d 97       	sbiw	r28, 0x0d	; 13
     9bc:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	87 01       	movw	r16, r14
     9c6:	ff 24       	eor	r15, r15
     9c8:	ee 24       	eor	r14, r14
     9ca:	21 96       	adiw	r28, 0x01	; 1
     9cc:	8c ad       	ldd	r24, Y+60	; 0x3c
     9ce:	9d ad       	ldd	r25, Y+61	; 0x3d
     9d0:	ae ad       	ldd	r26, Y+62	; 0x3e
     9d2:	bf ad       	ldd	r27, Y+63	; 0x3f
     9d4:	21 97       	sbiw	r28, 0x01	; 1
     9d6:	a0 70       	andi	r26, 0x00	; 0
     9d8:	b0 70       	andi	r27, 0x00	; 0
     9da:	e8 2a       	or	r14, r24
     9dc:	f9 2a       	or	r15, r25
     9de:	0a 2b       	or	r16, r26
     9e0:	1b 2b       	or	r17, r27
     9e2:	e2 16       	cp	r14, r18
     9e4:	f3 06       	cpc	r15, r19
     9e6:	04 07       	cpc	r16, r20
     9e8:	15 07       	cpc	r17, r21
     9ea:	c0 f4       	brcc	.+48     	; 0xa1c <__stack+0x1bd>
     9ec:	08 94       	sec
     9ee:	a1 08       	sbc	r10, r1
     9f0:	b1 08       	sbc	r11, r1
     9f2:	c1 08       	sbc	r12, r1
     9f4:	d1 08       	sbc	r13, r1
     9f6:	e2 0c       	add	r14, r2
     9f8:	f3 1c       	adc	r15, r3
     9fa:	04 1d       	adc	r16, r4
     9fc:	15 1d       	adc	r17, r5
     9fe:	e2 14       	cp	r14, r2
     a00:	f3 04       	cpc	r15, r3
     a02:	04 05       	cpc	r16, r4
     a04:	15 05       	cpc	r17, r5
     a06:	50 f0       	brcs	.+20     	; 0xa1c <__stack+0x1bd>
     a08:	e2 16       	cp	r14, r18
     a0a:	f3 06       	cpc	r15, r19
     a0c:	04 07       	cpc	r16, r20
     a0e:	15 07       	cpc	r17, r21
     a10:	28 f4       	brcc	.+10     	; 0xa1c <__stack+0x1bd>
     a12:	08 94       	sec
     a14:	a1 08       	sbc	r10, r1
     a16:	b1 08       	sbc	r11, r1
     a18:	c1 08       	sbc	r12, r1
     a1a:	d1 08       	sbc	r13, r1
     a1c:	d3 01       	movw	r26, r6
     a1e:	99 27       	eor	r25, r25
     a20:	88 27       	eor	r24, r24
     a22:	86 01       	movw	r16, r12
     a24:	75 01       	movw	r14, r10
     a26:	e8 2a       	or	r14, r24
     a28:	f9 2a       	or	r15, r25
     a2a:	0a 2b       	or	r16, r26
     a2c:	1b 2b       	or	r17, r27
     a2e:	25 96       	adiw	r28, 0x05	; 5
     a30:	ec ae       	std	Y+60, r14	; 0x3c
     a32:	fd ae       	std	Y+61, r15	; 0x3d
     a34:	0e af       	std	Y+62, r16	; 0x3e
     a36:	1f af       	std	Y+63, r17	; 0x3f
     a38:	25 97       	sbiw	r28, 0x05	; 5
     a3a:	eb c4       	rjmp	.+2518   	; 0x1412 <__stack+0xbb3>
     a3c:	21 14       	cp	r2, r1
     a3e:	31 04       	cpc	r3, r1
     a40:	41 04       	cpc	r4, r1
     a42:	51 04       	cpc	r5, r1
     a44:	71 f4       	brne	.+28     	; 0xa62 <__stack+0x203>
     a46:	61 e0       	ldi	r22, 0x01	; 1
     a48:	70 e0       	ldi	r23, 0x00	; 0
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	20 e0       	ldi	r18, 0x00	; 0
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	40 e0       	ldi	r20, 0x00	; 0
     a54:	50 e0       	ldi	r21, 0x00	; 0
     a56:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     a5a:	c9 01       	movw	r24, r18
     a5c:	da 01       	movw	r26, r20
     a5e:	1c 01       	movw	r2, r24
     a60:	2d 01       	movw	r4, r26
     a62:	00 e0       	ldi	r16, 0x00	; 0
     a64:	20 16       	cp	r2, r16
     a66:	00 e0       	ldi	r16, 0x00	; 0
     a68:	30 06       	cpc	r3, r16
     a6a:	01 e0       	ldi	r16, 0x01	; 1
     a6c:	40 06       	cpc	r4, r16
     a6e:	00 e0       	ldi	r16, 0x00	; 0
     a70:	50 06       	cpc	r5, r16
     a72:	88 f4       	brcc	.+34     	; 0xa96 <__stack+0x237>
     a74:	1f ef       	ldi	r17, 0xFF	; 255
     a76:	21 16       	cp	r2, r17
     a78:	31 04       	cpc	r3, r1
     a7a:	41 04       	cpc	r4, r1
     a7c:	51 04       	cpc	r5, r1
     a7e:	31 f0       	breq	.+12     	; 0xa8c <__stack+0x22d>
     a80:	28 f0       	brcs	.+10     	; 0xa8c <__stack+0x22d>
     a82:	48 e0       	ldi	r20, 0x08	; 8
     a84:	50 e0       	ldi	r21, 0x00	; 0
     a86:	60 e0       	ldi	r22, 0x00	; 0
     a88:	70 e0       	ldi	r23, 0x00	; 0
     a8a:	17 c0       	rjmp	.+46     	; 0xaba <__stack+0x25b>
     a8c:	40 e0       	ldi	r20, 0x00	; 0
     a8e:	50 e0       	ldi	r21, 0x00	; 0
     a90:	60 e0       	ldi	r22, 0x00	; 0
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	12 c0       	rjmp	.+36     	; 0xaba <__stack+0x25b>
     a96:	20 e0       	ldi	r18, 0x00	; 0
     a98:	22 16       	cp	r2, r18
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	32 06       	cpc	r3, r18
     a9e:	20 e0       	ldi	r18, 0x00	; 0
     aa0:	42 06       	cpc	r4, r18
     aa2:	21 e0       	ldi	r18, 0x01	; 1
     aa4:	52 06       	cpc	r5, r18
     aa6:	28 f0       	brcs	.+10     	; 0xab2 <__stack+0x253>
     aa8:	48 e1       	ldi	r20, 0x18	; 24
     aaa:	50 e0       	ldi	r21, 0x00	; 0
     aac:	60 e0       	ldi	r22, 0x00	; 0
     aae:	70 e0       	ldi	r23, 0x00	; 0
     ab0:	04 c0       	rjmp	.+8      	; 0xaba <__stack+0x25b>
     ab2:	40 e1       	ldi	r20, 0x10	; 16
     ab4:	50 e0       	ldi	r21, 0x00	; 0
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	d2 01       	movw	r26, r4
     abc:	c1 01       	movw	r24, r2
     abe:	04 2e       	mov	r0, r20
     ac0:	04 c0       	rjmp	.+8      	; 0xaca <__stack+0x26b>
     ac2:	b6 95       	lsr	r27
     ac4:	a7 95       	ror	r26
     ac6:	97 95       	ror	r25
     ac8:	87 95       	ror	r24
     aca:	0a 94       	dec	r0
     acc:	d2 f7       	brpl	.-12     	; 0xac2 <__stack+0x263>
     ace:	8a 57       	subi	r24, 0x7A	; 122
     ad0:	9f 4f       	sbci	r25, 0xFF	; 255
     ad2:	dc 01       	movw	r26, r24
     ad4:	2c 91       	ld	r18, X
     ad6:	e0 e2       	ldi	r30, 0x20	; 32
     ad8:	ee 2e       	mov	r14, r30
     ada:	f1 2c       	mov	r15, r1
     adc:	01 2d       	mov	r16, r1
     ade:	11 2d       	mov	r17, r1
     ae0:	d8 01       	movw	r26, r16
     ae2:	c7 01       	movw	r24, r14
     ae4:	84 1b       	sub	r24, r20
     ae6:	95 0b       	sbc	r25, r21
     ae8:	a6 0b       	sbc	r26, r22
     aea:	b7 0b       	sbc	r27, r23
     aec:	82 1b       	sub	r24, r18
     aee:	91 09       	sbc	r25, r1
     af0:	a1 09       	sbc	r26, r1
     af2:	b1 09       	sbc	r27, r1
     af4:	00 97       	sbiw	r24, 0x00	; 0
     af6:	a1 05       	cpc	r26, r1
     af8:	b1 05       	cpc	r27, r1
     afa:	61 f4       	brne	.+24     	; 0xb14 <__stack+0x2b5>
     afc:	64 01       	movw	r12, r8
     afe:	53 01       	movw	r10, r6
     b00:	a2 18       	sub	r10, r2
     b02:	b3 08       	sbc	r11, r3
     b04:	c4 08       	sbc	r12, r4
     b06:	d5 08       	sbc	r13, r5
     b08:	31 e0       	ldi	r19, 0x01	; 1
     b0a:	63 2e       	mov	r6, r19
     b0c:	71 2c       	mov	r7, r1
     b0e:	81 2c       	mov	r8, r1
     b10:	91 2c       	mov	r9, r1
     b12:	24 c1       	rjmp	.+584    	; 0xd5c <__stack+0x4fd>
     b14:	e3 96       	adiw	r28, 0x33	; 51
     b16:	8f af       	std	Y+63, r24	; 0x3f
     b18:	e3 97       	sbiw	r28, 0x33	; 51
     b1a:	08 2e       	mov	r0, r24
     b1c:	04 c0       	rjmp	.+8      	; 0xb26 <__stack+0x2c7>
     b1e:	22 0c       	add	r2, r2
     b20:	33 1c       	adc	r3, r3
     b22:	44 1c       	adc	r4, r4
     b24:	55 1c       	adc	r5, r5
     b26:	0a 94       	dec	r0
     b28:	d2 f7       	brpl	.-12     	; 0xb1e <__stack+0x2bf>
     b2a:	ee 2d       	mov	r30, r14
     b2c:	e8 1b       	sub	r30, r24
     b2e:	64 01       	movw	r12, r8
     b30:	53 01       	movw	r10, r6
     b32:	0e 2e       	mov	r0, r30
     b34:	04 c0       	rjmp	.+8      	; 0xb3e <__stack+0x2df>
     b36:	d6 94       	lsr	r13
     b38:	c7 94       	ror	r12
     b3a:	b7 94       	ror	r11
     b3c:	a7 94       	ror	r10
     b3e:	0a 94       	dec	r0
     b40:	d2 f7       	brpl	.-12     	; 0xb36 <__stack+0x2d7>
     b42:	a4 01       	movw	r20, r8
     b44:	93 01       	movw	r18, r6
     b46:	e3 96       	adiw	r28, 0x33	; 51
     b48:	0f ac       	ldd	r0, Y+63	; 0x3f
     b4a:	e3 97       	sbiw	r28, 0x33	; 51
     b4c:	04 c0       	rjmp	.+8      	; 0xb56 <__stack+0x2f7>
     b4e:	22 0f       	add	r18, r18
     b50:	33 1f       	adc	r19, r19
     b52:	44 1f       	adc	r20, r20
     b54:	55 1f       	adc	r21, r21
     b56:	0a 94       	dec	r0
     b58:	d2 f7       	brpl	.-12     	; 0xb4e <__stack+0x2ef>
     b5a:	21 96       	adiw	r28, 0x01	; 1
     b5c:	6c ac       	ldd	r6, Y+60	; 0x3c
     b5e:	7d ac       	ldd	r7, Y+61	; 0x3d
     b60:	8e ac       	ldd	r8, Y+62	; 0x3e
     b62:	9f ac       	ldd	r9, Y+63	; 0x3f
     b64:	21 97       	sbiw	r28, 0x01	; 1
     b66:	0e 2e       	mov	r0, r30
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <__stack+0x313>
     b6a:	96 94       	lsr	r9
     b6c:	87 94       	ror	r8
     b6e:	77 94       	ror	r7
     b70:	67 94       	ror	r6
     b72:	0a 94       	dec	r0
     b74:	d2 f7       	brpl	.-12     	; 0xb6a <__stack+0x30b>
     b76:	84 01       	movw	r16, r8
     b78:	73 01       	movw	r14, r6
     b7a:	e2 2a       	or	r14, r18
     b7c:	f3 2a       	or	r15, r19
     b7e:	04 2b       	or	r16, r20
     b80:	15 2b       	or	r17, r21
     b82:	e9 ae       	std	Y+57, r14	; 0x39
     b84:	fa ae       	std	Y+58, r15	; 0x3a
     b86:	0b af       	std	Y+59, r16	; 0x3b
     b88:	1c af       	std	Y+60, r17	; 0x3c
     b8a:	32 01       	movw	r6, r4
     b8c:	88 24       	eor	r8, r8
     b8e:	99 24       	eor	r9, r9
     b90:	92 01       	movw	r18, r4
     b92:	81 01       	movw	r16, r2
     b94:	20 70       	andi	r18, 0x00	; 0
     b96:	30 70       	andi	r19, 0x00	; 0
     b98:	61 96       	adiw	r28, 0x11	; 17
     b9a:	0c af       	std	Y+60, r16	; 0x3c
     b9c:	1d af       	std	Y+61, r17	; 0x3d
     b9e:	2e af       	std	Y+62, r18	; 0x3e
     ba0:	3f af       	std	Y+63, r19	; 0x3f
     ba2:	61 97       	sbiw	r28, 0x11	; 17
     ba4:	c6 01       	movw	r24, r12
     ba6:	b5 01       	movw	r22, r10
     ba8:	a4 01       	movw	r20, r8
     baa:	93 01       	movw	r18, r6
     bac:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     bb0:	7b 01       	movw	r14, r22
     bb2:	8c 01       	movw	r16, r24
     bb4:	c6 01       	movw	r24, r12
     bb6:	b5 01       	movw	r22, r10
     bb8:	a4 01       	movw	r20, r8
     bba:	93 01       	movw	r18, r6
     bbc:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     bc0:	c9 01       	movw	r24, r18
     bc2:	da 01       	movw	r26, r20
     bc4:	65 96       	adiw	r28, 0x15	; 21
     bc6:	8c af       	std	Y+60, r24	; 0x3c
     bc8:	9d af       	std	Y+61, r25	; 0x3d
     bca:	ae af       	std	Y+62, r26	; 0x3e
     bcc:	bf af       	std	Y+63, r27	; 0x3f
     bce:	65 97       	sbiw	r28, 0x15	; 21
     bd0:	bc 01       	movw	r22, r24
     bd2:	cd 01       	movw	r24, r26
     bd4:	61 96       	adiw	r28, 0x11	; 17
     bd6:	2c ad       	ldd	r18, Y+60	; 0x3c
     bd8:	3d ad       	ldd	r19, Y+61	; 0x3d
     bda:	4e ad       	ldd	r20, Y+62	; 0x3e
     bdc:	5f ad       	ldd	r21, Y+63	; 0x3f
     bde:	61 97       	sbiw	r28, 0x11	; 17
     be0:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     be4:	9b 01       	movw	r18, r22
     be6:	ac 01       	movw	r20, r24
     be8:	87 01       	movw	r16, r14
     bea:	ff 24       	eor	r15, r15
     bec:	ee 24       	eor	r14, r14
     bee:	a9 ac       	ldd	r10, Y+57	; 0x39
     bf0:	ba ac       	ldd	r11, Y+58	; 0x3a
     bf2:	cb ac       	ldd	r12, Y+59	; 0x3b
     bf4:	dc ac       	ldd	r13, Y+60	; 0x3c
     bf6:	c6 01       	movw	r24, r12
     bf8:	aa 27       	eor	r26, r26
     bfa:	bb 27       	eor	r27, r27
     bfc:	5c 01       	movw	r10, r24
     bfe:	6d 01       	movw	r12, r26
     c00:	ae 28       	or	r10, r14
     c02:	bf 28       	or	r11, r15
     c04:	c0 2a       	or	r12, r16
     c06:	d1 2a       	or	r13, r17
     c08:	a2 16       	cp	r10, r18
     c0a:	b3 06       	cpc	r11, r19
     c0c:	c4 06       	cpc	r12, r20
     c0e:	d5 06       	cpc	r13, r21
     c10:	60 f5       	brcc	.+88     	; 0xc6a <__stack+0x40b>
     c12:	65 96       	adiw	r28, 0x15	; 21
     c14:	6c ad       	ldd	r22, Y+60	; 0x3c
     c16:	7d ad       	ldd	r23, Y+61	; 0x3d
     c18:	8e ad       	ldd	r24, Y+62	; 0x3e
     c1a:	9f ad       	ldd	r25, Y+63	; 0x3f
     c1c:	65 97       	sbiw	r28, 0x15	; 21
     c1e:	61 50       	subi	r22, 0x01	; 1
     c20:	70 40       	sbci	r23, 0x00	; 0
     c22:	80 40       	sbci	r24, 0x00	; 0
     c24:	90 40       	sbci	r25, 0x00	; 0
     c26:	65 96       	adiw	r28, 0x15	; 21
     c28:	6c af       	std	Y+60, r22	; 0x3c
     c2a:	7d af       	std	Y+61, r23	; 0x3d
     c2c:	8e af       	std	Y+62, r24	; 0x3e
     c2e:	9f af       	std	Y+63, r25	; 0x3f
     c30:	65 97       	sbiw	r28, 0x15	; 21
     c32:	a2 0c       	add	r10, r2
     c34:	b3 1c       	adc	r11, r3
     c36:	c4 1c       	adc	r12, r4
     c38:	d5 1c       	adc	r13, r5
     c3a:	a2 14       	cp	r10, r2
     c3c:	b3 04       	cpc	r11, r3
     c3e:	c4 04       	cpc	r12, r4
     c40:	d5 04       	cpc	r13, r5
     c42:	98 f0       	brcs	.+38     	; 0xc6a <__stack+0x40b>
     c44:	a2 16       	cp	r10, r18
     c46:	b3 06       	cpc	r11, r19
     c48:	c4 06       	cpc	r12, r20
     c4a:	d5 06       	cpc	r13, r21
     c4c:	70 f4       	brcc	.+28     	; 0xc6a <__stack+0x40b>
     c4e:	61 50       	subi	r22, 0x01	; 1
     c50:	70 40       	sbci	r23, 0x00	; 0
     c52:	80 40       	sbci	r24, 0x00	; 0
     c54:	90 40       	sbci	r25, 0x00	; 0
     c56:	65 96       	adiw	r28, 0x15	; 21
     c58:	6c af       	std	Y+60, r22	; 0x3c
     c5a:	7d af       	std	Y+61, r23	; 0x3d
     c5c:	8e af       	std	Y+62, r24	; 0x3e
     c5e:	9f af       	std	Y+63, r25	; 0x3f
     c60:	65 97       	sbiw	r28, 0x15	; 21
     c62:	a2 0c       	add	r10, r2
     c64:	b3 1c       	adc	r11, r3
     c66:	c4 1c       	adc	r12, r4
     c68:	d5 1c       	adc	r13, r5
     c6a:	a2 1a       	sub	r10, r18
     c6c:	b3 0a       	sbc	r11, r19
     c6e:	c4 0a       	sbc	r12, r20
     c70:	d5 0a       	sbc	r13, r21
     c72:	c6 01       	movw	r24, r12
     c74:	b5 01       	movw	r22, r10
     c76:	a4 01       	movw	r20, r8
     c78:	93 01       	movw	r18, r6
     c7a:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     c7e:	7b 01       	movw	r14, r22
     c80:	8c 01       	movw	r16, r24
     c82:	c6 01       	movw	r24, r12
     c84:	b5 01       	movw	r22, r10
     c86:	a4 01       	movw	r20, r8
     c88:	93 01       	movw	r18, r6
     c8a:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     c8e:	c9 01       	movw	r24, r18
     c90:	da 01       	movw	r26, r20
     c92:	3c 01       	movw	r6, r24
     c94:	4d 01       	movw	r8, r26
     c96:	c4 01       	movw	r24, r8
     c98:	b3 01       	movw	r22, r6
     c9a:	61 96       	adiw	r28, 0x11	; 17
     c9c:	2c ad       	ldd	r18, Y+60	; 0x3c
     c9e:	3d ad       	ldd	r19, Y+61	; 0x3d
     ca0:	4e ad       	ldd	r20, Y+62	; 0x3e
     ca2:	5f ad       	ldd	r21, Y+63	; 0x3f
     ca4:	61 97       	sbiw	r28, 0x11	; 17
     ca6:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     caa:	9b 01       	movw	r18, r22
     cac:	ac 01       	movw	r20, r24
     cae:	87 01       	movw	r16, r14
     cb0:	ff 24       	eor	r15, r15
     cb2:	ee 24       	eor	r14, r14
     cb4:	89 ad       	ldd	r24, Y+57	; 0x39
     cb6:	9a ad       	ldd	r25, Y+58	; 0x3a
     cb8:	ab ad       	ldd	r26, Y+59	; 0x3b
     cba:	bc ad       	ldd	r27, Y+60	; 0x3c
     cbc:	a0 70       	andi	r26, 0x00	; 0
     cbe:	b0 70       	andi	r27, 0x00	; 0
     cc0:	57 01       	movw	r10, r14
     cc2:	68 01       	movw	r12, r16
     cc4:	a8 2a       	or	r10, r24
     cc6:	b9 2a       	or	r11, r25
     cc8:	ca 2a       	or	r12, r26
     cca:	db 2a       	or	r13, r27
     ccc:	a2 16       	cp	r10, r18
     cce:	b3 06       	cpc	r11, r19
     cd0:	c4 06       	cpc	r12, r20
     cd2:	d5 06       	cpc	r13, r21
     cd4:	e0 f4       	brcc	.+56     	; 0xd0e <__stack+0x4af>
     cd6:	08 94       	sec
     cd8:	61 08       	sbc	r6, r1
     cda:	71 08       	sbc	r7, r1
     cdc:	81 08       	sbc	r8, r1
     cde:	91 08       	sbc	r9, r1
     ce0:	a2 0c       	add	r10, r2
     ce2:	b3 1c       	adc	r11, r3
     ce4:	c4 1c       	adc	r12, r4
     ce6:	d5 1c       	adc	r13, r5
     ce8:	a2 14       	cp	r10, r2
     cea:	b3 04       	cpc	r11, r3
     cec:	c4 04       	cpc	r12, r4
     cee:	d5 04       	cpc	r13, r5
     cf0:	70 f0       	brcs	.+28     	; 0xd0e <__stack+0x4af>
     cf2:	a2 16       	cp	r10, r18
     cf4:	b3 06       	cpc	r11, r19
     cf6:	c4 06       	cpc	r12, r20
     cf8:	d5 06       	cpc	r13, r21
     cfa:	48 f4       	brcc	.+18     	; 0xd0e <__stack+0x4af>
     cfc:	08 94       	sec
     cfe:	61 08       	sbc	r6, r1
     d00:	71 08       	sbc	r7, r1
     d02:	81 08       	sbc	r8, r1
     d04:	91 08       	sbc	r9, r1
     d06:	a2 0c       	add	r10, r2
     d08:	b3 1c       	adc	r11, r3
     d0a:	c4 1c       	adc	r12, r4
     d0c:	d5 1c       	adc	r13, r5
     d0e:	21 96       	adiw	r28, 0x01	; 1
     d10:	8c ad       	ldd	r24, Y+60	; 0x3c
     d12:	9d ad       	ldd	r25, Y+61	; 0x3d
     d14:	ae ad       	ldd	r26, Y+62	; 0x3e
     d16:	bf ad       	ldd	r27, Y+63	; 0x3f
     d18:	21 97       	sbiw	r28, 0x01	; 1
     d1a:	e3 96       	adiw	r28, 0x33	; 51
     d1c:	0f ac       	ldd	r0, Y+63	; 0x3f
     d1e:	e3 97       	sbiw	r28, 0x33	; 51
     d20:	04 c0       	rjmp	.+8      	; 0xd2a <__stack+0x4cb>
     d22:	88 0f       	add	r24, r24
     d24:	99 1f       	adc	r25, r25
     d26:	aa 1f       	adc	r26, r26
     d28:	bb 1f       	adc	r27, r27
     d2a:	0a 94       	dec	r0
     d2c:	d2 f7       	brpl	.-12     	; 0xd22 <__stack+0x4c3>
     d2e:	21 96       	adiw	r28, 0x01	; 1
     d30:	8c af       	std	Y+60, r24	; 0x3c
     d32:	9d af       	std	Y+61, r25	; 0x3d
     d34:	ae af       	std	Y+62, r26	; 0x3e
     d36:	bf af       	std	Y+63, r27	; 0x3f
     d38:	21 97       	sbiw	r28, 0x01	; 1
     d3a:	a2 1a       	sub	r10, r18
     d3c:	b3 0a       	sbc	r11, r19
     d3e:	c4 0a       	sbc	r12, r20
     d40:	d5 0a       	sbc	r13, r21
     d42:	65 96       	adiw	r28, 0x15	; 21
     d44:	ec ac       	ldd	r14, Y+60	; 0x3c
     d46:	fd ac       	ldd	r15, Y+61	; 0x3d
     d48:	0e ad       	ldd	r16, Y+62	; 0x3e
     d4a:	1f ad       	ldd	r17, Y+63	; 0x3f
     d4c:	65 97       	sbiw	r28, 0x15	; 21
     d4e:	d7 01       	movw	r26, r14
     d50:	99 27       	eor	r25, r25
     d52:	88 27       	eor	r24, r24
     d54:	68 2a       	or	r6, r24
     d56:	79 2a       	or	r7, r25
     d58:	8a 2a       	or	r8, r26
     d5a:	9b 2a       	or	r9, r27
     d5c:	82 01       	movw	r16, r4
     d5e:	22 27       	eor	r18, r18
     d60:	33 27       	eor	r19, r19
     d62:	69 96       	adiw	r28, 0x19	; 25
     d64:	0c af       	std	Y+60, r16	; 0x3c
     d66:	1d af       	std	Y+61, r17	; 0x3d
     d68:	2e af       	std	Y+62, r18	; 0x3e
     d6a:	3f af       	std	Y+63, r19	; 0x3f
     d6c:	69 97       	sbiw	r28, 0x19	; 25
     d6e:	a2 01       	movw	r20, r4
     d70:	91 01       	movw	r18, r2
     d72:	40 70       	andi	r20, 0x00	; 0
     d74:	50 70       	andi	r21, 0x00	; 0
     d76:	6d 96       	adiw	r28, 0x1d	; 29
     d78:	2c af       	std	Y+60, r18	; 0x3c
     d7a:	3d af       	std	Y+61, r19	; 0x3d
     d7c:	4e af       	std	Y+62, r20	; 0x3e
     d7e:	5f af       	std	Y+63, r21	; 0x3f
     d80:	6d 97       	sbiw	r28, 0x1d	; 29
     d82:	c6 01       	movw	r24, r12
     d84:	b5 01       	movw	r22, r10
     d86:	69 96       	adiw	r28, 0x19	; 25
     d88:	2c ad       	ldd	r18, Y+60	; 0x3c
     d8a:	3d ad       	ldd	r19, Y+61	; 0x3d
     d8c:	4e ad       	ldd	r20, Y+62	; 0x3e
     d8e:	5f ad       	ldd	r21, Y+63	; 0x3f
     d90:	69 97       	sbiw	r28, 0x19	; 25
     d92:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     d96:	7b 01       	movw	r14, r22
     d98:	8c 01       	movw	r16, r24
     d9a:	c6 01       	movw	r24, r12
     d9c:	b5 01       	movw	r22, r10
     d9e:	69 96       	adiw	r28, 0x19	; 25
     da0:	2c ad       	ldd	r18, Y+60	; 0x3c
     da2:	3d ad       	ldd	r19, Y+61	; 0x3d
     da4:	4e ad       	ldd	r20, Y+62	; 0x3e
     da6:	5f ad       	ldd	r21, Y+63	; 0x3f
     da8:	69 97       	sbiw	r28, 0x19	; 25
     daa:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     dae:	c9 01       	movw	r24, r18
     db0:	da 01       	movw	r26, r20
     db2:	a1 96       	adiw	r28, 0x21	; 33
     db4:	8c af       	std	Y+60, r24	; 0x3c
     db6:	9d af       	std	Y+61, r25	; 0x3d
     db8:	ae af       	std	Y+62, r26	; 0x3e
     dba:	bf af       	std	Y+63, r27	; 0x3f
     dbc:	a1 97       	sbiw	r28, 0x21	; 33
     dbe:	bc 01       	movw	r22, r24
     dc0:	cd 01       	movw	r24, r26
     dc2:	6d 96       	adiw	r28, 0x1d	; 29
     dc4:	2c ad       	ldd	r18, Y+60	; 0x3c
     dc6:	3d ad       	ldd	r19, Y+61	; 0x3d
     dc8:	4e ad       	ldd	r20, Y+62	; 0x3e
     dca:	5f ad       	ldd	r21, Y+63	; 0x3f
     dcc:	6d 97       	sbiw	r28, 0x1d	; 29
     dce:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     dd2:	9b 01       	movw	r18, r22
     dd4:	ac 01       	movw	r20, r24
     dd6:	87 01       	movw	r16, r14
     dd8:	ff 24       	eor	r15, r15
     dda:	ee 24       	eor	r14, r14
     ddc:	21 96       	adiw	r28, 0x01	; 1
     dde:	ac ac       	ldd	r10, Y+60	; 0x3c
     de0:	bd ac       	ldd	r11, Y+61	; 0x3d
     de2:	ce ac       	ldd	r12, Y+62	; 0x3e
     de4:	df ac       	ldd	r13, Y+63	; 0x3f
     de6:	21 97       	sbiw	r28, 0x01	; 1
     de8:	c6 01       	movw	r24, r12
     dea:	aa 27       	eor	r26, r26
     dec:	bb 27       	eor	r27, r27
     dee:	57 01       	movw	r10, r14
     df0:	68 01       	movw	r12, r16
     df2:	a8 2a       	or	r10, r24
     df4:	b9 2a       	or	r11, r25
     df6:	ca 2a       	or	r12, r26
     df8:	db 2a       	or	r13, r27
     dfa:	a2 16       	cp	r10, r18
     dfc:	b3 06       	cpc	r11, r19
     dfe:	c4 06       	cpc	r12, r20
     e00:	d5 06       	cpc	r13, r21
     e02:	60 f5       	brcc	.+88     	; 0xe5c <__stack+0x5fd>
     e04:	a1 96       	adiw	r28, 0x21	; 33
     e06:	6c ad       	ldd	r22, Y+60	; 0x3c
     e08:	7d ad       	ldd	r23, Y+61	; 0x3d
     e0a:	8e ad       	ldd	r24, Y+62	; 0x3e
     e0c:	9f ad       	ldd	r25, Y+63	; 0x3f
     e0e:	a1 97       	sbiw	r28, 0x21	; 33
     e10:	61 50       	subi	r22, 0x01	; 1
     e12:	70 40       	sbci	r23, 0x00	; 0
     e14:	80 40       	sbci	r24, 0x00	; 0
     e16:	90 40       	sbci	r25, 0x00	; 0
     e18:	a1 96       	adiw	r28, 0x21	; 33
     e1a:	6c af       	std	Y+60, r22	; 0x3c
     e1c:	7d af       	std	Y+61, r23	; 0x3d
     e1e:	8e af       	std	Y+62, r24	; 0x3e
     e20:	9f af       	std	Y+63, r25	; 0x3f
     e22:	a1 97       	sbiw	r28, 0x21	; 33
     e24:	a2 0c       	add	r10, r2
     e26:	b3 1c       	adc	r11, r3
     e28:	c4 1c       	adc	r12, r4
     e2a:	d5 1c       	adc	r13, r5
     e2c:	a2 14       	cp	r10, r2
     e2e:	b3 04       	cpc	r11, r3
     e30:	c4 04       	cpc	r12, r4
     e32:	d5 04       	cpc	r13, r5
     e34:	98 f0       	brcs	.+38     	; 0xe5c <__stack+0x5fd>
     e36:	a2 16       	cp	r10, r18
     e38:	b3 06       	cpc	r11, r19
     e3a:	c4 06       	cpc	r12, r20
     e3c:	d5 06       	cpc	r13, r21
     e3e:	70 f4       	brcc	.+28     	; 0xe5c <__stack+0x5fd>
     e40:	61 50       	subi	r22, 0x01	; 1
     e42:	70 40       	sbci	r23, 0x00	; 0
     e44:	80 40       	sbci	r24, 0x00	; 0
     e46:	90 40       	sbci	r25, 0x00	; 0
     e48:	a1 96       	adiw	r28, 0x21	; 33
     e4a:	6c af       	std	Y+60, r22	; 0x3c
     e4c:	7d af       	std	Y+61, r23	; 0x3d
     e4e:	8e af       	std	Y+62, r24	; 0x3e
     e50:	9f af       	std	Y+63, r25	; 0x3f
     e52:	a1 97       	sbiw	r28, 0x21	; 33
     e54:	a2 0c       	add	r10, r2
     e56:	b3 1c       	adc	r11, r3
     e58:	c4 1c       	adc	r12, r4
     e5a:	d5 1c       	adc	r13, r5
     e5c:	a2 1a       	sub	r10, r18
     e5e:	b3 0a       	sbc	r11, r19
     e60:	c4 0a       	sbc	r12, r20
     e62:	d5 0a       	sbc	r13, r21
     e64:	c6 01       	movw	r24, r12
     e66:	b5 01       	movw	r22, r10
     e68:	69 96       	adiw	r28, 0x19	; 25
     e6a:	2c ad       	ldd	r18, Y+60	; 0x3c
     e6c:	3d ad       	ldd	r19, Y+61	; 0x3d
     e6e:	4e ad       	ldd	r20, Y+62	; 0x3e
     e70:	5f ad       	ldd	r21, Y+63	; 0x3f
     e72:	69 97       	sbiw	r28, 0x19	; 25
     e74:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     e78:	7b 01       	movw	r14, r22
     e7a:	8c 01       	movw	r16, r24
     e7c:	c6 01       	movw	r24, r12
     e7e:	b5 01       	movw	r22, r10
     e80:	69 96       	adiw	r28, 0x19	; 25
     e82:	2c ad       	ldd	r18, Y+60	; 0x3c
     e84:	3d ad       	ldd	r19, Y+61	; 0x3d
     e86:	4e ad       	ldd	r20, Y+62	; 0x3e
     e88:	5f ad       	ldd	r21, Y+63	; 0x3f
     e8a:	69 97       	sbiw	r28, 0x19	; 25
     e8c:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
     e90:	c9 01       	movw	r24, r18
     e92:	da 01       	movw	r26, r20
     e94:	5c 01       	movw	r10, r24
     e96:	6d 01       	movw	r12, r26
     e98:	c6 01       	movw	r24, r12
     e9a:	b5 01       	movw	r22, r10
     e9c:	6d 96       	adiw	r28, 0x1d	; 29
     e9e:	2c ad       	ldd	r18, Y+60	; 0x3c
     ea0:	3d ad       	ldd	r19, Y+61	; 0x3d
     ea2:	4e ad       	ldd	r20, Y+62	; 0x3e
     ea4:	5f ad       	ldd	r21, Y+63	; 0x3f
     ea6:	6d 97       	sbiw	r28, 0x1d	; 29
     ea8:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
     eac:	9b 01       	movw	r18, r22
     eae:	ac 01       	movw	r20, r24
     eb0:	87 01       	movw	r16, r14
     eb2:	ff 24       	eor	r15, r15
     eb4:	ee 24       	eor	r14, r14
     eb6:	21 96       	adiw	r28, 0x01	; 1
     eb8:	8c ad       	ldd	r24, Y+60	; 0x3c
     eba:	9d ad       	ldd	r25, Y+61	; 0x3d
     ebc:	ae ad       	ldd	r26, Y+62	; 0x3e
     ebe:	bf ad       	ldd	r27, Y+63	; 0x3f
     ec0:	21 97       	sbiw	r28, 0x01	; 1
     ec2:	a0 70       	andi	r26, 0x00	; 0
     ec4:	b0 70       	andi	r27, 0x00	; 0
     ec6:	e8 2a       	or	r14, r24
     ec8:	f9 2a       	or	r15, r25
     eca:	0a 2b       	or	r16, r26
     ecc:	1b 2b       	or	r17, r27
     ece:	e2 16       	cp	r14, r18
     ed0:	f3 06       	cpc	r15, r19
     ed2:	04 07       	cpc	r16, r20
     ed4:	15 07       	cpc	r17, r21
     ed6:	c0 f4       	brcc	.+48     	; 0xf08 <__stack+0x6a9>
     ed8:	08 94       	sec
     eda:	a1 08       	sbc	r10, r1
     edc:	b1 08       	sbc	r11, r1
     ede:	c1 08       	sbc	r12, r1
     ee0:	d1 08       	sbc	r13, r1
     ee2:	e2 0c       	add	r14, r2
     ee4:	f3 1c       	adc	r15, r3
     ee6:	04 1d       	adc	r16, r4
     ee8:	15 1d       	adc	r17, r5
     eea:	e2 14       	cp	r14, r2
     eec:	f3 04       	cpc	r15, r3
     eee:	04 05       	cpc	r16, r4
     ef0:	15 05       	cpc	r17, r5
     ef2:	50 f0       	brcs	.+20     	; 0xf08 <__stack+0x6a9>
     ef4:	e2 16       	cp	r14, r18
     ef6:	f3 06       	cpc	r15, r19
     ef8:	04 07       	cpc	r16, r20
     efa:	15 07       	cpc	r17, r21
     efc:	28 f4       	brcc	.+10     	; 0xf08 <__stack+0x6a9>
     efe:	08 94       	sec
     f00:	a1 08       	sbc	r10, r1
     f02:	b1 08       	sbc	r11, r1
     f04:	c1 08       	sbc	r12, r1
     f06:	d1 08       	sbc	r13, r1
     f08:	a1 96       	adiw	r28, 0x21	; 33
     f0a:	ec ac       	ldd	r14, Y+60	; 0x3c
     f0c:	fd ac       	ldd	r15, Y+61	; 0x3d
     f0e:	0e ad       	ldd	r16, Y+62	; 0x3e
     f10:	1f ad       	ldd	r17, Y+63	; 0x3f
     f12:	a1 97       	sbiw	r28, 0x21	; 33
     f14:	d7 01       	movw	r26, r14
     f16:	99 27       	eor	r25, r25
     f18:	88 27       	eor	r24, r24
     f1a:	96 01       	movw	r18, r12
     f1c:	85 01       	movw	r16, r10
     f1e:	08 2b       	or	r16, r24
     f20:	19 2b       	or	r17, r25
     f22:	2a 2b       	or	r18, r26
     f24:	3b 2b       	or	r19, r27
     f26:	25 96       	adiw	r28, 0x05	; 5
     f28:	0c af       	std	Y+60, r16	; 0x3c
     f2a:	1d af       	std	Y+61, r17	; 0x3d
     f2c:	2e af       	std	Y+62, r18	; 0x3e
     f2e:	3f af       	std	Y+63, r19	; 0x3f
     f30:	25 97       	sbiw	r28, 0x05	; 5
     f32:	72 c2       	rjmp	.+1252   	; 0x1418 <__stack+0xbb9>
     f34:	6e 14       	cp	r6, r14
     f36:	7f 04       	cpc	r7, r15
     f38:	80 06       	cpc	r8, r16
     f3a:	91 06       	cpc	r9, r17
     f3c:	08 f4       	brcc	.+2      	; 0xf40 <__stack+0x6e1>
     f3e:	5f c2       	rjmp	.+1214   	; 0x13fe <__stack+0xb9f>
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	e2 16       	cp	r14, r18
     f44:	20 e0       	ldi	r18, 0x00	; 0
     f46:	f2 06       	cpc	r15, r18
     f48:	21 e0       	ldi	r18, 0x01	; 1
     f4a:	02 07       	cpc	r16, r18
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	12 07       	cpc	r17, r18
     f50:	88 f4       	brcc	.+34     	; 0xf74 <__stack+0x715>
     f52:	3f ef       	ldi	r19, 0xFF	; 255
     f54:	e3 16       	cp	r14, r19
     f56:	f1 04       	cpc	r15, r1
     f58:	01 05       	cpc	r16, r1
     f5a:	11 05       	cpc	r17, r1
     f5c:	31 f0       	breq	.+12     	; 0xf6a <__stack+0x70b>
     f5e:	28 f0       	brcs	.+10     	; 0xf6a <__stack+0x70b>
     f60:	48 e0       	ldi	r20, 0x08	; 8
     f62:	50 e0       	ldi	r21, 0x00	; 0
     f64:	60 e0       	ldi	r22, 0x00	; 0
     f66:	70 e0       	ldi	r23, 0x00	; 0
     f68:	17 c0       	rjmp	.+46     	; 0xf98 <__stack+0x739>
     f6a:	40 e0       	ldi	r20, 0x00	; 0
     f6c:	50 e0       	ldi	r21, 0x00	; 0
     f6e:	60 e0       	ldi	r22, 0x00	; 0
     f70:	70 e0       	ldi	r23, 0x00	; 0
     f72:	12 c0       	rjmp	.+36     	; 0xf98 <__stack+0x739>
     f74:	40 e0       	ldi	r20, 0x00	; 0
     f76:	e4 16       	cp	r14, r20
     f78:	40 e0       	ldi	r20, 0x00	; 0
     f7a:	f4 06       	cpc	r15, r20
     f7c:	40 e0       	ldi	r20, 0x00	; 0
     f7e:	04 07       	cpc	r16, r20
     f80:	41 e0       	ldi	r20, 0x01	; 1
     f82:	14 07       	cpc	r17, r20
     f84:	28 f0       	brcs	.+10     	; 0xf90 <__stack+0x731>
     f86:	48 e1       	ldi	r20, 0x18	; 24
     f88:	50 e0       	ldi	r21, 0x00	; 0
     f8a:	60 e0       	ldi	r22, 0x00	; 0
     f8c:	70 e0       	ldi	r23, 0x00	; 0
     f8e:	04 c0       	rjmp	.+8      	; 0xf98 <__stack+0x739>
     f90:	40 e1       	ldi	r20, 0x10	; 16
     f92:	50 e0       	ldi	r21, 0x00	; 0
     f94:	60 e0       	ldi	r22, 0x00	; 0
     f96:	70 e0       	ldi	r23, 0x00	; 0
     f98:	d8 01       	movw	r26, r16
     f9a:	c7 01       	movw	r24, r14
     f9c:	04 2e       	mov	r0, r20
     f9e:	04 c0       	rjmp	.+8      	; 0xfa8 <__stack+0x749>
     fa0:	b6 95       	lsr	r27
     fa2:	a7 95       	ror	r26
     fa4:	97 95       	ror	r25
     fa6:	87 95       	ror	r24
     fa8:	0a 94       	dec	r0
     faa:	d2 f7       	brpl	.-12     	; 0xfa0 <__stack+0x741>
     fac:	8a 57       	subi	r24, 0x7A	; 122
     fae:	9f 4f       	sbci	r25, 0xFF	; 255
     fb0:	dc 01       	movw	r26, r24
     fb2:	2c 91       	ld	r18, X
     fb4:	30 e2       	ldi	r19, 0x20	; 32
     fb6:	a3 2e       	mov	r10, r19
     fb8:	b1 2c       	mov	r11, r1
     fba:	c1 2c       	mov	r12, r1
     fbc:	d1 2c       	mov	r13, r1
     fbe:	d6 01       	movw	r26, r12
     fc0:	c5 01       	movw	r24, r10
     fc2:	84 1b       	sub	r24, r20
     fc4:	95 0b       	sbc	r25, r21
     fc6:	a6 0b       	sbc	r26, r22
     fc8:	b7 0b       	sbc	r27, r23
     fca:	82 1b       	sub	r24, r18
     fcc:	91 09       	sbc	r25, r1
     fce:	a1 09       	sbc	r26, r1
     fd0:	b1 09       	sbc	r27, r1
     fd2:	00 97       	sbiw	r24, 0x00	; 0
     fd4:	a1 05       	cpc	r26, r1
     fd6:	b1 05       	cpc	r27, r1
     fd8:	99 f4       	brne	.+38     	; 0x1000 <__stack+0x7a1>
     fda:	e6 14       	cp	r14, r6
     fdc:	f7 04       	cpc	r15, r7
     fde:	08 05       	cpc	r16, r8
     fe0:	19 05       	cpc	r17, r9
     fe2:	08 f4       	brcc	.+2      	; 0xfe6 <__stack+0x787>
     fe4:	fe c1       	rjmp	.+1020   	; 0x13e2 <__stack+0xb83>
     fe6:	21 96       	adiw	r28, 0x01	; 1
     fe8:	6c ac       	ldd	r6, Y+60	; 0x3c
     fea:	7d ac       	ldd	r7, Y+61	; 0x3d
     fec:	8e ac       	ldd	r8, Y+62	; 0x3e
     fee:	9f ac       	ldd	r9, Y+63	; 0x3f
     ff0:	21 97       	sbiw	r28, 0x01	; 1
     ff2:	62 14       	cp	r6, r2
     ff4:	73 04       	cpc	r7, r3
     ff6:	84 04       	cpc	r8, r4
     ff8:	95 04       	cpc	r9, r5
     ffa:	08 f0       	brcs	.+2      	; 0xffe <__stack+0x79f>
     ffc:	f2 c1       	rjmp	.+996    	; 0x13e2 <__stack+0xb83>
     ffe:	ff c1       	rjmp	.+1022   	; 0x13fe <__stack+0xb9f>
    1000:	e2 96       	adiw	r28, 0x32	; 50
    1002:	8f af       	std	Y+63, r24	; 0x3f
    1004:	e2 97       	sbiw	r28, 0x32	; 50
    1006:	08 2e       	mov	r0, r24
    1008:	04 c0       	rjmp	.+8      	; 0x1012 <__stack+0x7b3>
    100a:	ee 0c       	add	r14, r14
    100c:	ff 1c       	adc	r15, r15
    100e:	00 1f       	adc	r16, r16
    1010:	11 1f       	adc	r17, r17
    1012:	0a 94       	dec	r0
    1014:	d2 f7       	brpl	.-12     	; 0x100a <__stack+0x7ab>
    1016:	6a 2d       	mov	r22, r10
    1018:	68 1b       	sub	r22, r24
    101a:	d2 01       	movw	r26, r4
    101c:	c1 01       	movw	r24, r2
    101e:	06 2e       	mov	r0, r22
    1020:	04 c0       	rjmp	.+8      	; 0x102a <__stack+0x7cb>
    1022:	b6 95       	lsr	r27
    1024:	a7 95       	ror	r26
    1026:	97 95       	ror	r25
    1028:	87 95       	ror	r24
    102a:	0a 94       	dec	r0
    102c:	d2 f7       	brpl	.-12     	; 0x1022 <__stack+0x7c3>
    102e:	5c 01       	movw	r10, r24
    1030:	6d 01       	movw	r12, r26
    1032:	ae 28       	or	r10, r14
    1034:	bf 28       	or	r11, r15
    1036:	c0 2a       	or	r12, r16
    1038:	d1 2a       	or	r13, r17
    103a:	ad aa       	std	Y+53, r10	; 0x35
    103c:	be aa       	std	Y+54, r11	; 0x36
    103e:	cf aa       	std	Y+55, r12	; 0x37
    1040:	d8 ae       	std	Y+56, r13	; 0x38
    1042:	72 01       	movw	r14, r4
    1044:	61 01       	movw	r12, r2
    1046:	e2 96       	adiw	r28, 0x32	; 50
    1048:	0f ac       	ldd	r0, Y+63	; 0x3f
    104a:	e2 97       	sbiw	r28, 0x32	; 50
    104c:	04 c0       	rjmp	.+8      	; 0x1056 <__stack+0x7f7>
    104e:	cc 0c       	add	r12, r12
    1050:	dd 1c       	adc	r13, r13
    1052:	ee 1c       	adc	r14, r14
    1054:	ff 1c       	adc	r15, r15
    1056:	0a 94       	dec	r0
    1058:	d2 f7       	brpl	.-12     	; 0x104e <__stack+0x7ef>
    105a:	c9 aa       	std	Y+49, r12	; 0x31
    105c:	da aa       	std	Y+50, r13	; 0x32
    105e:	eb aa       	std	Y+51, r14	; 0x33
    1060:	fc aa       	std	Y+52, r15	; 0x34
    1062:	64 01       	movw	r12, r8
    1064:	53 01       	movw	r10, r6
    1066:	06 2e       	mov	r0, r22
    1068:	04 c0       	rjmp	.+8      	; 0x1072 <__stack+0x813>
    106a:	d6 94       	lsr	r13
    106c:	c7 94       	ror	r12
    106e:	b7 94       	ror	r11
    1070:	a7 94       	ror	r10
    1072:	0a 94       	dec	r0
    1074:	d2 f7       	brpl	.-12     	; 0x106a <__stack+0x80b>
    1076:	d4 01       	movw	r26, r8
    1078:	c3 01       	movw	r24, r6
    107a:	e2 96       	adiw	r28, 0x32	; 50
    107c:	0f ac       	ldd	r0, Y+63	; 0x3f
    107e:	e2 97       	sbiw	r28, 0x32	; 50
    1080:	04 c0       	rjmp	.+8      	; 0x108a <__stack+0x82b>
    1082:	88 0f       	add	r24, r24
    1084:	99 1f       	adc	r25, r25
    1086:	aa 1f       	adc	r26, r26
    1088:	bb 1f       	adc	r27, r27
    108a:	0a 94       	dec	r0
    108c:	d2 f7       	brpl	.-12     	; 0x1082 <__stack+0x823>
    108e:	21 96       	adiw	r28, 0x01	; 1
    1090:	ec ac       	ldd	r14, Y+60	; 0x3c
    1092:	fd ac       	ldd	r15, Y+61	; 0x3d
    1094:	0e ad       	ldd	r16, Y+62	; 0x3e
    1096:	1f ad       	ldd	r17, Y+63	; 0x3f
    1098:	21 97       	sbiw	r28, 0x01	; 1
    109a:	04 c0       	rjmp	.+8      	; 0x10a4 <__stack+0x845>
    109c:	16 95       	lsr	r17
    109e:	07 95       	ror	r16
    10a0:	f7 94       	ror	r15
    10a2:	e7 94       	ror	r14
    10a4:	6a 95       	dec	r22
    10a6:	d2 f7       	brpl	.-12     	; 0x109c <__stack+0x83d>
    10a8:	37 01       	movw	r6, r14
    10aa:	48 01       	movw	r8, r16
    10ac:	68 2a       	or	r6, r24
    10ae:	79 2a       	or	r7, r25
    10b0:	8a 2a       	or	r8, r26
    10b2:	9b 2a       	or	r9, r27
    10b4:	6d a6       	std	Y+45, r6	; 0x2d
    10b6:	7e a6       	std	Y+46, r7	; 0x2e
    10b8:	8f a6       	std	Y+47, r8	; 0x2f
    10ba:	98 aa       	std	Y+48, r9	; 0x30
    10bc:	ed a8       	ldd	r14, Y+53	; 0x35
    10be:	fe a8       	ldd	r15, Y+54	; 0x36
    10c0:	0f a9       	ldd	r16, Y+55	; 0x37
    10c2:	18 ad       	ldd	r17, Y+56	; 0x38
    10c4:	38 01       	movw	r6, r16
    10c6:	88 24       	eor	r8, r8
    10c8:	99 24       	eor	r9, r9
    10ca:	98 01       	movw	r18, r16
    10cc:	87 01       	movw	r16, r14
    10ce:	20 70       	andi	r18, 0x00	; 0
    10d0:	30 70       	andi	r19, 0x00	; 0
    10d2:	a5 96       	adiw	r28, 0x25	; 37
    10d4:	0c af       	std	Y+60, r16	; 0x3c
    10d6:	1d af       	std	Y+61, r17	; 0x3d
    10d8:	2e af       	std	Y+62, r18	; 0x3e
    10da:	3f af       	std	Y+63, r19	; 0x3f
    10dc:	a5 97       	sbiw	r28, 0x25	; 37
    10de:	c6 01       	movw	r24, r12
    10e0:	b5 01       	movw	r22, r10
    10e2:	a4 01       	movw	r20, r8
    10e4:	93 01       	movw	r18, r6
    10e6:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
    10ea:	7b 01       	movw	r14, r22
    10ec:	8c 01       	movw	r16, r24
    10ee:	c6 01       	movw	r24, r12
    10f0:	b5 01       	movw	r22, r10
    10f2:	a4 01       	movw	r20, r8
    10f4:	93 01       	movw	r18, r6
    10f6:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
    10fa:	c9 01       	movw	r24, r18
    10fc:	da 01       	movw	r26, r20
    10fe:	1c 01       	movw	r2, r24
    1100:	2d 01       	movw	r4, r26
    1102:	c2 01       	movw	r24, r4
    1104:	b1 01       	movw	r22, r2
    1106:	a5 96       	adiw	r28, 0x25	; 37
    1108:	2c ad       	ldd	r18, Y+60	; 0x3c
    110a:	3d ad       	ldd	r19, Y+61	; 0x3d
    110c:	4e ad       	ldd	r20, Y+62	; 0x3e
    110e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1110:	a5 97       	sbiw	r28, 0x25	; 37
    1112:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
    1116:	9b 01       	movw	r18, r22
    1118:	ac 01       	movw	r20, r24
    111a:	87 01       	movw	r16, r14
    111c:	ff 24       	eor	r15, r15
    111e:	ee 24       	eor	r14, r14
    1120:	ad a4       	ldd	r10, Y+45	; 0x2d
    1122:	be a4       	ldd	r11, Y+46	; 0x2e
    1124:	cf a4       	ldd	r12, Y+47	; 0x2f
    1126:	d8 a8       	ldd	r13, Y+48	; 0x30
    1128:	c6 01       	movw	r24, r12
    112a:	aa 27       	eor	r26, r26
    112c:	bb 27       	eor	r27, r27
    112e:	57 01       	movw	r10, r14
    1130:	68 01       	movw	r12, r16
    1132:	a8 2a       	or	r10, r24
    1134:	b9 2a       	or	r11, r25
    1136:	ca 2a       	or	r12, r26
    1138:	db 2a       	or	r13, r27
    113a:	a2 16       	cp	r10, r18
    113c:	b3 06       	cpc	r11, r19
    113e:	c4 06       	cpc	r12, r20
    1140:	d5 06       	cpc	r13, r21
    1142:	00 f5       	brcc	.+64     	; 0x1184 <__stack+0x925>
    1144:	08 94       	sec
    1146:	21 08       	sbc	r2, r1
    1148:	31 08       	sbc	r3, r1
    114a:	41 08       	sbc	r4, r1
    114c:	51 08       	sbc	r5, r1
    114e:	ed a8       	ldd	r14, Y+53	; 0x35
    1150:	fe a8       	ldd	r15, Y+54	; 0x36
    1152:	0f a9       	ldd	r16, Y+55	; 0x37
    1154:	18 ad       	ldd	r17, Y+56	; 0x38
    1156:	ae 0c       	add	r10, r14
    1158:	bf 1c       	adc	r11, r15
    115a:	c0 1e       	adc	r12, r16
    115c:	d1 1e       	adc	r13, r17
    115e:	ae 14       	cp	r10, r14
    1160:	bf 04       	cpc	r11, r15
    1162:	c0 06       	cpc	r12, r16
    1164:	d1 06       	cpc	r13, r17
    1166:	70 f0       	brcs	.+28     	; 0x1184 <__stack+0x925>
    1168:	a2 16       	cp	r10, r18
    116a:	b3 06       	cpc	r11, r19
    116c:	c4 06       	cpc	r12, r20
    116e:	d5 06       	cpc	r13, r21
    1170:	48 f4       	brcc	.+18     	; 0x1184 <__stack+0x925>
    1172:	08 94       	sec
    1174:	21 08       	sbc	r2, r1
    1176:	31 08       	sbc	r3, r1
    1178:	41 08       	sbc	r4, r1
    117a:	51 08       	sbc	r5, r1
    117c:	ae 0c       	add	r10, r14
    117e:	bf 1c       	adc	r11, r15
    1180:	c0 1e       	adc	r12, r16
    1182:	d1 1e       	adc	r13, r17
    1184:	a2 1a       	sub	r10, r18
    1186:	b3 0a       	sbc	r11, r19
    1188:	c4 0a       	sbc	r12, r20
    118a:	d5 0a       	sbc	r13, r21
    118c:	c6 01       	movw	r24, r12
    118e:	b5 01       	movw	r22, r10
    1190:	a4 01       	movw	r20, r8
    1192:	93 01       	movw	r18, r6
    1194:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
    1198:	7b 01       	movw	r14, r22
    119a:	8c 01       	movw	r16, r24
    119c:	c6 01       	movw	r24, r12
    119e:	b5 01       	movw	r22, r10
    11a0:	a4 01       	movw	r20, r8
    11a2:	93 01       	movw	r18, r6
    11a4:	0e 94 5e 29 	call	0x52bc	; 0x52bc <__udivmodsi4>
    11a8:	c9 01       	movw	r24, r18
    11aa:	da 01       	movw	r26, r20
    11ac:	3c 01       	movw	r6, r24
    11ae:	4d 01       	movw	r8, r26
    11b0:	c4 01       	movw	r24, r8
    11b2:	b3 01       	movw	r22, r6
    11b4:	a5 96       	adiw	r28, 0x25	; 37
    11b6:	2c ad       	ldd	r18, Y+60	; 0x3c
    11b8:	3d ad       	ldd	r19, Y+61	; 0x3d
    11ba:	4e ad       	ldd	r20, Y+62	; 0x3e
    11bc:	5f ad       	ldd	r21, Y+63	; 0x3f
    11be:	a5 97       	sbiw	r28, 0x25	; 37
    11c0:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
    11c4:	9b 01       	movw	r18, r22
    11c6:	ac 01       	movw	r20, r24
    11c8:	87 01       	movw	r16, r14
    11ca:	ff 24       	eor	r15, r15
    11cc:	ee 24       	eor	r14, r14
    11ce:	8d a5       	ldd	r24, Y+45	; 0x2d
    11d0:	9e a5       	ldd	r25, Y+46	; 0x2e
    11d2:	af a5       	ldd	r26, Y+47	; 0x2f
    11d4:	b8 a9       	ldd	r27, Y+48	; 0x30
    11d6:	a0 70       	andi	r26, 0x00	; 0
    11d8:	b0 70       	andi	r27, 0x00	; 0
    11da:	57 01       	movw	r10, r14
    11dc:	68 01       	movw	r12, r16
    11de:	a8 2a       	or	r10, r24
    11e0:	b9 2a       	or	r11, r25
    11e2:	ca 2a       	or	r12, r26
    11e4:	db 2a       	or	r13, r27
    11e6:	a2 16       	cp	r10, r18
    11e8:	b3 06       	cpc	r11, r19
    11ea:	c4 06       	cpc	r12, r20
    11ec:	d5 06       	cpc	r13, r21
    11ee:	00 f5       	brcc	.+64     	; 0x1230 <__stack+0x9d1>
    11f0:	08 94       	sec
    11f2:	61 08       	sbc	r6, r1
    11f4:	71 08       	sbc	r7, r1
    11f6:	81 08       	sbc	r8, r1
    11f8:	91 08       	sbc	r9, r1
    11fa:	6d a9       	ldd	r22, Y+53	; 0x35
    11fc:	7e a9       	ldd	r23, Y+54	; 0x36
    11fe:	8f a9       	ldd	r24, Y+55	; 0x37
    1200:	98 ad       	ldd	r25, Y+56	; 0x38
    1202:	a6 0e       	add	r10, r22
    1204:	b7 1e       	adc	r11, r23
    1206:	c8 1e       	adc	r12, r24
    1208:	d9 1e       	adc	r13, r25
    120a:	a6 16       	cp	r10, r22
    120c:	b7 06       	cpc	r11, r23
    120e:	c8 06       	cpc	r12, r24
    1210:	d9 06       	cpc	r13, r25
    1212:	70 f0       	brcs	.+28     	; 0x1230 <__stack+0x9d1>
    1214:	a2 16       	cp	r10, r18
    1216:	b3 06       	cpc	r11, r19
    1218:	c4 06       	cpc	r12, r20
    121a:	d5 06       	cpc	r13, r21
    121c:	48 f4       	brcc	.+18     	; 0x1230 <__stack+0x9d1>
    121e:	08 94       	sec
    1220:	61 08       	sbc	r6, r1
    1222:	71 08       	sbc	r7, r1
    1224:	81 08       	sbc	r8, r1
    1226:	91 08       	sbc	r9, r1
    1228:	a6 0e       	add	r10, r22
    122a:	b7 1e       	adc	r11, r23
    122c:	c8 1e       	adc	r12, r24
    122e:	d9 1e       	adc	r13, r25
    1230:	d6 01       	movw	r26, r12
    1232:	c5 01       	movw	r24, r10
    1234:	82 1b       	sub	r24, r18
    1236:	93 0b       	sbc	r25, r19
    1238:	a4 0b       	sbc	r26, r20
    123a:	b5 0b       	sbc	r27, r21
    123c:	89 a7       	std	Y+41, r24	; 0x29
    123e:	9a a7       	std	Y+42, r25	; 0x2a
    1240:	ab a7       	std	Y+43, r26	; 0x2b
    1242:	bc a7       	std	Y+44, r27	; 0x2c
    1244:	d1 01       	movw	r26, r2
    1246:	99 27       	eor	r25, r25
    1248:	88 27       	eor	r24, r24
    124a:	64 01       	movw	r12, r8
    124c:	53 01       	movw	r10, r6
    124e:	a8 2a       	or	r10, r24
    1250:	b9 2a       	or	r11, r25
    1252:	ca 2a       	or	r12, r26
    1254:	db 2a       	or	r13, r27
    1256:	25 96       	adiw	r28, 0x05	; 5
    1258:	ac ae       	std	Y+60, r10	; 0x3c
    125a:	bd ae       	std	Y+61, r11	; 0x3d
    125c:	ce ae       	std	Y+62, r12	; 0x3e
    125e:	df ae       	std	Y+63, r13	; 0x3f
    1260:	25 97       	sbiw	r28, 0x05	; 5
    1262:	86 01       	movw	r16, r12
    1264:	75 01       	movw	r14, r10
    1266:	2f ef       	ldi	r18, 0xFF	; 255
    1268:	3f ef       	ldi	r19, 0xFF	; 255
    126a:	40 e0       	ldi	r20, 0x00	; 0
    126c:	50 e0       	ldi	r21, 0x00	; 0
    126e:	e2 22       	and	r14, r18
    1270:	f3 22       	and	r15, r19
    1272:	04 23       	and	r16, r20
    1274:	15 23       	and	r17, r21
    1276:	a6 01       	movw	r20, r12
    1278:	66 27       	eor	r22, r22
    127a:	77 27       	eor	r23, r23
    127c:	ad 96       	adiw	r28, 0x2d	; 45
    127e:	4c af       	std	Y+60, r20	; 0x3c
    1280:	5d af       	std	Y+61, r21	; 0x3d
    1282:	6e af       	std	Y+62, r22	; 0x3e
    1284:	7f af       	std	Y+63, r23	; 0x3f
    1286:	ad 97       	sbiw	r28, 0x2d	; 45
    1288:	a9 a8       	ldd	r10, Y+49	; 0x31
    128a:	ba a8       	ldd	r11, Y+50	; 0x32
    128c:	cb a8       	ldd	r12, Y+51	; 0x33
    128e:	dc a8       	ldd	r13, Y+52	; 0x34
    1290:	6f ef       	ldi	r22, 0xFF	; 255
    1292:	7f ef       	ldi	r23, 0xFF	; 255
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	a6 22       	and	r10, r22
    129a:	b7 22       	and	r11, r23
    129c:	c8 22       	and	r12, r24
    129e:	d9 22       	and	r13, r25
    12a0:	89 a9       	ldd	r24, Y+49	; 0x31
    12a2:	9a a9       	ldd	r25, Y+50	; 0x32
    12a4:	ab a9       	ldd	r26, Y+51	; 0x33
    12a6:	bc a9       	ldd	r27, Y+52	; 0x34
    12a8:	1d 01       	movw	r2, r26
    12aa:	44 24       	eor	r4, r4
    12ac:	55 24       	eor	r5, r5
    12ae:	c8 01       	movw	r24, r16
    12b0:	b7 01       	movw	r22, r14
    12b2:	a6 01       	movw	r20, r12
    12b4:	95 01       	movw	r18, r10
    12b6:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
    12ba:	a9 96       	adiw	r28, 0x29	; 41
    12bc:	6c af       	std	Y+60, r22	; 0x3c
    12be:	7d af       	std	Y+61, r23	; 0x3d
    12c0:	8e af       	std	Y+62, r24	; 0x3e
    12c2:	9f af       	std	Y+63, r25	; 0x3f
    12c4:	a9 97       	sbiw	r28, 0x29	; 41
    12c6:	c8 01       	movw	r24, r16
    12c8:	b7 01       	movw	r22, r14
    12ca:	a2 01       	movw	r20, r4
    12cc:	91 01       	movw	r18, r2
    12ce:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
    12d2:	3b 01       	movw	r6, r22
    12d4:	4c 01       	movw	r8, r24
    12d6:	ad 96       	adiw	r28, 0x2d	; 45
    12d8:	6c ad       	ldd	r22, Y+60	; 0x3c
    12da:	7d ad       	ldd	r23, Y+61	; 0x3d
    12dc:	8e ad       	ldd	r24, Y+62	; 0x3e
    12de:	9f ad       	ldd	r25, Y+63	; 0x3f
    12e0:	ad 97       	sbiw	r28, 0x2d	; 45
    12e2:	a6 01       	movw	r20, r12
    12e4:	95 01       	movw	r18, r10
    12e6:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
    12ea:	7b 01       	movw	r14, r22
    12ec:	8c 01       	movw	r16, r24
    12ee:	ad 96       	adiw	r28, 0x2d	; 45
    12f0:	6c ad       	ldd	r22, Y+60	; 0x3c
    12f2:	7d ad       	ldd	r23, Y+61	; 0x3d
    12f4:	8e ad       	ldd	r24, Y+62	; 0x3e
    12f6:	9f ad       	ldd	r25, Y+63	; 0x3f
    12f8:	ad 97       	sbiw	r28, 0x2d	; 45
    12fa:	a2 01       	movw	r20, r4
    12fc:	91 01       	movw	r18, r2
    12fe:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
    1302:	5b 01       	movw	r10, r22
    1304:	6c 01       	movw	r12, r24
    1306:	a8 01       	movw	r20, r16
    1308:	97 01       	movw	r18, r14
    130a:	26 0d       	add	r18, r6
    130c:	37 1d       	adc	r19, r7
    130e:	48 1d       	adc	r20, r8
    1310:	59 1d       	adc	r21, r9
    1312:	a9 96       	adiw	r28, 0x29	; 41
    1314:	6c ac       	ldd	r6, Y+60	; 0x3c
    1316:	7d ac       	ldd	r7, Y+61	; 0x3d
    1318:	8e ac       	ldd	r8, Y+62	; 0x3e
    131a:	9f ac       	ldd	r9, Y+63	; 0x3f
    131c:	a9 97       	sbiw	r28, 0x29	; 41
    131e:	c4 01       	movw	r24, r8
    1320:	aa 27       	eor	r26, r26
    1322:	bb 27       	eor	r27, r27
    1324:	28 0f       	add	r18, r24
    1326:	39 1f       	adc	r19, r25
    1328:	4a 1f       	adc	r20, r26
    132a:	5b 1f       	adc	r21, r27
    132c:	2e 15       	cp	r18, r14
    132e:	3f 05       	cpc	r19, r15
    1330:	40 07       	cpc	r20, r16
    1332:	51 07       	cpc	r21, r17
    1334:	48 f4       	brcc	.+18     	; 0x1348 <__stack+0xae9>
    1336:	e1 2c       	mov	r14, r1
    1338:	f1 2c       	mov	r15, r1
    133a:	61 e0       	ldi	r22, 0x01	; 1
    133c:	06 2f       	mov	r16, r22
    133e:	11 2d       	mov	r17, r1
    1340:	ae 0c       	add	r10, r14
    1342:	bf 1c       	adc	r11, r15
    1344:	c0 1e       	adc	r12, r16
    1346:	d1 1e       	adc	r13, r17
    1348:	ca 01       	movw	r24, r20
    134a:	aa 27       	eor	r26, r26
    134c:	bb 27       	eor	r27, r27
    134e:	bc 01       	movw	r22, r24
    1350:	cd 01       	movw	r24, r26
    1352:	6a 0d       	add	r22, r10
    1354:	7b 1d       	adc	r23, r11
    1356:	8c 1d       	adc	r24, r12
    1358:	9d 1d       	adc	r25, r13
    135a:	69 a4       	ldd	r6, Y+41	; 0x29
    135c:	7a a4       	ldd	r7, Y+42	; 0x2a
    135e:	8b a4       	ldd	r8, Y+43	; 0x2b
    1360:	9c a4       	ldd	r9, Y+44	; 0x2c
    1362:	66 16       	cp	r6, r22
    1364:	77 06       	cpc	r7, r23
    1366:	88 06       	cpc	r8, r24
    1368:	99 06       	cpc	r9, r25
    136a:	50 f1       	brcs	.+84     	; 0x13c0 <__stack+0xb61>
    136c:	66 15       	cp	r22, r6
    136e:	77 05       	cpc	r23, r7
    1370:	88 05       	cpc	r24, r8
    1372:	99 05       	cpc	r25, r9
    1374:	09 f0       	breq	.+2      	; 0x1378 <__stack+0xb19>
    1376:	4d c0       	rjmp	.+154    	; 0x1412 <__stack+0xbb3>
    1378:	d9 01       	movw	r26, r18
    137a:	99 27       	eor	r25, r25
    137c:	88 27       	eor	r24, r24
    137e:	a9 96       	adiw	r28, 0x29	; 41
    1380:	2c ad       	ldd	r18, Y+60	; 0x3c
    1382:	3d ad       	ldd	r19, Y+61	; 0x3d
    1384:	4e ad       	ldd	r20, Y+62	; 0x3e
    1386:	5f ad       	ldd	r21, Y+63	; 0x3f
    1388:	a9 97       	sbiw	r28, 0x29	; 41
    138a:	40 70       	andi	r20, 0x00	; 0
    138c:	50 70       	andi	r21, 0x00	; 0
    138e:	82 0f       	add	r24, r18
    1390:	93 1f       	adc	r25, r19
    1392:	a4 1f       	adc	r26, r20
    1394:	b5 1f       	adc	r27, r21
    1396:	21 96       	adiw	r28, 0x01	; 1
    1398:	2c ad       	ldd	r18, Y+60	; 0x3c
    139a:	3d ad       	ldd	r19, Y+61	; 0x3d
    139c:	4e ad       	ldd	r20, Y+62	; 0x3e
    139e:	5f ad       	ldd	r21, Y+63	; 0x3f
    13a0:	21 97       	sbiw	r28, 0x01	; 1
    13a2:	e2 96       	adiw	r28, 0x32	; 50
    13a4:	0f ac       	ldd	r0, Y+63	; 0x3f
    13a6:	e2 97       	sbiw	r28, 0x32	; 50
    13a8:	04 c0       	rjmp	.+8      	; 0x13b2 <__stack+0xb53>
    13aa:	22 0f       	add	r18, r18
    13ac:	33 1f       	adc	r19, r19
    13ae:	44 1f       	adc	r20, r20
    13b0:	55 1f       	adc	r21, r21
    13b2:	0a 94       	dec	r0
    13b4:	d2 f7       	brpl	.-12     	; 0x13aa <__stack+0xb4b>
    13b6:	28 17       	cp	r18, r24
    13b8:	39 07       	cpc	r19, r25
    13ba:	4a 07       	cpc	r20, r26
    13bc:	5b 07       	cpc	r21, r27
    13be:	48 f5       	brcc	.+82     	; 0x1412 <__stack+0xbb3>
    13c0:	25 96       	adiw	r28, 0x05	; 5
    13c2:	0c ad       	ldd	r16, Y+60	; 0x3c
    13c4:	1d ad       	ldd	r17, Y+61	; 0x3d
    13c6:	2e ad       	ldd	r18, Y+62	; 0x3e
    13c8:	3f ad       	ldd	r19, Y+63	; 0x3f
    13ca:	25 97       	sbiw	r28, 0x05	; 5
    13cc:	01 50       	subi	r16, 0x01	; 1
    13ce:	10 40       	sbci	r17, 0x00	; 0
    13d0:	20 40       	sbci	r18, 0x00	; 0
    13d2:	30 40       	sbci	r19, 0x00	; 0
    13d4:	25 96       	adiw	r28, 0x05	; 5
    13d6:	0c af       	std	Y+60, r16	; 0x3c
    13d8:	1d af       	std	Y+61, r17	; 0x3d
    13da:	2e af       	std	Y+62, r18	; 0x3e
    13dc:	3f af       	std	Y+63, r19	; 0x3f
    13de:	25 97       	sbiw	r28, 0x05	; 5
    13e0:	18 c0       	rjmp	.+48     	; 0x1412 <__stack+0xbb3>
    13e2:	66 24       	eor	r6, r6
    13e4:	77 24       	eor	r7, r7
    13e6:	43 01       	movw	r8, r6
    13e8:	21 e0       	ldi	r18, 0x01	; 1
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	40 e0       	ldi	r20, 0x00	; 0
    13ee:	50 e0       	ldi	r21, 0x00	; 0
    13f0:	25 96       	adiw	r28, 0x05	; 5
    13f2:	2c af       	std	Y+60, r18	; 0x3c
    13f4:	3d af       	std	Y+61, r19	; 0x3d
    13f6:	4e af       	std	Y+62, r20	; 0x3e
    13f8:	5f af       	std	Y+63, r21	; 0x3f
    13fa:	25 97       	sbiw	r28, 0x05	; 5
    13fc:	0d c0       	rjmp	.+26     	; 0x1418 <__stack+0xbb9>
    13fe:	66 24       	eor	r6, r6
    1400:	77 24       	eor	r7, r7
    1402:	43 01       	movw	r8, r6
    1404:	25 96       	adiw	r28, 0x05	; 5
    1406:	1c ae       	std	Y+60, r1	; 0x3c
    1408:	1d ae       	std	Y+61, r1	; 0x3d
    140a:	1e ae       	std	Y+62, r1	; 0x3e
    140c:	1f ae       	std	Y+63, r1	; 0x3f
    140e:	25 97       	sbiw	r28, 0x05	; 5
    1410:	03 c0       	rjmp	.+6      	; 0x1418 <__stack+0xbb9>
    1412:	66 24       	eor	r6, r6
    1414:	77 24       	eor	r7, r7
    1416:	43 01       	movw	r8, r6
    1418:	fe 01       	movw	r30, r28
    141a:	b1 96       	adiw	r30, 0x21	; 33
    141c:	88 e0       	ldi	r24, 0x08	; 8
    141e:	df 01       	movw	r26, r30
    1420:	1d 92       	st	X+, r1
    1422:	8a 95       	dec	r24
    1424:	e9 f7       	brne	.-6      	; 0x1420 <__stack+0xbc1>
    1426:	25 96       	adiw	r28, 0x05	; 5
    1428:	ac ac       	ldd	r10, Y+60	; 0x3c
    142a:	bd ac       	ldd	r11, Y+61	; 0x3d
    142c:	ce ac       	ldd	r12, Y+62	; 0x3e
    142e:	df ac       	ldd	r13, Y+63	; 0x3f
    1430:	25 97       	sbiw	r28, 0x05	; 5
    1432:	a9 a2       	std	Y+33, r10	; 0x21
    1434:	ba a2       	std	Y+34, r11	; 0x22
    1436:	cb a2       	std	Y+35, r12	; 0x23
    1438:	dc a2       	std	Y+36, r13	; 0x24
    143a:	6d a2       	std	Y+37, r6	; 0x25
    143c:	7e a2       	std	Y+38, r7	; 0x26
    143e:	8f a2       	std	Y+39, r8	; 0x27
    1440:	98 a6       	std	Y+40, r9	; 0x28
    1442:	22 96       	adiw	r28, 0x02	; 2
    1444:	2f ad       	ldd	r18, Y+63	; 0x3f
    1446:	22 97       	sbiw	r28, 0x02	; 2
    1448:	3a a1       	ldd	r19, Y+34	; 0x22
    144a:	4b a1       	ldd	r20, Y+35	; 0x23
    144c:	5c a1       	ldd	r21, Y+36	; 0x24
    144e:	66 2d       	mov	r22, r6
    1450:	7e a1       	ldd	r23, Y+38	; 0x26
    1452:	df a0       	ldd	r13, Y+39	; 0x27
    1454:	98 a5       	ldd	r25, Y+40	; 0x28
    1456:	e1 96       	adiw	r28, 0x31	; 49
    1458:	ec ac       	ldd	r14, Y+60	; 0x3c
    145a:	fd ac       	ldd	r15, Y+61	; 0x3d
    145c:	0e ad       	ldd	r16, Y+62	; 0x3e
    145e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1460:	e1 97       	sbiw	r28, 0x31	; 49
    1462:	e1 14       	cp	r14, r1
    1464:	f1 04       	cpc	r15, r1
    1466:	01 05       	cpc	r16, r1
    1468:	11 05       	cpc	r17, r1
    146a:	09 f4       	brne	.+2      	; 0x146e <__stack+0xc0f>
    146c:	56 c0       	rjmp	.+172    	; 0x151a <__stack+0xcbb>
    146e:	21 95       	neg	r18
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	12 16       	cp	r1, r18
    1474:	08 f0       	brcs	.+2      	; 0x1478 <__stack+0xc19>
    1476:	80 e0       	ldi	r24, 0x00	; 0
    1478:	31 95       	neg	r19
    147a:	e1 e0       	ldi	r30, 0x01	; 1
    147c:	13 16       	cp	r1, r19
    147e:	08 f0       	brcs	.+2      	; 0x1482 <__stack+0xc23>
    1480:	e0 e0       	ldi	r30, 0x00	; 0
    1482:	93 2e       	mov	r9, r19
    1484:	98 1a       	sub	r9, r24
    1486:	81 e0       	ldi	r24, 0x01	; 1
    1488:	39 15       	cp	r19, r9
    148a:	08 f0       	brcs	.+2      	; 0x148e <__stack+0xc2f>
    148c:	80 e0       	ldi	r24, 0x00	; 0
    148e:	e8 2b       	or	r30, r24
    1490:	41 95       	neg	r20
    1492:	f1 e0       	ldi	r31, 0x01	; 1
    1494:	14 16       	cp	r1, r20
    1496:	08 f0       	brcs	.+2      	; 0x149a <__stack+0xc3b>
    1498:	f0 e0       	ldi	r31, 0x00	; 0
    149a:	a4 2e       	mov	r10, r20
    149c:	ae 1a       	sub	r10, r30
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	4a 15       	cp	r20, r10
    14a2:	08 f0       	brcs	.+2      	; 0x14a6 <__stack+0xc47>
    14a4:	80 e0       	ldi	r24, 0x00	; 0
    14a6:	f8 2b       	or	r31, r24
    14a8:	51 95       	neg	r21
    14aa:	e1 e0       	ldi	r30, 0x01	; 1
    14ac:	15 16       	cp	r1, r21
    14ae:	08 f0       	brcs	.+2      	; 0x14b2 <__stack+0xc53>
    14b0:	e0 e0       	ldi	r30, 0x00	; 0
    14b2:	b5 2e       	mov	r11, r21
    14b4:	bf 1a       	sub	r11, r31
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	5b 15       	cp	r21, r11
    14ba:	08 f0       	brcs	.+2      	; 0x14be <__stack+0xc5f>
    14bc:	80 e0       	ldi	r24, 0x00	; 0
    14be:	e8 2b       	or	r30, r24
    14c0:	61 95       	neg	r22
    14c2:	f1 e0       	ldi	r31, 0x01	; 1
    14c4:	16 16       	cp	r1, r22
    14c6:	08 f0       	brcs	.+2      	; 0x14ca <__stack+0xc6b>
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	a6 2f       	mov	r26, r22
    14cc:	ae 1b       	sub	r26, r30
    14ce:	81 e0       	ldi	r24, 0x01	; 1
    14d0:	6a 17       	cp	r22, r26
    14d2:	08 f0       	brcs	.+2      	; 0x14d6 <__stack+0xc77>
    14d4:	80 e0       	ldi	r24, 0x00	; 0
    14d6:	f8 2b       	or	r31, r24
    14d8:	71 95       	neg	r23
    14da:	e1 e0       	ldi	r30, 0x01	; 1
    14dc:	17 16       	cp	r1, r23
    14de:	08 f0       	brcs	.+2      	; 0x14e2 <__stack+0xc83>
    14e0:	e0 e0       	ldi	r30, 0x00	; 0
    14e2:	c7 2e       	mov	r12, r23
    14e4:	cf 1a       	sub	r12, r31
    14e6:	81 e0       	ldi	r24, 0x01	; 1
    14e8:	7c 15       	cp	r23, r12
    14ea:	08 f0       	brcs	.+2      	; 0x14ee <__stack+0xc8f>
    14ec:	80 e0       	ldi	r24, 0x00	; 0
    14ee:	e8 2b       	or	r30, r24
    14f0:	8d 2d       	mov	r24, r13
    14f2:	81 95       	neg	r24
    14f4:	f1 e0       	ldi	r31, 0x01	; 1
    14f6:	18 16       	cp	r1, r24
    14f8:	08 f0       	brcs	.+2      	; 0x14fc <__stack+0xc9d>
    14fa:	f0 e0       	ldi	r31, 0x00	; 0
    14fc:	d8 2e       	mov	r13, r24
    14fe:	de 1a       	sub	r13, r30
    1500:	e1 e0       	ldi	r30, 0x01	; 1
    1502:	8d 15       	cp	r24, r13
    1504:	08 f0       	brcs	.+2      	; 0x1508 <__stack+0xca9>
    1506:	e0 e0       	ldi	r30, 0x00	; 0
    1508:	fe 2b       	or	r31, r30
    150a:	89 2f       	mov	r24, r25
    150c:	81 95       	neg	r24
    150e:	39 2d       	mov	r19, r9
    1510:	a5 01       	movw	r20, r10
    1512:	6a 2f       	mov	r22, r26
    1514:	7c 2d       	mov	r23, r12
    1516:	98 2f       	mov	r25, r24
    1518:	9f 1b       	sub	r25, r31
    151a:	8d 2d       	mov	r24, r13
    151c:	ce 58       	subi	r28, 0x8E	; 142
    151e:	df 4f       	sbci	r29, 0xFF	; 255
    1520:	e2 e1       	ldi	r30, 0x12	; 18
    1522:	0c 94 9c 29 	jmp	0x5338	; 0x5338 <__epilogue_restores__>

00001526 <_fpadd_parts>:
    1526:	a0 e0       	ldi	r26, 0x00	; 0
    1528:	b0 e0       	ldi	r27, 0x00	; 0
    152a:	e9 e9       	ldi	r30, 0x99	; 153
    152c:	fa e0       	ldi	r31, 0x0A	; 10
    152e:	0c 94 80 29 	jmp	0x5300	; 0x5300 <__prologue_saves__>
    1532:	dc 01       	movw	r26, r24
    1534:	2b 01       	movw	r4, r22
    1536:	fa 01       	movw	r30, r20
    1538:	9c 91       	ld	r25, X
    153a:	92 30       	cpi	r25, 0x02	; 2
    153c:	08 f4       	brcc	.+2      	; 0x1540 <_fpadd_parts+0x1a>
    153e:	39 c1       	rjmp	.+626    	; 0x17b2 <_fpadd_parts+0x28c>
    1540:	eb 01       	movw	r28, r22
    1542:	88 81       	ld	r24, Y
    1544:	82 30       	cpi	r24, 0x02	; 2
    1546:	08 f4       	brcc	.+2      	; 0x154a <_fpadd_parts+0x24>
    1548:	33 c1       	rjmp	.+614    	; 0x17b0 <_fpadd_parts+0x28a>
    154a:	94 30       	cpi	r25, 0x04	; 4
    154c:	69 f4       	brne	.+26     	; 0x1568 <_fpadd_parts+0x42>
    154e:	84 30       	cpi	r24, 0x04	; 4
    1550:	09 f0       	breq	.+2      	; 0x1554 <_fpadd_parts+0x2e>
    1552:	2f c1       	rjmp	.+606    	; 0x17b2 <_fpadd_parts+0x28c>
    1554:	11 96       	adiw	r26, 0x01	; 1
    1556:	9c 91       	ld	r25, X
    1558:	11 97       	sbiw	r26, 0x01	; 1
    155a:	89 81       	ldd	r24, Y+1	; 0x01
    155c:	98 17       	cp	r25, r24
    155e:	09 f4       	brne	.+2      	; 0x1562 <_fpadd_parts+0x3c>
    1560:	28 c1       	rjmp	.+592    	; 0x17b2 <_fpadd_parts+0x28c>
    1562:	ae e7       	ldi	r26, 0x7E	; 126
    1564:	b0 e0       	ldi	r27, 0x00	; 0
    1566:	25 c1       	rjmp	.+586    	; 0x17b2 <_fpadd_parts+0x28c>
    1568:	84 30       	cpi	r24, 0x04	; 4
    156a:	09 f4       	brne	.+2      	; 0x156e <_fpadd_parts+0x48>
    156c:	21 c1       	rjmp	.+578    	; 0x17b0 <_fpadd_parts+0x28a>
    156e:	82 30       	cpi	r24, 0x02	; 2
    1570:	a9 f4       	brne	.+42     	; 0x159c <_fpadd_parts+0x76>
    1572:	92 30       	cpi	r25, 0x02	; 2
    1574:	09 f0       	breq	.+2      	; 0x1578 <_fpadd_parts+0x52>
    1576:	1d c1       	rjmp	.+570    	; 0x17b2 <_fpadd_parts+0x28c>
    1578:	9a 01       	movw	r18, r20
    157a:	ad 01       	movw	r20, r26
    157c:	88 e0       	ldi	r24, 0x08	; 8
    157e:	ea 01       	movw	r28, r20
    1580:	09 90       	ld	r0, Y+
    1582:	ae 01       	movw	r20, r28
    1584:	e9 01       	movw	r28, r18
    1586:	09 92       	st	Y+, r0
    1588:	9e 01       	movw	r18, r28
    158a:	81 50       	subi	r24, 0x01	; 1
    158c:	c1 f7       	brne	.-16     	; 0x157e <_fpadd_parts+0x58>
    158e:	e2 01       	movw	r28, r4
    1590:	89 81       	ldd	r24, Y+1	; 0x01
    1592:	11 96       	adiw	r26, 0x01	; 1
    1594:	9c 91       	ld	r25, X
    1596:	89 23       	and	r24, r25
    1598:	81 83       	std	Z+1, r24	; 0x01
    159a:	08 c1       	rjmp	.+528    	; 0x17ac <_fpadd_parts+0x286>
    159c:	92 30       	cpi	r25, 0x02	; 2
    159e:	09 f4       	brne	.+2      	; 0x15a2 <_fpadd_parts+0x7c>
    15a0:	07 c1       	rjmp	.+526    	; 0x17b0 <_fpadd_parts+0x28a>
    15a2:	12 96       	adiw	r26, 0x02	; 2
    15a4:	2d 90       	ld	r2, X+
    15a6:	3c 90       	ld	r3, X
    15a8:	13 97       	sbiw	r26, 0x03	; 3
    15aa:	eb 01       	movw	r28, r22
    15ac:	8a 81       	ldd	r24, Y+2	; 0x02
    15ae:	9b 81       	ldd	r25, Y+3	; 0x03
    15b0:	14 96       	adiw	r26, 0x04	; 4
    15b2:	ad 90       	ld	r10, X+
    15b4:	bd 90       	ld	r11, X+
    15b6:	cd 90       	ld	r12, X+
    15b8:	dc 90       	ld	r13, X
    15ba:	17 97       	sbiw	r26, 0x07	; 7
    15bc:	ec 80       	ldd	r14, Y+4	; 0x04
    15be:	fd 80       	ldd	r15, Y+5	; 0x05
    15c0:	0e 81       	ldd	r16, Y+6	; 0x06
    15c2:	1f 81       	ldd	r17, Y+7	; 0x07
    15c4:	91 01       	movw	r18, r2
    15c6:	28 1b       	sub	r18, r24
    15c8:	39 0b       	sbc	r19, r25
    15ca:	b9 01       	movw	r22, r18
    15cc:	37 ff       	sbrs	r19, 7
    15ce:	04 c0       	rjmp	.+8      	; 0x15d8 <_fpadd_parts+0xb2>
    15d0:	66 27       	eor	r22, r22
    15d2:	77 27       	eor	r23, r23
    15d4:	62 1b       	sub	r22, r18
    15d6:	73 0b       	sbc	r23, r19
    15d8:	60 32       	cpi	r22, 0x20	; 32
    15da:	71 05       	cpc	r23, r1
    15dc:	0c f0       	brlt	.+2      	; 0x15e0 <_fpadd_parts+0xba>
    15de:	61 c0       	rjmp	.+194    	; 0x16a2 <_fpadd_parts+0x17c>
    15e0:	12 16       	cp	r1, r18
    15e2:	13 06       	cpc	r1, r19
    15e4:	6c f5       	brge	.+90     	; 0x1640 <_fpadd_parts+0x11a>
    15e6:	37 01       	movw	r6, r14
    15e8:	48 01       	movw	r8, r16
    15ea:	06 2e       	mov	r0, r22
    15ec:	04 c0       	rjmp	.+8      	; 0x15f6 <_fpadd_parts+0xd0>
    15ee:	96 94       	lsr	r9
    15f0:	87 94       	ror	r8
    15f2:	77 94       	ror	r7
    15f4:	67 94       	ror	r6
    15f6:	0a 94       	dec	r0
    15f8:	d2 f7       	brpl	.-12     	; 0x15ee <_fpadd_parts+0xc8>
    15fa:	21 e0       	ldi	r18, 0x01	; 1
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	40 e0       	ldi	r20, 0x00	; 0
    1600:	50 e0       	ldi	r21, 0x00	; 0
    1602:	04 c0       	rjmp	.+8      	; 0x160c <_fpadd_parts+0xe6>
    1604:	22 0f       	add	r18, r18
    1606:	33 1f       	adc	r19, r19
    1608:	44 1f       	adc	r20, r20
    160a:	55 1f       	adc	r21, r21
    160c:	6a 95       	dec	r22
    160e:	d2 f7       	brpl	.-12     	; 0x1604 <_fpadd_parts+0xde>
    1610:	21 50       	subi	r18, 0x01	; 1
    1612:	30 40       	sbci	r19, 0x00	; 0
    1614:	40 40       	sbci	r20, 0x00	; 0
    1616:	50 40       	sbci	r21, 0x00	; 0
    1618:	2e 21       	and	r18, r14
    161a:	3f 21       	and	r19, r15
    161c:	40 23       	and	r20, r16
    161e:	51 23       	and	r21, r17
    1620:	21 15       	cp	r18, r1
    1622:	31 05       	cpc	r19, r1
    1624:	41 05       	cpc	r20, r1
    1626:	51 05       	cpc	r21, r1
    1628:	21 f0       	breq	.+8      	; 0x1632 <_fpadd_parts+0x10c>
    162a:	21 e0       	ldi	r18, 0x01	; 1
    162c:	30 e0       	ldi	r19, 0x00	; 0
    162e:	40 e0       	ldi	r20, 0x00	; 0
    1630:	50 e0       	ldi	r21, 0x00	; 0
    1632:	79 01       	movw	r14, r18
    1634:	8a 01       	movw	r16, r20
    1636:	e6 28       	or	r14, r6
    1638:	f7 28       	or	r15, r7
    163a:	08 29       	or	r16, r8
    163c:	19 29       	or	r17, r9
    163e:	3c c0       	rjmp	.+120    	; 0x16b8 <_fpadd_parts+0x192>
    1640:	23 2b       	or	r18, r19
    1642:	d1 f1       	breq	.+116    	; 0x16b8 <_fpadd_parts+0x192>
    1644:	26 0e       	add	r2, r22
    1646:	37 1e       	adc	r3, r23
    1648:	35 01       	movw	r6, r10
    164a:	46 01       	movw	r8, r12
    164c:	06 2e       	mov	r0, r22
    164e:	04 c0       	rjmp	.+8      	; 0x1658 <_fpadd_parts+0x132>
    1650:	96 94       	lsr	r9
    1652:	87 94       	ror	r8
    1654:	77 94       	ror	r7
    1656:	67 94       	ror	r6
    1658:	0a 94       	dec	r0
    165a:	d2 f7       	brpl	.-12     	; 0x1650 <_fpadd_parts+0x12a>
    165c:	21 e0       	ldi	r18, 0x01	; 1
    165e:	30 e0       	ldi	r19, 0x00	; 0
    1660:	40 e0       	ldi	r20, 0x00	; 0
    1662:	50 e0       	ldi	r21, 0x00	; 0
    1664:	04 c0       	rjmp	.+8      	; 0x166e <_fpadd_parts+0x148>
    1666:	22 0f       	add	r18, r18
    1668:	33 1f       	adc	r19, r19
    166a:	44 1f       	adc	r20, r20
    166c:	55 1f       	adc	r21, r21
    166e:	6a 95       	dec	r22
    1670:	d2 f7       	brpl	.-12     	; 0x1666 <_fpadd_parts+0x140>
    1672:	21 50       	subi	r18, 0x01	; 1
    1674:	30 40       	sbci	r19, 0x00	; 0
    1676:	40 40       	sbci	r20, 0x00	; 0
    1678:	50 40       	sbci	r21, 0x00	; 0
    167a:	2a 21       	and	r18, r10
    167c:	3b 21       	and	r19, r11
    167e:	4c 21       	and	r20, r12
    1680:	5d 21       	and	r21, r13
    1682:	21 15       	cp	r18, r1
    1684:	31 05       	cpc	r19, r1
    1686:	41 05       	cpc	r20, r1
    1688:	51 05       	cpc	r21, r1
    168a:	21 f0       	breq	.+8      	; 0x1694 <_fpadd_parts+0x16e>
    168c:	21 e0       	ldi	r18, 0x01	; 1
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	40 e0       	ldi	r20, 0x00	; 0
    1692:	50 e0       	ldi	r21, 0x00	; 0
    1694:	59 01       	movw	r10, r18
    1696:	6a 01       	movw	r12, r20
    1698:	a6 28       	or	r10, r6
    169a:	b7 28       	or	r11, r7
    169c:	c8 28       	or	r12, r8
    169e:	d9 28       	or	r13, r9
    16a0:	0b c0       	rjmp	.+22     	; 0x16b8 <_fpadd_parts+0x192>
    16a2:	82 15       	cp	r24, r2
    16a4:	93 05       	cpc	r25, r3
    16a6:	2c f0       	brlt	.+10     	; 0x16b2 <_fpadd_parts+0x18c>
    16a8:	1c 01       	movw	r2, r24
    16aa:	aa 24       	eor	r10, r10
    16ac:	bb 24       	eor	r11, r11
    16ae:	65 01       	movw	r12, r10
    16b0:	03 c0       	rjmp	.+6      	; 0x16b8 <_fpadd_parts+0x192>
    16b2:	ee 24       	eor	r14, r14
    16b4:	ff 24       	eor	r15, r15
    16b6:	87 01       	movw	r16, r14
    16b8:	11 96       	adiw	r26, 0x01	; 1
    16ba:	9c 91       	ld	r25, X
    16bc:	d2 01       	movw	r26, r4
    16be:	11 96       	adiw	r26, 0x01	; 1
    16c0:	8c 91       	ld	r24, X
    16c2:	98 17       	cp	r25, r24
    16c4:	09 f4       	brne	.+2      	; 0x16c8 <_fpadd_parts+0x1a2>
    16c6:	45 c0       	rjmp	.+138    	; 0x1752 <_fpadd_parts+0x22c>
    16c8:	99 23       	and	r25, r25
    16ca:	39 f0       	breq	.+14     	; 0x16da <_fpadd_parts+0x1b4>
    16cc:	a8 01       	movw	r20, r16
    16ce:	97 01       	movw	r18, r14
    16d0:	2a 19       	sub	r18, r10
    16d2:	3b 09       	sbc	r19, r11
    16d4:	4c 09       	sbc	r20, r12
    16d6:	5d 09       	sbc	r21, r13
    16d8:	06 c0       	rjmp	.+12     	; 0x16e6 <_fpadd_parts+0x1c0>
    16da:	a6 01       	movw	r20, r12
    16dc:	95 01       	movw	r18, r10
    16de:	2e 19       	sub	r18, r14
    16e0:	3f 09       	sbc	r19, r15
    16e2:	40 0b       	sbc	r20, r16
    16e4:	51 0b       	sbc	r21, r17
    16e6:	57 fd       	sbrc	r21, 7
    16e8:	08 c0       	rjmp	.+16     	; 0x16fa <_fpadd_parts+0x1d4>
    16ea:	11 82       	std	Z+1, r1	; 0x01
    16ec:	33 82       	std	Z+3, r3	; 0x03
    16ee:	22 82       	std	Z+2, r2	; 0x02
    16f0:	24 83       	std	Z+4, r18	; 0x04
    16f2:	35 83       	std	Z+5, r19	; 0x05
    16f4:	46 83       	std	Z+6, r20	; 0x06
    16f6:	57 83       	std	Z+7, r21	; 0x07
    16f8:	1d c0       	rjmp	.+58     	; 0x1734 <_fpadd_parts+0x20e>
    16fa:	81 e0       	ldi	r24, 0x01	; 1
    16fc:	81 83       	std	Z+1, r24	; 0x01
    16fe:	33 82       	std	Z+3, r3	; 0x03
    1700:	22 82       	std	Z+2, r2	; 0x02
    1702:	88 27       	eor	r24, r24
    1704:	99 27       	eor	r25, r25
    1706:	dc 01       	movw	r26, r24
    1708:	82 1b       	sub	r24, r18
    170a:	93 0b       	sbc	r25, r19
    170c:	a4 0b       	sbc	r26, r20
    170e:	b5 0b       	sbc	r27, r21
    1710:	84 83       	std	Z+4, r24	; 0x04
    1712:	95 83       	std	Z+5, r25	; 0x05
    1714:	a6 83       	std	Z+6, r26	; 0x06
    1716:	b7 83       	std	Z+7, r27	; 0x07
    1718:	0d c0       	rjmp	.+26     	; 0x1734 <_fpadd_parts+0x20e>
    171a:	22 0f       	add	r18, r18
    171c:	33 1f       	adc	r19, r19
    171e:	44 1f       	adc	r20, r20
    1720:	55 1f       	adc	r21, r21
    1722:	24 83       	std	Z+4, r18	; 0x04
    1724:	35 83       	std	Z+5, r19	; 0x05
    1726:	46 83       	std	Z+6, r20	; 0x06
    1728:	57 83       	std	Z+7, r21	; 0x07
    172a:	82 81       	ldd	r24, Z+2	; 0x02
    172c:	93 81       	ldd	r25, Z+3	; 0x03
    172e:	01 97       	sbiw	r24, 0x01	; 1
    1730:	93 83       	std	Z+3, r25	; 0x03
    1732:	82 83       	std	Z+2, r24	; 0x02
    1734:	24 81       	ldd	r18, Z+4	; 0x04
    1736:	35 81       	ldd	r19, Z+5	; 0x05
    1738:	46 81       	ldd	r20, Z+6	; 0x06
    173a:	57 81       	ldd	r21, Z+7	; 0x07
    173c:	da 01       	movw	r26, r20
    173e:	c9 01       	movw	r24, r18
    1740:	01 97       	sbiw	r24, 0x01	; 1
    1742:	a1 09       	sbc	r26, r1
    1744:	b1 09       	sbc	r27, r1
    1746:	8f 5f       	subi	r24, 0xFF	; 255
    1748:	9f 4f       	sbci	r25, 0xFF	; 255
    174a:	af 4f       	sbci	r26, 0xFF	; 255
    174c:	bf 43       	sbci	r27, 0x3F	; 63
    174e:	28 f3       	brcs	.-54     	; 0x171a <_fpadd_parts+0x1f4>
    1750:	0b c0       	rjmp	.+22     	; 0x1768 <_fpadd_parts+0x242>
    1752:	91 83       	std	Z+1, r25	; 0x01
    1754:	33 82       	std	Z+3, r3	; 0x03
    1756:	22 82       	std	Z+2, r2	; 0x02
    1758:	ea 0c       	add	r14, r10
    175a:	fb 1c       	adc	r15, r11
    175c:	0c 1d       	adc	r16, r12
    175e:	1d 1d       	adc	r17, r13
    1760:	e4 82       	std	Z+4, r14	; 0x04
    1762:	f5 82       	std	Z+5, r15	; 0x05
    1764:	06 83       	std	Z+6, r16	; 0x06
    1766:	17 83       	std	Z+7, r17	; 0x07
    1768:	83 e0       	ldi	r24, 0x03	; 3
    176a:	80 83       	st	Z, r24
    176c:	24 81       	ldd	r18, Z+4	; 0x04
    176e:	35 81       	ldd	r19, Z+5	; 0x05
    1770:	46 81       	ldd	r20, Z+6	; 0x06
    1772:	57 81       	ldd	r21, Z+7	; 0x07
    1774:	57 ff       	sbrs	r21, 7
    1776:	1a c0       	rjmp	.+52     	; 0x17ac <_fpadd_parts+0x286>
    1778:	c9 01       	movw	r24, r18
    177a:	aa 27       	eor	r26, r26
    177c:	97 fd       	sbrc	r25, 7
    177e:	a0 95       	com	r26
    1780:	ba 2f       	mov	r27, r26
    1782:	81 70       	andi	r24, 0x01	; 1
    1784:	90 70       	andi	r25, 0x00	; 0
    1786:	a0 70       	andi	r26, 0x00	; 0
    1788:	b0 70       	andi	r27, 0x00	; 0
    178a:	56 95       	lsr	r21
    178c:	47 95       	ror	r20
    178e:	37 95       	ror	r19
    1790:	27 95       	ror	r18
    1792:	82 2b       	or	r24, r18
    1794:	93 2b       	or	r25, r19
    1796:	a4 2b       	or	r26, r20
    1798:	b5 2b       	or	r27, r21
    179a:	84 83       	std	Z+4, r24	; 0x04
    179c:	95 83       	std	Z+5, r25	; 0x05
    179e:	a6 83       	std	Z+6, r26	; 0x06
    17a0:	b7 83       	std	Z+7, r27	; 0x07
    17a2:	82 81       	ldd	r24, Z+2	; 0x02
    17a4:	93 81       	ldd	r25, Z+3	; 0x03
    17a6:	01 96       	adiw	r24, 0x01	; 1
    17a8:	93 83       	std	Z+3, r25	; 0x03
    17aa:	82 83       	std	Z+2, r24	; 0x02
    17ac:	df 01       	movw	r26, r30
    17ae:	01 c0       	rjmp	.+2      	; 0x17b2 <_fpadd_parts+0x28c>
    17b0:	d2 01       	movw	r26, r4
    17b2:	cd 01       	movw	r24, r26
    17b4:	cd b7       	in	r28, 0x3d	; 61
    17b6:	de b7       	in	r29, 0x3e	; 62
    17b8:	e2 e1       	ldi	r30, 0x12	; 18
    17ba:	0c 94 9c 29 	jmp	0x5338	; 0x5338 <__epilogue_restores__>

000017be <__subsf3>:
    17be:	a0 e2       	ldi	r26, 0x20	; 32
    17c0:	b0 e0       	ldi	r27, 0x00	; 0
    17c2:	e5 ee       	ldi	r30, 0xE5	; 229
    17c4:	fb e0       	ldi	r31, 0x0B	; 11
    17c6:	0c 94 8c 29 	jmp	0x5318	; 0x5318 <__prologue_saves__+0x18>
    17ca:	69 83       	std	Y+1, r22	; 0x01
    17cc:	7a 83       	std	Y+2, r23	; 0x02
    17ce:	8b 83       	std	Y+3, r24	; 0x03
    17d0:	9c 83       	std	Y+4, r25	; 0x04
    17d2:	2d 83       	std	Y+5, r18	; 0x05
    17d4:	3e 83       	std	Y+6, r19	; 0x06
    17d6:	4f 83       	std	Y+7, r20	; 0x07
    17d8:	58 87       	std	Y+8, r21	; 0x08
    17da:	e9 e0       	ldi	r30, 0x09	; 9
    17dc:	ee 2e       	mov	r14, r30
    17de:	f1 2c       	mov	r15, r1
    17e0:	ec 0e       	add	r14, r28
    17e2:	fd 1e       	adc	r15, r29
    17e4:	ce 01       	movw	r24, r28
    17e6:	01 96       	adiw	r24, 0x01	; 1
    17e8:	b7 01       	movw	r22, r14
    17ea:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    17ee:	8e 01       	movw	r16, r28
    17f0:	0f 5e       	subi	r16, 0xEF	; 239
    17f2:	1f 4f       	sbci	r17, 0xFF	; 255
    17f4:	ce 01       	movw	r24, r28
    17f6:	05 96       	adiw	r24, 0x05	; 5
    17f8:	b8 01       	movw	r22, r16
    17fa:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    17fe:	8a 89       	ldd	r24, Y+18	; 0x12
    1800:	91 e0       	ldi	r25, 0x01	; 1
    1802:	89 27       	eor	r24, r25
    1804:	8a 8b       	std	Y+18, r24	; 0x12
    1806:	c7 01       	movw	r24, r14
    1808:	b8 01       	movw	r22, r16
    180a:	ae 01       	movw	r20, r28
    180c:	47 5e       	subi	r20, 0xE7	; 231
    180e:	5f 4f       	sbci	r21, 0xFF	; 255
    1810:	0e 94 93 0a 	call	0x1526	; 0x1526 <_fpadd_parts>
    1814:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__pack_f>
    1818:	a0 96       	adiw	r28, 0x20	; 32
    181a:	e6 e0       	ldi	r30, 0x06	; 6
    181c:	0c 94 a8 29 	jmp	0x5350	; 0x5350 <__epilogue_restores__+0x18>

00001820 <__addsf3>:
    1820:	a0 e2       	ldi	r26, 0x20	; 32
    1822:	b0 e0       	ldi	r27, 0x00	; 0
    1824:	e6 e1       	ldi	r30, 0x16	; 22
    1826:	fc e0       	ldi	r31, 0x0C	; 12
    1828:	0c 94 8c 29 	jmp	0x5318	; 0x5318 <__prologue_saves__+0x18>
    182c:	69 83       	std	Y+1, r22	; 0x01
    182e:	7a 83       	std	Y+2, r23	; 0x02
    1830:	8b 83       	std	Y+3, r24	; 0x03
    1832:	9c 83       	std	Y+4, r25	; 0x04
    1834:	2d 83       	std	Y+5, r18	; 0x05
    1836:	3e 83       	std	Y+6, r19	; 0x06
    1838:	4f 83       	std	Y+7, r20	; 0x07
    183a:	58 87       	std	Y+8, r21	; 0x08
    183c:	f9 e0       	ldi	r31, 0x09	; 9
    183e:	ef 2e       	mov	r14, r31
    1840:	f1 2c       	mov	r15, r1
    1842:	ec 0e       	add	r14, r28
    1844:	fd 1e       	adc	r15, r29
    1846:	ce 01       	movw	r24, r28
    1848:	01 96       	adiw	r24, 0x01	; 1
    184a:	b7 01       	movw	r22, r14
    184c:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1850:	8e 01       	movw	r16, r28
    1852:	0f 5e       	subi	r16, 0xEF	; 239
    1854:	1f 4f       	sbci	r17, 0xFF	; 255
    1856:	ce 01       	movw	r24, r28
    1858:	05 96       	adiw	r24, 0x05	; 5
    185a:	b8 01       	movw	r22, r16
    185c:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1860:	c7 01       	movw	r24, r14
    1862:	b8 01       	movw	r22, r16
    1864:	ae 01       	movw	r20, r28
    1866:	47 5e       	subi	r20, 0xE7	; 231
    1868:	5f 4f       	sbci	r21, 0xFF	; 255
    186a:	0e 94 93 0a 	call	0x1526	; 0x1526 <_fpadd_parts>
    186e:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__pack_f>
    1872:	a0 96       	adiw	r28, 0x20	; 32
    1874:	e6 e0       	ldi	r30, 0x06	; 6
    1876:	0c 94 a8 29 	jmp	0x5350	; 0x5350 <__epilogue_restores__+0x18>

0000187a <__mulsf3>:
    187a:	a0 e2       	ldi	r26, 0x20	; 32
    187c:	b0 e0       	ldi	r27, 0x00	; 0
    187e:	e3 e4       	ldi	r30, 0x43	; 67
    1880:	fc e0       	ldi	r31, 0x0C	; 12
    1882:	0c 94 80 29 	jmp	0x5300	; 0x5300 <__prologue_saves__>
    1886:	69 83       	std	Y+1, r22	; 0x01
    1888:	7a 83       	std	Y+2, r23	; 0x02
    188a:	8b 83       	std	Y+3, r24	; 0x03
    188c:	9c 83       	std	Y+4, r25	; 0x04
    188e:	2d 83       	std	Y+5, r18	; 0x05
    1890:	3e 83       	std	Y+6, r19	; 0x06
    1892:	4f 83       	std	Y+7, r20	; 0x07
    1894:	58 87       	std	Y+8, r21	; 0x08
    1896:	ce 01       	movw	r24, r28
    1898:	01 96       	adiw	r24, 0x01	; 1
    189a:	be 01       	movw	r22, r28
    189c:	67 5f       	subi	r22, 0xF7	; 247
    189e:	7f 4f       	sbci	r23, 0xFF	; 255
    18a0:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    18a4:	ce 01       	movw	r24, r28
    18a6:	05 96       	adiw	r24, 0x05	; 5
    18a8:	be 01       	movw	r22, r28
    18aa:	6f 5e       	subi	r22, 0xEF	; 239
    18ac:	7f 4f       	sbci	r23, 0xFF	; 255
    18ae:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    18b2:	99 85       	ldd	r25, Y+9	; 0x09
    18b4:	92 30       	cpi	r25, 0x02	; 2
    18b6:	88 f0       	brcs	.+34     	; 0x18da <__mulsf3+0x60>
    18b8:	89 89       	ldd	r24, Y+17	; 0x11
    18ba:	82 30       	cpi	r24, 0x02	; 2
    18bc:	c8 f0       	brcs	.+50     	; 0x18f0 <__mulsf3+0x76>
    18be:	94 30       	cpi	r25, 0x04	; 4
    18c0:	19 f4       	brne	.+6      	; 0x18c8 <__mulsf3+0x4e>
    18c2:	82 30       	cpi	r24, 0x02	; 2
    18c4:	51 f4       	brne	.+20     	; 0x18da <__mulsf3+0x60>
    18c6:	04 c0       	rjmp	.+8      	; 0x18d0 <__mulsf3+0x56>
    18c8:	84 30       	cpi	r24, 0x04	; 4
    18ca:	29 f4       	brne	.+10     	; 0x18d6 <__mulsf3+0x5c>
    18cc:	92 30       	cpi	r25, 0x02	; 2
    18ce:	81 f4       	brne	.+32     	; 0x18f0 <__mulsf3+0x76>
    18d0:	8e e7       	ldi	r24, 0x7E	; 126
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	c6 c0       	rjmp	.+396    	; 0x1a62 <__mulsf3+0x1e8>
    18d6:	92 30       	cpi	r25, 0x02	; 2
    18d8:	49 f4       	brne	.+18     	; 0x18ec <__mulsf3+0x72>
    18da:	20 e0       	ldi	r18, 0x00	; 0
    18dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    18de:	8a 89       	ldd	r24, Y+18	; 0x12
    18e0:	98 13       	cpse	r25, r24
    18e2:	21 e0       	ldi	r18, 0x01	; 1
    18e4:	2a 87       	std	Y+10, r18	; 0x0a
    18e6:	ce 01       	movw	r24, r28
    18e8:	09 96       	adiw	r24, 0x09	; 9
    18ea:	bb c0       	rjmp	.+374    	; 0x1a62 <__mulsf3+0x1e8>
    18ec:	82 30       	cpi	r24, 0x02	; 2
    18ee:	49 f4       	brne	.+18     	; 0x1902 <__mulsf3+0x88>
    18f0:	20 e0       	ldi	r18, 0x00	; 0
    18f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    18f4:	8a 89       	ldd	r24, Y+18	; 0x12
    18f6:	98 13       	cpse	r25, r24
    18f8:	21 e0       	ldi	r18, 0x01	; 1
    18fa:	2a 8b       	std	Y+18, r18	; 0x12
    18fc:	ce 01       	movw	r24, r28
    18fe:	41 96       	adiw	r24, 0x11	; 17
    1900:	b0 c0       	rjmp	.+352    	; 0x1a62 <__mulsf3+0x1e8>
    1902:	2d 84       	ldd	r2, Y+13	; 0x0d
    1904:	3e 84       	ldd	r3, Y+14	; 0x0e
    1906:	4f 84       	ldd	r4, Y+15	; 0x0f
    1908:	58 88       	ldd	r5, Y+16	; 0x10
    190a:	6d 88       	ldd	r6, Y+21	; 0x15
    190c:	7e 88       	ldd	r7, Y+22	; 0x16
    190e:	8f 88       	ldd	r8, Y+23	; 0x17
    1910:	98 8c       	ldd	r9, Y+24	; 0x18
    1912:	ee 24       	eor	r14, r14
    1914:	ff 24       	eor	r15, r15
    1916:	87 01       	movw	r16, r14
    1918:	aa 24       	eor	r10, r10
    191a:	bb 24       	eor	r11, r11
    191c:	65 01       	movw	r12, r10
    191e:	40 e0       	ldi	r20, 0x00	; 0
    1920:	50 e0       	ldi	r21, 0x00	; 0
    1922:	60 e0       	ldi	r22, 0x00	; 0
    1924:	70 e0       	ldi	r23, 0x00	; 0
    1926:	e0 e0       	ldi	r30, 0x00	; 0
    1928:	f0 e0       	ldi	r31, 0x00	; 0
    192a:	c1 01       	movw	r24, r2
    192c:	81 70       	andi	r24, 0x01	; 1
    192e:	90 70       	andi	r25, 0x00	; 0
    1930:	89 2b       	or	r24, r25
    1932:	e9 f0       	breq	.+58     	; 0x196e <__mulsf3+0xf4>
    1934:	e6 0c       	add	r14, r6
    1936:	f7 1c       	adc	r15, r7
    1938:	08 1d       	adc	r16, r8
    193a:	19 1d       	adc	r17, r9
    193c:	9a 01       	movw	r18, r20
    193e:	ab 01       	movw	r20, r22
    1940:	2a 0d       	add	r18, r10
    1942:	3b 1d       	adc	r19, r11
    1944:	4c 1d       	adc	r20, r12
    1946:	5d 1d       	adc	r21, r13
    1948:	80 e0       	ldi	r24, 0x00	; 0
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	a0 e0       	ldi	r26, 0x00	; 0
    194e:	b0 e0       	ldi	r27, 0x00	; 0
    1950:	e6 14       	cp	r14, r6
    1952:	f7 04       	cpc	r15, r7
    1954:	08 05       	cpc	r16, r8
    1956:	19 05       	cpc	r17, r9
    1958:	20 f4       	brcc	.+8      	; 0x1962 <__mulsf3+0xe8>
    195a:	81 e0       	ldi	r24, 0x01	; 1
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	a0 e0       	ldi	r26, 0x00	; 0
    1960:	b0 e0       	ldi	r27, 0x00	; 0
    1962:	ba 01       	movw	r22, r20
    1964:	a9 01       	movw	r20, r18
    1966:	48 0f       	add	r20, r24
    1968:	59 1f       	adc	r21, r25
    196a:	6a 1f       	adc	r22, r26
    196c:	7b 1f       	adc	r23, r27
    196e:	aa 0c       	add	r10, r10
    1970:	bb 1c       	adc	r11, r11
    1972:	cc 1c       	adc	r12, r12
    1974:	dd 1c       	adc	r13, r13
    1976:	97 fe       	sbrs	r9, 7
    1978:	08 c0       	rjmp	.+16     	; 0x198a <__mulsf3+0x110>
    197a:	81 e0       	ldi	r24, 0x01	; 1
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	a0 e0       	ldi	r26, 0x00	; 0
    1980:	b0 e0       	ldi	r27, 0x00	; 0
    1982:	a8 2a       	or	r10, r24
    1984:	b9 2a       	or	r11, r25
    1986:	ca 2a       	or	r12, r26
    1988:	db 2a       	or	r13, r27
    198a:	31 96       	adiw	r30, 0x01	; 1
    198c:	e0 32       	cpi	r30, 0x20	; 32
    198e:	f1 05       	cpc	r31, r1
    1990:	49 f0       	breq	.+18     	; 0x19a4 <__mulsf3+0x12a>
    1992:	66 0c       	add	r6, r6
    1994:	77 1c       	adc	r7, r7
    1996:	88 1c       	adc	r8, r8
    1998:	99 1c       	adc	r9, r9
    199a:	56 94       	lsr	r5
    199c:	47 94       	ror	r4
    199e:	37 94       	ror	r3
    19a0:	27 94       	ror	r2
    19a2:	c3 cf       	rjmp	.-122    	; 0x192a <__mulsf3+0xb0>
    19a4:	fa 85       	ldd	r31, Y+10	; 0x0a
    19a6:	ea 89       	ldd	r30, Y+18	; 0x12
    19a8:	2b 89       	ldd	r18, Y+19	; 0x13
    19aa:	3c 89       	ldd	r19, Y+20	; 0x14
    19ac:	8b 85       	ldd	r24, Y+11	; 0x0b
    19ae:	9c 85       	ldd	r25, Y+12	; 0x0c
    19b0:	28 0f       	add	r18, r24
    19b2:	39 1f       	adc	r19, r25
    19b4:	2e 5f       	subi	r18, 0xFE	; 254
    19b6:	3f 4f       	sbci	r19, 0xFF	; 255
    19b8:	17 c0       	rjmp	.+46     	; 0x19e8 <__mulsf3+0x16e>
    19ba:	ca 01       	movw	r24, r20
    19bc:	81 70       	andi	r24, 0x01	; 1
    19be:	90 70       	andi	r25, 0x00	; 0
    19c0:	89 2b       	or	r24, r25
    19c2:	61 f0       	breq	.+24     	; 0x19dc <__mulsf3+0x162>
    19c4:	16 95       	lsr	r17
    19c6:	07 95       	ror	r16
    19c8:	f7 94       	ror	r15
    19ca:	e7 94       	ror	r14
    19cc:	80 e0       	ldi	r24, 0x00	; 0
    19ce:	90 e0       	ldi	r25, 0x00	; 0
    19d0:	a0 e0       	ldi	r26, 0x00	; 0
    19d2:	b0 e8       	ldi	r27, 0x80	; 128
    19d4:	e8 2a       	or	r14, r24
    19d6:	f9 2a       	or	r15, r25
    19d8:	0a 2b       	or	r16, r26
    19da:	1b 2b       	or	r17, r27
    19dc:	76 95       	lsr	r23
    19de:	67 95       	ror	r22
    19e0:	57 95       	ror	r21
    19e2:	47 95       	ror	r20
    19e4:	2f 5f       	subi	r18, 0xFF	; 255
    19e6:	3f 4f       	sbci	r19, 0xFF	; 255
    19e8:	77 fd       	sbrc	r23, 7
    19ea:	e7 cf       	rjmp	.-50     	; 0x19ba <__mulsf3+0x140>
    19ec:	0c c0       	rjmp	.+24     	; 0x1a06 <__mulsf3+0x18c>
    19ee:	44 0f       	add	r20, r20
    19f0:	55 1f       	adc	r21, r21
    19f2:	66 1f       	adc	r22, r22
    19f4:	77 1f       	adc	r23, r23
    19f6:	17 fd       	sbrc	r17, 7
    19f8:	41 60       	ori	r20, 0x01	; 1
    19fa:	ee 0c       	add	r14, r14
    19fc:	ff 1c       	adc	r15, r15
    19fe:	00 1f       	adc	r16, r16
    1a00:	11 1f       	adc	r17, r17
    1a02:	21 50       	subi	r18, 0x01	; 1
    1a04:	30 40       	sbci	r19, 0x00	; 0
    1a06:	40 30       	cpi	r20, 0x00	; 0
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	59 07       	cpc	r21, r25
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	69 07       	cpc	r22, r25
    1a10:	90 e4       	ldi	r25, 0x40	; 64
    1a12:	79 07       	cpc	r23, r25
    1a14:	60 f3       	brcs	.-40     	; 0x19ee <__mulsf3+0x174>
    1a16:	2b 8f       	std	Y+27, r18	; 0x1b
    1a18:	3c 8f       	std	Y+28, r19	; 0x1c
    1a1a:	db 01       	movw	r26, r22
    1a1c:	ca 01       	movw	r24, r20
    1a1e:	8f 77       	andi	r24, 0x7F	; 127
    1a20:	90 70       	andi	r25, 0x00	; 0
    1a22:	a0 70       	andi	r26, 0x00	; 0
    1a24:	b0 70       	andi	r27, 0x00	; 0
    1a26:	80 34       	cpi	r24, 0x40	; 64
    1a28:	91 05       	cpc	r25, r1
    1a2a:	a1 05       	cpc	r26, r1
    1a2c:	b1 05       	cpc	r27, r1
    1a2e:	61 f4       	brne	.+24     	; 0x1a48 <__mulsf3+0x1ce>
    1a30:	47 fd       	sbrc	r20, 7
    1a32:	0a c0       	rjmp	.+20     	; 0x1a48 <__mulsf3+0x1ce>
    1a34:	e1 14       	cp	r14, r1
    1a36:	f1 04       	cpc	r15, r1
    1a38:	01 05       	cpc	r16, r1
    1a3a:	11 05       	cpc	r17, r1
    1a3c:	29 f0       	breq	.+10     	; 0x1a48 <__mulsf3+0x1ce>
    1a3e:	40 5c       	subi	r20, 0xC0	; 192
    1a40:	5f 4f       	sbci	r21, 0xFF	; 255
    1a42:	6f 4f       	sbci	r22, 0xFF	; 255
    1a44:	7f 4f       	sbci	r23, 0xFF	; 255
    1a46:	40 78       	andi	r20, 0x80	; 128
    1a48:	1a 8e       	std	Y+26, r1	; 0x1a
    1a4a:	fe 17       	cp	r31, r30
    1a4c:	11 f0       	breq	.+4      	; 0x1a52 <__mulsf3+0x1d8>
    1a4e:	81 e0       	ldi	r24, 0x01	; 1
    1a50:	8a 8f       	std	Y+26, r24	; 0x1a
    1a52:	4d 8f       	std	Y+29, r20	; 0x1d
    1a54:	5e 8f       	std	Y+30, r21	; 0x1e
    1a56:	6f 8f       	std	Y+31, r22	; 0x1f
    1a58:	78 a3       	std	Y+32, r23	; 0x20
    1a5a:	83 e0       	ldi	r24, 0x03	; 3
    1a5c:	89 8f       	std	Y+25, r24	; 0x19
    1a5e:	ce 01       	movw	r24, r28
    1a60:	49 96       	adiw	r24, 0x19	; 25
    1a62:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__pack_f>
    1a66:	a0 96       	adiw	r28, 0x20	; 32
    1a68:	e2 e1       	ldi	r30, 0x12	; 18
    1a6a:	0c 94 9c 29 	jmp	0x5338	; 0x5338 <__epilogue_restores__>

00001a6e <__gtsf2>:
    1a6e:	a8 e1       	ldi	r26, 0x18	; 24
    1a70:	b0 e0       	ldi	r27, 0x00	; 0
    1a72:	ed e3       	ldi	r30, 0x3D	; 61
    1a74:	fd e0       	ldi	r31, 0x0D	; 13
    1a76:	0c 94 8c 29 	jmp	0x5318	; 0x5318 <__prologue_saves__+0x18>
    1a7a:	69 83       	std	Y+1, r22	; 0x01
    1a7c:	7a 83       	std	Y+2, r23	; 0x02
    1a7e:	8b 83       	std	Y+3, r24	; 0x03
    1a80:	9c 83       	std	Y+4, r25	; 0x04
    1a82:	2d 83       	std	Y+5, r18	; 0x05
    1a84:	3e 83       	std	Y+6, r19	; 0x06
    1a86:	4f 83       	std	Y+7, r20	; 0x07
    1a88:	58 87       	std	Y+8, r21	; 0x08
    1a8a:	89 e0       	ldi	r24, 0x09	; 9
    1a8c:	e8 2e       	mov	r14, r24
    1a8e:	f1 2c       	mov	r15, r1
    1a90:	ec 0e       	add	r14, r28
    1a92:	fd 1e       	adc	r15, r29
    1a94:	ce 01       	movw	r24, r28
    1a96:	01 96       	adiw	r24, 0x01	; 1
    1a98:	b7 01       	movw	r22, r14
    1a9a:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1a9e:	8e 01       	movw	r16, r28
    1aa0:	0f 5e       	subi	r16, 0xEF	; 239
    1aa2:	1f 4f       	sbci	r17, 0xFF	; 255
    1aa4:	ce 01       	movw	r24, r28
    1aa6:	05 96       	adiw	r24, 0x05	; 5
    1aa8:	b8 01       	movw	r22, r16
    1aaa:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1aae:	89 85       	ldd	r24, Y+9	; 0x09
    1ab0:	82 30       	cpi	r24, 0x02	; 2
    1ab2:	40 f0       	brcs	.+16     	; 0x1ac4 <__gtsf2+0x56>
    1ab4:	89 89       	ldd	r24, Y+17	; 0x11
    1ab6:	82 30       	cpi	r24, 0x02	; 2
    1ab8:	28 f0       	brcs	.+10     	; 0x1ac4 <__gtsf2+0x56>
    1aba:	c7 01       	movw	r24, r14
    1abc:	b8 01       	movw	r22, r16
    1abe:	0e 94 9a 10 	call	0x2134	; 0x2134 <__fpcmp_parts_f>
    1ac2:	01 c0       	rjmp	.+2      	; 0x1ac6 <__gtsf2+0x58>
    1ac4:	8f ef       	ldi	r24, 0xFF	; 255
    1ac6:	68 96       	adiw	r28, 0x18	; 24
    1ac8:	e6 e0       	ldi	r30, 0x06	; 6
    1aca:	0c 94 a8 29 	jmp	0x5350	; 0x5350 <__epilogue_restores__+0x18>

00001ace <__gesf2>:
    1ace:	a8 e1       	ldi	r26, 0x18	; 24
    1ad0:	b0 e0       	ldi	r27, 0x00	; 0
    1ad2:	ed e6       	ldi	r30, 0x6D	; 109
    1ad4:	fd e0       	ldi	r31, 0x0D	; 13
    1ad6:	0c 94 8c 29 	jmp	0x5318	; 0x5318 <__prologue_saves__+0x18>
    1ada:	69 83       	std	Y+1, r22	; 0x01
    1adc:	7a 83       	std	Y+2, r23	; 0x02
    1ade:	8b 83       	std	Y+3, r24	; 0x03
    1ae0:	9c 83       	std	Y+4, r25	; 0x04
    1ae2:	2d 83       	std	Y+5, r18	; 0x05
    1ae4:	3e 83       	std	Y+6, r19	; 0x06
    1ae6:	4f 83       	std	Y+7, r20	; 0x07
    1ae8:	58 87       	std	Y+8, r21	; 0x08
    1aea:	89 e0       	ldi	r24, 0x09	; 9
    1aec:	e8 2e       	mov	r14, r24
    1aee:	f1 2c       	mov	r15, r1
    1af0:	ec 0e       	add	r14, r28
    1af2:	fd 1e       	adc	r15, r29
    1af4:	ce 01       	movw	r24, r28
    1af6:	01 96       	adiw	r24, 0x01	; 1
    1af8:	b7 01       	movw	r22, r14
    1afa:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1afe:	8e 01       	movw	r16, r28
    1b00:	0f 5e       	subi	r16, 0xEF	; 239
    1b02:	1f 4f       	sbci	r17, 0xFF	; 255
    1b04:	ce 01       	movw	r24, r28
    1b06:	05 96       	adiw	r24, 0x05	; 5
    1b08:	b8 01       	movw	r22, r16
    1b0a:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1b0e:	89 85       	ldd	r24, Y+9	; 0x09
    1b10:	82 30       	cpi	r24, 0x02	; 2
    1b12:	40 f0       	brcs	.+16     	; 0x1b24 <__gesf2+0x56>
    1b14:	89 89       	ldd	r24, Y+17	; 0x11
    1b16:	82 30       	cpi	r24, 0x02	; 2
    1b18:	28 f0       	brcs	.+10     	; 0x1b24 <__gesf2+0x56>
    1b1a:	c7 01       	movw	r24, r14
    1b1c:	b8 01       	movw	r22, r16
    1b1e:	0e 94 9a 10 	call	0x2134	; 0x2134 <__fpcmp_parts_f>
    1b22:	01 c0       	rjmp	.+2      	; 0x1b26 <__gesf2+0x58>
    1b24:	8f ef       	ldi	r24, 0xFF	; 255
    1b26:	68 96       	adiw	r28, 0x18	; 24
    1b28:	e6 e0       	ldi	r30, 0x06	; 6
    1b2a:	0c 94 a8 29 	jmp	0x5350	; 0x5350 <__epilogue_restores__+0x18>

00001b2e <__ltsf2>:
    1b2e:	a8 e1       	ldi	r26, 0x18	; 24
    1b30:	b0 e0       	ldi	r27, 0x00	; 0
    1b32:	ed e9       	ldi	r30, 0x9D	; 157
    1b34:	fd e0       	ldi	r31, 0x0D	; 13
    1b36:	0c 94 8c 29 	jmp	0x5318	; 0x5318 <__prologue_saves__+0x18>
    1b3a:	69 83       	std	Y+1, r22	; 0x01
    1b3c:	7a 83       	std	Y+2, r23	; 0x02
    1b3e:	8b 83       	std	Y+3, r24	; 0x03
    1b40:	9c 83       	std	Y+4, r25	; 0x04
    1b42:	2d 83       	std	Y+5, r18	; 0x05
    1b44:	3e 83       	std	Y+6, r19	; 0x06
    1b46:	4f 83       	std	Y+7, r20	; 0x07
    1b48:	58 87       	std	Y+8, r21	; 0x08
    1b4a:	89 e0       	ldi	r24, 0x09	; 9
    1b4c:	e8 2e       	mov	r14, r24
    1b4e:	f1 2c       	mov	r15, r1
    1b50:	ec 0e       	add	r14, r28
    1b52:	fd 1e       	adc	r15, r29
    1b54:	ce 01       	movw	r24, r28
    1b56:	01 96       	adiw	r24, 0x01	; 1
    1b58:	b7 01       	movw	r22, r14
    1b5a:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1b5e:	8e 01       	movw	r16, r28
    1b60:	0f 5e       	subi	r16, 0xEF	; 239
    1b62:	1f 4f       	sbci	r17, 0xFF	; 255
    1b64:	ce 01       	movw	r24, r28
    1b66:	05 96       	adiw	r24, 0x05	; 5
    1b68:	b8 01       	movw	r22, r16
    1b6a:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1b6e:	89 85       	ldd	r24, Y+9	; 0x09
    1b70:	82 30       	cpi	r24, 0x02	; 2
    1b72:	40 f0       	brcs	.+16     	; 0x1b84 <__ltsf2+0x56>
    1b74:	89 89       	ldd	r24, Y+17	; 0x11
    1b76:	82 30       	cpi	r24, 0x02	; 2
    1b78:	28 f0       	brcs	.+10     	; 0x1b84 <__ltsf2+0x56>
    1b7a:	c7 01       	movw	r24, r14
    1b7c:	b8 01       	movw	r22, r16
    1b7e:	0e 94 9a 10 	call	0x2134	; 0x2134 <__fpcmp_parts_f>
    1b82:	01 c0       	rjmp	.+2      	; 0x1b86 <__ltsf2+0x58>
    1b84:	81 e0       	ldi	r24, 0x01	; 1
    1b86:	68 96       	adiw	r28, 0x18	; 24
    1b88:	e6 e0       	ldi	r30, 0x06	; 6
    1b8a:	0c 94 a8 29 	jmp	0x5350	; 0x5350 <__epilogue_restores__+0x18>

00001b8e <__floatsisf>:
    1b8e:	a8 e0       	ldi	r26, 0x08	; 8
    1b90:	b0 e0       	ldi	r27, 0x00	; 0
    1b92:	ed ec       	ldi	r30, 0xCD	; 205
    1b94:	fd e0       	ldi	r31, 0x0D	; 13
    1b96:	0c 94 89 29 	jmp	0x5312	; 0x5312 <__prologue_saves__+0x12>
    1b9a:	9b 01       	movw	r18, r22
    1b9c:	ac 01       	movw	r20, r24
    1b9e:	83 e0       	ldi	r24, 0x03	; 3
    1ba0:	89 83       	std	Y+1, r24	; 0x01
    1ba2:	da 01       	movw	r26, r20
    1ba4:	c9 01       	movw	r24, r18
    1ba6:	88 27       	eor	r24, r24
    1ba8:	b7 fd       	sbrc	r27, 7
    1baa:	83 95       	inc	r24
    1bac:	99 27       	eor	r25, r25
    1bae:	aa 27       	eor	r26, r26
    1bb0:	bb 27       	eor	r27, r27
    1bb2:	b8 2e       	mov	r11, r24
    1bb4:	21 15       	cp	r18, r1
    1bb6:	31 05       	cpc	r19, r1
    1bb8:	41 05       	cpc	r20, r1
    1bba:	51 05       	cpc	r21, r1
    1bbc:	19 f4       	brne	.+6      	; 0x1bc4 <__floatsisf+0x36>
    1bbe:	82 e0       	ldi	r24, 0x02	; 2
    1bc0:	89 83       	std	Y+1, r24	; 0x01
    1bc2:	3a c0       	rjmp	.+116    	; 0x1c38 <__floatsisf+0xaa>
    1bc4:	88 23       	and	r24, r24
    1bc6:	a9 f0       	breq	.+42     	; 0x1bf2 <__floatsisf+0x64>
    1bc8:	20 30       	cpi	r18, 0x00	; 0
    1bca:	80 e0       	ldi	r24, 0x00	; 0
    1bcc:	38 07       	cpc	r19, r24
    1bce:	80 e0       	ldi	r24, 0x00	; 0
    1bd0:	48 07       	cpc	r20, r24
    1bd2:	80 e8       	ldi	r24, 0x80	; 128
    1bd4:	58 07       	cpc	r21, r24
    1bd6:	29 f4       	brne	.+10     	; 0x1be2 <__floatsisf+0x54>
    1bd8:	60 e0       	ldi	r22, 0x00	; 0
    1bda:	70 e0       	ldi	r23, 0x00	; 0
    1bdc:	80 e0       	ldi	r24, 0x00	; 0
    1bde:	9f ec       	ldi	r25, 0xCF	; 207
    1be0:	30 c0       	rjmp	.+96     	; 0x1c42 <__floatsisf+0xb4>
    1be2:	ee 24       	eor	r14, r14
    1be4:	ff 24       	eor	r15, r15
    1be6:	87 01       	movw	r16, r14
    1be8:	e2 1a       	sub	r14, r18
    1bea:	f3 0a       	sbc	r15, r19
    1bec:	04 0b       	sbc	r16, r20
    1bee:	15 0b       	sbc	r17, r21
    1bf0:	02 c0       	rjmp	.+4      	; 0x1bf6 <__floatsisf+0x68>
    1bf2:	79 01       	movw	r14, r18
    1bf4:	8a 01       	movw	r16, r20
    1bf6:	8e e1       	ldi	r24, 0x1E	; 30
    1bf8:	c8 2e       	mov	r12, r24
    1bfa:	d1 2c       	mov	r13, r1
    1bfc:	dc 82       	std	Y+4, r13	; 0x04
    1bfe:	cb 82       	std	Y+3, r12	; 0x03
    1c00:	ed 82       	std	Y+5, r14	; 0x05
    1c02:	fe 82       	std	Y+6, r15	; 0x06
    1c04:	0f 83       	std	Y+7, r16	; 0x07
    1c06:	18 87       	std	Y+8, r17	; 0x08
    1c08:	c8 01       	movw	r24, r16
    1c0a:	b7 01       	movw	r22, r14
    1c0c:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__clzsi2>
    1c10:	01 97       	sbiw	r24, 0x01	; 1
    1c12:	18 16       	cp	r1, r24
    1c14:	19 06       	cpc	r1, r25
    1c16:	84 f4       	brge	.+32     	; 0x1c38 <__floatsisf+0xaa>
    1c18:	08 2e       	mov	r0, r24
    1c1a:	04 c0       	rjmp	.+8      	; 0x1c24 <__floatsisf+0x96>
    1c1c:	ee 0c       	add	r14, r14
    1c1e:	ff 1c       	adc	r15, r15
    1c20:	00 1f       	adc	r16, r16
    1c22:	11 1f       	adc	r17, r17
    1c24:	0a 94       	dec	r0
    1c26:	d2 f7       	brpl	.-12     	; 0x1c1c <__floatsisf+0x8e>
    1c28:	ed 82       	std	Y+5, r14	; 0x05
    1c2a:	fe 82       	std	Y+6, r15	; 0x06
    1c2c:	0f 83       	std	Y+7, r16	; 0x07
    1c2e:	18 87       	std	Y+8, r17	; 0x08
    1c30:	c8 1a       	sub	r12, r24
    1c32:	d9 0a       	sbc	r13, r25
    1c34:	dc 82       	std	Y+4, r13	; 0x04
    1c36:	cb 82       	std	Y+3, r12	; 0x03
    1c38:	ba 82       	std	Y+2, r11	; 0x02
    1c3a:	ce 01       	movw	r24, r28
    1c3c:	01 96       	adiw	r24, 0x01	; 1
    1c3e:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__pack_f>
    1c42:	28 96       	adiw	r28, 0x08	; 8
    1c44:	e9 e0       	ldi	r30, 0x09	; 9
    1c46:	0c 94 a5 29 	jmp	0x534a	; 0x534a <__epilogue_restores__+0x12>

00001c4a <__fixsfsi>:
    1c4a:	ac e0       	ldi	r26, 0x0C	; 12
    1c4c:	b0 e0       	ldi	r27, 0x00	; 0
    1c4e:	eb e2       	ldi	r30, 0x2B	; 43
    1c50:	fe e0       	ldi	r31, 0x0E	; 14
    1c52:	0c 94 90 29 	jmp	0x5320	; 0x5320 <__prologue_saves__+0x20>
    1c56:	69 83       	std	Y+1, r22	; 0x01
    1c58:	7a 83       	std	Y+2, r23	; 0x02
    1c5a:	8b 83       	std	Y+3, r24	; 0x03
    1c5c:	9c 83       	std	Y+4, r25	; 0x04
    1c5e:	ce 01       	movw	r24, r28
    1c60:	01 96       	adiw	r24, 0x01	; 1
    1c62:	be 01       	movw	r22, r28
    1c64:	6b 5f       	subi	r22, 0xFB	; 251
    1c66:	7f 4f       	sbci	r23, 0xFF	; 255
    1c68:	0e 94 22 10 	call	0x2044	; 0x2044 <__unpack_f>
    1c6c:	8d 81       	ldd	r24, Y+5	; 0x05
    1c6e:	82 30       	cpi	r24, 0x02	; 2
    1c70:	61 f1       	breq	.+88     	; 0x1cca <__fixsfsi+0x80>
    1c72:	82 30       	cpi	r24, 0x02	; 2
    1c74:	50 f1       	brcs	.+84     	; 0x1cca <__fixsfsi+0x80>
    1c76:	84 30       	cpi	r24, 0x04	; 4
    1c78:	21 f4       	brne	.+8      	; 0x1c82 <__fixsfsi+0x38>
    1c7a:	8e 81       	ldd	r24, Y+6	; 0x06
    1c7c:	88 23       	and	r24, r24
    1c7e:	51 f1       	breq	.+84     	; 0x1cd4 <__fixsfsi+0x8a>
    1c80:	2e c0       	rjmp	.+92     	; 0x1cde <__fixsfsi+0x94>
    1c82:	2f 81       	ldd	r18, Y+7	; 0x07
    1c84:	38 85       	ldd	r19, Y+8	; 0x08
    1c86:	37 fd       	sbrc	r19, 7
    1c88:	20 c0       	rjmp	.+64     	; 0x1cca <__fixsfsi+0x80>
    1c8a:	6e 81       	ldd	r22, Y+6	; 0x06
    1c8c:	2f 31       	cpi	r18, 0x1F	; 31
    1c8e:	31 05       	cpc	r19, r1
    1c90:	1c f0       	brlt	.+6      	; 0x1c98 <__fixsfsi+0x4e>
    1c92:	66 23       	and	r22, r22
    1c94:	f9 f0       	breq	.+62     	; 0x1cd4 <__fixsfsi+0x8a>
    1c96:	23 c0       	rjmp	.+70     	; 0x1cde <__fixsfsi+0x94>
    1c98:	8e e1       	ldi	r24, 0x1E	; 30
    1c9a:	90 e0       	ldi	r25, 0x00	; 0
    1c9c:	82 1b       	sub	r24, r18
    1c9e:	93 0b       	sbc	r25, r19
    1ca0:	29 85       	ldd	r18, Y+9	; 0x09
    1ca2:	3a 85       	ldd	r19, Y+10	; 0x0a
    1ca4:	4b 85       	ldd	r20, Y+11	; 0x0b
    1ca6:	5c 85       	ldd	r21, Y+12	; 0x0c
    1ca8:	04 c0       	rjmp	.+8      	; 0x1cb2 <__fixsfsi+0x68>
    1caa:	56 95       	lsr	r21
    1cac:	47 95       	ror	r20
    1cae:	37 95       	ror	r19
    1cb0:	27 95       	ror	r18
    1cb2:	8a 95       	dec	r24
    1cb4:	d2 f7       	brpl	.-12     	; 0x1caa <__fixsfsi+0x60>
    1cb6:	66 23       	and	r22, r22
    1cb8:	b1 f0       	breq	.+44     	; 0x1ce6 <__fixsfsi+0x9c>
    1cba:	50 95       	com	r21
    1cbc:	40 95       	com	r20
    1cbe:	30 95       	com	r19
    1cc0:	21 95       	neg	r18
    1cc2:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc4:	4f 4f       	sbci	r20, 0xFF	; 255
    1cc6:	5f 4f       	sbci	r21, 0xFF	; 255
    1cc8:	0e c0       	rjmp	.+28     	; 0x1ce6 <__fixsfsi+0x9c>
    1cca:	20 e0       	ldi	r18, 0x00	; 0
    1ccc:	30 e0       	ldi	r19, 0x00	; 0
    1cce:	40 e0       	ldi	r20, 0x00	; 0
    1cd0:	50 e0       	ldi	r21, 0x00	; 0
    1cd2:	09 c0       	rjmp	.+18     	; 0x1ce6 <__fixsfsi+0x9c>
    1cd4:	2f ef       	ldi	r18, 0xFF	; 255
    1cd6:	3f ef       	ldi	r19, 0xFF	; 255
    1cd8:	4f ef       	ldi	r20, 0xFF	; 255
    1cda:	5f e7       	ldi	r21, 0x7F	; 127
    1cdc:	04 c0       	rjmp	.+8      	; 0x1ce6 <__fixsfsi+0x9c>
    1cde:	20 e0       	ldi	r18, 0x00	; 0
    1ce0:	30 e0       	ldi	r19, 0x00	; 0
    1ce2:	40 e0       	ldi	r20, 0x00	; 0
    1ce4:	50 e8       	ldi	r21, 0x80	; 128
    1ce6:	b9 01       	movw	r22, r18
    1ce8:	ca 01       	movw	r24, r20
    1cea:	2c 96       	adiw	r28, 0x0c	; 12
    1cec:	e2 e0       	ldi	r30, 0x02	; 2
    1cee:	0c 94 ac 29 	jmp	0x5358	; 0x5358 <__epilogue_restores__+0x20>

00001cf2 <__ashrdi3>:
    1cf2:	ef 92       	push	r14
    1cf4:	ff 92       	push	r15
    1cf6:	0f 93       	push	r16
    1cf8:	df 93       	push	r29
    1cfa:	cf 93       	push	r28
    1cfc:	cd b7       	in	r28, 0x3d	; 61
    1cfe:	de b7       	in	r29, 0x3e	; 62
    1d00:	60 97       	sbiw	r28, 0x10	; 16
    1d02:	0f b6       	in	r0, 0x3f	; 63
    1d04:	f8 94       	cli
    1d06:	de bf       	out	0x3e, r29	; 62
    1d08:	0f be       	out	0x3f, r0	; 63
    1d0a:	cd bf       	out	0x3d, r28	; 61
    1d0c:	a8 2f       	mov	r26, r24
    1d0e:	00 23       	and	r16, r16
    1d10:	09 f4       	brne	.+2      	; 0x1d14 <__ashrdi3+0x22>
    1d12:	67 c0       	rjmp	.+206    	; 0x1de2 <__ashrdi3+0xf0>
    1d14:	7e 01       	movw	r14, r28
    1d16:	08 94       	sec
    1d18:	e1 1c       	adc	r14, r1
    1d1a:	f1 1c       	adc	r15, r1
    1d1c:	88 e0       	ldi	r24, 0x08	; 8
    1d1e:	f7 01       	movw	r30, r14
    1d20:	11 92       	st	Z+, r1
    1d22:	8a 95       	dec	r24
    1d24:	e9 f7       	brne	.-6      	; 0x1d20 <__ashrdi3+0x2e>
    1d26:	29 83       	std	Y+1, r18	; 0x01
    1d28:	3a 83       	std	Y+2, r19	; 0x02
    1d2a:	4b 83       	std	Y+3, r20	; 0x03
    1d2c:	5c 83       	std	Y+4, r21	; 0x04
    1d2e:	6d 83       	std	Y+5, r22	; 0x05
    1d30:	7e 83       	std	Y+6, r23	; 0x06
    1d32:	af 83       	std	Y+7, r26	; 0x07
    1d34:	98 87       	std	Y+8, r25	; 0x08
    1d36:	80 e2       	ldi	r24, 0x20	; 32
    1d38:	80 1b       	sub	r24, r16
    1d3a:	4d 81       	ldd	r20, Y+5	; 0x05
    1d3c:	5e 81       	ldd	r21, Y+6	; 0x06
    1d3e:	6f 81       	ldd	r22, Y+7	; 0x07
    1d40:	78 85       	ldd	r23, Y+8	; 0x08
    1d42:	e8 2f       	mov	r30, r24
    1d44:	ff 27       	eor	r31, r31
    1d46:	e7 fd       	sbrc	r30, 7
    1d48:	f0 95       	com	r31
    1d4a:	18 16       	cp	r1, r24
    1d4c:	b4 f0       	brlt	.+44     	; 0x1d7a <__ashrdi3+0x88>
    1d4e:	db 01       	movw	r26, r22
    1d50:	ca 01       	movw	r24, r20
    1d52:	bb 0f       	add	r27, r27
    1d54:	88 0b       	sbc	r24, r24
    1d56:	98 2f       	mov	r25, r24
    1d58:	dc 01       	movw	r26, r24
    1d5a:	8d 87       	std	Y+13, r24	; 0x0d
    1d5c:	9e 87       	std	Y+14, r25	; 0x0e
    1d5e:	af 87       	std	Y+15, r26	; 0x0f
    1d60:	b8 8b       	std	Y+16, r27	; 0x10
    1d62:	88 27       	eor	r24, r24
    1d64:	99 27       	eor	r25, r25
    1d66:	8e 1b       	sub	r24, r30
    1d68:	9f 0b       	sbc	r25, r31
    1d6a:	04 c0       	rjmp	.+8      	; 0x1d74 <__ashrdi3+0x82>
    1d6c:	75 95       	asr	r23
    1d6e:	67 95       	ror	r22
    1d70:	57 95       	ror	r21
    1d72:	47 95       	ror	r20
    1d74:	8a 95       	dec	r24
    1d76:	d2 f7       	brpl	.-12     	; 0x1d6c <__ashrdi3+0x7a>
    1d78:	28 c0       	rjmp	.+80     	; 0x1dca <__ashrdi3+0xd8>
    1d7a:	20 2f       	mov	r18, r16
    1d7c:	33 27       	eor	r19, r19
    1d7e:	27 fd       	sbrc	r18, 7
    1d80:	30 95       	com	r19
    1d82:	db 01       	movw	r26, r22
    1d84:	ca 01       	movw	r24, r20
    1d86:	02 2e       	mov	r0, r18
    1d88:	04 c0       	rjmp	.+8      	; 0x1d92 <__ashrdi3+0xa0>
    1d8a:	b5 95       	asr	r27
    1d8c:	a7 95       	ror	r26
    1d8e:	97 95       	ror	r25
    1d90:	87 95       	ror	r24
    1d92:	0a 94       	dec	r0
    1d94:	d2 f7       	brpl	.-12     	; 0x1d8a <__ashrdi3+0x98>
    1d96:	8d 87       	std	Y+13, r24	; 0x0d
    1d98:	9e 87       	std	Y+14, r25	; 0x0e
    1d9a:	af 87       	std	Y+15, r26	; 0x0f
    1d9c:	b8 8b       	std	Y+16, r27	; 0x10
    1d9e:	04 c0       	rjmp	.+8      	; 0x1da8 <__ashrdi3+0xb6>
    1da0:	44 0f       	add	r20, r20
    1da2:	55 1f       	adc	r21, r21
    1da4:	66 1f       	adc	r22, r22
    1da6:	77 1f       	adc	r23, r23
    1da8:	ea 95       	dec	r30
    1daa:	d2 f7       	brpl	.-12     	; 0x1da0 <__ashrdi3+0xae>
    1dac:	89 81       	ldd	r24, Y+1	; 0x01
    1dae:	9a 81       	ldd	r25, Y+2	; 0x02
    1db0:	ab 81       	ldd	r26, Y+3	; 0x03
    1db2:	bc 81       	ldd	r27, Y+4	; 0x04
    1db4:	04 c0       	rjmp	.+8      	; 0x1dbe <__ashrdi3+0xcc>
    1db6:	b6 95       	lsr	r27
    1db8:	a7 95       	ror	r26
    1dba:	97 95       	ror	r25
    1dbc:	87 95       	ror	r24
    1dbe:	2a 95       	dec	r18
    1dc0:	d2 f7       	brpl	.-12     	; 0x1db6 <__ashrdi3+0xc4>
    1dc2:	48 2b       	or	r20, r24
    1dc4:	59 2b       	or	r21, r25
    1dc6:	6a 2b       	or	r22, r26
    1dc8:	7b 2b       	or	r23, r27
    1dca:	49 87       	std	Y+9, r20	; 0x09
    1dcc:	5a 87       	std	Y+10, r21	; 0x0a
    1dce:	6b 87       	std	Y+11, r22	; 0x0b
    1dd0:	7c 87       	std	Y+12, r23	; 0x0c
    1dd2:	29 85       	ldd	r18, Y+9	; 0x09
    1dd4:	3a 85       	ldd	r19, Y+10	; 0x0a
    1dd6:	4b 85       	ldd	r20, Y+11	; 0x0b
    1dd8:	5c 85       	ldd	r21, Y+12	; 0x0c
    1dda:	6d 85       	ldd	r22, Y+13	; 0x0d
    1ddc:	7e 85       	ldd	r23, Y+14	; 0x0e
    1dde:	af 85       	ldd	r26, Y+15	; 0x0f
    1de0:	98 89       	ldd	r25, Y+16	; 0x10
    1de2:	8a 2f       	mov	r24, r26
    1de4:	60 96       	adiw	r28, 0x10	; 16
    1de6:	0f b6       	in	r0, 0x3f	; 63
    1de8:	f8 94       	cli
    1dea:	de bf       	out	0x3e, r29	; 62
    1dec:	0f be       	out	0x3f, r0	; 63
    1dee:	cd bf       	out	0x3d, r28	; 61
    1df0:	cf 91       	pop	r28
    1df2:	df 91       	pop	r29
    1df4:	0f 91       	pop	r16
    1df6:	ff 90       	pop	r15
    1df8:	ef 90       	pop	r14
    1dfa:	08 95       	ret

00001dfc <__clzsi2>:
    1dfc:	ef 92       	push	r14
    1dfe:	ff 92       	push	r15
    1e00:	0f 93       	push	r16
    1e02:	1f 93       	push	r17
    1e04:	7b 01       	movw	r14, r22
    1e06:	8c 01       	movw	r16, r24
    1e08:	80 e0       	ldi	r24, 0x00	; 0
    1e0a:	e8 16       	cp	r14, r24
    1e0c:	80 e0       	ldi	r24, 0x00	; 0
    1e0e:	f8 06       	cpc	r15, r24
    1e10:	81 e0       	ldi	r24, 0x01	; 1
    1e12:	08 07       	cpc	r16, r24
    1e14:	80 e0       	ldi	r24, 0x00	; 0
    1e16:	18 07       	cpc	r17, r24
    1e18:	88 f4       	brcc	.+34     	; 0x1e3c <__clzsi2+0x40>
    1e1a:	8f ef       	ldi	r24, 0xFF	; 255
    1e1c:	e8 16       	cp	r14, r24
    1e1e:	f1 04       	cpc	r15, r1
    1e20:	01 05       	cpc	r16, r1
    1e22:	11 05       	cpc	r17, r1
    1e24:	31 f0       	breq	.+12     	; 0x1e32 <__clzsi2+0x36>
    1e26:	28 f0       	brcs	.+10     	; 0x1e32 <__clzsi2+0x36>
    1e28:	88 e0       	ldi	r24, 0x08	; 8
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	a0 e0       	ldi	r26, 0x00	; 0
    1e2e:	b0 e0       	ldi	r27, 0x00	; 0
    1e30:	17 c0       	rjmp	.+46     	; 0x1e60 <__clzsi2+0x64>
    1e32:	80 e0       	ldi	r24, 0x00	; 0
    1e34:	90 e0       	ldi	r25, 0x00	; 0
    1e36:	a0 e0       	ldi	r26, 0x00	; 0
    1e38:	b0 e0       	ldi	r27, 0x00	; 0
    1e3a:	12 c0       	rjmp	.+36     	; 0x1e60 <__clzsi2+0x64>
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	e8 16       	cp	r14, r24
    1e40:	80 e0       	ldi	r24, 0x00	; 0
    1e42:	f8 06       	cpc	r15, r24
    1e44:	80 e0       	ldi	r24, 0x00	; 0
    1e46:	08 07       	cpc	r16, r24
    1e48:	81 e0       	ldi	r24, 0x01	; 1
    1e4a:	18 07       	cpc	r17, r24
    1e4c:	28 f0       	brcs	.+10     	; 0x1e58 <__clzsi2+0x5c>
    1e4e:	88 e1       	ldi	r24, 0x18	; 24
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	a0 e0       	ldi	r26, 0x00	; 0
    1e54:	b0 e0       	ldi	r27, 0x00	; 0
    1e56:	04 c0       	rjmp	.+8      	; 0x1e60 <__clzsi2+0x64>
    1e58:	80 e1       	ldi	r24, 0x10	; 16
    1e5a:	90 e0       	ldi	r25, 0x00	; 0
    1e5c:	a0 e0       	ldi	r26, 0x00	; 0
    1e5e:	b0 e0       	ldi	r27, 0x00	; 0
    1e60:	20 e2       	ldi	r18, 0x20	; 32
    1e62:	30 e0       	ldi	r19, 0x00	; 0
    1e64:	40 e0       	ldi	r20, 0x00	; 0
    1e66:	50 e0       	ldi	r21, 0x00	; 0
    1e68:	28 1b       	sub	r18, r24
    1e6a:	39 0b       	sbc	r19, r25
    1e6c:	4a 0b       	sbc	r20, r26
    1e6e:	5b 0b       	sbc	r21, r27
    1e70:	04 c0       	rjmp	.+8      	; 0x1e7a <__clzsi2+0x7e>
    1e72:	16 95       	lsr	r17
    1e74:	07 95       	ror	r16
    1e76:	f7 94       	ror	r15
    1e78:	e7 94       	ror	r14
    1e7a:	8a 95       	dec	r24
    1e7c:	d2 f7       	brpl	.-12     	; 0x1e72 <__clzsi2+0x76>
    1e7e:	f7 01       	movw	r30, r14
    1e80:	ea 57       	subi	r30, 0x7A	; 122
    1e82:	ff 4f       	sbci	r31, 0xFF	; 255
    1e84:	80 81       	ld	r24, Z
    1e86:	28 1b       	sub	r18, r24
    1e88:	31 09       	sbc	r19, r1
    1e8a:	41 09       	sbc	r20, r1
    1e8c:	51 09       	sbc	r21, r1
    1e8e:	c9 01       	movw	r24, r18
    1e90:	1f 91       	pop	r17
    1e92:	0f 91       	pop	r16
    1e94:	ff 90       	pop	r15
    1e96:	ef 90       	pop	r14
    1e98:	08 95       	ret

00001e9a <__pack_f>:
    1e9a:	df 92       	push	r13
    1e9c:	ef 92       	push	r14
    1e9e:	ff 92       	push	r15
    1ea0:	0f 93       	push	r16
    1ea2:	1f 93       	push	r17
    1ea4:	fc 01       	movw	r30, r24
    1ea6:	e4 80       	ldd	r14, Z+4	; 0x04
    1ea8:	f5 80       	ldd	r15, Z+5	; 0x05
    1eaa:	06 81       	ldd	r16, Z+6	; 0x06
    1eac:	17 81       	ldd	r17, Z+7	; 0x07
    1eae:	d1 80       	ldd	r13, Z+1	; 0x01
    1eb0:	80 81       	ld	r24, Z
    1eb2:	82 30       	cpi	r24, 0x02	; 2
    1eb4:	48 f4       	brcc	.+18     	; 0x1ec8 <__pack_f+0x2e>
    1eb6:	80 e0       	ldi	r24, 0x00	; 0
    1eb8:	90 e0       	ldi	r25, 0x00	; 0
    1eba:	a0 e1       	ldi	r26, 0x10	; 16
    1ebc:	b0 e0       	ldi	r27, 0x00	; 0
    1ebe:	e8 2a       	or	r14, r24
    1ec0:	f9 2a       	or	r15, r25
    1ec2:	0a 2b       	or	r16, r26
    1ec4:	1b 2b       	or	r17, r27
    1ec6:	a5 c0       	rjmp	.+330    	; 0x2012 <__pack_f+0x178>
    1ec8:	84 30       	cpi	r24, 0x04	; 4
    1eca:	09 f4       	brne	.+2      	; 0x1ece <__pack_f+0x34>
    1ecc:	9f c0       	rjmp	.+318    	; 0x200c <__pack_f+0x172>
    1ece:	82 30       	cpi	r24, 0x02	; 2
    1ed0:	21 f4       	brne	.+8      	; 0x1eda <__pack_f+0x40>
    1ed2:	ee 24       	eor	r14, r14
    1ed4:	ff 24       	eor	r15, r15
    1ed6:	87 01       	movw	r16, r14
    1ed8:	05 c0       	rjmp	.+10     	; 0x1ee4 <__pack_f+0x4a>
    1eda:	e1 14       	cp	r14, r1
    1edc:	f1 04       	cpc	r15, r1
    1ede:	01 05       	cpc	r16, r1
    1ee0:	11 05       	cpc	r17, r1
    1ee2:	19 f4       	brne	.+6      	; 0x1eea <__pack_f+0x50>
    1ee4:	e0 e0       	ldi	r30, 0x00	; 0
    1ee6:	f0 e0       	ldi	r31, 0x00	; 0
    1ee8:	96 c0       	rjmp	.+300    	; 0x2016 <__pack_f+0x17c>
    1eea:	62 81       	ldd	r22, Z+2	; 0x02
    1eec:	73 81       	ldd	r23, Z+3	; 0x03
    1eee:	9f ef       	ldi	r25, 0xFF	; 255
    1ef0:	62 38       	cpi	r22, 0x82	; 130
    1ef2:	79 07       	cpc	r23, r25
    1ef4:	0c f0       	brlt	.+2      	; 0x1ef8 <__pack_f+0x5e>
    1ef6:	5b c0       	rjmp	.+182    	; 0x1fae <__pack_f+0x114>
    1ef8:	22 e8       	ldi	r18, 0x82	; 130
    1efa:	3f ef       	ldi	r19, 0xFF	; 255
    1efc:	26 1b       	sub	r18, r22
    1efe:	37 0b       	sbc	r19, r23
    1f00:	2a 31       	cpi	r18, 0x1A	; 26
    1f02:	31 05       	cpc	r19, r1
    1f04:	2c f0       	brlt	.+10     	; 0x1f10 <__pack_f+0x76>
    1f06:	20 e0       	ldi	r18, 0x00	; 0
    1f08:	30 e0       	ldi	r19, 0x00	; 0
    1f0a:	40 e0       	ldi	r20, 0x00	; 0
    1f0c:	50 e0       	ldi	r21, 0x00	; 0
    1f0e:	2a c0       	rjmp	.+84     	; 0x1f64 <__pack_f+0xca>
    1f10:	b8 01       	movw	r22, r16
    1f12:	a7 01       	movw	r20, r14
    1f14:	02 2e       	mov	r0, r18
    1f16:	04 c0       	rjmp	.+8      	; 0x1f20 <__pack_f+0x86>
    1f18:	76 95       	lsr	r23
    1f1a:	67 95       	ror	r22
    1f1c:	57 95       	ror	r21
    1f1e:	47 95       	ror	r20
    1f20:	0a 94       	dec	r0
    1f22:	d2 f7       	brpl	.-12     	; 0x1f18 <__pack_f+0x7e>
    1f24:	81 e0       	ldi	r24, 0x01	; 1
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	a0 e0       	ldi	r26, 0x00	; 0
    1f2a:	b0 e0       	ldi	r27, 0x00	; 0
    1f2c:	04 c0       	rjmp	.+8      	; 0x1f36 <__pack_f+0x9c>
    1f2e:	88 0f       	add	r24, r24
    1f30:	99 1f       	adc	r25, r25
    1f32:	aa 1f       	adc	r26, r26
    1f34:	bb 1f       	adc	r27, r27
    1f36:	2a 95       	dec	r18
    1f38:	d2 f7       	brpl	.-12     	; 0x1f2e <__pack_f+0x94>
    1f3a:	01 97       	sbiw	r24, 0x01	; 1
    1f3c:	a1 09       	sbc	r26, r1
    1f3e:	b1 09       	sbc	r27, r1
    1f40:	8e 21       	and	r24, r14
    1f42:	9f 21       	and	r25, r15
    1f44:	a0 23       	and	r26, r16
    1f46:	b1 23       	and	r27, r17
    1f48:	00 97       	sbiw	r24, 0x00	; 0
    1f4a:	a1 05       	cpc	r26, r1
    1f4c:	b1 05       	cpc	r27, r1
    1f4e:	21 f0       	breq	.+8      	; 0x1f58 <__pack_f+0xbe>
    1f50:	81 e0       	ldi	r24, 0x01	; 1
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	a0 e0       	ldi	r26, 0x00	; 0
    1f56:	b0 e0       	ldi	r27, 0x00	; 0
    1f58:	9a 01       	movw	r18, r20
    1f5a:	ab 01       	movw	r20, r22
    1f5c:	28 2b       	or	r18, r24
    1f5e:	39 2b       	or	r19, r25
    1f60:	4a 2b       	or	r20, r26
    1f62:	5b 2b       	or	r21, r27
    1f64:	da 01       	movw	r26, r20
    1f66:	c9 01       	movw	r24, r18
    1f68:	8f 77       	andi	r24, 0x7F	; 127
    1f6a:	90 70       	andi	r25, 0x00	; 0
    1f6c:	a0 70       	andi	r26, 0x00	; 0
    1f6e:	b0 70       	andi	r27, 0x00	; 0
    1f70:	80 34       	cpi	r24, 0x40	; 64
    1f72:	91 05       	cpc	r25, r1
    1f74:	a1 05       	cpc	r26, r1
    1f76:	b1 05       	cpc	r27, r1
    1f78:	39 f4       	brne	.+14     	; 0x1f88 <__pack_f+0xee>
    1f7a:	27 ff       	sbrs	r18, 7
    1f7c:	09 c0       	rjmp	.+18     	; 0x1f90 <__pack_f+0xf6>
    1f7e:	20 5c       	subi	r18, 0xC0	; 192
    1f80:	3f 4f       	sbci	r19, 0xFF	; 255
    1f82:	4f 4f       	sbci	r20, 0xFF	; 255
    1f84:	5f 4f       	sbci	r21, 0xFF	; 255
    1f86:	04 c0       	rjmp	.+8      	; 0x1f90 <__pack_f+0xf6>
    1f88:	21 5c       	subi	r18, 0xC1	; 193
    1f8a:	3f 4f       	sbci	r19, 0xFF	; 255
    1f8c:	4f 4f       	sbci	r20, 0xFF	; 255
    1f8e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f90:	e0 e0       	ldi	r30, 0x00	; 0
    1f92:	f0 e0       	ldi	r31, 0x00	; 0
    1f94:	20 30       	cpi	r18, 0x00	; 0
    1f96:	a0 e0       	ldi	r26, 0x00	; 0
    1f98:	3a 07       	cpc	r19, r26
    1f9a:	a0 e0       	ldi	r26, 0x00	; 0
    1f9c:	4a 07       	cpc	r20, r26
    1f9e:	a0 e4       	ldi	r26, 0x40	; 64
    1fa0:	5a 07       	cpc	r21, r26
    1fa2:	10 f0       	brcs	.+4      	; 0x1fa8 <__pack_f+0x10e>
    1fa4:	e1 e0       	ldi	r30, 0x01	; 1
    1fa6:	f0 e0       	ldi	r31, 0x00	; 0
    1fa8:	79 01       	movw	r14, r18
    1faa:	8a 01       	movw	r16, r20
    1fac:	27 c0       	rjmp	.+78     	; 0x1ffc <__pack_f+0x162>
    1fae:	60 38       	cpi	r22, 0x80	; 128
    1fb0:	71 05       	cpc	r23, r1
    1fb2:	64 f5       	brge	.+88     	; 0x200c <__pack_f+0x172>
    1fb4:	fb 01       	movw	r30, r22
    1fb6:	e1 58       	subi	r30, 0x81	; 129
    1fb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fba:	d8 01       	movw	r26, r16
    1fbc:	c7 01       	movw	r24, r14
    1fbe:	8f 77       	andi	r24, 0x7F	; 127
    1fc0:	90 70       	andi	r25, 0x00	; 0
    1fc2:	a0 70       	andi	r26, 0x00	; 0
    1fc4:	b0 70       	andi	r27, 0x00	; 0
    1fc6:	80 34       	cpi	r24, 0x40	; 64
    1fc8:	91 05       	cpc	r25, r1
    1fca:	a1 05       	cpc	r26, r1
    1fcc:	b1 05       	cpc	r27, r1
    1fce:	39 f4       	brne	.+14     	; 0x1fde <__pack_f+0x144>
    1fd0:	e7 fe       	sbrs	r14, 7
    1fd2:	0d c0       	rjmp	.+26     	; 0x1fee <__pack_f+0x154>
    1fd4:	80 e4       	ldi	r24, 0x40	; 64
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	a0 e0       	ldi	r26, 0x00	; 0
    1fda:	b0 e0       	ldi	r27, 0x00	; 0
    1fdc:	04 c0       	rjmp	.+8      	; 0x1fe6 <__pack_f+0x14c>
    1fde:	8f e3       	ldi	r24, 0x3F	; 63
    1fe0:	90 e0       	ldi	r25, 0x00	; 0
    1fe2:	a0 e0       	ldi	r26, 0x00	; 0
    1fe4:	b0 e0       	ldi	r27, 0x00	; 0
    1fe6:	e8 0e       	add	r14, r24
    1fe8:	f9 1e       	adc	r15, r25
    1fea:	0a 1f       	adc	r16, r26
    1fec:	1b 1f       	adc	r17, r27
    1fee:	17 ff       	sbrs	r17, 7
    1ff0:	05 c0       	rjmp	.+10     	; 0x1ffc <__pack_f+0x162>
    1ff2:	16 95       	lsr	r17
    1ff4:	07 95       	ror	r16
    1ff6:	f7 94       	ror	r15
    1ff8:	e7 94       	ror	r14
    1ffa:	31 96       	adiw	r30, 0x01	; 1
    1ffc:	87 e0       	ldi	r24, 0x07	; 7
    1ffe:	16 95       	lsr	r17
    2000:	07 95       	ror	r16
    2002:	f7 94       	ror	r15
    2004:	e7 94       	ror	r14
    2006:	8a 95       	dec	r24
    2008:	d1 f7       	brne	.-12     	; 0x1ffe <__pack_f+0x164>
    200a:	05 c0       	rjmp	.+10     	; 0x2016 <__pack_f+0x17c>
    200c:	ee 24       	eor	r14, r14
    200e:	ff 24       	eor	r15, r15
    2010:	87 01       	movw	r16, r14
    2012:	ef ef       	ldi	r30, 0xFF	; 255
    2014:	f0 e0       	ldi	r31, 0x00	; 0
    2016:	6e 2f       	mov	r22, r30
    2018:	67 95       	ror	r22
    201a:	66 27       	eor	r22, r22
    201c:	67 95       	ror	r22
    201e:	90 2f       	mov	r25, r16
    2020:	9f 77       	andi	r25, 0x7F	; 127
    2022:	d7 94       	ror	r13
    2024:	dd 24       	eor	r13, r13
    2026:	d7 94       	ror	r13
    2028:	8e 2f       	mov	r24, r30
    202a:	86 95       	lsr	r24
    202c:	49 2f       	mov	r20, r25
    202e:	46 2b       	or	r20, r22
    2030:	58 2f       	mov	r21, r24
    2032:	5d 29       	or	r21, r13
    2034:	b7 01       	movw	r22, r14
    2036:	ca 01       	movw	r24, r20
    2038:	1f 91       	pop	r17
    203a:	0f 91       	pop	r16
    203c:	ff 90       	pop	r15
    203e:	ef 90       	pop	r14
    2040:	df 90       	pop	r13
    2042:	08 95       	ret

00002044 <__unpack_f>:
    2044:	fc 01       	movw	r30, r24
    2046:	db 01       	movw	r26, r22
    2048:	40 81       	ld	r20, Z
    204a:	51 81       	ldd	r21, Z+1	; 0x01
    204c:	22 81       	ldd	r18, Z+2	; 0x02
    204e:	62 2f       	mov	r22, r18
    2050:	6f 77       	andi	r22, 0x7F	; 127
    2052:	70 e0       	ldi	r23, 0x00	; 0
    2054:	22 1f       	adc	r18, r18
    2056:	22 27       	eor	r18, r18
    2058:	22 1f       	adc	r18, r18
    205a:	93 81       	ldd	r25, Z+3	; 0x03
    205c:	89 2f       	mov	r24, r25
    205e:	88 0f       	add	r24, r24
    2060:	82 2b       	or	r24, r18
    2062:	28 2f       	mov	r18, r24
    2064:	30 e0       	ldi	r19, 0x00	; 0
    2066:	99 1f       	adc	r25, r25
    2068:	99 27       	eor	r25, r25
    206a:	99 1f       	adc	r25, r25
    206c:	11 96       	adiw	r26, 0x01	; 1
    206e:	9c 93       	st	X, r25
    2070:	11 97       	sbiw	r26, 0x01	; 1
    2072:	21 15       	cp	r18, r1
    2074:	31 05       	cpc	r19, r1
    2076:	a9 f5       	brne	.+106    	; 0x20e2 <__unpack_f+0x9e>
    2078:	41 15       	cp	r20, r1
    207a:	51 05       	cpc	r21, r1
    207c:	61 05       	cpc	r22, r1
    207e:	71 05       	cpc	r23, r1
    2080:	11 f4       	brne	.+4      	; 0x2086 <__unpack_f+0x42>
    2082:	82 e0       	ldi	r24, 0x02	; 2
    2084:	37 c0       	rjmp	.+110    	; 0x20f4 <__unpack_f+0xb0>
    2086:	82 e8       	ldi	r24, 0x82	; 130
    2088:	9f ef       	ldi	r25, 0xFF	; 255
    208a:	13 96       	adiw	r26, 0x03	; 3
    208c:	9c 93       	st	X, r25
    208e:	8e 93       	st	-X, r24
    2090:	12 97       	sbiw	r26, 0x02	; 2
    2092:	9a 01       	movw	r18, r20
    2094:	ab 01       	movw	r20, r22
    2096:	67 e0       	ldi	r22, 0x07	; 7
    2098:	22 0f       	add	r18, r18
    209a:	33 1f       	adc	r19, r19
    209c:	44 1f       	adc	r20, r20
    209e:	55 1f       	adc	r21, r21
    20a0:	6a 95       	dec	r22
    20a2:	d1 f7       	brne	.-12     	; 0x2098 <__unpack_f+0x54>
    20a4:	83 e0       	ldi	r24, 0x03	; 3
    20a6:	8c 93       	st	X, r24
    20a8:	0d c0       	rjmp	.+26     	; 0x20c4 <__unpack_f+0x80>
    20aa:	22 0f       	add	r18, r18
    20ac:	33 1f       	adc	r19, r19
    20ae:	44 1f       	adc	r20, r20
    20b0:	55 1f       	adc	r21, r21
    20b2:	12 96       	adiw	r26, 0x02	; 2
    20b4:	8d 91       	ld	r24, X+
    20b6:	9c 91       	ld	r25, X
    20b8:	13 97       	sbiw	r26, 0x03	; 3
    20ba:	01 97       	sbiw	r24, 0x01	; 1
    20bc:	13 96       	adiw	r26, 0x03	; 3
    20be:	9c 93       	st	X, r25
    20c0:	8e 93       	st	-X, r24
    20c2:	12 97       	sbiw	r26, 0x02	; 2
    20c4:	20 30       	cpi	r18, 0x00	; 0
    20c6:	80 e0       	ldi	r24, 0x00	; 0
    20c8:	38 07       	cpc	r19, r24
    20ca:	80 e0       	ldi	r24, 0x00	; 0
    20cc:	48 07       	cpc	r20, r24
    20ce:	80 e4       	ldi	r24, 0x40	; 64
    20d0:	58 07       	cpc	r21, r24
    20d2:	58 f3       	brcs	.-42     	; 0x20aa <__unpack_f+0x66>
    20d4:	14 96       	adiw	r26, 0x04	; 4
    20d6:	2d 93       	st	X+, r18
    20d8:	3d 93       	st	X+, r19
    20da:	4d 93       	st	X+, r20
    20dc:	5c 93       	st	X, r21
    20de:	17 97       	sbiw	r26, 0x07	; 7
    20e0:	08 95       	ret
    20e2:	2f 3f       	cpi	r18, 0xFF	; 255
    20e4:	31 05       	cpc	r19, r1
    20e6:	79 f4       	brne	.+30     	; 0x2106 <__unpack_f+0xc2>
    20e8:	41 15       	cp	r20, r1
    20ea:	51 05       	cpc	r21, r1
    20ec:	61 05       	cpc	r22, r1
    20ee:	71 05       	cpc	r23, r1
    20f0:	19 f4       	brne	.+6      	; 0x20f8 <__unpack_f+0xb4>
    20f2:	84 e0       	ldi	r24, 0x04	; 4
    20f4:	8c 93       	st	X, r24
    20f6:	08 95       	ret
    20f8:	64 ff       	sbrs	r22, 4
    20fa:	03 c0       	rjmp	.+6      	; 0x2102 <__unpack_f+0xbe>
    20fc:	81 e0       	ldi	r24, 0x01	; 1
    20fe:	8c 93       	st	X, r24
    2100:	12 c0       	rjmp	.+36     	; 0x2126 <__unpack_f+0xe2>
    2102:	1c 92       	st	X, r1
    2104:	10 c0       	rjmp	.+32     	; 0x2126 <__unpack_f+0xe2>
    2106:	2f 57       	subi	r18, 0x7F	; 127
    2108:	30 40       	sbci	r19, 0x00	; 0
    210a:	13 96       	adiw	r26, 0x03	; 3
    210c:	3c 93       	st	X, r19
    210e:	2e 93       	st	-X, r18
    2110:	12 97       	sbiw	r26, 0x02	; 2
    2112:	83 e0       	ldi	r24, 0x03	; 3
    2114:	8c 93       	st	X, r24
    2116:	87 e0       	ldi	r24, 0x07	; 7
    2118:	44 0f       	add	r20, r20
    211a:	55 1f       	adc	r21, r21
    211c:	66 1f       	adc	r22, r22
    211e:	77 1f       	adc	r23, r23
    2120:	8a 95       	dec	r24
    2122:	d1 f7       	brne	.-12     	; 0x2118 <__unpack_f+0xd4>
    2124:	70 64       	ori	r23, 0x40	; 64
    2126:	14 96       	adiw	r26, 0x04	; 4
    2128:	4d 93       	st	X+, r20
    212a:	5d 93       	st	X+, r21
    212c:	6d 93       	st	X+, r22
    212e:	7c 93       	st	X, r23
    2130:	17 97       	sbiw	r26, 0x07	; 7
    2132:	08 95       	ret

00002134 <__fpcmp_parts_f>:
    2134:	1f 93       	push	r17
    2136:	dc 01       	movw	r26, r24
    2138:	fb 01       	movw	r30, r22
    213a:	9c 91       	ld	r25, X
    213c:	92 30       	cpi	r25, 0x02	; 2
    213e:	08 f4       	brcc	.+2      	; 0x2142 <__fpcmp_parts_f+0xe>
    2140:	47 c0       	rjmp	.+142    	; 0x21d0 <__fpcmp_parts_f+0x9c>
    2142:	80 81       	ld	r24, Z
    2144:	82 30       	cpi	r24, 0x02	; 2
    2146:	08 f4       	brcc	.+2      	; 0x214a <__fpcmp_parts_f+0x16>
    2148:	43 c0       	rjmp	.+134    	; 0x21d0 <__fpcmp_parts_f+0x9c>
    214a:	94 30       	cpi	r25, 0x04	; 4
    214c:	51 f4       	brne	.+20     	; 0x2162 <__fpcmp_parts_f+0x2e>
    214e:	11 96       	adiw	r26, 0x01	; 1
    2150:	1c 91       	ld	r17, X
    2152:	84 30       	cpi	r24, 0x04	; 4
    2154:	99 f5       	brne	.+102    	; 0x21bc <__fpcmp_parts_f+0x88>
    2156:	81 81       	ldd	r24, Z+1	; 0x01
    2158:	68 2f       	mov	r22, r24
    215a:	70 e0       	ldi	r23, 0x00	; 0
    215c:	61 1b       	sub	r22, r17
    215e:	71 09       	sbc	r23, r1
    2160:	3f c0       	rjmp	.+126    	; 0x21e0 <__fpcmp_parts_f+0xac>
    2162:	84 30       	cpi	r24, 0x04	; 4
    2164:	21 f0       	breq	.+8      	; 0x216e <__fpcmp_parts_f+0x3a>
    2166:	92 30       	cpi	r25, 0x02	; 2
    2168:	31 f4       	brne	.+12     	; 0x2176 <__fpcmp_parts_f+0x42>
    216a:	82 30       	cpi	r24, 0x02	; 2
    216c:	b9 f1       	breq	.+110    	; 0x21dc <__fpcmp_parts_f+0xa8>
    216e:	81 81       	ldd	r24, Z+1	; 0x01
    2170:	88 23       	and	r24, r24
    2172:	89 f1       	breq	.+98     	; 0x21d6 <__fpcmp_parts_f+0xa2>
    2174:	2d c0       	rjmp	.+90     	; 0x21d0 <__fpcmp_parts_f+0x9c>
    2176:	11 96       	adiw	r26, 0x01	; 1
    2178:	1c 91       	ld	r17, X
    217a:	11 97       	sbiw	r26, 0x01	; 1
    217c:	82 30       	cpi	r24, 0x02	; 2
    217e:	f1 f0       	breq	.+60     	; 0x21bc <__fpcmp_parts_f+0x88>
    2180:	81 81       	ldd	r24, Z+1	; 0x01
    2182:	18 17       	cp	r17, r24
    2184:	d9 f4       	brne	.+54     	; 0x21bc <__fpcmp_parts_f+0x88>
    2186:	12 96       	adiw	r26, 0x02	; 2
    2188:	2d 91       	ld	r18, X+
    218a:	3c 91       	ld	r19, X
    218c:	13 97       	sbiw	r26, 0x03	; 3
    218e:	82 81       	ldd	r24, Z+2	; 0x02
    2190:	93 81       	ldd	r25, Z+3	; 0x03
    2192:	82 17       	cp	r24, r18
    2194:	93 07       	cpc	r25, r19
    2196:	94 f0       	brlt	.+36     	; 0x21bc <__fpcmp_parts_f+0x88>
    2198:	28 17       	cp	r18, r24
    219a:	39 07       	cpc	r19, r25
    219c:	bc f0       	brlt	.+46     	; 0x21cc <__fpcmp_parts_f+0x98>
    219e:	14 96       	adiw	r26, 0x04	; 4
    21a0:	8d 91       	ld	r24, X+
    21a2:	9d 91       	ld	r25, X+
    21a4:	0d 90       	ld	r0, X+
    21a6:	bc 91       	ld	r27, X
    21a8:	a0 2d       	mov	r26, r0
    21aa:	24 81       	ldd	r18, Z+4	; 0x04
    21ac:	35 81       	ldd	r19, Z+5	; 0x05
    21ae:	46 81       	ldd	r20, Z+6	; 0x06
    21b0:	57 81       	ldd	r21, Z+7	; 0x07
    21b2:	28 17       	cp	r18, r24
    21b4:	39 07       	cpc	r19, r25
    21b6:	4a 07       	cpc	r20, r26
    21b8:	5b 07       	cpc	r21, r27
    21ba:	18 f4       	brcc	.+6      	; 0x21c2 <__fpcmp_parts_f+0x8e>
    21bc:	11 23       	and	r17, r17
    21be:	41 f0       	breq	.+16     	; 0x21d0 <__fpcmp_parts_f+0x9c>
    21c0:	0a c0       	rjmp	.+20     	; 0x21d6 <__fpcmp_parts_f+0xa2>
    21c2:	82 17       	cp	r24, r18
    21c4:	93 07       	cpc	r25, r19
    21c6:	a4 07       	cpc	r26, r20
    21c8:	b5 07       	cpc	r27, r21
    21ca:	40 f4       	brcc	.+16     	; 0x21dc <__fpcmp_parts_f+0xa8>
    21cc:	11 23       	and	r17, r17
    21ce:	19 f0       	breq	.+6      	; 0x21d6 <__fpcmp_parts_f+0xa2>
    21d0:	61 e0       	ldi	r22, 0x01	; 1
    21d2:	70 e0       	ldi	r23, 0x00	; 0
    21d4:	05 c0       	rjmp	.+10     	; 0x21e0 <__fpcmp_parts_f+0xac>
    21d6:	6f ef       	ldi	r22, 0xFF	; 255
    21d8:	7f ef       	ldi	r23, 0xFF	; 255
    21da:	02 c0       	rjmp	.+4      	; 0x21e0 <__fpcmp_parts_f+0xac>
    21dc:	60 e0       	ldi	r22, 0x00	; 0
    21de:	70 e0       	ldi	r23, 0x00	; 0
    21e0:	cb 01       	movw	r24, r22
    21e2:	1f 91       	pop	r17
    21e4:	08 95       	ret

000021e6 <DIO_u8SetPortDir>:
#include "../../SERV/STD_TYPES.h"
#include "../../SERV/BIT_MATH.h"
#include "Dio_reg.h"
#include "Dio_int.h"

uint8 DIO_u8SetPortDir (uint8 u8PortIdCopy ,uint8 u8DirCopy){
    21e6:	df 93       	push	r29
    21e8:	cf 93       	push	r28
    21ea:	00 d0       	rcall	.+0      	; 0x21ec <DIO_u8SetPortDir+0x6>
    21ec:	00 d0       	rcall	.+0      	; 0x21ee <DIO_u8SetPortDir+0x8>
    21ee:	0f 92       	push	r0
    21f0:	cd b7       	in	r28, 0x3d	; 61
    21f2:	de b7       	in	r29, 0x3e	; 62
    21f4:	8a 83       	std	Y+2, r24	; 0x02
    21f6:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    21f8:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    21fa:	8a 81       	ldd	r24, Y+2	; 0x02
    21fc:	28 2f       	mov	r18, r24
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	3d 83       	std	Y+5, r19	; 0x05
    2202:	2c 83       	std	Y+4, r18	; 0x04
    2204:	8c 81       	ldd	r24, Y+4	; 0x04
    2206:	9d 81       	ldd	r25, Y+5	; 0x05
    2208:	81 30       	cpi	r24, 0x01	; 1
    220a:	91 05       	cpc	r25, r1
    220c:	d1 f0       	breq	.+52     	; 0x2242 <DIO_u8SetPortDir+0x5c>
    220e:	2c 81       	ldd	r18, Y+4	; 0x04
    2210:	3d 81       	ldd	r19, Y+5	; 0x05
    2212:	22 30       	cpi	r18, 0x02	; 2
    2214:	31 05       	cpc	r19, r1
    2216:	2c f4       	brge	.+10     	; 0x2222 <DIO_u8SetPortDir+0x3c>
    2218:	8c 81       	ldd	r24, Y+4	; 0x04
    221a:	9d 81       	ldd	r25, Y+5	; 0x05
    221c:	00 97       	sbiw	r24, 0x00	; 0
    221e:	61 f0       	breq	.+24     	; 0x2238 <DIO_u8SetPortDir+0x52>
    2220:	1f c0       	rjmp	.+62     	; 0x2260 <DIO_u8SetPortDir+0x7a>
    2222:	2c 81       	ldd	r18, Y+4	; 0x04
    2224:	3d 81       	ldd	r19, Y+5	; 0x05
    2226:	22 30       	cpi	r18, 0x02	; 2
    2228:	31 05       	cpc	r19, r1
    222a:	81 f0       	breq	.+32     	; 0x224c <DIO_u8SetPortDir+0x66>
    222c:	8c 81       	ldd	r24, Y+4	; 0x04
    222e:	9d 81       	ldd	r25, Y+5	; 0x05
    2230:	83 30       	cpi	r24, 0x03	; 3
    2232:	91 05       	cpc	r25, r1
    2234:	81 f0       	breq	.+32     	; 0x2256 <DIO_u8SetPortDir+0x70>
    2236:	14 c0       	rjmp	.+40     	; 0x2260 <DIO_u8SetPortDir+0x7a>
		case PORT_A :DDRA_REG =u8DirCopy ; break;
    2238:	ea e3       	ldi	r30, 0x3A	; 58
    223a:	f0 e0       	ldi	r31, 0x00	; 0
    223c:	8b 81       	ldd	r24, Y+3	; 0x03
    223e:	80 83       	st	Z, r24
    2240:	11 c0       	rjmp	.+34     	; 0x2264 <DIO_u8SetPortDir+0x7e>
		case PORT_B :DDRB_REG =u8DirCopy ; break;
    2242:	e7 e3       	ldi	r30, 0x37	; 55
    2244:	f0 e0       	ldi	r31, 0x00	; 0
    2246:	8b 81       	ldd	r24, Y+3	; 0x03
    2248:	80 83       	st	Z, r24
    224a:	0c c0       	rjmp	.+24     	; 0x2264 <DIO_u8SetPortDir+0x7e>
		case PORT_C :DDRC_REG =u8DirCopy ; break;
    224c:	e4 e3       	ldi	r30, 0x34	; 52
    224e:	f0 e0       	ldi	r31, 0x00	; 0
    2250:	8b 81       	ldd	r24, Y+3	; 0x03
    2252:	80 83       	st	Z, r24
    2254:	07 c0       	rjmp	.+14     	; 0x2264 <DIO_u8SetPortDir+0x7e>
		case PORT_D :DDRD_REG =u8DirCopy ; break;
    2256:	e1 e3       	ldi	r30, 0x31	; 49
    2258:	f0 e0       	ldi	r31, 0x00	; 0
    225a:	8b 81       	ldd	r24, Y+3	; 0x03
    225c:	80 83       	st	Z, r24
    225e:	02 c0       	rjmp	.+4      	; 0x2264 <DIO_u8SetPortDir+0x7e>
		default     : errStatus =E_NOK   ; break;  	
    2260:	81 e0       	ldi	r24, 0x01	; 1
    2262:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    2264:	89 81       	ldd	r24, Y+1	; 0x01
}
    2266:	0f 90       	pop	r0
    2268:	0f 90       	pop	r0
    226a:	0f 90       	pop	r0
    226c:	0f 90       	pop	r0
    226e:	0f 90       	pop	r0
    2270:	cf 91       	pop	r28
    2272:	df 91       	pop	r29
    2274:	08 95       	ret

00002276 <DIO_u8SetPortVal>:
uint8 DIO_u8SetPortVal (uint8 u8PortIdCopy ,uint8 u8ValCopy){
    2276:	df 93       	push	r29
    2278:	cf 93       	push	r28
    227a:	00 d0       	rcall	.+0      	; 0x227c <DIO_u8SetPortVal+0x6>
    227c:	00 d0       	rcall	.+0      	; 0x227e <DIO_u8SetPortVal+0x8>
    227e:	0f 92       	push	r0
    2280:	cd b7       	in	r28, 0x3d	; 61
    2282:	de b7       	in	r29, 0x3e	; 62
    2284:	8a 83       	std	Y+2, r24	; 0x02
    2286:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    2288:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    228a:	8a 81       	ldd	r24, Y+2	; 0x02
    228c:	28 2f       	mov	r18, r24
    228e:	30 e0       	ldi	r19, 0x00	; 0
    2290:	3d 83       	std	Y+5, r19	; 0x05
    2292:	2c 83       	std	Y+4, r18	; 0x04
    2294:	8c 81       	ldd	r24, Y+4	; 0x04
    2296:	9d 81       	ldd	r25, Y+5	; 0x05
    2298:	81 30       	cpi	r24, 0x01	; 1
    229a:	91 05       	cpc	r25, r1
    229c:	d1 f0       	breq	.+52     	; 0x22d2 <DIO_u8SetPortVal+0x5c>
    229e:	2c 81       	ldd	r18, Y+4	; 0x04
    22a0:	3d 81       	ldd	r19, Y+5	; 0x05
    22a2:	22 30       	cpi	r18, 0x02	; 2
    22a4:	31 05       	cpc	r19, r1
    22a6:	2c f4       	brge	.+10     	; 0x22b2 <DIO_u8SetPortVal+0x3c>
    22a8:	8c 81       	ldd	r24, Y+4	; 0x04
    22aa:	9d 81       	ldd	r25, Y+5	; 0x05
    22ac:	00 97       	sbiw	r24, 0x00	; 0
    22ae:	61 f0       	breq	.+24     	; 0x22c8 <DIO_u8SetPortVal+0x52>
    22b0:	1f c0       	rjmp	.+62     	; 0x22f0 <DIO_u8SetPortVal+0x7a>
    22b2:	2c 81       	ldd	r18, Y+4	; 0x04
    22b4:	3d 81       	ldd	r19, Y+5	; 0x05
    22b6:	22 30       	cpi	r18, 0x02	; 2
    22b8:	31 05       	cpc	r19, r1
    22ba:	81 f0       	breq	.+32     	; 0x22dc <DIO_u8SetPortVal+0x66>
    22bc:	8c 81       	ldd	r24, Y+4	; 0x04
    22be:	9d 81       	ldd	r25, Y+5	; 0x05
    22c0:	83 30       	cpi	r24, 0x03	; 3
    22c2:	91 05       	cpc	r25, r1
    22c4:	81 f0       	breq	.+32     	; 0x22e6 <DIO_u8SetPortVal+0x70>
    22c6:	14 c0       	rjmp	.+40     	; 0x22f0 <DIO_u8SetPortVal+0x7a>
		case PORT_A :PORTA_REG =u8ValCopy ; break;
    22c8:	eb e3       	ldi	r30, 0x3B	; 59
    22ca:	f0 e0       	ldi	r31, 0x00	; 0
    22cc:	8b 81       	ldd	r24, Y+3	; 0x03
    22ce:	80 83       	st	Z, r24
    22d0:	11 c0       	rjmp	.+34     	; 0x22f4 <DIO_u8SetPortVal+0x7e>
		case PORT_B :PORTB_REG =u8ValCopy ; break;
    22d2:	e8 e3       	ldi	r30, 0x38	; 56
    22d4:	f0 e0       	ldi	r31, 0x00	; 0
    22d6:	8b 81       	ldd	r24, Y+3	; 0x03
    22d8:	80 83       	st	Z, r24
    22da:	0c c0       	rjmp	.+24     	; 0x22f4 <DIO_u8SetPortVal+0x7e>
		case PORT_C :PORTC_REG =u8ValCopy ; break;
    22dc:	e5 e3       	ldi	r30, 0x35	; 53
    22de:	f0 e0       	ldi	r31, 0x00	; 0
    22e0:	8b 81       	ldd	r24, Y+3	; 0x03
    22e2:	80 83       	st	Z, r24
    22e4:	07 c0       	rjmp	.+14     	; 0x22f4 <DIO_u8SetPortVal+0x7e>
		case PORT_D :PORTD_REG =u8ValCopy ; break;
    22e6:	e2 e3       	ldi	r30, 0x32	; 50
    22e8:	f0 e0       	ldi	r31, 0x00	; 0
    22ea:	8b 81       	ldd	r24, Y+3	; 0x03
    22ec:	80 83       	st	Z, r24
    22ee:	02 c0       	rjmp	.+4      	; 0x22f4 <DIO_u8SetPortVal+0x7e>
		default     : errStatus =E_NOK    ; break;  	
    22f0:	81 e0       	ldi	r24, 0x01	; 1
    22f2:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    22f4:	89 81       	ldd	r24, Y+1	; 0x01
}
    22f6:	0f 90       	pop	r0
    22f8:	0f 90       	pop	r0
    22fa:	0f 90       	pop	r0
    22fc:	0f 90       	pop	r0
    22fe:	0f 90       	pop	r0
    2300:	cf 91       	pop	r28
    2302:	df 91       	pop	r29
    2304:	08 95       	ret

00002306 <DIO_u8GetPortVal>:
uint8 DIO_u8GetPortVal (uint8 u8PortIdCopy ,uint8 * u8pValCopy){
    2306:	df 93       	push	r29
    2308:	cf 93       	push	r28
    230a:	00 d0       	rcall	.+0      	; 0x230c <DIO_u8GetPortVal+0x6>
    230c:	00 d0       	rcall	.+0      	; 0x230e <DIO_u8GetPortVal+0x8>
    230e:	00 d0       	rcall	.+0      	; 0x2310 <DIO_u8GetPortVal+0xa>
    2310:	cd b7       	in	r28, 0x3d	; 61
    2312:	de b7       	in	r29, 0x3e	; 62
    2314:	8a 83       	std	Y+2, r24	; 0x02
    2316:	7c 83       	std	Y+4, r23	; 0x04
    2318:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    231a:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    231c:	8a 81       	ldd	r24, Y+2	; 0x02
    231e:	28 2f       	mov	r18, r24
    2320:	30 e0       	ldi	r19, 0x00	; 0
    2322:	3e 83       	std	Y+6, r19	; 0x06
    2324:	2d 83       	std	Y+5, r18	; 0x05
    2326:	8d 81       	ldd	r24, Y+5	; 0x05
    2328:	9e 81       	ldd	r25, Y+6	; 0x06
    232a:	81 30       	cpi	r24, 0x01	; 1
    232c:	91 05       	cpc	r25, r1
    232e:	e1 f0       	breq	.+56     	; 0x2368 <DIO_u8GetPortVal+0x62>
    2330:	2d 81       	ldd	r18, Y+5	; 0x05
    2332:	3e 81       	ldd	r19, Y+6	; 0x06
    2334:	22 30       	cpi	r18, 0x02	; 2
    2336:	31 05       	cpc	r19, r1
    2338:	2c f4       	brge	.+10     	; 0x2344 <DIO_u8GetPortVal+0x3e>
    233a:	8d 81       	ldd	r24, Y+5	; 0x05
    233c:	9e 81       	ldd	r25, Y+6	; 0x06
    233e:	00 97       	sbiw	r24, 0x00	; 0
    2340:	61 f0       	breq	.+24     	; 0x235a <DIO_u8GetPortVal+0x54>
    2342:	27 c0       	rjmp	.+78     	; 0x2392 <DIO_u8GetPortVal+0x8c>
    2344:	2d 81       	ldd	r18, Y+5	; 0x05
    2346:	3e 81       	ldd	r19, Y+6	; 0x06
    2348:	22 30       	cpi	r18, 0x02	; 2
    234a:	31 05       	cpc	r19, r1
    234c:	a1 f0       	breq	.+40     	; 0x2376 <DIO_u8GetPortVal+0x70>
    234e:	8d 81       	ldd	r24, Y+5	; 0x05
    2350:	9e 81       	ldd	r25, Y+6	; 0x06
    2352:	83 30       	cpi	r24, 0x03	; 3
    2354:	91 05       	cpc	r25, r1
    2356:	b1 f0       	breq	.+44     	; 0x2384 <DIO_u8GetPortVal+0x7e>
    2358:	1c c0       	rjmp	.+56     	; 0x2392 <DIO_u8GetPortVal+0x8c>
		case PORT_A :* u8pValCopy=PINA_REG  ; break;
    235a:	e9 e3       	ldi	r30, 0x39	; 57
    235c:	f0 e0       	ldi	r31, 0x00	; 0
    235e:	80 81       	ld	r24, Z
    2360:	eb 81       	ldd	r30, Y+3	; 0x03
    2362:	fc 81       	ldd	r31, Y+4	; 0x04
    2364:	80 83       	st	Z, r24
    2366:	17 c0       	rjmp	.+46     	; 0x2396 <DIO_u8GetPortVal+0x90>
		case PORT_B :* u8pValCopy=PINB_REG  ; break;
    2368:	e6 e3       	ldi	r30, 0x36	; 54
    236a:	f0 e0       	ldi	r31, 0x00	; 0
    236c:	80 81       	ld	r24, Z
    236e:	eb 81       	ldd	r30, Y+3	; 0x03
    2370:	fc 81       	ldd	r31, Y+4	; 0x04
    2372:	80 83       	st	Z, r24
    2374:	10 c0       	rjmp	.+32     	; 0x2396 <DIO_u8GetPortVal+0x90>
		case PORT_C :* u8pValCopy=PINC_REG  ; break;
    2376:	e3 e3       	ldi	r30, 0x33	; 51
    2378:	f0 e0       	ldi	r31, 0x00	; 0
    237a:	80 81       	ld	r24, Z
    237c:	eb 81       	ldd	r30, Y+3	; 0x03
    237e:	fc 81       	ldd	r31, Y+4	; 0x04
    2380:	80 83       	st	Z, r24
    2382:	09 c0       	rjmp	.+18     	; 0x2396 <DIO_u8GetPortVal+0x90>
		case PORT_D :* u8pValCopy=PIND_REG  ; break;
    2384:	e0 e3       	ldi	r30, 0x30	; 48
    2386:	f0 e0       	ldi	r31, 0x00	; 0
    2388:	80 81       	ld	r24, Z
    238a:	eb 81       	ldd	r30, Y+3	; 0x03
    238c:	fc 81       	ldd	r31, Y+4	; 0x04
    238e:	80 83       	st	Z, r24
    2390:	02 c0       	rjmp	.+4      	; 0x2396 <DIO_u8GetPortVal+0x90>
		default     : errStatus =E_NOK      ; break;  	
    2392:	81 e0       	ldi	r24, 0x01	; 1
    2394:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    2396:	89 81       	ldd	r24, Y+1	; 0x01
}
    2398:	26 96       	adiw	r28, 0x06	; 6
    239a:	0f b6       	in	r0, 0x3f	; 63
    239c:	f8 94       	cli
    239e:	de bf       	out	0x3e, r29	; 62
    23a0:	0f be       	out	0x3f, r0	; 63
    23a2:	cd bf       	out	0x3d, r28	; 61
    23a4:	cf 91       	pop	r28
    23a6:	df 91       	pop	r29
    23a8:	08 95       	ret

000023aa <DIO_u8SetPinDir>:

uint8 DIO_u8SetPinDir (uint8 u8PortIdCopy ,uint8 u8PinIdCopy,uint8 u8DirCopy ){
    23aa:	df 93       	push	r29
    23ac:	cf 93       	push	r28
    23ae:	cd b7       	in	r28, 0x3d	; 61
    23b0:	de b7       	in	r29, 0x3e	; 62
    23b2:	28 97       	sbiw	r28, 0x08	; 8
    23b4:	0f b6       	in	r0, 0x3f	; 63
    23b6:	f8 94       	cli
    23b8:	de bf       	out	0x3e, r29	; 62
    23ba:	0f be       	out	0x3f, r0	; 63
    23bc:	cd bf       	out	0x3d, r28	; 61
    23be:	8a 83       	std	Y+2, r24	; 0x02
    23c0:	6b 83       	std	Y+3, r22	; 0x03
    23c2:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    23c4:	19 82       	std	Y+1, r1	; 0x01
	if (u8PinIdCopy>=PIN_0&&u8PinIdCopy<=PIN_7){
    23c6:	8b 81       	ldd	r24, Y+3	; 0x03
    23c8:	88 30       	cpi	r24, 0x08	; 8
    23ca:	08 f0       	brcs	.+2      	; 0x23ce <DIO_u8SetPinDir+0x24>
    23cc:	f3 c0       	rjmp	.+486    	; 0x25b4 <DIO_u8SetPinDir+0x20a>
		if(u8DirCopy==INPUT){
    23ce:	8c 81       	ldd	r24, Y+4	; 0x04
    23d0:	88 23       	and	r24, r24
    23d2:	09 f0       	breq	.+2      	; 0x23d6 <DIO_u8SetPinDir+0x2c>
    23d4:	77 c0       	rjmp	.+238    	; 0x24c4 <DIO_u8SetPinDir+0x11a>
			switch(u8PortIdCopy){
    23d6:	8a 81       	ldd	r24, Y+2	; 0x02
    23d8:	28 2f       	mov	r18, r24
    23da:	30 e0       	ldi	r19, 0x00	; 0
    23dc:	38 87       	std	Y+8, r19	; 0x08
    23de:	2f 83       	std	Y+7, r18	; 0x07
    23e0:	8f 81       	ldd	r24, Y+7	; 0x07
    23e2:	98 85       	ldd	r25, Y+8	; 0x08
    23e4:	81 30       	cpi	r24, 0x01	; 1
    23e6:	91 05       	cpc	r25, r1
    23e8:	59 f1       	breq	.+86     	; 0x2440 <DIO_u8SetPinDir+0x96>
    23ea:	2f 81       	ldd	r18, Y+7	; 0x07
    23ec:	38 85       	ldd	r19, Y+8	; 0x08
    23ee:	22 30       	cpi	r18, 0x02	; 2
    23f0:	31 05       	cpc	r19, r1
    23f2:	2c f4       	brge	.+10     	; 0x23fe <DIO_u8SetPinDir+0x54>
    23f4:	8f 81       	ldd	r24, Y+7	; 0x07
    23f6:	98 85       	ldd	r25, Y+8	; 0x08
    23f8:	00 97       	sbiw	r24, 0x00	; 0
    23fa:	69 f0       	breq	.+26     	; 0x2416 <DIO_u8SetPinDir+0x6c>
    23fc:	60 c0       	rjmp	.+192    	; 0x24be <DIO_u8SetPinDir+0x114>
    23fe:	2f 81       	ldd	r18, Y+7	; 0x07
    2400:	38 85       	ldd	r19, Y+8	; 0x08
    2402:	22 30       	cpi	r18, 0x02	; 2
    2404:	31 05       	cpc	r19, r1
    2406:	89 f1       	breq	.+98     	; 0x246a <DIO_u8SetPinDir+0xc0>
    2408:	8f 81       	ldd	r24, Y+7	; 0x07
    240a:	98 85       	ldd	r25, Y+8	; 0x08
    240c:	83 30       	cpi	r24, 0x03	; 3
    240e:	91 05       	cpc	r25, r1
    2410:	09 f4       	brne	.+2      	; 0x2414 <DIO_u8SetPinDir+0x6a>
    2412:	40 c0       	rjmp	.+128    	; 0x2494 <DIO_u8SetPinDir+0xea>
    2414:	54 c0       	rjmp	.+168    	; 0x24be <DIO_u8SetPinDir+0x114>
				case PORT_A :CLR_BIT(DDRA_REG,u8PinIdCopy); break;
    2416:	aa e3       	ldi	r26, 0x3A	; 58
    2418:	b0 e0       	ldi	r27, 0x00	; 0
    241a:	ea e3       	ldi	r30, 0x3A	; 58
    241c:	f0 e0       	ldi	r31, 0x00	; 0
    241e:	80 81       	ld	r24, Z
    2420:	48 2f       	mov	r20, r24
    2422:	8b 81       	ldd	r24, Y+3	; 0x03
    2424:	28 2f       	mov	r18, r24
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	81 e0       	ldi	r24, 0x01	; 1
    242a:	90 e0       	ldi	r25, 0x00	; 0
    242c:	02 2e       	mov	r0, r18
    242e:	02 c0       	rjmp	.+4      	; 0x2434 <DIO_u8SetPinDir+0x8a>
    2430:	88 0f       	add	r24, r24
    2432:	99 1f       	adc	r25, r25
    2434:	0a 94       	dec	r0
    2436:	e2 f7       	brpl	.-8      	; 0x2430 <DIO_u8SetPinDir+0x86>
    2438:	80 95       	com	r24
    243a:	84 23       	and	r24, r20
    243c:	8c 93       	st	X, r24
    243e:	ba c0       	rjmp	.+372    	; 0x25b4 <DIO_u8SetPinDir+0x20a>
				case PORT_B :CLR_BIT(DDRB_REG,u8PinIdCopy); break;
    2440:	a7 e3       	ldi	r26, 0x37	; 55
    2442:	b0 e0       	ldi	r27, 0x00	; 0
    2444:	e7 e3       	ldi	r30, 0x37	; 55
    2446:	f0 e0       	ldi	r31, 0x00	; 0
    2448:	80 81       	ld	r24, Z
    244a:	48 2f       	mov	r20, r24
    244c:	8b 81       	ldd	r24, Y+3	; 0x03
    244e:	28 2f       	mov	r18, r24
    2450:	30 e0       	ldi	r19, 0x00	; 0
    2452:	81 e0       	ldi	r24, 0x01	; 1
    2454:	90 e0       	ldi	r25, 0x00	; 0
    2456:	02 2e       	mov	r0, r18
    2458:	02 c0       	rjmp	.+4      	; 0x245e <DIO_u8SetPinDir+0xb4>
    245a:	88 0f       	add	r24, r24
    245c:	99 1f       	adc	r25, r25
    245e:	0a 94       	dec	r0
    2460:	e2 f7       	brpl	.-8      	; 0x245a <DIO_u8SetPinDir+0xb0>
    2462:	80 95       	com	r24
    2464:	84 23       	and	r24, r20
    2466:	8c 93       	st	X, r24
    2468:	a5 c0       	rjmp	.+330    	; 0x25b4 <DIO_u8SetPinDir+0x20a>
				case PORT_C :CLR_BIT(DDRC_REG,u8PinIdCopy); break;
    246a:	a4 e3       	ldi	r26, 0x34	; 52
    246c:	b0 e0       	ldi	r27, 0x00	; 0
    246e:	e4 e3       	ldi	r30, 0x34	; 52
    2470:	f0 e0       	ldi	r31, 0x00	; 0
    2472:	80 81       	ld	r24, Z
    2474:	48 2f       	mov	r20, r24
    2476:	8b 81       	ldd	r24, Y+3	; 0x03
    2478:	28 2f       	mov	r18, r24
    247a:	30 e0       	ldi	r19, 0x00	; 0
    247c:	81 e0       	ldi	r24, 0x01	; 1
    247e:	90 e0       	ldi	r25, 0x00	; 0
    2480:	02 2e       	mov	r0, r18
    2482:	02 c0       	rjmp	.+4      	; 0x2488 <DIO_u8SetPinDir+0xde>
    2484:	88 0f       	add	r24, r24
    2486:	99 1f       	adc	r25, r25
    2488:	0a 94       	dec	r0
    248a:	e2 f7       	brpl	.-8      	; 0x2484 <DIO_u8SetPinDir+0xda>
    248c:	80 95       	com	r24
    248e:	84 23       	and	r24, r20
    2490:	8c 93       	st	X, r24
    2492:	90 c0       	rjmp	.+288    	; 0x25b4 <DIO_u8SetPinDir+0x20a>
				case PORT_D :CLR_BIT(DDRD_REG,u8PinIdCopy); break;
    2494:	a1 e3       	ldi	r26, 0x31	; 49
    2496:	b0 e0       	ldi	r27, 0x00	; 0
    2498:	e1 e3       	ldi	r30, 0x31	; 49
    249a:	f0 e0       	ldi	r31, 0x00	; 0
    249c:	80 81       	ld	r24, Z
    249e:	48 2f       	mov	r20, r24
    24a0:	8b 81       	ldd	r24, Y+3	; 0x03
    24a2:	28 2f       	mov	r18, r24
    24a4:	30 e0       	ldi	r19, 0x00	; 0
    24a6:	81 e0       	ldi	r24, 0x01	; 1
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	02 2e       	mov	r0, r18
    24ac:	02 c0       	rjmp	.+4      	; 0x24b2 <DIO_u8SetPinDir+0x108>
    24ae:	88 0f       	add	r24, r24
    24b0:	99 1f       	adc	r25, r25
    24b2:	0a 94       	dec	r0
    24b4:	e2 f7       	brpl	.-8      	; 0x24ae <DIO_u8SetPinDir+0x104>
    24b6:	80 95       	com	r24
    24b8:	84 23       	and	r24, r20
    24ba:	8c 93       	st	X, r24
    24bc:	7b c0       	rjmp	.+246    	; 0x25b4 <DIO_u8SetPinDir+0x20a>
				default     :errStatus =E_NOK             ; break;
    24be:	81 e0       	ldi	r24, 0x01	; 1
    24c0:	89 83       	std	Y+1, r24	; 0x01
    24c2:	78 c0       	rjmp	.+240    	; 0x25b4 <DIO_u8SetPinDir+0x20a>
			}
		}
		else if (u8DirCopy==OUTPUT){
    24c4:	8c 81       	ldd	r24, Y+4	; 0x04
    24c6:	81 30       	cpi	r24, 0x01	; 1
    24c8:	09 f0       	breq	.+2      	; 0x24cc <DIO_u8SetPinDir+0x122>
    24ca:	72 c0       	rjmp	.+228    	; 0x25b0 <DIO_u8SetPinDir+0x206>
			switch(u8PortIdCopy){
    24cc:	8a 81       	ldd	r24, Y+2	; 0x02
    24ce:	28 2f       	mov	r18, r24
    24d0:	30 e0       	ldi	r19, 0x00	; 0
    24d2:	3e 83       	std	Y+6, r19	; 0x06
    24d4:	2d 83       	std	Y+5, r18	; 0x05
    24d6:	8d 81       	ldd	r24, Y+5	; 0x05
    24d8:	9e 81       	ldd	r25, Y+6	; 0x06
    24da:	81 30       	cpi	r24, 0x01	; 1
    24dc:	91 05       	cpc	r25, r1
    24de:	49 f1       	breq	.+82     	; 0x2532 <DIO_u8SetPinDir+0x188>
    24e0:	2d 81       	ldd	r18, Y+5	; 0x05
    24e2:	3e 81       	ldd	r19, Y+6	; 0x06
    24e4:	22 30       	cpi	r18, 0x02	; 2
    24e6:	31 05       	cpc	r19, r1
    24e8:	2c f4       	brge	.+10     	; 0x24f4 <DIO_u8SetPinDir+0x14a>
    24ea:	8d 81       	ldd	r24, Y+5	; 0x05
    24ec:	9e 81       	ldd	r25, Y+6	; 0x06
    24ee:	00 97       	sbiw	r24, 0x00	; 0
    24f0:	61 f0       	breq	.+24     	; 0x250a <DIO_u8SetPinDir+0x160>
    24f2:	5b c0       	rjmp	.+182    	; 0x25aa <DIO_u8SetPinDir+0x200>
    24f4:	2d 81       	ldd	r18, Y+5	; 0x05
    24f6:	3e 81       	ldd	r19, Y+6	; 0x06
    24f8:	22 30       	cpi	r18, 0x02	; 2
    24fa:	31 05       	cpc	r19, r1
    24fc:	71 f1       	breq	.+92     	; 0x255a <DIO_u8SetPinDir+0x1b0>
    24fe:	8d 81       	ldd	r24, Y+5	; 0x05
    2500:	9e 81       	ldd	r25, Y+6	; 0x06
    2502:	83 30       	cpi	r24, 0x03	; 3
    2504:	91 05       	cpc	r25, r1
    2506:	e9 f1       	breq	.+122    	; 0x2582 <DIO_u8SetPinDir+0x1d8>
    2508:	50 c0       	rjmp	.+160    	; 0x25aa <DIO_u8SetPinDir+0x200>
				case PORT_A :SET_BIT(DDRA_REG,u8PinIdCopy); break;
    250a:	aa e3       	ldi	r26, 0x3A	; 58
    250c:	b0 e0       	ldi	r27, 0x00	; 0
    250e:	ea e3       	ldi	r30, 0x3A	; 58
    2510:	f0 e0       	ldi	r31, 0x00	; 0
    2512:	80 81       	ld	r24, Z
    2514:	48 2f       	mov	r20, r24
    2516:	8b 81       	ldd	r24, Y+3	; 0x03
    2518:	28 2f       	mov	r18, r24
    251a:	30 e0       	ldi	r19, 0x00	; 0
    251c:	81 e0       	ldi	r24, 0x01	; 1
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	02 2e       	mov	r0, r18
    2522:	02 c0       	rjmp	.+4      	; 0x2528 <DIO_u8SetPinDir+0x17e>
    2524:	88 0f       	add	r24, r24
    2526:	99 1f       	adc	r25, r25
    2528:	0a 94       	dec	r0
    252a:	e2 f7       	brpl	.-8      	; 0x2524 <DIO_u8SetPinDir+0x17a>
    252c:	84 2b       	or	r24, r20
    252e:	8c 93       	st	X, r24
    2530:	41 c0       	rjmp	.+130    	; 0x25b4 <DIO_u8SetPinDir+0x20a>
				case PORT_B :SET_BIT(DDRB_REG,u8PinIdCopy); break;
    2532:	a7 e3       	ldi	r26, 0x37	; 55
    2534:	b0 e0       	ldi	r27, 0x00	; 0
    2536:	e7 e3       	ldi	r30, 0x37	; 55
    2538:	f0 e0       	ldi	r31, 0x00	; 0
    253a:	80 81       	ld	r24, Z
    253c:	48 2f       	mov	r20, r24
    253e:	8b 81       	ldd	r24, Y+3	; 0x03
    2540:	28 2f       	mov	r18, r24
    2542:	30 e0       	ldi	r19, 0x00	; 0
    2544:	81 e0       	ldi	r24, 0x01	; 1
    2546:	90 e0       	ldi	r25, 0x00	; 0
    2548:	02 2e       	mov	r0, r18
    254a:	02 c0       	rjmp	.+4      	; 0x2550 <DIO_u8SetPinDir+0x1a6>
    254c:	88 0f       	add	r24, r24
    254e:	99 1f       	adc	r25, r25
    2550:	0a 94       	dec	r0
    2552:	e2 f7       	brpl	.-8      	; 0x254c <DIO_u8SetPinDir+0x1a2>
    2554:	84 2b       	or	r24, r20
    2556:	8c 93       	st	X, r24
    2558:	2d c0       	rjmp	.+90     	; 0x25b4 <DIO_u8SetPinDir+0x20a>
				case PORT_C :SET_BIT(DDRC_REG,u8PinIdCopy); break;
    255a:	a4 e3       	ldi	r26, 0x34	; 52
    255c:	b0 e0       	ldi	r27, 0x00	; 0
    255e:	e4 e3       	ldi	r30, 0x34	; 52
    2560:	f0 e0       	ldi	r31, 0x00	; 0
    2562:	80 81       	ld	r24, Z
    2564:	48 2f       	mov	r20, r24
    2566:	8b 81       	ldd	r24, Y+3	; 0x03
    2568:	28 2f       	mov	r18, r24
    256a:	30 e0       	ldi	r19, 0x00	; 0
    256c:	81 e0       	ldi	r24, 0x01	; 1
    256e:	90 e0       	ldi	r25, 0x00	; 0
    2570:	02 2e       	mov	r0, r18
    2572:	02 c0       	rjmp	.+4      	; 0x2578 <DIO_u8SetPinDir+0x1ce>
    2574:	88 0f       	add	r24, r24
    2576:	99 1f       	adc	r25, r25
    2578:	0a 94       	dec	r0
    257a:	e2 f7       	brpl	.-8      	; 0x2574 <DIO_u8SetPinDir+0x1ca>
    257c:	84 2b       	or	r24, r20
    257e:	8c 93       	st	X, r24
    2580:	19 c0       	rjmp	.+50     	; 0x25b4 <DIO_u8SetPinDir+0x20a>
				case PORT_D :SET_BIT(DDRD_REG,u8PinIdCopy); break;
    2582:	a1 e3       	ldi	r26, 0x31	; 49
    2584:	b0 e0       	ldi	r27, 0x00	; 0
    2586:	e1 e3       	ldi	r30, 0x31	; 49
    2588:	f0 e0       	ldi	r31, 0x00	; 0
    258a:	80 81       	ld	r24, Z
    258c:	48 2f       	mov	r20, r24
    258e:	8b 81       	ldd	r24, Y+3	; 0x03
    2590:	28 2f       	mov	r18, r24
    2592:	30 e0       	ldi	r19, 0x00	; 0
    2594:	81 e0       	ldi	r24, 0x01	; 1
    2596:	90 e0       	ldi	r25, 0x00	; 0
    2598:	02 2e       	mov	r0, r18
    259a:	02 c0       	rjmp	.+4      	; 0x25a0 <DIO_u8SetPinDir+0x1f6>
    259c:	88 0f       	add	r24, r24
    259e:	99 1f       	adc	r25, r25
    25a0:	0a 94       	dec	r0
    25a2:	e2 f7       	brpl	.-8      	; 0x259c <DIO_u8SetPinDir+0x1f2>
    25a4:	84 2b       	or	r24, r20
    25a6:	8c 93       	st	X, r24
    25a8:	05 c0       	rjmp	.+10     	; 0x25b4 <DIO_u8SetPinDir+0x20a>
				default     :errStatus =E_NOK             ; break;
    25aa:	81 e0       	ldi	r24, 0x01	; 1
    25ac:	89 83       	std	Y+1, r24	; 0x01
    25ae:	02 c0       	rjmp	.+4      	; 0x25b4 <DIO_u8SetPinDir+0x20a>
			}
		}
		else {
			errStatus =E_NOK;
    25b0:	81 e0       	ldi	r24, 0x01	; 1
    25b2:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return errStatus;
    25b4:	89 81       	ldd	r24, Y+1	; 0x01
}
    25b6:	28 96       	adiw	r28, 0x08	; 8
    25b8:	0f b6       	in	r0, 0x3f	; 63
    25ba:	f8 94       	cli
    25bc:	de bf       	out	0x3e, r29	; 62
    25be:	0f be       	out	0x3f, r0	; 63
    25c0:	cd bf       	out	0x3d, r28	; 61
    25c2:	cf 91       	pop	r28
    25c4:	df 91       	pop	r29
    25c6:	08 95       	ret

000025c8 <DIO_u8SetPinVal>:

uint8 DIO_u8SetPinVal (uint8 u8PortIdCopy ,uint8 u8PinIdCopy,uint8 u8ValCopy ){
    25c8:	df 93       	push	r29
    25ca:	cf 93       	push	r28
    25cc:	cd b7       	in	r28, 0x3d	; 61
    25ce:	de b7       	in	r29, 0x3e	; 62
    25d0:	28 97       	sbiw	r28, 0x08	; 8
    25d2:	0f b6       	in	r0, 0x3f	; 63
    25d4:	f8 94       	cli
    25d6:	de bf       	out	0x3e, r29	; 62
    25d8:	0f be       	out	0x3f, r0	; 63
    25da:	cd bf       	out	0x3d, r28	; 61
    25dc:	8a 83       	std	Y+2, r24	; 0x02
    25de:	6b 83       	std	Y+3, r22	; 0x03
    25e0:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    25e2:	19 82       	std	Y+1, r1	; 0x01
		if (u8PinIdCopy>=PIN_0&&u8PinIdCopy<=PIN_7){
    25e4:	8b 81       	ldd	r24, Y+3	; 0x03
    25e6:	88 30       	cpi	r24, 0x08	; 8
    25e8:	08 f0       	brcs	.+2      	; 0x25ec <DIO_u8SetPinVal+0x24>
    25ea:	f3 c0       	rjmp	.+486    	; 0x27d2 <DIO_u8SetPinVal+0x20a>
		if(u8ValCopy ==LOW){
    25ec:	8c 81       	ldd	r24, Y+4	; 0x04
    25ee:	88 23       	and	r24, r24
    25f0:	09 f0       	breq	.+2      	; 0x25f4 <DIO_u8SetPinVal+0x2c>
    25f2:	77 c0       	rjmp	.+238    	; 0x26e2 <DIO_u8SetPinVal+0x11a>
			switch(u8PortIdCopy){
    25f4:	8a 81       	ldd	r24, Y+2	; 0x02
    25f6:	28 2f       	mov	r18, r24
    25f8:	30 e0       	ldi	r19, 0x00	; 0
    25fa:	38 87       	std	Y+8, r19	; 0x08
    25fc:	2f 83       	std	Y+7, r18	; 0x07
    25fe:	8f 81       	ldd	r24, Y+7	; 0x07
    2600:	98 85       	ldd	r25, Y+8	; 0x08
    2602:	81 30       	cpi	r24, 0x01	; 1
    2604:	91 05       	cpc	r25, r1
    2606:	59 f1       	breq	.+86     	; 0x265e <DIO_u8SetPinVal+0x96>
    2608:	2f 81       	ldd	r18, Y+7	; 0x07
    260a:	38 85       	ldd	r19, Y+8	; 0x08
    260c:	22 30       	cpi	r18, 0x02	; 2
    260e:	31 05       	cpc	r19, r1
    2610:	2c f4       	brge	.+10     	; 0x261c <DIO_u8SetPinVal+0x54>
    2612:	8f 81       	ldd	r24, Y+7	; 0x07
    2614:	98 85       	ldd	r25, Y+8	; 0x08
    2616:	00 97       	sbiw	r24, 0x00	; 0
    2618:	69 f0       	breq	.+26     	; 0x2634 <DIO_u8SetPinVal+0x6c>
    261a:	60 c0       	rjmp	.+192    	; 0x26dc <DIO_u8SetPinVal+0x114>
    261c:	2f 81       	ldd	r18, Y+7	; 0x07
    261e:	38 85       	ldd	r19, Y+8	; 0x08
    2620:	22 30       	cpi	r18, 0x02	; 2
    2622:	31 05       	cpc	r19, r1
    2624:	89 f1       	breq	.+98     	; 0x2688 <DIO_u8SetPinVal+0xc0>
    2626:	8f 81       	ldd	r24, Y+7	; 0x07
    2628:	98 85       	ldd	r25, Y+8	; 0x08
    262a:	83 30       	cpi	r24, 0x03	; 3
    262c:	91 05       	cpc	r25, r1
    262e:	09 f4       	brne	.+2      	; 0x2632 <DIO_u8SetPinVal+0x6a>
    2630:	40 c0       	rjmp	.+128    	; 0x26b2 <DIO_u8SetPinVal+0xea>
    2632:	54 c0       	rjmp	.+168    	; 0x26dc <DIO_u8SetPinVal+0x114>
				case PORT_A :CLR_BIT(PORTA_REG,u8PinIdCopy); break;
    2634:	ab e3       	ldi	r26, 0x3B	; 59
    2636:	b0 e0       	ldi	r27, 0x00	; 0
    2638:	eb e3       	ldi	r30, 0x3B	; 59
    263a:	f0 e0       	ldi	r31, 0x00	; 0
    263c:	80 81       	ld	r24, Z
    263e:	48 2f       	mov	r20, r24
    2640:	8b 81       	ldd	r24, Y+3	; 0x03
    2642:	28 2f       	mov	r18, r24
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	81 e0       	ldi	r24, 0x01	; 1
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	02 2e       	mov	r0, r18
    264c:	02 c0       	rjmp	.+4      	; 0x2652 <DIO_u8SetPinVal+0x8a>
    264e:	88 0f       	add	r24, r24
    2650:	99 1f       	adc	r25, r25
    2652:	0a 94       	dec	r0
    2654:	e2 f7       	brpl	.-8      	; 0x264e <DIO_u8SetPinVal+0x86>
    2656:	80 95       	com	r24
    2658:	84 23       	and	r24, r20
    265a:	8c 93       	st	X, r24
    265c:	ba c0       	rjmp	.+372    	; 0x27d2 <DIO_u8SetPinVal+0x20a>
				case PORT_B :CLR_BIT(PORTB_REG,u8PinIdCopy); break;
    265e:	a8 e3       	ldi	r26, 0x38	; 56
    2660:	b0 e0       	ldi	r27, 0x00	; 0
    2662:	e8 e3       	ldi	r30, 0x38	; 56
    2664:	f0 e0       	ldi	r31, 0x00	; 0
    2666:	80 81       	ld	r24, Z
    2668:	48 2f       	mov	r20, r24
    266a:	8b 81       	ldd	r24, Y+3	; 0x03
    266c:	28 2f       	mov	r18, r24
    266e:	30 e0       	ldi	r19, 0x00	; 0
    2670:	81 e0       	ldi	r24, 0x01	; 1
    2672:	90 e0       	ldi	r25, 0x00	; 0
    2674:	02 2e       	mov	r0, r18
    2676:	02 c0       	rjmp	.+4      	; 0x267c <DIO_u8SetPinVal+0xb4>
    2678:	88 0f       	add	r24, r24
    267a:	99 1f       	adc	r25, r25
    267c:	0a 94       	dec	r0
    267e:	e2 f7       	brpl	.-8      	; 0x2678 <DIO_u8SetPinVal+0xb0>
    2680:	80 95       	com	r24
    2682:	84 23       	and	r24, r20
    2684:	8c 93       	st	X, r24
    2686:	a5 c0       	rjmp	.+330    	; 0x27d2 <DIO_u8SetPinVal+0x20a>
				case PORT_C :CLR_BIT(PORTC_REG,u8PinIdCopy); break;
    2688:	a5 e3       	ldi	r26, 0x35	; 53
    268a:	b0 e0       	ldi	r27, 0x00	; 0
    268c:	e5 e3       	ldi	r30, 0x35	; 53
    268e:	f0 e0       	ldi	r31, 0x00	; 0
    2690:	80 81       	ld	r24, Z
    2692:	48 2f       	mov	r20, r24
    2694:	8b 81       	ldd	r24, Y+3	; 0x03
    2696:	28 2f       	mov	r18, r24
    2698:	30 e0       	ldi	r19, 0x00	; 0
    269a:	81 e0       	ldi	r24, 0x01	; 1
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	02 2e       	mov	r0, r18
    26a0:	02 c0       	rjmp	.+4      	; 0x26a6 <DIO_u8SetPinVal+0xde>
    26a2:	88 0f       	add	r24, r24
    26a4:	99 1f       	adc	r25, r25
    26a6:	0a 94       	dec	r0
    26a8:	e2 f7       	brpl	.-8      	; 0x26a2 <DIO_u8SetPinVal+0xda>
    26aa:	80 95       	com	r24
    26ac:	84 23       	and	r24, r20
    26ae:	8c 93       	st	X, r24
    26b0:	90 c0       	rjmp	.+288    	; 0x27d2 <DIO_u8SetPinVal+0x20a>
				case PORT_D :CLR_BIT(PORTD_REG,u8PinIdCopy); break;
    26b2:	a2 e3       	ldi	r26, 0x32	; 50
    26b4:	b0 e0       	ldi	r27, 0x00	; 0
    26b6:	e2 e3       	ldi	r30, 0x32	; 50
    26b8:	f0 e0       	ldi	r31, 0x00	; 0
    26ba:	80 81       	ld	r24, Z
    26bc:	48 2f       	mov	r20, r24
    26be:	8b 81       	ldd	r24, Y+3	; 0x03
    26c0:	28 2f       	mov	r18, r24
    26c2:	30 e0       	ldi	r19, 0x00	; 0
    26c4:	81 e0       	ldi	r24, 0x01	; 1
    26c6:	90 e0       	ldi	r25, 0x00	; 0
    26c8:	02 2e       	mov	r0, r18
    26ca:	02 c0       	rjmp	.+4      	; 0x26d0 <DIO_u8SetPinVal+0x108>
    26cc:	88 0f       	add	r24, r24
    26ce:	99 1f       	adc	r25, r25
    26d0:	0a 94       	dec	r0
    26d2:	e2 f7       	brpl	.-8      	; 0x26cc <DIO_u8SetPinVal+0x104>
    26d4:	80 95       	com	r24
    26d6:	84 23       	and	r24, r20
    26d8:	8c 93       	st	X, r24
    26da:	7b c0       	rjmp	.+246    	; 0x27d2 <DIO_u8SetPinVal+0x20a>
				default     :errStatus =E_NOK              ;  break;
    26dc:	81 e0       	ldi	r24, 0x01	; 1
    26de:	89 83       	std	Y+1, r24	; 0x01
    26e0:	78 c0       	rjmp	.+240    	; 0x27d2 <DIO_u8SetPinVal+0x20a>
			}
		}
		else if (u8ValCopy ==HIGH){
    26e2:	8c 81       	ldd	r24, Y+4	; 0x04
    26e4:	81 30       	cpi	r24, 0x01	; 1
    26e6:	09 f0       	breq	.+2      	; 0x26ea <DIO_u8SetPinVal+0x122>
    26e8:	72 c0       	rjmp	.+228    	; 0x27ce <DIO_u8SetPinVal+0x206>
			switch(u8PortIdCopy){
    26ea:	8a 81       	ldd	r24, Y+2	; 0x02
    26ec:	28 2f       	mov	r18, r24
    26ee:	30 e0       	ldi	r19, 0x00	; 0
    26f0:	3e 83       	std	Y+6, r19	; 0x06
    26f2:	2d 83       	std	Y+5, r18	; 0x05
    26f4:	8d 81       	ldd	r24, Y+5	; 0x05
    26f6:	9e 81       	ldd	r25, Y+6	; 0x06
    26f8:	81 30       	cpi	r24, 0x01	; 1
    26fa:	91 05       	cpc	r25, r1
    26fc:	49 f1       	breq	.+82     	; 0x2750 <DIO_u8SetPinVal+0x188>
    26fe:	2d 81       	ldd	r18, Y+5	; 0x05
    2700:	3e 81       	ldd	r19, Y+6	; 0x06
    2702:	22 30       	cpi	r18, 0x02	; 2
    2704:	31 05       	cpc	r19, r1
    2706:	2c f4       	brge	.+10     	; 0x2712 <DIO_u8SetPinVal+0x14a>
    2708:	8d 81       	ldd	r24, Y+5	; 0x05
    270a:	9e 81       	ldd	r25, Y+6	; 0x06
    270c:	00 97       	sbiw	r24, 0x00	; 0
    270e:	61 f0       	breq	.+24     	; 0x2728 <DIO_u8SetPinVal+0x160>
    2710:	5b c0       	rjmp	.+182    	; 0x27c8 <DIO_u8SetPinVal+0x200>
    2712:	2d 81       	ldd	r18, Y+5	; 0x05
    2714:	3e 81       	ldd	r19, Y+6	; 0x06
    2716:	22 30       	cpi	r18, 0x02	; 2
    2718:	31 05       	cpc	r19, r1
    271a:	71 f1       	breq	.+92     	; 0x2778 <DIO_u8SetPinVal+0x1b0>
    271c:	8d 81       	ldd	r24, Y+5	; 0x05
    271e:	9e 81       	ldd	r25, Y+6	; 0x06
    2720:	83 30       	cpi	r24, 0x03	; 3
    2722:	91 05       	cpc	r25, r1
    2724:	e9 f1       	breq	.+122    	; 0x27a0 <DIO_u8SetPinVal+0x1d8>
    2726:	50 c0       	rjmp	.+160    	; 0x27c8 <DIO_u8SetPinVal+0x200>
				case PORT_A :SET_BIT(PORTA_REG,u8PinIdCopy); break;
    2728:	ab e3       	ldi	r26, 0x3B	; 59
    272a:	b0 e0       	ldi	r27, 0x00	; 0
    272c:	eb e3       	ldi	r30, 0x3B	; 59
    272e:	f0 e0       	ldi	r31, 0x00	; 0
    2730:	80 81       	ld	r24, Z
    2732:	48 2f       	mov	r20, r24
    2734:	8b 81       	ldd	r24, Y+3	; 0x03
    2736:	28 2f       	mov	r18, r24
    2738:	30 e0       	ldi	r19, 0x00	; 0
    273a:	81 e0       	ldi	r24, 0x01	; 1
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	02 2e       	mov	r0, r18
    2740:	02 c0       	rjmp	.+4      	; 0x2746 <DIO_u8SetPinVal+0x17e>
    2742:	88 0f       	add	r24, r24
    2744:	99 1f       	adc	r25, r25
    2746:	0a 94       	dec	r0
    2748:	e2 f7       	brpl	.-8      	; 0x2742 <DIO_u8SetPinVal+0x17a>
    274a:	84 2b       	or	r24, r20
    274c:	8c 93       	st	X, r24
    274e:	41 c0       	rjmp	.+130    	; 0x27d2 <DIO_u8SetPinVal+0x20a>
				case PORT_B :SET_BIT(PORTB_REG,u8PinIdCopy); break;
    2750:	a8 e3       	ldi	r26, 0x38	; 56
    2752:	b0 e0       	ldi	r27, 0x00	; 0
    2754:	e8 e3       	ldi	r30, 0x38	; 56
    2756:	f0 e0       	ldi	r31, 0x00	; 0
    2758:	80 81       	ld	r24, Z
    275a:	48 2f       	mov	r20, r24
    275c:	8b 81       	ldd	r24, Y+3	; 0x03
    275e:	28 2f       	mov	r18, r24
    2760:	30 e0       	ldi	r19, 0x00	; 0
    2762:	81 e0       	ldi	r24, 0x01	; 1
    2764:	90 e0       	ldi	r25, 0x00	; 0
    2766:	02 2e       	mov	r0, r18
    2768:	02 c0       	rjmp	.+4      	; 0x276e <DIO_u8SetPinVal+0x1a6>
    276a:	88 0f       	add	r24, r24
    276c:	99 1f       	adc	r25, r25
    276e:	0a 94       	dec	r0
    2770:	e2 f7       	brpl	.-8      	; 0x276a <DIO_u8SetPinVal+0x1a2>
    2772:	84 2b       	or	r24, r20
    2774:	8c 93       	st	X, r24
    2776:	2d c0       	rjmp	.+90     	; 0x27d2 <DIO_u8SetPinVal+0x20a>
				case PORT_C :SET_BIT(PORTC_REG,u8PinIdCopy); break;
    2778:	a5 e3       	ldi	r26, 0x35	; 53
    277a:	b0 e0       	ldi	r27, 0x00	; 0
    277c:	e5 e3       	ldi	r30, 0x35	; 53
    277e:	f0 e0       	ldi	r31, 0x00	; 0
    2780:	80 81       	ld	r24, Z
    2782:	48 2f       	mov	r20, r24
    2784:	8b 81       	ldd	r24, Y+3	; 0x03
    2786:	28 2f       	mov	r18, r24
    2788:	30 e0       	ldi	r19, 0x00	; 0
    278a:	81 e0       	ldi	r24, 0x01	; 1
    278c:	90 e0       	ldi	r25, 0x00	; 0
    278e:	02 2e       	mov	r0, r18
    2790:	02 c0       	rjmp	.+4      	; 0x2796 <DIO_u8SetPinVal+0x1ce>
    2792:	88 0f       	add	r24, r24
    2794:	99 1f       	adc	r25, r25
    2796:	0a 94       	dec	r0
    2798:	e2 f7       	brpl	.-8      	; 0x2792 <DIO_u8SetPinVal+0x1ca>
    279a:	84 2b       	or	r24, r20
    279c:	8c 93       	st	X, r24
    279e:	19 c0       	rjmp	.+50     	; 0x27d2 <DIO_u8SetPinVal+0x20a>
				case PORT_D :SET_BIT(PORTD_REG,u8PinIdCopy); break;
    27a0:	a2 e3       	ldi	r26, 0x32	; 50
    27a2:	b0 e0       	ldi	r27, 0x00	; 0
    27a4:	e2 e3       	ldi	r30, 0x32	; 50
    27a6:	f0 e0       	ldi	r31, 0x00	; 0
    27a8:	80 81       	ld	r24, Z
    27aa:	48 2f       	mov	r20, r24
    27ac:	8b 81       	ldd	r24, Y+3	; 0x03
    27ae:	28 2f       	mov	r18, r24
    27b0:	30 e0       	ldi	r19, 0x00	; 0
    27b2:	81 e0       	ldi	r24, 0x01	; 1
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	02 2e       	mov	r0, r18
    27b8:	02 c0       	rjmp	.+4      	; 0x27be <DIO_u8SetPinVal+0x1f6>
    27ba:	88 0f       	add	r24, r24
    27bc:	99 1f       	adc	r25, r25
    27be:	0a 94       	dec	r0
    27c0:	e2 f7       	brpl	.-8      	; 0x27ba <DIO_u8SetPinVal+0x1f2>
    27c2:	84 2b       	or	r24, r20
    27c4:	8c 93       	st	X, r24
    27c6:	05 c0       	rjmp	.+10     	; 0x27d2 <DIO_u8SetPinVal+0x20a>
				default     :errStatus =E_NOK              ; break;
    27c8:	81 e0       	ldi	r24, 0x01	; 1
    27ca:	89 83       	std	Y+1, r24	; 0x01
    27cc:	02 c0       	rjmp	.+4      	; 0x27d2 <DIO_u8SetPinVal+0x20a>
			}
		}
		else {
			errStatus =E_NOK;
    27ce:	81 e0       	ldi	r24, 0x01	; 1
    27d0:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return errStatus;
    27d2:	89 81       	ldd	r24, Y+1	; 0x01

}
    27d4:	28 96       	adiw	r28, 0x08	; 8
    27d6:	0f b6       	in	r0, 0x3f	; 63
    27d8:	f8 94       	cli
    27da:	de bf       	out	0x3e, r29	; 62
    27dc:	0f be       	out	0x3f, r0	; 63
    27de:	cd bf       	out	0x3d, r28	; 61
    27e0:	cf 91       	pop	r28
    27e2:	df 91       	pop	r29
    27e4:	08 95       	ret

000027e6 <DIO_u8GetPinVal>:
uint8 DIO_u8GetPinVal (uint8 u8PortIdCopy ,uint8 u8PinIdCopy ,uint8 * u8pValCopy){
    27e6:	df 93       	push	r29
    27e8:	cf 93       	push	r28
    27ea:	cd b7       	in	r28, 0x3d	; 61
    27ec:	de b7       	in	r29, 0x3e	; 62
    27ee:	27 97       	sbiw	r28, 0x07	; 7
    27f0:	0f b6       	in	r0, 0x3f	; 63
    27f2:	f8 94       	cli
    27f4:	de bf       	out	0x3e, r29	; 62
    27f6:	0f be       	out	0x3f, r0	; 63
    27f8:	cd bf       	out	0x3d, r28	; 61
    27fa:	8a 83       	std	Y+2, r24	; 0x02
    27fc:	6b 83       	std	Y+3, r22	; 0x03
    27fe:	5d 83       	std	Y+5, r21	; 0x05
    2800:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    2802:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    2804:	8a 81       	ldd	r24, Y+2	; 0x02
    2806:	28 2f       	mov	r18, r24
    2808:	30 e0       	ldi	r19, 0x00	; 0
    280a:	3f 83       	std	Y+7, r19	; 0x07
    280c:	2e 83       	std	Y+6, r18	; 0x06
    280e:	4e 81       	ldd	r20, Y+6	; 0x06
    2810:	5f 81       	ldd	r21, Y+7	; 0x07
    2812:	41 30       	cpi	r20, 0x01	; 1
    2814:	51 05       	cpc	r21, r1
    2816:	59 f1       	breq	.+86     	; 0x286e <DIO_u8GetPinVal+0x88>
    2818:	8e 81       	ldd	r24, Y+6	; 0x06
    281a:	9f 81       	ldd	r25, Y+7	; 0x07
    281c:	82 30       	cpi	r24, 0x02	; 2
    281e:	91 05       	cpc	r25, r1
    2820:	34 f4       	brge	.+12     	; 0x282e <DIO_u8GetPinVal+0x48>
    2822:	2e 81       	ldd	r18, Y+6	; 0x06
    2824:	3f 81       	ldd	r19, Y+7	; 0x07
    2826:	21 15       	cp	r18, r1
    2828:	31 05       	cpc	r19, r1
    282a:	69 f0       	breq	.+26     	; 0x2846 <DIO_u8GetPinVal+0x60>
    282c:	5c c0       	rjmp	.+184    	; 0x28e6 <DIO_u8GetPinVal+0x100>
    282e:	4e 81       	ldd	r20, Y+6	; 0x06
    2830:	5f 81       	ldd	r21, Y+7	; 0x07
    2832:	42 30       	cpi	r20, 0x02	; 2
    2834:	51 05       	cpc	r21, r1
    2836:	79 f1       	breq	.+94     	; 0x2896 <DIO_u8GetPinVal+0xb0>
    2838:	8e 81       	ldd	r24, Y+6	; 0x06
    283a:	9f 81       	ldd	r25, Y+7	; 0x07
    283c:	83 30       	cpi	r24, 0x03	; 3
    283e:	91 05       	cpc	r25, r1
    2840:	09 f4       	brne	.+2      	; 0x2844 <DIO_u8GetPinVal+0x5e>
    2842:	3d c0       	rjmp	.+122    	; 0x28be <DIO_u8GetPinVal+0xd8>
    2844:	50 c0       	rjmp	.+160    	; 0x28e6 <DIO_u8GetPinVal+0x100>
		case PORT_A :* u8pValCopy=GET_BIT(PINA_REG,u8PinIdCopy); break;
    2846:	e9 e3       	ldi	r30, 0x39	; 57
    2848:	f0 e0       	ldi	r31, 0x00	; 0
    284a:	80 81       	ld	r24, Z
    284c:	28 2f       	mov	r18, r24
    284e:	30 e0       	ldi	r19, 0x00	; 0
    2850:	8b 81       	ldd	r24, Y+3	; 0x03
    2852:	88 2f       	mov	r24, r24
    2854:	90 e0       	ldi	r25, 0x00	; 0
    2856:	a9 01       	movw	r20, r18
    2858:	02 c0       	rjmp	.+4      	; 0x285e <DIO_u8GetPinVal+0x78>
    285a:	55 95       	asr	r21
    285c:	47 95       	ror	r20
    285e:	8a 95       	dec	r24
    2860:	e2 f7       	brpl	.-8      	; 0x285a <DIO_u8GetPinVal+0x74>
    2862:	ca 01       	movw	r24, r20
    2864:	81 70       	andi	r24, 0x01	; 1
    2866:	ec 81       	ldd	r30, Y+4	; 0x04
    2868:	fd 81       	ldd	r31, Y+5	; 0x05
    286a:	80 83       	st	Z, r24
    286c:	3e c0       	rjmp	.+124    	; 0x28ea <DIO_u8GetPinVal+0x104>
	    case PORT_B :* u8pValCopy=GET_BIT(PINB_REG,u8PinIdCopy); break;
    286e:	e6 e3       	ldi	r30, 0x36	; 54
    2870:	f0 e0       	ldi	r31, 0x00	; 0
    2872:	80 81       	ld	r24, Z
    2874:	28 2f       	mov	r18, r24
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	8b 81       	ldd	r24, Y+3	; 0x03
    287a:	88 2f       	mov	r24, r24
    287c:	90 e0       	ldi	r25, 0x00	; 0
    287e:	a9 01       	movw	r20, r18
    2880:	02 c0       	rjmp	.+4      	; 0x2886 <DIO_u8GetPinVal+0xa0>
    2882:	55 95       	asr	r21
    2884:	47 95       	ror	r20
    2886:	8a 95       	dec	r24
    2888:	e2 f7       	brpl	.-8      	; 0x2882 <DIO_u8GetPinVal+0x9c>
    288a:	ca 01       	movw	r24, r20
    288c:	81 70       	andi	r24, 0x01	; 1
    288e:	ec 81       	ldd	r30, Y+4	; 0x04
    2890:	fd 81       	ldd	r31, Y+5	; 0x05
    2892:	80 83       	st	Z, r24
    2894:	2a c0       	rjmp	.+84     	; 0x28ea <DIO_u8GetPinVal+0x104>
        case PORT_C :* u8pValCopy=GET_BIT(PINC_REG,u8PinIdCopy); break;
    2896:	e3 e3       	ldi	r30, 0x33	; 51
    2898:	f0 e0       	ldi	r31, 0x00	; 0
    289a:	80 81       	ld	r24, Z
    289c:	28 2f       	mov	r18, r24
    289e:	30 e0       	ldi	r19, 0x00	; 0
    28a0:	8b 81       	ldd	r24, Y+3	; 0x03
    28a2:	88 2f       	mov	r24, r24
    28a4:	90 e0       	ldi	r25, 0x00	; 0
    28a6:	a9 01       	movw	r20, r18
    28a8:	02 c0       	rjmp	.+4      	; 0x28ae <DIO_u8GetPinVal+0xc8>
    28aa:	55 95       	asr	r21
    28ac:	47 95       	ror	r20
    28ae:	8a 95       	dec	r24
    28b0:	e2 f7       	brpl	.-8      	; 0x28aa <DIO_u8GetPinVal+0xc4>
    28b2:	ca 01       	movw	r24, r20
    28b4:	81 70       	andi	r24, 0x01	; 1
    28b6:	ec 81       	ldd	r30, Y+4	; 0x04
    28b8:	fd 81       	ldd	r31, Y+5	; 0x05
    28ba:	80 83       	st	Z, r24
    28bc:	16 c0       	rjmp	.+44     	; 0x28ea <DIO_u8GetPinVal+0x104>
		case PORT_D :* u8pValCopy=GET_BIT(PIND_REG,u8PinIdCopy); break;
    28be:	e0 e3       	ldi	r30, 0x30	; 48
    28c0:	f0 e0       	ldi	r31, 0x00	; 0
    28c2:	80 81       	ld	r24, Z
    28c4:	28 2f       	mov	r18, r24
    28c6:	30 e0       	ldi	r19, 0x00	; 0
    28c8:	8b 81       	ldd	r24, Y+3	; 0x03
    28ca:	88 2f       	mov	r24, r24
    28cc:	90 e0       	ldi	r25, 0x00	; 0
    28ce:	a9 01       	movw	r20, r18
    28d0:	02 c0       	rjmp	.+4      	; 0x28d6 <DIO_u8GetPinVal+0xf0>
    28d2:	55 95       	asr	r21
    28d4:	47 95       	ror	r20
    28d6:	8a 95       	dec	r24
    28d8:	e2 f7       	brpl	.-8      	; 0x28d2 <DIO_u8GetPinVal+0xec>
    28da:	ca 01       	movw	r24, r20
    28dc:	81 70       	andi	r24, 0x01	; 1
    28de:	ec 81       	ldd	r30, Y+4	; 0x04
    28e0:	fd 81       	ldd	r31, Y+5	; 0x05
    28e2:	80 83       	st	Z, r24
    28e4:	02 c0       	rjmp	.+4      	; 0x28ea <DIO_u8GetPinVal+0x104>
		default     :errStatus =E_NOK                          ; break;
    28e6:	81 e0       	ldi	r24, 0x01	; 1
    28e8:	89 83       	std	Y+1, r24	; 0x01
	}	
	return errStatus;
    28ea:	89 81       	ldd	r24, Y+1	; 0x01
}
    28ec:	27 96       	adiw	r28, 0x07	; 7
    28ee:	0f b6       	in	r0, 0x3f	; 63
    28f0:	f8 94       	cli
    28f2:	de bf       	out	0x3e, r29	; 62
    28f4:	0f be       	out	0x3f, r0	; 63
    28f6:	cd bf       	out	0x3d, r28	; 61
    28f8:	cf 91       	pop	r28
    28fa:	df 91       	pop	r29
    28fc:	08 95       	ret

000028fe <DIO_u8TogglePin>:

void  DIO_u8TogglePin(uint8 u8PortIdCopy	,uint8 u8PinIdCopy ){
    28fe:	df 93       	push	r29
    2900:	cf 93       	push	r28
    2902:	00 d0       	rcall	.+0      	; 0x2904 <DIO_u8TogglePin+0x6>
    2904:	00 d0       	rcall	.+0      	; 0x2906 <DIO_u8TogglePin+0x8>
    2906:	cd b7       	in	r28, 0x3d	; 61
    2908:	de b7       	in	r29, 0x3e	; 62
    290a:	89 83       	std	Y+1, r24	; 0x01
    290c:	6a 83       	std	Y+2, r22	; 0x02
	switch(u8PortIdCopy){
    290e:	89 81       	ldd	r24, Y+1	; 0x01
    2910:	28 2f       	mov	r18, r24
    2912:	30 e0       	ldi	r19, 0x00	; 0
    2914:	3c 83       	std	Y+4, r19	; 0x04
    2916:	2b 83       	std	Y+3, r18	; 0x03
    2918:	8b 81       	ldd	r24, Y+3	; 0x03
    291a:	9c 81       	ldd	r25, Y+4	; 0x04
    291c:	81 30       	cpi	r24, 0x01	; 1
    291e:	91 05       	cpc	r25, r1
    2920:	49 f1       	breq	.+82     	; 0x2974 <DIO_u8TogglePin+0x76>
    2922:	2b 81       	ldd	r18, Y+3	; 0x03
    2924:	3c 81       	ldd	r19, Y+4	; 0x04
    2926:	22 30       	cpi	r18, 0x02	; 2
    2928:	31 05       	cpc	r19, r1
    292a:	2c f4       	brge	.+10     	; 0x2936 <DIO_u8TogglePin+0x38>
    292c:	8b 81       	ldd	r24, Y+3	; 0x03
    292e:	9c 81       	ldd	r25, Y+4	; 0x04
    2930:	00 97       	sbiw	r24, 0x00	; 0
    2932:	61 f0       	breq	.+24     	; 0x294c <DIO_u8TogglePin+0x4e>
    2934:	5a c0       	rjmp	.+180    	; 0x29ea <DIO_u8TogglePin+0xec>
    2936:	2b 81       	ldd	r18, Y+3	; 0x03
    2938:	3c 81       	ldd	r19, Y+4	; 0x04
    293a:	22 30       	cpi	r18, 0x02	; 2
    293c:	31 05       	cpc	r19, r1
    293e:	71 f1       	breq	.+92     	; 0x299c <DIO_u8TogglePin+0x9e>
    2940:	8b 81       	ldd	r24, Y+3	; 0x03
    2942:	9c 81       	ldd	r25, Y+4	; 0x04
    2944:	83 30       	cpi	r24, 0x03	; 3
    2946:	91 05       	cpc	r25, r1
    2948:	e9 f1       	breq	.+122    	; 0x29c4 <DIO_u8TogglePin+0xc6>
    294a:	4f c0       	rjmp	.+158    	; 0x29ea <DIO_u8TogglePin+0xec>

		case PORT_A:
            TOG_BIT(PORTA_REG,u8PinIdCopy);
    294c:	ab e3       	ldi	r26, 0x3B	; 59
    294e:	b0 e0       	ldi	r27, 0x00	; 0
    2950:	eb e3       	ldi	r30, 0x3B	; 59
    2952:	f0 e0       	ldi	r31, 0x00	; 0
    2954:	80 81       	ld	r24, Z
    2956:	48 2f       	mov	r20, r24
    2958:	8a 81       	ldd	r24, Y+2	; 0x02
    295a:	28 2f       	mov	r18, r24
    295c:	30 e0       	ldi	r19, 0x00	; 0
    295e:	81 e0       	ldi	r24, 0x01	; 1
    2960:	90 e0       	ldi	r25, 0x00	; 0
    2962:	02 2e       	mov	r0, r18
    2964:	02 c0       	rjmp	.+4      	; 0x296a <DIO_u8TogglePin+0x6c>
    2966:	88 0f       	add	r24, r24
    2968:	99 1f       	adc	r25, r25
    296a:	0a 94       	dec	r0
    296c:	e2 f7       	brpl	.-8      	; 0x2966 <DIO_u8TogglePin+0x68>
    296e:	84 27       	eor	r24, r20
    2970:	8c 93       	st	X, r24
    2972:	3b c0       	rjmp	.+118    	; 0x29ea <DIO_u8TogglePin+0xec>
			break;

	    case PORT_B:
            TOG_BIT(PORTB_REG,u8PinIdCopy);
    2974:	a8 e3       	ldi	r26, 0x38	; 56
    2976:	b0 e0       	ldi	r27, 0x00	; 0
    2978:	e8 e3       	ldi	r30, 0x38	; 56
    297a:	f0 e0       	ldi	r31, 0x00	; 0
    297c:	80 81       	ld	r24, Z
    297e:	48 2f       	mov	r20, r24
    2980:	8a 81       	ldd	r24, Y+2	; 0x02
    2982:	28 2f       	mov	r18, r24
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	81 e0       	ldi	r24, 0x01	; 1
    2988:	90 e0       	ldi	r25, 0x00	; 0
    298a:	02 2e       	mov	r0, r18
    298c:	02 c0       	rjmp	.+4      	; 0x2992 <DIO_u8TogglePin+0x94>
    298e:	88 0f       	add	r24, r24
    2990:	99 1f       	adc	r25, r25
    2992:	0a 94       	dec	r0
    2994:	e2 f7       	brpl	.-8      	; 0x298e <DIO_u8TogglePin+0x90>
    2996:	84 27       	eor	r24, r20
    2998:	8c 93       	st	X, r24
    299a:	27 c0       	rjmp	.+78     	; 0x29ea <DIO_u8TogglePin+0xec>
			break;

	    case PORT_C:
            TOG_BIT(PORTC_REG,u8PinIdCopy);
    299c:	a5 e3       	ldi	r26, 0x35	; 53
    299e:	b0 e0       	ldi	r27, 0x00	; 0
    29a0:	e5 e3       	ldi	r30, 0x35	; 53
    29a2:	f0 e0       	ldi	r31, 0x00	; 0
    29a4:	80 81       	ld	r24, Z
    29a6:	48 2f       	mov	r20, r24
    29a8:	8a 81       	ldd	r24, Y+2	; 0x02
    29aa:	28 2f       	mov	r18, r24
    29ac:	30 e0       	ldi	r19, 0x00	; 0
    29ae:	81 e0       	ldi	r24, 0x01	; 1
    29b0:	90 e0       	ldi	r25, 0x00	; 0
    29b2:	02 2e       	mov	r0, r18
    29b4:	02 c0       	rjmp	.+4      	; 0x29ba <DIO_u8TogglePin+0xbc>
    29b6:	88 0f       	add	r24, r24
    29b8:	99 1f       	adc	r25, r25
    29ba:	0a 94       	dec	r0
    29bc:	e2 f7       	brpl	.-8      	; 0x29b6 <DIO_u8TogglePin+0xb8>
    29be:	84 27       	eor	r24, r20
    29c0:	8c 93       	st	X, r24
    29c2:	13 c0       	rjmp	.+38     	; 0x29ea <DIO_u8TogglePin+0xec>
			break;

		case PORT_D:
            TOG_BIT(PORTD_REG,u8PinIdCopy);
    29c4:	a2 e3       	ldi	r26, 0x32	; 50
    29c6:	b0 e0       	ldi	r27, 0x00	; 0
    29c8:	e2 e3       	ldi	r30, 0x32	; 50
    29ca:	f0 e0       	ldi	r31, 0x00	; 0
    29cc:	80 81       	ld	r24, Z
    29ce:	48 2f       	mov	r20, r24
    29d0:	8a 81       	ldd	r24, Y+2	; 0x02
    29d2:	28 2f       	mov	r18, r24
    29d4:	30 e0       	ldi	r19, 0x00	; 0
    29d6:	81 e0       	ldi	r24, 0x01	; 1
    29d8:	90 e0       	ldi	r25, 0x00	; 0
    29da:	02 2e       	mov	r0, r18
    29dc:	02 c0       	rjmp	.+4      	; 0x29e2 <DIO_u8TogglePin+0xe4>
    29de:	88 0f       	add	r24, r24
    29e0:	99 1f       	adc	r25, r25
    29e2:	0a 94       	dec	r0
    29e4:	e2 f7       	brpl	.-8      	; 0x29de <DIO_u8TogglePin+0xe0>
    29e6:	84 27       	eor	r24, r20
    29e8:	8c 93       	st	X, r24
			break;
 }
}
    29ea:	0f 90       	pop	r0
    29ec:	0f 90       	pop	r0
    29ee:	0f 90       	pop	r0
    29f0:	0f 90       	pop	r0
    29f2:	cf 91       	pop	r28
    29f4:	df 91       	pop	r29
    29f6:	08 95       	ret

000029f8 <DIO_voidSetLowNibbleDir>:

void DIO_voidSetLowNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
    29f8:	df 93       	push	r29
    29fa:	cf 93       	push	r28
    29fc:	00 d0       	rcall	.+0      	; 0x29fe <DIO_voidSetLowNibbleDir+0x6>
    29fe:	0f 92       	push	r0
    2a00:	cd b7       	in	r28, 0x3d	; 61
    2a02:	de b7       	in	r29, 0x3e	; 62
    2a04:	8a 83       	std	Y+2, r24	; 0x02
    2a06:	6b 83       	std	Y+3, r22	; 0x03
	for (uint8 i=0;i<=3 ;i++){
    2a08:	19 82       	std	Y+1, r1	; 0x01
    2a0a:	08 c0       	rjmp	.+16     	; 0x2a1c <DIO_voidSetLowNibbleDir+0x24>
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
    2a0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a0e:	69 81       	ldd	r22, Y+1	; 0x01
    2a10:	4b 81       	ldd	r20, Y+3	; 0x03
    2a12:	0e 94 d5 11 	call	0x23aa	; 0x23aa <DIO_u8SetPinDir>
			break;
 }
}

void DIO_voidSetLowNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
	for (uint8 i=0;i<=3 ;i++){
    2a16:	89 81       	ldd	r24, Y+1	; 0x01
    2a18:	8f 5f       	subi	r24, 0xFF	; 255
    2a1a:	89 83       	std	Y+1, r24	; 0x01
    2a1c:	89 81       	ldd	r24, Y+1	; 0x01
    2a1e:	84 30       	cpi	r24, 0x04	; 4
    2a20:	a8 f3       	brcs	.-22     	; 0x2a0c <DIO_voidSetLowNibbleDir+0x14>
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
		}
}
    2a22:	0f 90       	pop	r0
    2a24:	0f 90       	pop	r0
    2a26:	0f 90       	pop	r0
    2a28:	cf 91       	pop	r28
    2a2a:	df 91       	pop	r29
    2a2c:	08 95       	ret

00002a2e <DIO_voidSetHighNibbleDir>:
void DIO_voidSetHighNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
    2a2e:	df 93       	push	r29
    2a30:	cf 93       	push	r28
    2a32:	00 d0       	rcall	.+0      	; 0x2a34 <DIO_voidSetHighNibbleDir+0x6>
    2a34:	0f 92       	push	r0
    2a36:	cd b7       	in	r28, 0x3d	; 61
    2a38:	de b7       	in	r29, 0x3e	; 62
    2a3a:	8a 83       	std	Y+2, r24	; 0x02
    2a3c:	6b 83       	std	Y+3, r22	; 0x03
	for (uint8 i=4;i<=7 ;i++){
    2a3e:	84 e0       	ldi	r24, 0x04	; 4
    2a40:	89 83       	std	Y+1, r24	; 0x01
    2a42:	08 c0       	rjmp	.+16     	; 0x2a54 <DIO_voidSetHighNibbleDir+0x26>
			DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
    2a44:	8a 81       	ldd	r24, Y+2	; 0x02
    2a46:	69 81       	ldd	r22, Y+1	; 0x01
    2a48:	4b 81       	ldd	r20, Y+3	; 0x03
    2a4a:	0e 94 d5 11 	call	0x23aa	; 0x23aa <DIO_u8SetPinDir>
	for (uint8 i=0;i<=3 ;i++){
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
		}
}
void DIO_voidSetHighNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
	for (uint8 i=4;i<=7 ;i++){
    2a4e:	89 81       	ldd	r24, Y+1	; 0x01
    2a50:	8f 5f       	subi	r24, 0xFF	; 255
    2a52:	89 83       	std	Y+1, r24	; 0x01
    2a54:	89 81       	ldd	r24, Y+1	; 0x01
    2a56:	88 30       	cpi	r24, 0x08	; 8
    2a58:	a8 f3       	brcs	.-22     	; 0x2a44 <DIO_voidSetHighNibbleDir+0x16>
			DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
			}
}
    2a5a:	0f 90       	pop	r0
    2a5c:	0f 90       	pop	r0
    2a5e:	0f 90       	pop	r0
    2a60:	cf 91       	pop	r28
    2a62:	df 91       	pop	r29
    2a64:	08 95       	ret

00002a66 <DIO_voidWriteLowNibble>:
void DIO_voidWriteLowNibble(uint8 u8PortIdCopy ,uint8 u8ValCopy){
    2a66:	df 93       	push	r29
    2a68:	cf 93       	push	r28
    2a6a:	00 d0       	rcall	.+0      	; 0x2a6c <DIO_voidWriteLowNibble+0x6>
    2a6c:	00 d0       	rcall	.+0      	; 0x2a6e <DIO_voidWriteLowNibble+0x8>
    2a6e:	cd b7       	in	r28, 0x3d	; 61
    2a70:	de b7       	in	r29, 0x3e	; 62
    2a72:	89 83       	std	Y+1, r24	; 0x01
    2a74:	6a 83       	std	Y+2, r22	; 0x02
	u8ValCopy&=0x0f; ////to save four low bites make most =0
    2a76:	8a 81       	ldd	r24, Y+2	; 0x02
    2a78:	8f 70       	andi	r24, 0x0F	; 15
    2a7a:	8a 83       	std	Y+2, r24	; 0x02
	switch (u8PortIdCopy)
    2a7c:	89 81       	ldd	r24, Y+1	; 0x01
    2a7e:	28 2f       	mov	r18, r24
    2a80:	30 e0       	ldi	r19, 0x00	; 0
    2a82:	3c 83       	std	Y+4, r19	; 0x04
    2a84:	2b 83       	std	Y+3, r18	; 0x03
    2a86:	8b 81       	ldd	r24, Y+3	; 0x03
    2a88:	9c 81       	ldd	r25, Y+4	; 0x04
    2a8a:	81 30       	cpi	r24, 0x01	; 1
    2a8c:	91 05       	cpc	r25, r1
    2a8e:	29 f1       	breq	.+74     	; 0x2ada <DIO_voidWriteLowNibble+0x74>
    2a90:	2b 81       	ldd	r18, Y+3	; 0x03
    2a92:	3c 81       	ldd	r19, Y+4	; 0x04
    2a94:	22 30       	cpi	r18, 0x02	; 2
    2a96:	31 05       	cpc	r19, r1
    2a98:	2c f4       	brge	.+10     	; 0x2aa4 <DIO_voidWriteLowNibble+0x3e>
    2a9a:	8b 81       	ldd	r24, Y+3	; 0x03
    2a9c:	9c 81       	ldd	r25, Y+4	; 0x04
    2a9e:	00 97       	sbiw	r24, 0x00	; 0
    2aa0:	61 f0       	breq	.+24     	; 0x2aba <DIO_voidWriteLowNibble+0x54>
    2aa2:	4a c0       	rjmp	.+148    	; 0x2b38 <DIO_voidWriteLowNibble+0xd2>
    2aa4:	2b 81       	ldd	r18, Y+3	; 0x03
    2aa6:	3c 81       	ldd	r19, Y+4	; 0x04
    2aa8:	22 30       	cpi	r18, 0x02	; 2
    2aaa:	31 05       	cpc	r19, r1
    2aac:	31 f1       	breq	.+76     	; 0x2afa <DIO_voidWriteLowNibble+0x94>
    2aae:	8b 81       	ldd	r24, Y+3	; 0x03
    2ab0:	9c 81       	ldd	r25, Y+4	; 0x04
    2ab2:	83 30       	cpi	r24, 0x03	; 3
    2ab4:	91 05       	cpc	r25, r1
    2ab6:	89 f1       	breq	.+98     	; 0x2b1a <DIO_voidWriteLowNibble+0xb4>
    2ab8:	3f c0       	rjmp	.+126    	; 0x2b38 <DIO_voidWriteLowNibble+0xd2>
	{
		case PORT_A :
			PORTA_REG &=0xf0;
    2aba:	ab e3       	ldi	r26, 0x3B	; 59
    2abc:	b0 e0       	ldi	r27, 0x00	; 0
    2abe:	eb e3       	ldi	r30, 0x3B	; 59
    2ac0:	f0 e0       	ldi	r31, 0x00	; 0
    2ac2:	80 81       	ld	r24, Z
    2ac4:	80 7f       	andi	r24, 0xF0	; 240
    2ac6:	8c 93       	st	X, r24
			PORTA_REG|=u8ValCopy;
    2ac8:	ab e3       	ldi	r26, 0x3B	; 59
    2aca:	b0 e0       	ldi	r27, 0x00	; 0
    2acc:	eb e3       	ldi	r30, 0x3B	; 59
    2ace:	f0 e0       	ldi	r31, 0x00	; 0
    2ad0:	90 81       	ld	r25, Z
    2ad2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ad4:	89 2b       	or	r24, r25
    2ad6:	8c 93       	st	X, r24
    2ad8:	2f c0       	rjmp	.+94     	; 0x2b38 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_B :
			PORTB_REG &=0xf0;
    2ada:	a8 e3       	ldi	r26, 0x38	; 56
    2adc:	b0 e0       	ldi	r27, 0x00	; 0
    2ade:	e8 e3       	ldi	r30, 0x38	; 56
    2ae0:	f0 e0       	ldi	r31, 0x00	; 0
    2ae2:	80 81       	ld	r24, Z
    2ae4:	80 7f       	andi	r24, 0xF0	; 240
    2ae6:	8c 93       	st	X, r24
			PORTB_REG |=u8ValCopy;
    2ae8:	a8 e3       	ldi	r26, 0x38	; 56
    2aea:	b0 e0       	ldi	r27, 0x00	; 0
    2aec:	e8 e3       	ldi	r30, 0x38	; 56
    2aee:	f0 e0       	ldi	r31, 0x00	; 0
    2af0:	90 81       	ld	r25, Z
    2af2:	8a 81       	ldd	r24, Y+2	; 0x02
    2af4:	89 2b       	or	r24, r25
    2af6:	8c 93       	st	X, r24
    2af8:	1f c0       	rjmp	.+62     	; 0x2b38 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_C:
			PORTC_REG &=0xf0;
    2afa:	a5 e3       	ldi	r26, 0x35	; 53
    2afc:	b0 e0       	ldi	r27, 0x00	; 0
    2afe:	e5 e3       	ldi	r30, 0x35	; 53
    2b00:	f0 e0       	ldi	r31, 0x00	; 0
    2b02:	80 81       	ld	r24, Z
    2b04:	80 7f       	andi	r24, 0xF0	; 240
    2b06:	8c 93       	st	X, r24
			PORTC_REG |=u8ValCopy;
    2b08:	a5 e3       	ldi	r26, 0x35	; 53
    2b0a:	b0 e0       	ldi	r27, 0x00	; 0
    2b0c:	e5 e3       	ldi	r30, 0x35	; 53
    2b0e:	f0 e0       	ldi	r31, 0x00	; 0
    2b10:	90 81       	ld	r25, Z
    2b12:	8a 81       	ldd	r24, Y+2	; 0x02
    2b14:	89 2b       	or	r24, r25
    2b16:	8c 93       	st	X, r24
    2b18:	0f c0       	rjmp	.+30     	; 0x2b38 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_D :
			PORTD_REG &=0xf0;
    2b1a:	a2 e3       	ldi	r26, 0x32	; 50
    2b1c:	b0 e0       	ldi	r27, 0x00	; 0
    2b1e:	e2 e3       	ldi	r30, 0x32	; 50
    2b20:	f0 e0       	ldi	r31, 0x00	; 0
    2b22:	80 81       	ld	r24, Z
    2b24:	80 7f       	andi	r24, 0xF0	; 240
    2b26:	8c 93       	st	X, r24
			PORTD_REG |=u8ValCopy;
    2b28:	a2 e3       	ldi	r26, 0x32	; 50
    2b2a:	b0 e0       	ldi	r27, 0x00	; 0
    2b2c:	e2 e3       	ldi	r30, 0x32	; 50
    2b2e:	f0 e0       	ldi	r31, 0x00	; 0
    2b30:	90 81       	ld	r25, Z
    2b32:	8a 81       	ldd	r24, Y+2	; 0x02
    2b34:	89 2b       	or	r24, r25
    2b36:	8c 93       	st	X, r24
			break;
		default :
		   break;
	}
}
    2b38:	0f 90       	pop	r0
    2b3a:	0f 90       	pop	r0
    2b3c:	0f 90       	pop	r0
    2b3e:	0f 90       	pop	r0
    2b40:	cf 91       	pop	r28
    2b42:	df 91       	pop	r29
    2b44:	08 95       	ret

00002b46 <DIO_voidWritHighNibble>:
void DIO_voidWritHighNibble(uint8 u8PortIdCopy ,uint8 u8ValCopy){
    2b46:	df 93       	push	r29
    2b48:	cf 93       	push	r28
    2b4a:	00 d0       	rcall	.+0      	; 0x2b4c <DIO_voidWritHighNibble+0x6>
    2b4c:	00 d0       	rcall	.+0      	; 0x2b4e <DIO_voidWritHighNibble+0x8>
    2b4e:	cd b7       	in	r28, 0x3d	; 61
    2b50:	de b7       	in	r29, 0x3e	; 62
    2b52:	89 83       	std	Y+1, r24	; 0x01
    2b54:	6a 83       	std	Y+2, r22	; 0x02
	u8ValCopy&=0xf0; ////to save four most bites make low =0
    2b56:	8a 81       	ldd	r24, Y+2	; 0x02
    2b58:	80 7f       	andi	r24, 0xF0	; 240
    2b5a:	8a 83       	std	Y+2, r24	; 0x02
	switch (u8PortIdCopy)
    2b5c:	89 81       	ldd	r24, Y+1	; 0x01
    2b5e:	28 2f       	mov	r18, r24
    2b60:	30 e0       	ldi	r19, 0x00	; 0
    2b62:	3c 83       	std	Y+4, r19	; 0x04
    2b64:	2b 83       	std	Y+3, r18	; 0x03
    2b66:	8b 81       	ldd	r24, Y+3	; 0x03
    2b68:	9c 81       	ldd	r25, Y+4	; 0x04
    2b6a:	81 30       	cpi	r24, 0x01	; 1
    2b6c:	91 05       	cpc	r25, r1
    2b6e:	29 f1       	breq	.+74     	; 0x2bba <DIO_voidWritHighNibble+0x74>
    2b70:	2b 81       	ldd	r18, Y+3	; 0x03
    2b72:	3c 81       	ldd	r19, Y+4	; 0x04
    2b74:	22 30       	cpi	r18, 0x02	; 2
    2b76:	31 05       	cpc	r19, r1
    2b78:	2c f4       	brge	.+10     	; 0x2b84 <DIO_voidWritHighNibble+0x3e>
    2b7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b7c:	9c 81       	ldd	r25, Y+4	; 0x04
    2b7e:	00 97       	sbiw	r24, 0x00	; 0
    2b80:	61 f0       	breq	.+24     	; 0x2b9a <DIO_voidWritHighNibble+0x54>
    2b82:	4a c0       	rjmp	.+148    	; 0x2c18 <DIO_voidWritHighNibble+0xd2>
    2b84:	2b 81       	ldd	r18, Y+3	; 0x03
    2b86:	3c 81       	ldd	r19, Y+4	; 0x04
    2b88:	22 30       	cpi	r18, 0x02	; 2
    2b8a:	31 05       	cpc	r19, r1
    2b8c:	31 f1       	breq	.+76     	; 0x2bda <DIO_voidWritHighNibble+0x94>
    2b8e:	8b 81       	ldd	r24, Y+3	; 0x03
    2b90:	9c 81       	ldd	r25, Y+4	; 0x04
    2b92:	83 30       	cpi	r24, 0x03	; 3
    2b94:	91 05       	cpc	r25, r1
    2b96:	89 f1       	breq	.+98     	; 0x2bfa <DIO_voidWritHighNibble+0xb4>
    2b98:	3f c0       	rjmp	.+126    	; 0x2c18 <DIO_voidWritHighNibble+0xd2>
	{
		case PORT_A :
			PORTA_REG &=0x0f;
    2b9a:	ab e3       	ldi	r26, 0x3B	; 59
    2b9c:	b0 e0       	ldi	r27, 0x00	; 0
    2b9e:	eb e3       	ldi	r30, 0x3B	; 59
    2ba0:	f0 e0       	ldi	r31, 0x00	; 0
    2ba2:	80 81       	ld	r24, Z
    2ba4:	8f 70       	andi	r24, 0x0F	; 15
    2ba6:	8c 93       	st	X, r24
			PORTA_REG|=u8ValCopy;
    2ba8:	ab e3       	ldi	r26, 0x3B	; 59
    2baa:	b0 e0       	ldi	r27, 0x00	; 0
    2bac:	eb e3       	ldi	r30, 0x3B	; 59
    2bae:	f0 e0       	ldi	r31, 0x00	; 0
    2bb0:	90 81       	ld	r25, Z
    2bb2:	8a 81       	ldd	r24, Y+2	; 0x02
    2bb4:	89 2b       	or	r24, r25
    2bb6:	8c 93       	st	X, r24
    2bb8:	2f c0       	rjmp	.+94     	; 0x2c18 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_B :
			PORTB_REG &=0x0f;
    2bba:	a8 e3       	ldi	r26, 0x38	; 56
    2bbc:	b0 e0       	ldi	r27, 0x00	; 0
    2bbe:	e8 e3       	ldi	r30, 0x38	; 56
    2bc0:	f0 e0       	ldi	r31, 0x00	; 0
    2bc2:	80 81       	ld	r24, Z
    2bc4:	8f 70       	andi	r24, 0x0F	; 15
    2bc6:	8c 93       	st	X, r24
			PORTB_REG |=u8ValCopy;
    2bc8:	a8 e3       	ldi	r26, 0x38	; 56
    2bca:	b0 e0       	ldi	r27, 0x00	; 0
    2bcc:	e8 e3       	ldi	r30, 0x38	; 56
    2bce:	f0 e0       	ldi	r31, 0x00	; 0
    2bd0:	90 81       	ld	r25, Z
    2bd2:	8a 81       	ldd	r24, Y+2	; 0x02
    2bd4:	89 2b       	or	r24, r25
    2bd6:	8c 93       	st	X, r24
    2bd8:	1f c0       	rjmp	.+62     	; 0x2c18 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_C:
			PORTC_REG &=0x0f;
    2bda:	a5 e3       	ldi	r26, 0x35	; 53
    2bdc:	b0 e0       	ldi	r27, 0x00	; 0
    2bde:	e5 e3       	ldi	r30, 0x35	; 53
    2be0:	f0 e0       	ldi	r31, 0x00	; 0
    2be2:	80 81       	ld	r24, Z
    2be4:	8f 70       	andi	r24, 0x0F	; 15
    2be6:	8c 93       	st	X, r24
			PORTC_REG |=u8ValCopy;
    2be8:	a5 e3       	ldi	r26, 0x35	; 53
    2bea:	b0 e0       	ldi	r27, 0x00	; 0
    2bec:	e5 e3       	ldi	r30, 0x35	; 53
    2bee:	f0 e0       	ldi	r31, 0x00	; 0
    2bf0:	90 81       	ld	r25, Z
    2bf2:	8a 81       	ldd	r24, Y+2	; 0x02
    2bf4:	89 2b       	or	r24, r25
    2bf6:	8c 93       	st	X, r24
    2bf8:	0f c0       	rjmp	.+30     	; 0x2c18 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_D :
			PORTD_REG &=0x0f;
    2bfa:	a2 e3       	ldi	r26, 0x32	; 50
    2bfc:	b0 e0       	ldi	r27, 0x00	; 0
    2bfe:	e2 e3       	ldi	r30, 0x32	; 50
    2c00:	f0 e0       	ldi	r31, 0x00	; 0
    2c02:	80 81       	ld	r24, Z
    2c04:	8f 70       	andi	r24, 0x0F	; 15
    2c06:	8c 93       	st	X, r24
			PORTD_REG |=u8ValCopy;
    2c08:	a2 e3       	ldi	r26, 0x32	; 50
    2c0a:	b0 e0       	ldi	r27, 0x00	; 0
    2c0c:	e2 e3       	ldi	r30, 0x32	; 50
    2c0e:	f0 e0       	ldi	r31, 0x00	; 0
    2c10:	90 81       	ld	r25, Z
    2c12:	8a 81       	ldd	r24, Y+2	; 0x02
    2c14:	89 2b       	or	r24, r25
    2c16:	8c 93       	st	X, r24
			break;
		default :
		   break;
	}
}
    2c18:	0f 90       	pop	r0
    2c1a:	0f 90       	pop	r0
    2c1c:	0f 90       	pop	r0
    2c1e:	0f 90       	pop	r0
    2c20:	cf 91       	pop	r28
    2c22:	df 91       	pop	r29
    2c24:	08 95       	ret

00002c26 <LCD_voidInit>:
#include "util/delay.h"
#include "lcd_int.h"
#include "lcd_cfg.h"
#include "lcd_prv.h"

void LCD_voidInit(void){
    2c26:	0f 93       	push	r16
    2c28:	1f 93       	push	r17
    2c2a:	df 93       	push	r29
    2c2c:	cf 93       	push	r28
    2c2e:	cd b7       	in	r28, 0x3d	; 61
    2c30:	de b7       	in	r29, 0x3e	; 62
    2c32:	c6 54       	subi	r28, 0x46	; 70
    2c34:	d0 40       	sbci	r29, 0x00	; 0
    2c36:	0f b6       	in	r0, 0x3f	; 63
    2c38:	f8 94       	cli
    2c3a:	de bf       	out	0x3e, r29	; 62
    2c3c:	0f be       	out	0x3f, r0	; 63
    2c3e:	cd bf       	out	0x3d, r28	; 61
    2c40:	fe 01       	movw	r30, r28
    2c42:	ed 5b       	subi	r30, 0xBD	; 189
    2c44:	ff 4f       	sbci	r31, 0xFF	; 255
    2c46:	80 e0       	ldi	r24, 0x00	; 0
    2c48:	90 e0       	ldi	r25, 0x00	; 0
    2c4a:	a6 e9       	ldi	r26, 0x96	; 150
    2c4c:	b3 e4       	ldi	r27, 0x43	; 67
    2c4e:	80 83       	st	Z, r24
    2c50:	91 83       	std	Z+1, r25	; 0x01
    2c52:	a2 83       	std	Z+2, r26	; 0x02
    2c54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c56:	8e 01       	movw	r16, r28
    2c58:	01 5c       	subi	r16, 0xC1	; 193
    2c5a:	1f 4f       	sbci	r17, 0xFF	; 255
    2c5c:	fe 01       	movw	r30, r28
    2c5e:	ed 5b       	subi	r30, 0xBD	; 189
    2c60:	ff 4f       	sbci	r31, 0xFF	; 255
    2c62:	60 81       	ld	r22, Z
    2c64:	71 81       	ldd	r23, Z+1	; 0x01
    2c66:	82 81       	ldd	r24, Z+2	; 0x02
    2c68:	93 81       	ldd	r25, Z+3	; 0x03
    2c6a:	20 e0       	ldi	r18, 0x00	; 0
    2c6c:	30 e0       	ldi	r19, 0x00	; 0
    2c6e:	4a ef       	ldi	r20, 0xFA	; 250
    2c70:	54 e4       	ldi	r21, 0x44	; 68
    2c72:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    2c76:	dc 01       	movw	r26, r24
    2c78:	cb 01       	movw	r24, r22
    2c7a:	f8 01       	movw	r30, r16
    2c7c:	80 83       	st	Z, r24
    2c7e:	91 83       	std	Z+1, r25	; 0x01
    2c80:	a2 83       	std	Z+2, r26	; 0x02
    2c82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c84:	fe 01       	movw	r30, r28
    2c86:	ff 96       	adiw	r30, 0x3f	; 63
    2c88:	60 81       	ld	r22, Z
    2c8a:	71 81       	ldd	r23, Z+1	; 0x01
    2c8c:	82 81       	ldd	r24, Z+2	; 0x02
    2c8e:	93 81       	ldd	r25, Z+3	; 0x03
    2c90:	20 e0       	ldi	r18, 0x00	; 0
    2c92:	30 e0       	ldi	r19, 0x00	; 0
    2c94:	40 e8       	ldi	r20, 0x80	; 128
    2c96:	5f e3       	ldi	r21, 0x3F	; 63
    2c98:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    2c9c:	88 23       	and	r24, r24
    2c9e:	2c f4       	brge	.+10     	; 0x2caa <LCD_voidInit+0x84>
		__ticks = 1;
    2ca0:	81 e0       	ldi	r24, 0x01	; 1
    2ca2:	90 e0       	ldi	r25, 0x00	; 0
    2ca4:	9e af       	std	Y+62, r25	; 0x3e
    2ca6:	8d af       	std	Y+61, r24	; 0x3d
    2ca8:	46 c0       	rjmp	.+140    	; 0x2d36 <LCD_voidInit+0x110>
	else if (__tmp > 65535)
    2caa:	fe 01       	movw	r30, r28
    2cac:	ff 96       	adiw	r30, 0x3f	; 63
    2cae:	60 81       	ld	r22, Z
    2cb0:	71 81       	ldd	r23, Z+1	; 0x01
    2cb2:	82 81       	ldd	r24, Z+2	; 0x02
    2cb4:	93 81       	ldd	r25, Z+3	; 0x03
    2cb6:	20 e0       	ldi	r18, 0x00	; 0
    2cb8:	3f ef       	ldi	r19, 0xFF	; 255
    2cba:	4f e7       	ldi	r20, 0x7F	; 127
    2cbc:	57 e4       	ldi	r21, 0x47	; 71
    2cbe:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    2cc2:	18 16       	cp	r1, r24
    2cc4:	64 f5       	brge	.+88     	; 0x2d1e <LCD_voidInit+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cc6:	fe 01       	movw	r30, r28
    2cc8:	ed 5b       	subi	r30, 0xBD	; 189
    2cca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ccc:	60 81       	ld	r22, Z
    2cce:	71 81       	ldd	r23, Z+1	; 0x01
    2cd0:	82 81       	ldd	r24, Z+2	; 0x02
    2cd2:	93 81       	ldd	r25, Z+3	; 0x03
    2cd4:	20 e0       	ldi	r18, 0x00	; 0
    2cd6:	30 e0       	ldi	r19, 0x00	; 0
    2cd8:	40 e2       	ldi	r20, 0x20	; 32
    2cda:	51 e4       	ldi	r21, 0x41	; 65
    2cdc:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    2ce0:	dc 01       	movw	r26, r24
    2ce2:	cb 01       	movw	r24, r22
    2ce4:	bc 01       	movw	r22, r24
    2ce6:	cd 01       	movw	r24, r26
    2ce8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2cec:	dc 01       	movw	r26, r24
    2cee:	cb 01       	movw	r24, r22
    2cf0:	9e af       	std	Y+62, r25	; 0x3e
    2cf2:	8d af       	std	Y+61, r24	; 0x3d
    2cf4:	0f c0       	rjmp	.+30     	; 0x2d14 <LCD_voidInit+0xee>
    2cf6:	88 ec       	ldi	r24, 0xC8	; 200
    2cf8:	90 e0       	ldi	r25, 0x00	; 0
    2cfa:	9c af       	std	Y+60, r25	; 0x3c
    2cfc:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2cfe:	8b ad       	ldd	r24, Y+59	; 0x3b
    2d00:	9c ad       	ldd	r25, Y+60	; 0x3c
    2d02:	01 97       	sbiw	r24, 0x01	; 1
    2d04:	f1 f7       	brne	.-4      	; 0x2d02 <LCD_voidInit+0xdc>
    2d06:	9c af       	std	Y+60, r25	; 0x3c
    2d08:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d0a:	8d ad       	ldd	r24, Y+61	; 0x3d
    2d0c:	9e ad       	ldd	r25, Y+62	; 0x3e
    2d0e:	01 97       	sbiw	r24, 0x01	; 1
    2d10:	9e af       	std	Y+62, r25	; 0x3e
    2d12:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d14:	8d ad       	ldd	r24, Y+61	; 0x3d
    2d16:	9e ad       	ldd	r25, Y+62	; 0x3e
    2d18:	00 97       	sbiw	r24, 0x00	; 0
    2d1a:	69 f7       	brne	.-38     	; 0x2cf6 <LCD_voidInit+0xd0>
    2d1c:	16 c0       	rjmp	.+44     	; 0x2d4a <LCD_voidInit+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d1e:	fe 01       	movw	r30, r28
    2d20:	ff 96       	adiw	r30, 0x3f	; 63
    2d22:	60 81       	ld	r22, Z
    2d24:	71 81       	ldd	r23, Z+1	; 0x01
    2d26:	82 81       	ldd	r24, Z+2	; 0x02
    2d28:	93 81       	ldd	r25, Z+3	; 0x03
    2d2a:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2d2e:	dc 01       	movw	r26, r24
    2d30:	cb 01       	movw	r24, r22
    2d32:	9e af       	std	Y+62, r25	; 0x3e
    2d34:	8d af       	std	Y+61, r24	; 0x3d
    2d36:	8d ad       	ldd	r24, Y+61	; 0x3d
    2d38:	9e ad       	ldd	r25, Y+62	; 0x3e
    2d3a:	9a af       	std	Y+58, r25	; 0x3a
    2d3c:	89 af       	std	Y+57, r24	; 0x39
    2d3e:	89 ad       	ldd	r24, Y+57	; 0x39
    2d40:	9a ad       	ldd	r25, Y+58	; 0x3a
    2d42:	01 97       	sbiw	r24, 0x01	; 1
    2d44:	f1 f7       	brne	.-4      	; 0x2d42 <LCD_voidInit+0x11c>
    2d46:	9a af       	std	Y+58, r25	; 0x3a
    2d48:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(300);
	DIO_u8SetPinDir(LCD_RS_PORT , LCD_RS_PIN , OUTPUT);
    2d4a:	81 e0       	ldi	r24, 0x01	; 1
    2d4c:	60 e0       	ldi	r22, 0x00	; 0
    2d4e:	41 e0       	ldi	r20, 0x01	; 1
    2d50:	0e 94 d5 11 	call	0x23aa	; 0x23aa <DIO_u8SetPinDir>
	DIO_u8SetPinDir(LCD_RW_PORT , LCD_RW_PIN , OUTPUT);
    2d54:	81 e0       	ldi	r24, 0x01	; 1
    2d56:	61 e0       	ldi	r22, 0x01	; 1
    2d58:	41 e0       	ldi	r20, 0x01	; 1
    2d5a:	0e 94 d5 11 	call	0x23aa	; 0x23aa <DIO_u8SetPinDir>
	DIO_u8SetPinDir(LCD_EN_PORT , LCD_EN_PIN , OUTPUT);
    2d5e:	81 e0       	ldi	r24, 0x01	; 1
    2d60:	62 e0       	ldi	r22, 0x02	; 2
    2d62:	41 e0       	ldi	r20, 0x01	; 1
    2d64:	0e 94 d5 11 	call	0x23aa	; 0x23aa <DIO_u8SetPinDir>
	#if LCD_MODE == 0
		DIO_u8SetPortDir(LCD_PORT , FULL_OUTPUT);
    2d68:	80 e0       	ldi	r24, 0x00	; 0
    2d6a:	6f ef       	ldi	r22, 0xFF	; 255
    2d6c:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <DIO_u8SetPortDir>
		LCD_voidWriteCmd(LCD_Function_8BIT_2Lines);
    2d70:	88 e3       	ldi	r24, 0x38	; 56
    2d72:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    2d76:	80 e0       	ldi	r24, 0x00	; 0
    2d78:	90 e0       	ldi	r25, 0x00	; 0
    2d7a:	a0 e8       	ldi	r26, 0x80	; 128
    2d7c:	bf e3       	ldi	r27, 0x3F	; 63
    2d7e:	8d ab       	std	Y+53, r24	; 0x35
    2d80:	9e ab       	std	Y+54, r25	; 0x36
    2d82:	af ab       	std	Y+55, r26	; 0x37
    2d84:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d86:	6d a9       	ldd	r22, Y+53	; 0x35
    2d88:	7e a9       	ldd	r23, Y+54	; 0x36
    2d8a:	8f a9       	ldd	r24, Y+55	; 0x37
    2d8c:	98 ad       	ldd	r25, Y+56	; 0x38
    2d8e:	20 e0       	ldi	r18, 0x00	; 0
    2d90:	30 e0       	ldi	r19, 0x00	; 0
    2d92:	4a ef       	ldi	r20, 0xFA	; 250
    2d94:	54 e4       	ldi	r21, 0x44	; 68
    2d96:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    2d9a:	dc 01       	movw	r26, r24
    2d9c:	cb 01       	movw	r24, r22
    2d9e:	89 ab       	std	Y+49, r24	; 0x31
    2da0:	9a ab       	std	Y+50, r25	; 0x32
    2da2:	ab ab       	std	Y+51, r26	; 0x33
    2da4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2da6:	69 a9       	ldd	r22, Y+49	; 0x31
    2da8:	7a a9       	ldd	r23, Y+50	; 0x32
    2daa:	8b a9       	ldd	r24, Y+51	; 0x33
    2dac:	9c a9       	ldd	r25, Y+52	; 0x34
    2dae:	20 e0       	ldi	r18, 0x00	; 0
    2db0:	30 e0       	ldi	r19, 0x00	; 0
    2db2:	40 e8       	ldi	r20, 0x80	; 128
    2db4:	5f e3       	ldi	r21, 0x3F	; 63
    2db6:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    2dba:	88 23       	and	r24, r24
    2dbc:	2c f4       	brge	.+10     	; 0x2dc8 <LCD_voidInit+0x1a2>
		__ticks = 1;
    2dbe:	81 e0       	ldi	r24, 0x01	; 1
    2dc0:	90 e0       	ldi	r25, 0x00	; 0
    2dc2:	98 ab       	std	Y+48, r25	; 0x30
    2dc4:	8f a7       	std	Y+47, r24	; 0x2f
    2dc6:	3f c0       	rjmp	.+126    	; 0x2e46 <LCD_voidInit+0x220>
	else if (__tmp > 65535)
    2dc8:	69 a9       	ldd	r22, Y+49	; 0x31
    2dca:	7a a9       	ldd	r23, Y+50	; 0x32
    2dcc:	8b a9       	ldd	r24, Y+51	; 0x33
    2dce:	9c a9       	ldd	r25, Y+52	; 0x34
    2dd0:	20 e0       	ldi	r18, 0x00	; 0
    2dd2:	3f ef       	ldi	r19, 0xFF	; 255
    2dd4:	4f e7       	ldi	r20, 0x7F	; 127
    2dd6:	57 e4       	ldi	r21, 0x47	; 71
    2dd8:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    2ddc:	18 16       	cp	r1, r24
    2dde:	4c f5       	brge	.+82     	; 0x2e32 <LCD_voidInit+0x20c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2de0:	6d a9       	ldd	r22, Y+53	; 0x35
    2de2:	7e a9       	ldd	r23, Y+54	; 0x36
    2de4:	8f a9       	ldd	r24, Y+55	; 0x37
    2de6:	98 ad       	ldd	r25, Y+56	; 0x38
    2de8:	20 e0       	ldi	r18, 0x00	; 0
    2dea:	30 e0       	ldi	r19, 0x00	; 0
    2dec:	40 e2       	ldi	r20, 0x20	; 32
    2dee:	51 e4       	ldi	r21, 0x41	; 65
    2df0:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    2df4:	dc 01       	movw	r26, r24
    2df6:	cb 01       	movw	r24, r22
    2df8:	bc 01       	movw	r22, r24
    2dfa:	cd 01       	movw	r24, r26
    2dfc:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2e00:	dc 01       	movw	r26, r24
    2e02:	cb 01       	movw	r24, r22
    2e04:	98 ab       	std	Y+48, r25	; 0x30
    2e06:	8f a7       	std	Y+47, r24	; 0x2f
    2e08:	0f c0       	rjmp	.+30     	; 0x2e28 <LCD_voidInit+0x202>
    2e0a:	88 ec       	ldi	r24, 0xC8	; 200
    2e0c:	90 e0       	ldi	r25, 0x00	; 0
    2e0e:	9e a7       	std	Y+46, r25	; 0x2e
    2e10:	8d a7       	std	Y+45, r24	; 0x2d
    2e12:	8d a5       	ldd	r24, Y+45	; 0x2d
    2e14:	9e a5       	ldd	r25, Y+46	; 0x2e
    2e16:	01 97       	sbiw	r24, 0x01	; 1
    2e18:	f1 f7       	brne	.-4      	; 0x2e16 <LCD_voidInit+0x1f0>
    2e1a:	9e a7       	std	Y+46, r25	; 0x2e
    2e1c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e1e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2e20:	98 a9       	ldd	r25, Y+48	; 0x30
    2e22:	01 97       	sbiw	r24, 0x01	; 1
    2e24:	98 ab       	std	Y+48, r25	; 0x30
    2e26:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e28:	8f a5       	ldd	r24, Y+47	; 0x2f
    2e2a:	98 a9       	ldd	r25, Y+48	; 0x30
    2e2c:	00 97       	sbiw	r24, 0x00	; 0
    2e2e:	69 f7       	brne	.-38     	; 0x2e0a <LCD_voidInit+0x1e4>
    2e30:	14 c0       	rjmp	.+40     	; 0x2e5a <LCD_voidInit+0x234>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e32:	69 a9       	ldd	r22, Y+49	; 0x31
    2e34:	7a a9       	ldd	r23, Y+50	; 0x32
    2e36:	8b a9       	ldd	r24, Y+51	; 0x33
    2e38:	9c a9       	ldd	r25, Y+52	; 0x34
    2e3a:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2e3e:	dc 01       	movw	r26, r24
    2e40:	cb 01       	movw	r24, r22
    2e42:	98 ab       	std	Y+48, r25	; 0x30
    2e44:	8f a7       	std	Y+47, r24	; 0x2f
    2e46:	8f a5       	ldd	r24, Y+47	; 0x2f
    2e48:	98 a9       	ldd	r25, Y+48	; 0x30
    2e4a:	9c a7       	std	Y+44, r25	; 0x2c
    2e4c:	8b a7       	std	Y+43, r24	; 0x2b
    2e4e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2e50:	9c a5       	ldd	r25, Y+44	; 0x2c
    2e52:	01 97       	sbiw	r24, 0x01	; 1
    2e54:	f1 f7       	brne	.-4      	; 0x2e52 <LCD_voidInit+0x22c>
    2e56:	9c a7       	std	Y+44, r25	; 0x2c
    2e58:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);
		LCD_voidWriteCmd(LCD_DISP_ON_CURSOR_ON);
    2e5a:	8e e0       	ldi	r24, 0x0E	; 14
    2e5c:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    2e60:	80 e0       	ldi	r24, 0x00	; 0
    2e62:	90 e0       	ldi	r25, 0x00	; 0
    2e64:	a0 e8       	ldi	r26, 0x80	; 128
    2e66:	bf e3       	ldi	r27, 0x3F	; 63
    2e68:	8f a3       	std	Y+39, r24	; 0x27
    2e6a:	98 a7       	std	Y+40, r25	; 0x28
    2e6c:	a9 a7       	std	Y+41, r26	; 0x29
    2e6e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e70:	6f a1       	ldd	r22, Y+39	; 0x27
    2e72:	78 a5       	ldd	r23, Y+40	; 0x28
    2e74:	89 a5       	ldd	r24, Y+41	; 0x29
    2e76:	9a a5       	ldd	r25, Y+42	; 0x2a
    2e78:	20 e0       	ldi	r18, 0x00	; 0
    2e7a:	30 e0       	ldi	r19, 0x00	; 0
    2e7c:	4a ef       	ldi	r20, 0xFA	; 250
    2e7e:	54 e4       	ldi	r21, 0x44	; 68
    2e80:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    2e84:	dc 01       	movw	r26, r24
    2e86:	cb 01       	movw	r24, r22
    2e88:	8b a3       	std	Y+35, r24	; 0x23
    2e8a:	9c a3       	std	Y+36, r25	; 0x24
    2e8c:	ad a3       	std	Y+37, r26	; 0x25
    2e8e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2e90:	6b a1       	ldd	r22, Y+35	; 0x23
    2e92:	7c a1       	ldd	r23, Y+36	; 0x24
    2e94:	8d a1       	ldd	r24, Y+37	; 0x25
    2e96:	9e a1       	ldd	r25, Y+38	; 0x26
    2e98:	20 e0       	ldi	r18, 0x00	; 0
    2e9a:	30 e0       	ldi	r19, 0x00	; 0
    2e9c:	40 e8       	ldi	r20, 0x80	; 128
    2e9e:	5f e3       	ldi	r21, 0x3F	; 63
    2ea0:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    2ea4:	88 23       	and	r24, r24
    2ea6:	2c f4       	brge	.+10     	; 0x2eb2 <LCD_voidInit+0x28c>
		__ticks = 1;
    2ea8:	81 e0       	ldi	r24, 0x01	; 1
    2eaa:	90 e0       	ldi	r25, 0x00	; 0
    2eac:	9a a3       	std	Y+34, r25	; 0x22
    2eae:	89 a3       	std	Y+33, r24	; 0x21
    2eb0:	3f c0       	rjmp	.+126    	; 0x2f30 <LCD_voidInit+0x30a>
	else if (__tmp > 65535)
    2eb2:	6b a1       	ldd	r22, Y+35	; 0x23
    2eb4:	7c a1       	ldd	r23, Y+36	; 0x24
    2eb6:	8d a1       	ldd	r24, Y+37	; 0x25
    2eb8:	9e a1       	ldd	r25, Y+38	; 0x26
    2eba:	20 e0       	ldi	r18, 0x00	; 0
    2ebc:	3f ef       	ldi	r19, 0xFF	; 255
    2ebe:	4f e7       	ldi	r20, 0x7F	; 127
    2ec0:	57 e4       	ldi	r21, 0x47	; 71
    2ec2:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    2ec6:	18 16       	cp	r1, r24
    2ec8:	4c f5       	brge	.+82     	; 0x2f1c <LCD_voidInit+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2eca:	6f a1       	ldd	r22, Y+39	; 0x27
    2ecc:	78 a5       	ldd	r23, Y+40	; 0x28
    2ece:	89 a5       	ldd	r24, Y+41	; 0x29
    2ed0:	9a a5       	ldd	r25, Y+42	; 0x2a
    2ed2:	20 e0       	ldi	r18, 0x00	; 0
    2ed4:	30 e0       	ldi	r19, 0x00	; 0
    2ed6:	40 e2       	ldi	r20, 0x20	; 32
    2ed8:	51 e4       	ldi	r21, 0x41	; 65
    2eda:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    2ede:	dc 01       	movw	r26, r24
    2ee0:	cb 01       	movw	r24, r22
    2ee2:	bc 01       	movw	r22, r24
    2ee4:	cd 01       	movw	r24, r26
    2ee6:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2eea:	dc 01       	movw	r26, r24
    2eec:	cb 01       	movw	r24, r22
    2eee:	9a a3       	std	Y+34, r25	; 0x22
    2ef0:	89 a3       	std	Y+33, r24	; 0x21
    2ef2:	0f c0       	rjmp	.+30     	; 0x2f12 <LCD_voidInit+0x2ec>
    2ef4:	88 ec       	ldi	r24, 0xC8	; 200
    2ef6:	90 e0       	ldi	r25, 0x00	; 0
    2ef8:	98 a3       	std	Y+32, r25	; 0x20
    2efa:	8f 8f       	std	Y+31, r24	; 0x1f
    2efc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2efe:	98 a1       	ldd	r25, Y+32	; 0x20
    2f00:	01 97       	sbiw	r24, 0x01	; 1
    2f02:	f1 f7       	brne	.-4      	; 0x2f00 <LCD_voidInit+0x2da>
    2f04:	98 a3       	std	Y+32, r25	; 0x20
    2f06:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f08:	89 a1       	ldd	r24, Y+33	; 0x21
    2f0a:	9a a1       	ldd	r25, Y+34	; 0x22
    2f0c:	01 97       	sbiw	r24, 0x01	; 1
    2f0e:	9a a3       	std	Y+34, r25	; 0x22
    2f10:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f12:	89 a1       	ldd	r24, Y+33	; 0x21
    2f14:	9a a1       	ldd	r25, Y+34	; 0x22
    2f16:	00 97       	sbiw	r24, 0x00	; 0
    2f18:	69 f7       	brne	.-38     	; 0x2ef4 <LCD_voidInit+0x2ce>
    2f1a:	14 c0       	rjmp	.+40     	; 0x2f44 <LCD_voidInit+0x31e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f1c:	6b a1       	ldd	r22, Y+35	; 0x23
    2f1e:	7c a1       	ldd	r23, Y+36	; 0x24
    2f20:	8d a1       	ldd	r24, Y+37	; 0x25
    2f22:	9e a1       	ldd	r25, Y+38	; 0x26
    2f24:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2f28:	dc 01       	movw	r26, r24
    2f2a:	cb 01       	movw	r24, r22
    2f2c:	9a a3       	std	Y+34, r25	; 0x22
    2f2e:	89 a3       	std	Y+33, r24	; 0x21
    2f30:	89 a1       	ldd	r24, Y+33	; 0x21
    2f32:	9a a1       	ldd	r25, Y+34	; 0x22
    2f34:	9e 8f       	std	Y+30, r25	; 0x1e
    2f36:	8d 8f       	std	Y+29, r24	; 0x1d
    2f38:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2f3a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2f3c:	01 97       	sbiw	r24, 0x01	; 1
    2f3e:	f1 f7       	brne	.-4      	; 0x2f3c <LCD_voidInit+0x316>
    2f40:	9e 8f       	std	Y+30, r25	; 0x1e
    2f42:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);
		LCD_voidWriteCmd(LCD_CLEAR_SCREEN);
    2f44:	81 e0       	ldi	r24, 0x01	; 1
    2f46:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    2f4a:	80 e0       	ldi	r24, 0x00	; 0
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	a0 e2       	ldi	r26, 0x20	; 32
    2f50:	b1 e4       	ldi	r27, 0x41	; 65
    2f52:	89 8f       	std	Y+25, r24	; 0x19
    2f54:	9a 8f       	std	Y+26, r25	; 0x1a
    2f56:	ab 8f       	std	Y+27, r26	; 0x1b
    2f58:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f5a:	69 8d       	ldd	r22, Y+25	; 0x19
    2f5c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f5e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f60:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f62:	20 e0       	ldi	r18, 0x00	; 0
    2f64:	30 e0       	ldi	r19, 0x00	; 0
    2f66:	4a ef       	ldi	r20, 0xFA	; 250
    2f68:	54 e4       	ldi	r21, 0x44	; 68
    2f6a:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    2f6e:	dc 01       	movw	r26, r24
    2f70:	cb 01       	movw	r24, r22
    2f72:	8d 8b       	std	Y+21, r24	; 0x15
    2f74:	9e 8b       	std	Y+22, r25	; 0x16
    2f76:	af 8b       	std	Y+23, r26	; 0x17
    2f78:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2f7a:	6d 89       	ldd	r22, Y+21	; 0x15
    2f7c:	7e 89       	ldd	r23, Y+22	; 0x16
    2f7e:	8f 89       	ldd	r24, Y+23	; 0x17
    2f80:	98 8d       	ldd	r25, Y+24	; 0x18
    2f82:	20 e0       	ldi	r18, 0x00	; 0
    2f84:	30 e0       	ldi	r19, 0x00	; 0
    2f86:	40 e8       	ldi	r20, 0x80	; 128
    2f88:	5f e3       	ldi	r21, 0x3F	; 63
    2f8a:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    2f8e:	88 23       	and	r24, r24
    2f90:	2c f4       	brge	.+10     	; 0x2f9c <LCD_voidInit+0x376>
		__ticks = 1;
    2f92:	81 e0       	ldi	r24, 0x01	; 1
    2f94:	90 e0       	ldi	r25, 0x00	; 0
    2f96:	9c 8b       	std	Y+20, r25	; 0x14
    2f98:	8b 8b       	std	Y+19, r24	; 0x13
    2f9a:	3f c0       	rjmp	.+126    	; 0x301a <LCD_voidInit+0x3f4>
	else if (__tmp > 65535)
    2f9c:	6d 89       	ldd	r22, Y+21	; 0x15
    2f9e:	7e 89       	ldd	r23, Y+22	; 0x16
    2fa0:	8f 89       	ldd	r24, Y+23	; 0x17
    2fa2:	98 8d       	ldd	r25, Y+24	; 0x18
    2fa4:	20 e0       	ldi	r18, 0x00	; 0
    2fa6:	3f ef       	ldi	r19, 0xFF	; 255
    2fa8:	4f e7       	ldi	r20, 0x7F	; 127
    2faa:	57 e4       	ldi	r21, 0x47	; 71
    2fac:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    2fb0:	18 16       	cp	r1, r24
    2fb2:	4c f5       	brge	.+82     	; 0x3006 <LCD_voidInit+0x3e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fb4:	69 8d       	ldd	r22, Y+25	; 0x19
    2fb6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2fb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2fba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2fbc:	20 e0       	ldi	r18, 0x00	; 0
    2fbe:	30 e0       	ldi	r19, 0x00	; 0
    2fc0:	40 e2       	ldi	r20, 0x20	; 32
    2fc2:	51 e4       	ldi	r21, 0x41	; 65
    2fc4:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    2fc8:	dc 01       	movw	r26, r24
    2fca:	cb 01       	movw	r24, r22
    2fcc:	bc 01       	movw	r22, r24
    2fce:	cd 01       	movw	r24, r26
    2fd0:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2fd4:	dc 01       	movw	r26, r24
    2fd6:	cb 01       	movw	r24, r22
    2fd8:	9c 8b       	std	Y+20, r25	; 0x14
    2fda:	8b 8b       	std	Y+19, r24	; 0x13
    2fdc:	0f c0       	rjmp	.+30     	; 0x2ffc <LCD_voidInit+0x3d6>
    2fde:	88 ec       	ldi	r24, 0xC8	; 200
    2fe0:	90 e0       	ldi	r25, 0x00	; 0
    2fe2:	9a 8b       	std	Y+18, r25	; 0x12
    2fe4:	89 8b       	std	Y+17, r24	; 0x11
    2fe6:	89 89       	ldd	r24, Y+17	; 0x11
    2fe8:	9a 89       	ldd	r25, Y+18	; 0x12
    2fea:	01 97       	sbiw	r24, 0x01	; 1
    2fec:	f1 f7       	brne	.-4      	; 0x2fea <LCD_voidInit+0x3c4>
    2fee:	9a 8b       	std	Y+18, r25	; 0x12
    2ff0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ff2:	8b 89       	ldd	r24, Y+19	; 0x13
    2ff4:	9c 89       	ldd	r25, Y+20	; 0x14
    2ff6:	01 97       	sbiw	r24, 0x01	; 1
    2ff8:	9c 8b       	std	Y+20, r25	; 0x14
    2ffa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ffc:	8b 89       	ldd	r24, Y+19	; 0x13
    2ffe:	9c 89       	ldd	r25, Y+20	; 0x14
    3000:	00 97       	sbiw	r24, 0x00	; 0
    3002:	69 f7       	brne	.-38     	; 0x2fde <LCD_voidInit+0x3b8>
    3004:	14 c0       	rjmp	.+40     	; 0x302e <LCD_voidInit+0x408>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3006:	6d 89       	ldd	r22, Y+21	; 0x15
    3008:	7e 89       	ldd	r23, Y+22	; 0x16
    300a:	8f 89       	ldd	r24, Y+23	; 0x17
    300c:	98 8d       	ldd	r25, Y+24	; 0x18
    300e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3012:	dc 01       	movw	r26, r24
    3014:	cb 01       	movw	r24, r22
    3016:	9c 8b       	std	Y+20, r25	; 0x14
    3018:	8b 8b       	std	Y+19, r24	; 0x13
    301a:	8b 89       	ldd	r24, Y+19	; 0x13
    301c:	9c 89       	ldd	r25, Y+20	; 0x14
    301e:	98 8b       	std	Y+16, r25	; 0x10
    3020:	8f 87       	std	Y+15, r24	; 0x0f
    3022:	8f 85       	ldd	r24, Y+15	; 0x0f
    3024:	98 89       	ldd	r25, Y+16	; 0x10
    3026:	01 97       	sbiw	r24, 0x01	; 1
    3028:	f1 f7       	brne	.-4      	; 0x3026 <LCD_voidInit+0x400>
    302a:	98 8b       	std	Y+16, r25	; 0x10
    302c:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(10);
		LCD_voidWriteCmd(LCD_ENTRY_MODE);
    302e:	86 e0       	ldi	r24, 0x06	; 6
    3030:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    3034:	80 e0       	ldi	r24, 0x00	; 0
    3036:	90 e0       	ldi	r25, 0x00	; 0
    3038:	a0 e8       	ldi	r26, 0x80	; 128
    303a:	bf e3       	ldi	r27, 0x3F	; 63
    303c:	8b 87       	std	Y+11, r24	; 0x0b
    303e:	9c 87       	std	Y+12, r25	; 0x0c
    3040:	ad 87       	std	Y+13, r26	; 0x0d
    3042:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3044:	6b 85       	ldd	r22, Y+11	; 0x0b
    3046:	7c 85       	ldd	r23, Y+12	; 0x0c
    3048:	8d 85       	ldd	r24, Y+13	; 0x0d
    304a:	9e 85       	ldd	r25, Y+14	; 0x0e
    304c:	20 e0       	ldi	r18, 0x00	; 0
    304e:	30 e0       	ldi	r19, 0x00	; 0
    3050:	4a ef       	ldi	r20, 0xFA	; 250
    3052:	54 e4       	ldi	r21, 0x44	; 68
    3054:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3058:	dc 01       	movw	r26, r24
    305a:	cb 01       	movw	r24, r22
    305c:	8f 83       	std	Y+7, r24	; 0x07
    305e:	98 87       	std	Y+8, r25	; 0x08
    3060:	a9 87       	std	Y+9, r26	; 0x09
    3062:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3064:	6f 81       	ldd	r22, Y+7	; 0x07
    3066:	78 85       	ldd	r23, Y+8	; 0x08
    3068:	89 85       	ldd	r24, Y+9	; 0x09
    306a:	9a 85       	ldd	r25, Y+10	; 0x0a
    306c:	20 e0       	ldi	r18, 0x00	; 0
    306e:	30 e0       	ldi	r19, 0x00	; 0
    3070:	40 e8       	ldi	r20, 0x80	; 128
    3072:	5f e3       	ldi	r21, 0x3F	; 63
    3074:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    3078:	88 23       	and	r24, r24
    307a:	2c f4       	brge	.+10     	; 0x3086 <LCD_voidInit+0x460>
		__ticks = 1;
    307c:	81 e0       	ldi	r24, 0x01	; 1
    307e:	90 e0       	ldi	r25, 0x00	; 0
    3080:	9e 83       	std	Y+6, r25	; 0x06
    3082:	8d 83       	std	Y+5, r24	; 0x05
    3084:	3f c0       	rjmp	.+126    	; 0x3104 <LCD_voidInit+0x4de>
	else if (__tmp > 65535)
    3086:	6f 81       	ldd	r22, Y+7	; 0x07
    3088:	78 85       	ldd	r23, Y+8	; 0x08
    308a:	89 85       	ldd	r24, Y+9	; 0x09
    308c:	9a 85       	ldd	r25, Y+10	; 0x0a
    308e:	20 e0       	ldi	r18, 0x00	; 0
    3090:	3f ef       	ldi	r19, 0xFF	; 255
    3092:	4f e7       	ldi	r20, 0x7F	; 127
    3094:	57 e4       	ldi	r21, 0x47	; 71
    3096:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    309a:	18 16       	cp	r1, r24
    309c:	4c f5       	brge	.+82     	; 0x30f0 <LCD_voidInit+0x4ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    309e:	6b 85       	ldd	r22, Y+11	; 0x0b
    30a0:	7c 85       	ldd	r23, Y+12	; 0x0c
    30a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    30a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    30a6:	20 e0       	ldi	r18, 0x00	; 0
    30a8:	30 e0       	ldi	r19, 0x00	; 0
    30aa:	40 e2       	ldi	r20, 0x20	; 32
    30ac:	51 e4       	ldi	r21, 0x41	; 65
    30ae:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    30b2:	dc 01       	movw	r26, r24
    30b4:	cb 01       	movw	r24, r22
    30b6:	bc 01       	movw	r22, r24
    30b8:	cd 01       	movw	r24, r26
    30ba:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    30be:	dc 01       	movw	r26, r24
    30c0:	cb 01       	movw	r24, r22
    30c2:	9e 83       	std	Y+6, r25	; 0x06
    30c4:	8d 83       	std	Y+5, r24	; 0x05
    30c6:	0f c0       	rjmp	.+30     	; 0x30e6 <LCD_voidInit+0x4c0>
    30c8:	88 ec       	ldi	r24, 0xC8	; 200
    30ca:	90 e0       	ldi	r25, 0x00	; 0
    30cc:	9c 83       	std	Y+4, r25	; 0x04
    30ce:	8b 83       	std	Y+3, r24	; 0x03
    30d0:	8b 81       	ldd	r24, Y+3	; 0x03
    30d2:	9c 81       	ldd	r25, Y+4	; 0x04
    30d4:	01 97       	sbiw	r24, 0x01	; 1
    30d6:	f1 f7       	brne	.-4      	; 0x30d4 <LCD_voidInit+0x4ae>
    30d8:	9c 83       	std	Y+4, r25	; 0x04
    30da:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30dc:	8d 81       	ldd	r24, Y+5	; 0x05
    30de:	9e 81       	ldd	r25, Y+6	; 0x06
    30e0:	01 97       	sbiw	r24, 0x01	; 1
    30e2:	9e 83       	std	Y+6, r25	; 0x06
    30e4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30e6:	8d 81       	ldd	r24, Y+5	; 0x05
    30e8:	9e 81       	ldd	r25, Y+6	; 0x06
    30ea:	00 97       	sbiw	r24, 0x00	; 0
    30ec:	69 f7       	brne	.-38     	; 0x30c8 <LCD_voidInit+0x4a2>
    30ee:	14 c0       	rjmp	.+40     	; 0x3118 <LCD_voidInit+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30f0:	6f 81       	ldd	r22, Y+7	; 0x07
    30f2:	78 85       	ldd	r23, Y+8	; 0x08
    30f4:	89 85       	ldd	r24, Y+9	; 0x09
    30f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    30f8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    30fc:	dc 01       	movw	r26, r24
    30fe:	cb 01       	movw	r24, r22
    3100:	9e 83       	std	Y+6, r25	; 0x06
    3102:	8d 83       	std	Y+5, r24	; 0x05
    3104:	8d 81       	ldd	r24, Y+5	; 0x05
    3106:	9e 81       	ldd	r25, Y+6	; 0x06
    3108:	9a 83       	std	Y+2, r25	; 0x02
    310a:	89 83       	std	Y+1, r24	; 0x01
    310c:	89 81       	ldd	r24, Y+1	; 0x01
    310e:	9a 81       	ldd	r25, Y+2	; 0x02
    3110:	01 97       	sbiw	r24, 0x01	; 1
    3112:	f1 f7       	brne	.-4      	; 0x3110 <LCD_voidInit+0x4ea>
    3114:	9a 83       	std	Y+2, r25	; 0x02
    3116:	89 83       	std	Y+1, r24	; 0x01
			LCD_voidWriteCmd(LCD_ENTRY_MODE);
			_delay_ms(1);
	#endif

#endif
}
    3118:	ca 5b       	subi	r28, 0xBA	; 186
    311a:	df 4f       	sbci	r29, 0xFF	; 255
    311c:	0f b6       	in	r0, 0x3f	; 63
    311e:	f8 94       	cli
    3120:	de bf       	out	0x3e, r29	; 62
    3122:	0f be       	out	0x3f, r0	; 63
    3124:	cd bf       	out	0x3d, r28	; 61
    3126:	cf 91       	pop	r28
    3128:	df 91       	pop	r29
    312a:	1f 91       	pop	r17
    312c:	0f 91       	pop	r16
    312e:	08 95       	ret

00003130 <LCD_voidWriteCmd>:

void LCD_voidWriteCmd(uint8 u8CommandCopy){
    3130:	df 93       	push	r29
    3132:	cf 93       	push	r28
    3134:	0f 92       	push	r0
    3136:	cd b7       	in	r28, 0x3d	; 61
    3138:	de b7       	in	r29, 0x3e	; 62
    313a:	89 83       	std	Y+1, r24	; 0x01
	#if LCD_MODE==0
		DIO_u8SetPortVal(LCD_PORT ,u8CommandCopy) ;
    313c:	80 e0       	ldi	r24, 0x00	; 0
    313e:	69 81       	ldd	r22, Y+1	; 0x01
    3140:	0e 94 3b 11 	call	0x2276	; 0x2276 <DIO_u8SetPortVal>
		DIO_u8SetPinVal(LCD_RW_PORT , LCD_RW_PIN , LOW);   //write
    3144:	81 e0       	ldi	r24, 0x01	; 1
    3146:	61 e0       	ldi	r22, 0x01	; 1
    3148:	40 e0       	ldi	r20, 0x00	; 0
    314a:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>
		DIO_u8SetPinVal(LCD_RS_PORT , LCD_RS_PIN , LOW);   //CMD
    314e:	81 e0       	ldi	r24, 0x01	; 1
    3150:	60 e0       	ldi	r22, 0x00	; 0
    3152:	40 e0       	ldi	r20, 0x00	; 0
    3154:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>
		LCD_voidSendEnPulse();
    3158:	0e 94 2a 1c 	call	0x3854	; 0x3854 <LCD_voidSendEnPulse>
			_delay_ms(2);

		#endif

	#endif
}
    315c:	0f 90       	pop	r0
    315e:	cf 91       	pop	r28
    3160:	df 91       	pop	r29
    3162:	08 95       	ret

00003164 <LCD_voidWriteChar>:

void LCD_voidWriteChar(uint8 u8CharacterCopy){
    3164:	df 93       	push	r29
    3166:	cf 93       	push	r28
    3168:	0f 92       	push	r0
    316a:	cd b7       	in	r28, 0x3d	; 61
    316c:	de b7       	in	r29, 0x3e	; 62
    316e:	89 83       	std	Y+1, r24	; 0x01
#if LCD_MODE==0
	DIO_u8SetPortVal(LCD_PORT ,u8CharacterCopy) ;
    3170:	80 e0       	ldi	r24, 0x00	; 0
    3172:	69 81       	ldd	r22, Y+1	; 0x01
    3174:	0e 94 3b 11 	call	0x2276	; 0x2276 <DIO_u8SetPortVal>
	DIO_u8SetPinVal(LCD_RW_PORT , LCD_RS_PIN , HIGH);   //char
    3178:	81 e0       	ldi	r24, 0x01	; 1
    317a:	60 e0       	ldi	r22, 0x00	; 0
    317c:	41 e0       	ldi	r20, 0x01	; 1
    317e:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>
	DIO_u8SetPinVal(LCD_RS_PORT , LCD_RW_PIN , LOW );   //read
    3182:	81 e0       	ldi	r24, 0x01	; 1
    3184:	61 e0       	ldi	r22, 0x01	; 1
    3186:	40 e0       	ldi	r20, 0x00	; 0
    3188:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>
	LCD_voidSendEnPulse();
    318c:	0e 94 2a 1c 	call	0x3854	; 0x3854 <LCD_voidSendEnPulse>
		_delay_ms(2);

	#endif

#endif
}
    3190:	0f 90       	pop	r0
    3192:	cf 91       	pop	r28
    3194:	df 91       	pop	r29
    3196:	08 95       	ret

00003198 <LCD_voidClearScreen>:

void LCD_voidClearScreen (void){
    3198:	df 93       	push	r29
    319a:	cf 93       	push	r28
    319c:	cd b7       	in	r28, 0x3d	; 61
    319e:	de b7       	in	r29, 0x3e	; 62
    31a0:	2e 97       	sbiw	r28, 0x0e	; 14
    31a2:	0f b6       	in	r0, 0x3f	; 63
    31a4:	f8 94       	cli
    31a6:	de bf       	out	0x3e, r29	; 62
    31a8:	0f be       	out	0x3f, r0	; 63
    31aa:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_CLEAR_SCREEN);
    31ac:	81 e0       	ldi	r24, 0x01	; 1
    31ae:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    31b2:	80 e0       	ldi	r24, 0x00	; 0
    31b4:	90 e0       	ldi	r25, 0x00	; 0
    31b6:	a0 e2       	ldi	r26, 0x20	; 32
    31b8:	b1 e4       	ldi	r27, 0x41	; 65
    31ba:	8b 87       	std	Y+11, r24	; 0x0b
    31bc:	9c 87       	std	Y+12, r25	; 0x0c
    31be:	ad 87       	std	Y+13, r26	; 0x0d
    31c0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    31c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    31c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    31c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    31ca:	20 e0       	ldi	r18, 0x00	; 0
    31cc:	30 e0       	ldi	r19, 0x00	; 0
    31ce:	4a ef       	ldi	r20, 0xFA	; 250
    31d0:	54 e4       	ldi	r21, 0x44	; 68
    31d2:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    31d6:	dc 01       	movw	r26, r24
    31d8:	cb 01       	movw	r24, r22
    31da:	8f 83       	std	Y+7, r24	; 0x07
    31dc:	98 87       	std	Y+8, r25	; 0x08
    31de:	a9 87       	std	Y+9, r26	; 0x09
    31e0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    31e2:	6f 81       	ldd	r22, Y+7	; 0x07
    31e4:	78 85       	ldd	r23, Y+8	; 0x08
    31e6:	89 85       	ldd	r24, Y+9	; 0x09
    31e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    31ea:	20 e0       	ldi	r18, 0x00	; 0
    31ec:	30 e0       	ldi	r19, 0x00	; 0
    31ee:	40 e8       	ldi	r20, 0x80	; 128
    31f0:	5f e3       	ldi	r21, 0x3F	; 63
    31f2:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    31f6:	88 23       	and	r24, r24
    31f8:	2c f4       	brge	.+10     	; 0x3204 <LCD_voidClearScreen+0x6c>
		__ticks = 1;
    31fa:	81 e0       	ldi	r24, 0x01	; 1
    31fc:	90 e0       	ldi	r25, 0x00	; 0
    31fe:	9e 83       	std	Y+6, r25	; 0x06
    3200:	8d 83       	std	Y+5, r24	; 0x05
    3202:	3f c0       	rjmp	.+126    	; 0x3282 <LCD_voidClearScreen+0xea>
	else if (__tmp > 65535)
    3204:	6f 81       	ldd	r22, Y+7	; 0x07
    3206:	78 85       	ldd	r23, Y+8	; 0x08
    3208:	89 85       	ldd	r24, Y+9	; 0x09
    320a:	9a 85       	ldd	r25, Y+10	; 0x0a
    320c:	20 e0       	ldi	r18, 0x00	; 0
    320e:	3f ef       	ldi	r19, 0xFF	; 255
    3210:	4f e7       	ldi	r20, 0x7F	; 127
    3212:	57 e4       	ldi	r21, 0x47	; 71
    3214:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    3218:	18 16       	cp	r1, r24
    321a:	4c f5       	brge	.+82     	; 0x326e <LCD_voidClearScreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    321c:	6b 85       	ldd	r22, Y+11	; 0x0b
    321e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3220:	8d 85       	ldd	r24, Y+13	; 0x0d
    3222:	9e 85       	ldd	r25, Y+14	; 0x0e
    3224:	20 e0       	ldi	r18, 0x00	; 0
    3226:	30 e0       	ldi	r19, 0x00	; 0
    3228:	40 e2       	ldi	r20, 0x20	; 32
    322a:	51 e4       	ldi	r21, 0x41	; 65
    322c:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3230:	dc 01       	movw	r26, r24
    3232:	cb 01       	movw	r24, r22
    3234:	bc 01       	movw	r22, r24
    3236:	cd 01       	movw	r24, r26
    3238:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    323c:	dc 01       	movw	r26, r24
    323e:	cb 01       	movw	r24, r22
    3240:	9e 83       	std	Y+6, r25	; 0x06
    3242:	8d 83       	std	Y+5, r24	; 0x05
    3244:	0f c0       	rjmp	.+30     	; 0x3264 <LCD_voidClearScreen+0xcc>
    3246:	88 ec       	ldi	r24, 0xC8	; 200
    3248:	90 e0       	ldi	r25, 0x00	; 0
    324a:	9c 83       	std	Y+4, r25	; 0x04
    324c:	8b 83       	std	Y+3, r24	; 0x03
    324e:	8b 81       	ldd	r24, Y+3	; 0x03
    3250:	9c 81       	ldd	r25, Y+4	; 0x04
    3252:	01 97       	sbiw	r24, 0x01	; 1
    3254:	f1 f7       	brne	.-4      	; 0x3252 <LCD_voidClearScreen+0xba>
    3256:	9c 83       	std	Y+4, r25	; 0x04
    3258:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    325a:	8d 81       	ldd	r24, Y+5	; 0x05
    325c:	9e 81       	ldd	r25, Y+6	; 0x06
    325e:	01 97       	sbiw	r24, 0x01	; 1
    3260:	9e 83       	std	Y+6, r25	; 0x06
    3262:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3264:	8d 81       	ldd	r24, Y+5	; 0x05
    3266:	9e 81       	ldd	r25, Y+6	; 0x06
    3268:	00 97       	sbiw	r24, 0x00	; 0
    326a:	69 f7       	brne	.-38     	; 0x3246 <LCD_voidClearScreen+0xae>
    326c:	14 c0       	rjmp	.+40     	; 0x3296 <LCD_voidClearScreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    326e:	6f 81       	ldd	r22, Y+7	; 0x07
    3270:	78 85       	ldd	r23, Y+8	; 0x08
    3272:	89 85       	ldd	r24, Y+9	; 0x09
    3274:	9a 85       	ldd	r25, Y+10	; 0x0a
    3276:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    327a:	dc 01       	movw	r26, r24
    327c:	cb 01       	movw	r24, r22
    327e:	9e 83       	std	Y+6, r25	; 0x06
    3280:	8d 83       	std	Y+5, r24	; 0x05
    3282:	8d 81       	ldd	r24, Y+5	; 0x05
    3284:	9e 81       	ldd	r25, Y+6	; 0x06
    3286:	9a 83       	std	Y+2, r25	; 0x02
    3288:	89 83       	std	Y+1, r24	; 0x01
    328a:	89 81       	ldd	r24, Y+1	; 0x01
    328c:	9a 81       	ldd	r25, Y+2	; 0x02
    328e:	01 97       	sbiw	r24, 0x01	; 1
    3290:	f1 f7       	brne	.-4      	; 0x328e <LCD_voidClearScreen+0xf6>
    3292:	9a 83       	std	Y+2, r25	; 0x02
    3294:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    3296:	2e 96       	adiw	r28, 0x0e	; 14
    3298:	0f b6       	in	r0, 0x3f	; 63
    329a:	f8 94       	cli
    329c:	de bf       	out	0x3e, r29	; 62
    329e:	0f be       	out	0x3f, r0	; 63
    32a0:	cd bf       	out	0x3d, r28	; 61
    32a2:	cf 91       	pop	r28
    32a4:	df 91       	pop	r29
    32a6:	08 95       	ret

000032a8 <LCD_voidShiftLeft>:

void LCD_voidShiftLeft (void){
    32a8:	df 93       	push	r29
    32aa:	cf 93       	push	r28
    32ac:	cd b7       	in	r28, 0x3d	; 61
    32ae:	de b7       	in	r29, 0x3e	; 62
    32b0:	2e 97       	sbiw	r28, 0x0e	; 14
    32b2:	0f b6       	in	r0, 0x3f	; 63
    32b4:	f8 94       	cli
    32b6:	de bf       	out	0x3e, r29	; 62
    32b8:	0f be       	out	0x3f, r0	; 63
    32ba:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_MOVE_CURSOR_LIFT);
    32bc:	80 e1       	ldi	r24, 0x10	; 16
    32be:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    32c2:	80 e0       	ldi	r24, 0x00	; 0
    32c4:	90 e0       	ldi	r25, 0x00	; 0
    32c6:	a0 e2       	ldi	r26, 0x20	; 32
    32c8:	b1 e4       	ldi	r27, 0x41	; 65
    32ca:	8b 87       	std	Y+11, r24	; 0x0b
    32cc:	9c 87       	std	Y+12, r25	; 0x0c
    32ce:	ad 87       	std	Y+13, r26	; 0x0d
    32d0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    32d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    32d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    32d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    32da:	20 e0       	ldi	r18, 0x00	; 0
    32dc:	30 e0       	ldi	r19, 0x00	; 0
    32de:	4a ef       	ldi	r20, 0xFA	; 250
    32e0:	54 e4       	ldi	r21, 0x44	; 68
    32e2:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    32e6:	dc 01       	movw	r26, r24
    32e8:	cb 01       	movw	r24, r22
    32ea:	8f 83       	std	Y+7, r24	; 0x07
    32ec:	98 87       	std	Y+8, r25	; 0x08
    32ee:	a9 87       	std	Y+9, r26	; 0x09
    32f0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    32f2:	6f 81       	ldd	r22, Y+7	; 0x07
    32f4:	78 85       	ldd	r23, Y+8	; 0x08
    32f6:	89 85       	ldd	r24, Y+9	; 0x09
    32f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    32fa:	20 e0       	ldi	r18, 0x00	; 0
    32fc:	30 e0       	ldi	r19, 0x00	; 0
    32fe:	40 e8       	ldi	r20, 0x80	; 128
    3300:	5f e3       	ldi	r21, 0x3F	; 63
    3302:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    3306:	88 23       	and	r24, r24
    3308:	2c f4       	brge	.+10     	; 0x3314 <LCD_voidShiftLeft+0x6c>
		__ticks = 1;
    330a:	81 e0       	ldi	r24, 0x01	; 1
    330c:	90 e0       	ldi	r25, 0x00	; 0
    330e:	9e 83       	std	Y+6, r25	; 0x06
    3310:	8d 83       	std	Y+5, r24	; 0x05
    3312:	3f c0       	rjmp	.+126    	; 0x3392 <LCD_voidShiftLeft+0xea>
	else if (__tmp > 65535)
    3314:	6f 81       	ldd	r22, Y+7	; 0x07
    3316:	78 85       	ldd	r23, Y+8	; 0x08
    3318:	89 85       	ldd	r24, Y+9	; 0x09
    331a:	9a 85       	ldd	r25, Y+10	; 0x0a
    331c:	20 e0       	ldi	r18, 0x00	; 0
    331e:	3f ef       	ldi	r19, 0xFF	; 255
    3320:	4f e7       	ldi	r20, 0x7F	; 127
    3322:	57 e4       	ldi	r21, 0x47	; 71
    3324:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    3328:	18 16       	cp	r1, r24
    332a:	4c f5       	brge	.+82     	; 0x337e <LCD_voidShiftLeft+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    332c:	6b 85       	ldd	r22, Y+11	; 0x0b
    332e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3330:	8d 85       	ldd	r24, Y+13	; 0x0d
    3332:	9e 85       	ldd	r25, Y+14	; 0x0e
    3334:	20 e0       	ldi	r18, 0x00	; 0
    3336:	30 e0       	ldi	r19, 0x00	; 0
    3338:	40 e2       	ldi	r20, 0x20	; 32
    333a:	51 e4       	ldi	r21, 0x41	; 65
    333c:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3340:	dc 01       	movw	r26, r24
    3342:	cb 01       	movw	r24, r22
    3344:	bc 01       	movw	r22, r24
    3346:	cd 01       	movw	r24, r26
    3348:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    334c:	dc 01       	movw	r26, r24
    334e:	cb 01       	movw	r24, r22
    3350:	9e 83       	std	Y+6, r25	; 0x06
    3352:	8d 83       	std	Y+5, r24	; 0x05
    3354:	0f c0       	rjmp	.+30     	; 0x3374 <LCD_voidShiftLeft+0xcc>
    3356:	88 ec       	ldi	r24, 0xC8	; 200
    3358:	90 e0       	ldi	r25, 0x00	; 0
    335a:	9c 83       	std	Y+4, r25	; 0x04
    335c:	8b 83       	std	Y+3, r24	; 0x03
    335e:	8b 81       	ldd	r24, Y+3	; 0x03
    3360:	9c 81       	ldd	r25, Y+4	; 0x04
    3362:	01 97       	sbiw	r24, 0x01	; 1
    3364:	f1 f7       	brne	.-4      	; 0x3362 <LCD_voidShiftLeft+0xba>
    3366:	9c 83       	std	Y+4, r25	; 0x04
    3368:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    336a:	8d 81       	ldd	r24, Y+5	; 0x05
    336c:	9e 81       	ldd	r25, Y+6	; 0x06
    336e:	01 97       	sbiw	r24, 0x01	; 1
    3370:	9e 83       	std	Y+6, r25	; 0x06
    3372:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3374:	8d 81       	ldd	r24, Y+5	; 0x05
    3376:	9e 81       	ldd	r25, Y+6	; 0x06
    3378:	00 97       	sbiw	r24, 0x00	; 0
    337a:	69 f7       	brne	.-38     	; 0x3356 <LCD_voidShiftLeft+0xae>
    337c:	14 c0       	rjmp	.+40     	; 0x33a6 <LCD_voidShiftLeft+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    337e:	6f 81       	ldd	r22, Y+7	; 0x07
    3380:	78 85       	ldd	r23, Y+8	; 0x08
    3382:	89 85       	ldd	r24, Y+9	; 0x09
    3384:	9a 85       	ldd	r25, Y+10	; 0x0a
    3386:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    338a:	dc 01       	movw	r26, r24
    338c:	cb 01       	movw	r24, r22
    338e:	9e 83       	std	Y+6, r25	; 0x06
    3390:	8d 83       	std	Y+5, r24	; 0x05
    3392:	8d 81       	ldd	r24, Y+5	; 0x05
    3394:	9e 81       	ldd	r25, Y+6	; 0x06
    3396:	9a 83       	std	Y+2, r25	; 0x02
    3398:	89 83       	std	Y+1, r24	; 0x01
    339a:	89 81       	ldd	r24, Y+1	; 0x01
    339c:	9a 81       	ldd	r25, Y+2	; 0x02
    339e:	01 97       	sbiw	r24, 0x01	; 1
    33a0:	f1 f7       	brne	.-4      	; 0x339e <LCD_voidShiftLeft+0xf6>
    33a2:	9a 83       	std	Y+2, r25	; 0x02
    33a4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    33a6:	2e 96       	adiw	r28, 0x0e	; 14
    33a8:	0f b6       	in	r0, 0x3f	; 63
    33aa:	f8 94       	cli
    33ac:	de bf       	out	0x3e, r29	; 62
    33ae:	0f be       	out	0x3f, r0	; 63
    33b0:	cd bf       	out	0x3d, r28	; 61
    33b2:	cf 91       	pop	r28
    33b4:	df 91       	pop	r29
    33b6:	08 95       	ret

000033b8 <LCD_voidShiftRight>:

void LCD_voidShiftRight (void){
    33b8:	df 93       	push	r29
    33ba:	cf 93       	push	r28
    33bc:	cd b7       	in	r28, 0x3d	; 61
    33be:	de b7       	in	r29, 0x3e	; 62
    33c0:	2e 97       	sbiw	r28, 0x0e	; 14
    33c2:	0f b6       	in	r0, 0x3f	; 63
    33c4:	f8 94       	cli
    33c6:	de bf       	out	0x3e, r29	; 62
    33c8:	0f be       	out	0x3f, r0	; 63
    33ca:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_MOVE_CURSOR_RIGHT);
    33cc:	84 e1       	ldi	r24, 0x14	; 20
    33ce:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    33d2:	80 e0       	ldi	r24, 0x00	; 0
    33d4:	90 e0       	ldi	r25, 0x00	; 0
    33d6:	a0 e2       	ldi	r26, 0x20	; 32
    33d8:	b1 e4       	ldi	r27, 0x41	; 65
    33da:	8b 87       	std	Y+11, r24	; 0x0b
    33dc:	9c 87       	std	Y+12, r25	; 0x0c
    33de:	ad 87       	std	Y+13, r26	; 0x0d
    33e0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33e2:	6b 85       	ldd	r22, Y+11	; 0x0b
    33e4:	7c 85       	ldd	r23, Y+12	; 0x0c
    33e6:	8d 85       	ldd	r24, Y+13	; 0x0d
    33e8:	9e 85       	ldd	r25, Y+14	; 0x0e
    33ea:	20 e0       	ldi	r18, 0x00	; 0
    33ec:	30 e0       	ldi	r19, 0x00	; 0
    33ee:	4a ef       	ldi	r20, 0xFA	; 250
    33f0:	54 e4       	ldi	r21, 0x44	; 68
    33f2:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    33f6:	dc 01       	movw	r26, r24
    33f8:	cb 01       	movw	r24, r22
    33fa:	8f 83       	std	Y+7, r24	; 0x07
    33fc:	98 87       	std	Y+8, r25	; 0x08
    33fe:	a9 87       	std	Y+9, r26	; 0x09
    3400:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3402:	6f 81       	ldd	r22, Y+7	; 0x07
    3404:	78 85       	ldd	r23, Y+8	; 0x08
    3406:	89 85       	ldd	r24, Y+9	; 0x09
    3408:	9a 85       	ldd	r25, Y+10	; 0x0a
    340a:	20 e0       	ldi	r18, 0x00	; 0
    340c:	30 e0       	ldi	r19, 0x00	; 0
    340e:	40 e8       	ldi	r20, 0x80	; 128
    3410:	5f e3       	ldi	r21, 0x3F	; 63
    3412:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    3416:	88 23       	and	r24, r24
    3418:	2c f4       	brge	.+10     	; 0x3424 <LCD_voidShiftRight+0x6c>
		__ticks = 1;
    341a:	81 e0       	ldi	r24, 0x01	; 1
    341c:	90 e0       	ldi	r25, 0x00	; 0
    341e:	9e 83       	std	Y+6, r25	; 0x06
    3420:	8d 83       	std	Y+5, r24	; 0x05
    3422:	3f c0       	rjmp	.+126    	; 0x34a2 <LCD_voidShiftRight+0xea>
	else if (__tmp > 65535)
    3424:	6f 81       	ldd	r22, Y+7	; 0x07
    3426:	78 85       	ldd	r23, Y+8	; 0x08
    3428:	89 85       	ldd	r24, Y+9	; 0x09
    342a:	9a 85       	ldd	r25, Y+10	; 0x0a
    342c:	20 e0       	ldi	r18, 0x00	; 0
    342e:	3f ef       	ldi	r19, 0xFF	; 255
    3430:	4f e7       	ldi	r20, 0x7F	; 127
    3432:	57 e4       	ldi	r21, 0x47	; 71
    3434:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    3438:	18 16       	cp	r1, r24
    343a:	4c f5       	brge	.+82     	; 0x348e <LCD_voidShiftRight+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    343c:	6b 85       	ldd	r22, Y+11	; 0x0b
    343e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3440:	8d 85       	ldd	r24, Y+13	; 0x0d
    3442:	9e 85       	ldd	r25, Y+14	; 0x0e
    3444:	20 e0       	ldi	r18, 0x00	; 0
    3446:	30 e0       	ldi	r19, 0x00	; 0
    3448:	40 e2       	ldi	r20, 0x20	; 32
    344a:	51 e4       	ldi	r21, 0x41	; 65
    344c:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3450:	dc 01       	movw	r26, r24
    3452:	cb 01       	movw	r24, r22
    3454:	bc 01       	movw	r22, r24
    3456:	cd 01       	movw	r24, r26
    3458:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    345c:	dc 01       	movw	r26, r24
    345e:	cb 01       	movw	r24, r22
    3460:	9e 83       	std	Y+6, r25	; 0x06
    3462:	8d 83       	std	Y+5, r24	; 0x05
    3464:	0f c0       	rjmp	.+30     	; 0x3484 <LCD_voidShiftRight+0xcc>
    3466:	88 ec       	ldi	r24, 0xC8	; 200
    3468:	90 e0       	ldi	r25, 0x00	; 0
    346a:	9c 83       	std	Y+4, r25	; 0x04
    346c:	8b 83       	std	Y+3, r24	; 0x03
    346e:	8b 81       	ldd	r24, Y+3	; 0x03
    3470:	9c 81       	ldd	r25, Y+4	; 0x04
    3472:	01 97       	sbiw	r24, 0x01	; 1
    3474:	f1 f7       	brne	.-4      	; 0x3472 <LCD_voidShiftRight+0xba>
    3476:	9c 83       	std	Y+4, r25	; 0x04
    3478:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    347a:	8d 81       	ldd	r24, Y+5	; 0x05
    347c:	9e 81       	ldd	r25, Y+6	; 0x06
    347e:	01 97       	sbiw	r24, 0x01	; 1
    3480:	9e 83       	std	Y+6, r25	; 0x06
    3482:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3484:	8d 81       	ldd	r24, Y+5	; 0x05
    3486:	9e 81       	ldd	r25, Y+6	; 0x06
    3488:	00 97       	sbiw	r24, 0x00	; 0
    348a:	69 f7       	brne	.-38     	; 0x3466 <LCD_voidShiftRight+0xae>
    348c:	14 c0       	rjmp	.+40     	; 0x34b6 <LCD_voidShiftRight+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    348e:	6f 81       	ldd	r22, Y+7	; 0x07
    3490:	78 85       	ldd	r23, Y+8	; 0x08
    3492:	89 85       	ldd	r24, Y+9	; 0x09
    3494:	9a 85       	ldd	r25, Y+10	; 0x0a
    3496:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    349a:	dc 01       	movw	r26, r24
    349c:	cb 01       	movw	r24, r22
    349e:	9e 83       	std	Y+6, r25	; 0x06
    34a0:	8d 83       	std	Y+5, r24	; 0x05
    34a2:	8d 81       	ldd	r24, Y+5	; 0x05
    34a4:	9e 81       	ldd	r25, Y+6	; 0x06
    34a6:	9a 83       	std	Y+2, r25	; 0x02
    34a8:	89 83       	std	Y+1, r24	; 0x01
    34aa:	89 81       	ldd	r24, Y+1	; 0x01
    34ac:	9a 81       	ldd	r25, Y+2	; 0x02
    34ae:	01 97       	sbiw	r24, 0x01	; 1
    34b0:	f1 f7       	brne	.-4      	; 0x34ae <LCD_voidShiftRight+0xf6>
    34b2:	9a 83       	std	Y+2, r25	; 0x02
    34b4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    34b6:	2e 96       	adiw	r28, 0x0e	; 14
    34b8:	0f b6       	in	r0, 0x3f	; 63
    34ba:	f8 94       	cli
    34bc:	de bf       	out	0x3e, r29	; 62
    34be:	0f be       	out	0x3f, r0	; 63
    34c0:	cd bf       	out	0x3d, r28	; 61
    34c2:	cf 91       	pop	r28
    34c4:	df 91       	pop	r29
    34c6:	08 95       	ret

000034c8 <LCD_voidMoveCursor>:

void LCD_voidMoveCursor (uint8 u8RowCopy ,uint8 u8ColoumnCopy){
    34c8:	df 93       	push	r29
    34ca:	cf 93       	push	r28
    34cc:	cd b7       	in	r28, 0x3d	; 61
    34ce:	de b7       	in	r29, 0x3e	; 62
    34d0:	61 97       	sbiw	r28, 0x11	; 17
    34d2:	0f b6       	in	r0, 0x3f	; 63
    34d4:	f8 94       	cli
    34d6:	de bf       	out	0x3e, r29	; 62
    34d8:	0f be       	out	0x3f, r0	; 63
    34da:	cd bf       	out	0x3d, r28	; 61
    34dc:	88 8b       	std	Y+16, r24	; 0x10
    34de:	69 8b       	std	Y+17, r22	; 0x11
	uint8 copy_u8data;
	//cases un valied
	if(((u8RowCopy<1) ||(u8RowCopy>2)) || (u8ColoumnCopy<1) ||(u8ColoumnCopy>16))
    34e0:	88 89       	ldd	r24, Y+16	; 0x10
    34e2:	88 23       	and	r24, r24
    34e4:	49 f0       	breq	.+18     	; 0x34f8 <LCD_voidMoveCursor+0x30>
    34e6:	88 89       	ldd	r24, Y+16	; 0x10
    34e8:	83 30       	cpi	r24, 0x03	; 3
    34ea:	30 f4       	brcc	.+12     	; 0x34f8 <LCD_voidMoveCursor+0x30>
    34ec:	89 89       	ldd	r24, Y+17	; 0x11
    34ee:	88 23       	and	r24, r24
    34f0:	19 f0       	breq	.+6      	; 0x34f8 <LCD_voidMoveCursor+0x30>
    34f2:	89 89       	ldd	r24, Y+17	; 0x11
    34f4:	81 31       	cpi	r24, 0x11	; 17
    34f6:	18 f0       	brcs	.+6      	; 0x34fe <LCD_voidMoveCursor+0x36>
	{
		//cursor in first position >>10000000 //load aderess counter with zero
		copy_u8data = 0x80;
    34f8:	80 e8       	ldi	r24, 0x80	; 128
    34fa:	8f 87       	std	Y+15, r24	; 0x0f
    34fc:	0d c0       	rjmp	.+26     	; 0x3518 <LCD_voidMoveCursor+0x50>
	}
	else if(u8RowCopy ==1)
    34fe:	88 89       	ldd	r24, Y+16	; 0x10
    3500:	81 30       	cpi	r24, 0x01	; 1
    3502:	21 f4       	brne	.+8      	; 0x350c <LCD_voidMoveCursor+0x44>
	{
		//first row in any coloumn
		copy_u8data= 0x80 +(u8ColoumnCopy -1);
    3504:	89 89       	ldd	r24, Y+17	; 0x11
    3506:	81 58       	subi	r24, 0x81	; 129
    3508:	8f 87       	std	Y+15, r24	; 0x0f
    350a:	06 c0       	rjmp	.+12     	; 0x3518 <LCD_voidMoveCursor+0x50>
	}
	else if(u8RowCopy ==2)
    350c:	88 89       	ldd	r24, Y+16	; 0x10
    350e:	82 30       	cpi	r24, 0x02	; 2
    3510:	19 f4       	brne	.+6      	; 0x3518 <LCD_voidMoveCursor+0x50>
	{
		//first row in any coloumn
		copy_u8data= 0xc0 +(u8ColoumnCopy -1);
    3512:	89 89       	ldd	r24, Y+17	; 0x11
    3514:	81 54       	subi	r24, 0x41	; 65
    3516:	8f 87       	std	Y+15, r24	; 0x0f
	}
	LCD_voidWriteCmd(copy_u8data);
    3518:	8f 85       	ldd	r24, Y+15	; 0x0f
    351a:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    351e:	80 e0       	ldi	r24, 0x00	; 0
    3520:	90 e0       	ldi	r25, 0x00	; 0
    3522:	a0 e8       	ldi	r26, 0x80	; 128
    3524:	bf e3       	ldi	r27, 0x3F	; 63
    3526:	8b 87       	std	Y+11, r24	; 0x0b
    3528:	9c 87       	std	Y+12, r25	; 0x0c
    352a:	ad 87       	std	Y+13, r26	; 0x0d
    352c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    352e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3530:	7c 85       	ldd	r23, Y+12	; 0x0c
    3532:	8d 85       	ldd	r24, Y+13	; 0x0d
    3534:	9e 85       	ldd	r25, Y+14	; 0x0e
    3536:	20 e0       	ldi	r18, 0x00	; 0
    3538:	30 e0       	ldi	r19, 0x00	; 0
    353a:	4a ef       	ldi	r20, 0xFA	; 250
    353c:	54 e4       	ldi	r21, 0x44	; 68
    353e:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3542:	dc 01       	movw	r26, r24
    3544:	cb 01       	movw	r24, r22
    3546:	8f 83       	std	Y+7, r24	; 0x07
    3548:	98 87       	std	Y+8, r25	; 0x08
    354a:	a9 87       	std	Y+9, r26	; 0x09
    354c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    354e:	6f 81       	ldd	r22, Y+7	; 0x07
    3550:	78 85       	ldd	r23, Y+8	; 0x08
    3552:	89 85       	ldd	r24, Y+9	; 0x09
    3554:	9a 85       	ldd	r25, Y+10	; 0x0a
    3556:	20 e0       	ldi	r18, 0x00	; 0
    3558:	30 e0       	ldi	r19, 0x00	; 0
    355a:	40 e8       	ldi	r20, 0x80	; 128
    355c:	5f e3       	ldi	r21, 0x3F	; 63
    355e:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    3562:	88 23       	and	r24, r24
    3564:	2c f4       	brge	.+10     	; 0x3570 <LCD_voidMoveCursor+0xa8>
		__ticks = 1;
    3566:	81 e0       	ldi	r24, 0x01	; 1
    3568:	90 e0       	ldi	r25, 0x00	; 0
    356a:	9e 83       	std	Y+6, r25	; 0x06
    356c:	8d 83       	std	Y+5, r24	; 0x05
    356e:	3f c0       	rjmp	.+126    	; 0x35ee <LCD_voidMoveCursor+0x126>
	else if (__tmp > 65535)
    3570:	6f 81       	ldd	r22, Y+7	; 0x07
    3572:	78 85       	ldd	r23, Y+8	; 0x08
    3574:	89 85       	ldd	r24, Y+9	; 0x09
    3576:	9a 85       	ldd	r25, Y+10	; 0x0a
    3578:	20 e0       	ldi	r18, 0x00	; 0
    357a:	3f ef       	ldi	r19, 0xFF	; 255
    357c:	4f e7       	ldi	r20, 0x7F	; 127
    357e:	57 e4       	ldi	r21, 0x47	; 71
    3580:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    3584:	18 16       	cp	r1, r24
    3586:	4c f5       	brge	.+82     	; 0x35da <LCD_voidMoveCursor+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3588:	6b 85       	ldd	r22, Y+11	; 0x0b
    358a:	7c 85       	ldd	r23, Y+12	; 0x0c
    358c:	8d 85       	ldd	r24, Y+13	; 0x0d
    358e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3590:	20 e0       	ldi	r18, 0x00	; 0
    3592:	30 e0       	ldi	r19, 0x00	; 0
    3594:	40 e2       	ldi	r20, 0x20	; 32
    3596:	51 e4       	ldi	r21, 0x41	; 65
    3598:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    359c:	dc 01       	movw	r26, r24
    359e:	cb 01       	movw	r24, r22
    35a0:	bc 01       	movw	r22, r24
    35a2:	cd 01       	movw	r24, r26
    35a4:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    35a8:	dc 01       	movw	r26, r24
    35aa:	cb 01       	movw	r24, r22
    35ac:	9e 83       	std	Y+6, r25	; 0x06
    35ae:	8d 83       	std	Y+5, r24	; 0x05
    35b0:	0f c0       	rjmp	.+30     	; 0x35d0 <LCD_voidMoveCursor+0x108>
    35b2:	88 ec       	ldi	r24, 0xC8	; 200
    35b4:	90 e0       	ldi	r25, 0x00	; 0
    35b6:	9c 83       	std	Y+4, r25	; 0x04
    35b8:	8b 83       	std	Y+3, r24	; 0x03
    35ba:	8b 81       	ldd	r24, Y+3	; 0x03
    35bc:	9c 81       	ldd	r25, Y+4	; 0x04
    35be:	01 97       	sbiw	r24, 0x01	; 1
    35c0:	f1 f7       	brne	.-4      	; 0x35be <LCD_voidMoveCursor+0xf6>
    35c2:	9c 83       	std	Y+4, r25	; 0x04
    35c4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35c6:	8d 81       	ldd	r24, Y+5	; 0x05
    35c8:	9e 81       	ldd	r25, Y+6	; 0x06
    35ca:	01 97       	sbiw	r24, 0x01	; 1
    35cc:	9e 83       	std	Y+6, r25	; 0x06
    35ce:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35d0:	8d 81       	ldd	r24, Y+5	; 0x05
    35d2:	9e 81       	ldd	r25, Y+6	; 0x06
    35d4:	00 97       	sbiw	r24, 0x00	; 0
    35d6:	69 f7       	brne	.-38     	; 0x35b2 <LCD_voidMoveCursor+0xea>
    35d8:	14 c0       	rjmp	.+40     	; 0x3602 <LCD_voidMoveCursor+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35da:	6f 81       	ldd	r22, Y+7	; 0x07
    35dc:	78 85       	ldd	r23, Y+8	; 0x08
    35de:	89 85       	ldd	r24, Y+9	; 0x09
    35e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    35e2:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    35e6:	dc 01       	movw	r26, r24
    35e8:	cb 01       	movw	r24, r22
    35ea:	9e 83       	std	Y+6, r25	; 0x06
    35ec:	8d 83       	std	Y+5, r24	; 0x05
    35ee:	8d 81       	ldd	r24, Y+5	; 0x05
    35f0:	9e 81       	ldd	r25, Y+6	; 0x06
    35f2:	9a 83       	std	Y+2, r25	; 0x02
    35f4:	89 83       	std	Y+1, r24	; 0x01
    35f6:	89 81       	ldd	r24, Y+1	; 0x01
    35f8:	9a 81       	ldd	r25, Y+2	; 0x02
    35fa:	01 97       	sbiw	r24, 0x01	; 1
    35fc:	f1 f7       	brne	.-4      	; 0x35fa <LCD_voidMoveCursor+0x132>
    35fe:	9a 83       	std	Y+2, r25	; 0x02
    3600:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3602:	61 96       	adiw	r28, 0x11	; 17
    3604:	0f b6       	in	r0, 0x3f	; 63
    3606:	f8 94       	cli
    3608:	de bf       	out	0x3e, r29	; 62
    360a:	0f be       	out	0x3f, r0	; 63
    360c:	cd bf       	out	0x3d, r28	; 61
    360e:	cf 91       	pop	r28
    3610:	df 91       	pop	r29
    3612:	08 95       	ret

00003614 <LCD_voidWriteString>:

void LCD_voidWriteString(uint8 *u8stringCopy){
    3614:	df 93       	push	r29
    3616:	cf 93       	push	r28
    3618:	00 d0       	rcall	.+0      	; 0x361a <LCD_voidWriteString+0x6>
    361a:	cd b7       	in	r28, 0x3d	; 61
    361c:	de b7       	in	r29, 0x3e	; 62
    361e:	9a 83       	std	Y+2, r25	; 0x02
    3620:	89 83       	std	Y+1, r24	; 0x01
    3622:	0a c0       	rjmp	.+20     	; 0x3638 <LCD_voidWriteString+0x24>

	while((*u8stringCopy)!= '\0'){
		LCD_voidWriteChar(*u8stringCopy);
    3624:	e9 81       	ldd	r30, Y+1	; 0x01
    3626:	fa 81       	ldd	r31, Y+2	; 0x02
    3628:	80 81       	ld	r24, Z
    362a:	0e 94 b2 18 	call	0x3164	; 0x3164 <LCD_voidWriteChar>
			u8stringCopy++;
    362e:	89 81       	ldd	r24, Y+1	; 0x01
    3630:	9a 81       	ldd	r25, Y+2	; 0x02
    3632:	01 96       	adiw	r24, 0x01	; 1
    3634:	9a 83       	std	Y+2, r25	; 0x02
    3636:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}

void LCD_voidWriteString(uint8 *u8stringCopy){

	while((*u8stringCopy)!= '\0'){
    3638:	e9 81       	ldd	r30, Y+1	; 0x01
    363a:	fa 81       	ldd	r31, Y+2	; 0x02
    363c:	80 81       	ld	r24, Z
    363e:	88 23       	and	r24, r24
    3640:	89 f7       	brne	.-30     	; 0x3624 <LCD_voidWriteString+0x10>
		LCD_voidWriteChar(*u8stringCopy);
			u8stringCopy++;
		}
}
    3642:	0f 90       	pop	r0
    3644:	0f 90       	pop	r0
    3646:	cf 91       	pop	r28
    3648:	df 91       	pop	r29
    364a:	08 95       	ret

0000364c <LCD_voidWriteNumber>:

void LCD_voidWriteNumber(uint32 u32NumberCopy){
    364c:	df 93       	push	r29
    364e:	cf 93       	push	r28
    3650:	cd b7       	in	r28, 0x3d	; 61
    3652:	de b7       	in	r29, 0x3e	; 62
    3654:	2e 97       	sbiw	r28, 0x0e	; 14
    3656:	0f b6       	in	r0, 0x3f	; 63
    3658:	f8 94       	cli
    365a:	de bf       	out	0x3e, r29	; 62
    365c:	0f be       	out	0x3f, r0	; 63
    365e:	cd bf       	out	0x3d, r28	; 61
    3660:	6b 87       	std	Y+11, r22	; 0x0b
    3662:	7c 87       	std	Y+12, r23	; 0x0c
    3664:	8d 87       	std	Y+13, r24	; 0x0d
    3666:	9e 87       	std	Y+14, r25	; 0x0e
	uint8 str[10];
	//transfer the number into string then display
	sprintf(str ,"%lu" ,u32NumberCopy);
    3668:	8d b7       	in	r24, 0x3d	; 61
    366a:	9e b7       	in	r25, 0x3e	; 62
    366c:	08 97       	sbiw	r24, 0x08	; 8
    366e:	0f b6       	in	r0, 0x3f	; 63
    3670:	f8 94       	cli
    3672:	9e bf       	out	0x3e, r25	; 62
    3674:	0f be       	out	0x3f, r0	; 63
    3676:	8d bf       	out	0x3d, r24	; 61
    3678:	ed b7       	in	r30, 0x3d	; 61
    367a:	fe b7       	in	r31, 0x3e	; 62
    367c:	31 96       	adiw	r30, 0x01	; 1
    367e:	ce 01       	movw	r24, r28
    3680:	01 96       	adiw	r24, 0x01	; 1
    3682:	91 83       	std	Z+1, r25	; 0x01
    3684:	80 83       	st	Z, r24
    3686:	80 e6       	ldi	r24, 0x60	; 96
    3688:	90 e0       	ldi	r25, 0x00	; 0
    368a:	93 83       	std	Z+3, r25	; 0x03
    368c:	82 83       	std	Z+2, r24	; 0x02
    368e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3690:	9c 85       	ldd	r25, Y+12	; 0x0c
    3692:	ad 85       	ldd	r26, Y+13	; 0x0d
    3694:	be 85       	ldd	r27, Y+14	; 0x0e
    3696:	84 83       	std	Z+4, r24	; 0x04
    3698:	95 83       	std	Z+5, r25	; 0x05
    369a:	a6 83       	std	Z+6, r26	; 0x06
    369c:	b7 83       	std	Z+7, r27	; 0x07
    369e:	0e 94 b7 29 	call	0x536e	; 0x536e <sprintf>
    36a2:	8d b7       	in	r24, 0x3d	; 61
    36a4:	9e b7       	in	r25, 0x3e	; 62
    36a6:	08 96       	adiw	r24, 0x08	; 8
    36a8:	0f b6       	in	r0, 0x3f	; 63
    36aa:	f8 94       	cli
    36ac:	9e bf       	out	0x3e, r25	; 62
    36ae:	0f be       	out	0x3f, r0	; 63
    36b0:	8d bf       	out	0x3d, r24	; 61
	LCD_voidWriteString(str);
    36b2:	ce 01       	movw	r24, r28
    36b4:	01 96       	adiw	r24, 0x01	; 1
    36b6:	0e 94 0a 1b 	call	0x3614	; 0x3614 <LCD_voidWriteString>
}
    36ba:	2e 96       	adiw	r28, 0x0e	; 14
    36bc:	0f b6       	in	r0, 0x3f	; 63
    36be:	f8 94       	cli
    36c0:	de bf       	out	0x3e, r29	; 62
    36c2:	0f be       	out	0x3f, r0	; 63
    36c4:	cd bf       	out	0x3d, r28	; 61
    36c6:	cf 91       	pop	r28
    36c8:	df 91       	pop	r29
    36ca:	08 95       	ret

000036cc <LCD_voidWriteRealNumber>:

void LCD_voidWriteRealNumber(float32  f32NumberCopy){
    36cc:	df 93       	push	r29
    36ce:	cf 93       	push	r28
    36d0:	cd b7       	in	r28, 0x3d	; 61
    36d2:	de b7       	in	r29, 0x3e	; 62
    36d4:	ac 97       	sbiw	r28, 0x2c	; 44
    36d6:	0f b6       	in	r0, 0x3f	; 63
    36d8:	f8 94       	cli
    36da:	de bf       	out	0x3e, r29	; 62
    36dc:	0f be       	out	0x3f, r0	; 63
    36de:	cd bf       	out	0x3d, r28	; 61
    36e0:	6b a3       	std	Y+35, r22	; 0x23
    36e2:	7c a3       	std	Y+36, r23	; 0x24
    36e4:	8d a3       	std	Y+37, r24	; 0x25
    36e6:	9e a3       	std	Y+38, r25	; 0x26
	    uint8 str [16];
		uint8 *tmpsign=(f32NumberCopy < 0)? "-" :"" ;
    36e8:	6b a1       	ldd	r22, Y+35	; 0x23
    36ea:	7c a1       	ldd	r23, Y+36	; 0x24
    36ec:	8d a1       	ldd	r24, Y+37	; 0x25
    36ee:	9e a1       	ldd	r25, Y+38	; 0x26
    36f0:	20 e0       	ldi	r18, 0x00	; 0
    36f2:	30 e0       	ldi	r19, 0x00	; 0
    36f4:	40 e0       	ldi	r20, 0x00	; 0
    36f6:	50 e0       	ldi	r21, 0x00	; 0
    36f8:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    36fc:	88 23       	and	r24, r24
    36fe:	2c f4       	brge	.+10     	; 0x370a <LCD_voidWriteRealNumber+0x3e>
    3700:	24 e6       	ldi	r18, 0x64	; 100
    3702:	30 e0       	ldi	r19, 0x00	; 0
    3704:	3c a7       	std	Y+44, r19	; 0x2c
    3706:	2b a7       	std	Y+43, r18	; 0x2b
    3708:	04 c0       	rjmp	.+8      	; 0x3712 <LCD_voidWriteRealNumber+0x46>
    370a:	46 e6       	ldi	r20, 0x66	; 102
    370c:	50 e0       	ldi	r21, 0x00	; 0
    370e:	5c a7       	std	Y+44, r21	; 0x2c
    3710:	4b a7       	std	Y+43, r20	; 0x2b
    3712:	8b a5       	ldd	r24, Y+43	; 0x2b
    3714:	9c a5       	ldd	r25, Y+44	; 0x2c
    3716:	9a 8b       	std	Y+18, r25	; 0x12
    3718:	89 8b       	std	Y+17, r24	; 0x11
		float32 tmpval =(f32NumberCopy < 0)? -f32NumberCopy : f32NumberCopy ;
    371a:	6b a1       	ldd	r22, Y+35	; 0x23
    371c:	7c a1       	ldd	r23, Y+36	; 0x24
    371e:	8d a1       	ldd	r24, Y+37	; 0x25
    3720:	9e a1       	ldd	r25, Y+38	; 0x26
    3722:	20 e0       	ldi	r18, 0x00	; 0
    3724:	30 e0       	ldi	r19, 0x00	; 0
    3726:	40 e0       	ldi	r20, 0x00	; 0
    3728:	50 e0       	ldi	r21, 0x00	; 0
    372a:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    372e:	88 23       	and	r24, r24
    3730:	64 f4       	brge	.+24     	; 0x374a <LCD_voidWriteRealNumber+0x7e>
    3732:	8b a1       	ldd	r24, Y+35	; 0x23
    3734:	9c a1       	ldd	r25, Y+36	; 0x24
    3736:	ad a1       	ldd	r26, Y+37	; 0x25
    3738:	be a1       	ldd	r27, Y+38	; 0x26
    373a:	9c 01       	movw	r18, r24
    373c:	ad 01       	movw	r20, r26
    373e:	50 58       	subi	r21, 0x80	; 128
    3740:	2f a3       	std	Y+39, r18	; 0x27
    3742:	38 a7       	std	Y+40, r19	; 0x28
    3744:	49 a7       	std	Y+41, r20	; 0x29
    3746:	5a a7       	std	Y+42, r21	; 0x2a
    3748:	08 c0       	rjmp	.+16     	; 0x375a <LCD_voidWriteRealNumber+0x8e>
    374a:	8b a1       	ldd	r24, Y+35	; 0x23
    374c:	9c a1       	ldd	r25, Y+36	; 0x24
    374e:	ad a1       	ldd	r26, Y+37	; 0x25
    3750:	be a1       	ldd	r27, Y+38	; 0x26
    3752:	8f a3       	std	Y+39, r24	; 0x27
    3754:	98 a7       	std	Y+40, r25	; 0x28
    3756:	a9 a7       	std	Y+41, r26	; 0x29
    3758:	ba a7       	std	Y+42, r27	; 0x2a
    375a:	2f a1       	ldd	r18, Y+39	; 0x27
    375c:	38 a5       	ldd	r19, Y+40	; 0x28
    375e:	49 a5       	ldd	r20, Y+41	; 0x29
    3760:	5a a5       	ldd	r21, Y+42	; 0x2a
    3762:	2d 87       	std	Y+13, r18	; 0x0d
    3764:	3e 87       	std	Y+14, r19	; 0x0e
    3766:	4f 87       	std	Y+15, r20	; 0x0f
    3768:	58 8b       	std	Y+16, r21	; 0x10
		sint32 tempint1 = tmpval;
    376a:	6d 85       	ldd	r22, Y+13	; 0x0d
    376c:	7e 85       	ldd	r23, Y+14	; 0x0e
    376e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3770:	98 89       	ldd	r25, Y+16	; 0x10
    3772:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__fixsfsi>
    3776:	dc 01       	movw	r26, r24
    3778:	cb 01       	movw	r24, r22
    377a:	89 87       	std	Y+9, r24	; 0x09
    377c:	9a 87       	std	Y+10, r25	; 0x0a
    377e:	ab 87       	std	Y+11, r26	; 0x0b
    3780:	bc 87       	std	Y+12, r27	; 0x0c
	    float32 tmpfrac = tmpval - tempint1;
    3782:	69 85       	ldd	r22, Y+9	; 0x09
    3784:	7a 85       	ldd	r23, Y+10	; 0x0a
    3786:	8b 85       	ldd	r24, Y+11	; 0x0b
    3788:	9c 85       	ldd	r25, Y+12	; 0x0c
    378a:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <__floatsisf>
    378e:	9b 01       	movw	r18, r22
    3790:	ac 01       	movw	r20, r24
    3792:	6d 85       	ldd	r22, Y+13	; 0x0d
    3794:	7e 85       	ldd	r23, Y+14	; 0x0e
    3796:	8f 85       	ldd	r24, Y+15	; 0x0f
    3798:	98 89       	ldd	r25, Y+16	; 0x10
    379a:	0e 94 df 0b 	call	0x17be	; 0x17be <__subsf3>
    379e:	dc 01       	movw	r26, r24
    37a0:	cb 01       	movw	r24, r22
    37a2:	8d 83       	std	Y+5, r24	; 0x05
    37a4:	9e 83       	std	Y+6, r25	; 0x06
    37a6:	af 83       	std	Y+7, r26	; 0x07
    37a8:	b8 87       	std	Y+8, r27	; 0x08
	    sint32 tempint2 = tmpfrac*10000;
    37aa:	6d 81       	ldd	r22, Y+5	; 0x05
    37ac:	7e 81       	ldd	r23, Y+6	; 0x06
    37ae:	8f 81       	ldd	r24, Y+7	; 0x07
    37b0:	98 85       	ldd	r25, Y+8	; 0x08
    37b2:	20 e0       	ldi	r18, 0x00	; 0
    37b4:	30 e4       	ldi	r19, 0x40	; 64
    37b6:	4c e1       	ldi	r20, 0x1C	; 28
    37b8:	56 e4       	ldi	r21, 0x46	; 70
    37ba:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    37be:	dc 01       	movw	r26, r24
    37c0:	cb 01       	movw	r24, r22
    37c2:	bc 01       	movw	r22, r24
    37c4:	cd 01       	movw	r24, r26
    37c6:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__fixsfsi>
    37ca:	dc 01       	movw	r26, r24
    37cc:	cb 01       	movw	r24, r22
    37ce:	89 83       	std	Y+1, r24	; 0x01
    37d0:	9a 83       	std	Y+2, r25	; 0x02
    37d2:	ab 83       	std	Y+3, r26	; 0x03
    37d4:	bc 83       	std	Y+4, r27	; 0x04
		sprintf(str ,"%s%d.%04d",tmpsign ,tempint1 ,tempint2);
    37d6:	4d b7       	in	r20, 0x3d	; 61
    37d8:	5e b7       	in	r21, 0x3e	; 62
    37da:	4e 50       	subi	r20, 0x0E	; 14
    37dc:	50 40       	sbci	r21, 0x00	; 0
    37de:	0f b6       	in	r0, 0x3f	; 63
    37e0:	f8 94       	cli
    37e2:	5e bf       	out	0x3e, r21	; 62
    37e4:	0f be       	out	0x3f, r0	; 63
    37e6:	4d bf       	out	0x3d, r20	; 61
    37e8:	ed b7       	in	r30, 0x3d	; 61
    37ea:	fe b7       	in	r31, 0x3e	; 62
    37ec:	31 96       	adiw	r30, 0x01	; 1
    37ee:	ce 01       	movw	r24, r28
    37f0:	43 96       	adiw	r24, 0x13	; 19
    37f2:	91 83       	std	Z+1, r25	; 0x01
    37f4:	80 83       	st	Z, r24
    37f6:	87 e6       	ldi	r24, 0x67	; 103
    37f8:	90 e0       	ldi	r25, 0x00	; 0
    37fa:	93 83       	std	Z+3, r25	; 0x03
    37fc:	82 83       	std	Z+2, r24	; 0x02
    37fe:	89 89       	ldd	r24, Y+17	; 0x11
    3800:	9a 89       	ldd	r25, Y+18	; 0x12
    3802:	95 83       	std	Z+5, r25	; 0x05
    3804:	84 83       	std	Z+4, r24	; 0x04
    3806:	89 85       	ldd	r24, Y+9	; 0x09
    3808:	9a 85       	ldd	r25, Y+10	; 0x0a
    380a:	ab 85       	ldd	r26, Y+11	; 0x0b
    380c:	bc 85       	ldd	r27, Y+12	; 0x0c
    380e:	86 83       	std	Z+6, r24	; 0x06
    3810:	97 83       	std	Z+7, r25	; 0x07
    3812:	a0 87       	std	Z+8, r26	; 0x08
    3814:	b1 87       	std	Z+9, r27	; 0x09
    3816:	89 81       	ldd	r24, Y+1	; 0x01
    3818:	9a 81       	ldd	r25, Y+2	; 0x02
    381a:	ab 81       	ldd	r26, Y+3	; 0x03
    381c:	bc 81       	ldd	r27, Y+4	; 0x04
    381e:	82 87       	std	Z+10, r24	; 0x0a
    3820:	93 87       	std	Z+11, r25	; 0x0b
    3822:	a4 87       	std	Z+12, r26	; 0x0c
    3824:	b5 87       	std	Z+13, r27	; 0x0d
    3826:	0e 94 b7 29 	call	0x536e	; 0x536e <sprintf>
    382a:	8d b7       	in	r24, 0x3d	; 61
    382c:	9e b7       	in	r25, 0x3e	; 62
    382e:	0e 96       	adiw	r24, 0x0e	; 14
    3830:	0f b6       	in	r0, 0x3f	; 63
    3832:	f8 94       	cli
    3834:	9e bf       	out	0x3e, r25	; 62
    3836:	0f be       	out	0x3f, r0	; 63
    3838:	8d bf       	out	0x3d, r24	; 61
		LCD_voidWriteString(str);
    383a:	ce 01       	movw	r24, r28
    383c:	43 96       	adiw	r24, 0x13	; 19
    383e:	0e 94 0a 1b 	call	0x3614	; 0x3614 <LCD_voidWriteString>
}
    3842:	ac 96       	adiw	r28, 0x2c	; 44
    3844:	0f b6       	in	r0, 0x3f	; 63
    3846:	f8 94       	cli
    3848:	de bf       	out	0x3e, r29	; 62
    384a:	0f be       	out	0x3f, r0	; 63
    384c:	cd bf       	out	0x3d, r28	; 61
    384e:	cf 91       	pop	r28
    3850:	df 91       	pop	r29
    3852:	08 95       	ret

00003854 <LCD_voidSendEnPulse>:

static LCD_voidSendEnPulse(){
    3854:	df 93       	push	r29
    3856:	cf 93       	push	r28
    3858:	cd b7       	in	r28, 0x3d	; 61
    385a:	de b7       	in	r29, 0x3e	; 62
    385c:	60 97       	sbiw	r28, 0x10	; 16
    385e:	0f b6       	in	r0, 0x3f	; 63
    3860:	f8 94       	cli
    3862:	de bf       	out	0x3e, r29	; 62
    3864:	0f be       	out	0x3f, r0	; 63
    3866:	cd bf       	out	0x3d, r28	; 61

	DIO_u8SetPinVal(LCD_EN_PORT , LCD_EN_PIN , HIGH); //ENABLE high
    3868:	81 e0       	ldi	r24, 0x01	; 1
    386a:	62 e0       	ldi	r22, 0x02	; 2
    386c:	41 e0       	ldi	r20, 0x01	; 1
    386e:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>
    3872:	80 e0       	ldi	r24, 0x00	; 0
    3874:	90 e0       	ldi	r25, 0x00	; 0
    3876:	a0 e0       	ldi	r26, 0x00	; 0
    3878:	b0 e4       	ldi	r27, 0x40	; 64
    387a:	8b 87       	std	Y+11, r24	; 0x0b
    387c:	9c 87       	std	Y+12, r25	; 0x0c
    387e:	ad 87       	std	Y+13, r26	; 0x0d
    3880:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3882:	6b 85       	ldd	r22, Y+11	; 0x0b
    3884:	7c 85       	ldd	r23, Y+12	; 0x0c
    3886:	8d 85       	ldd	r24, Y+13	; 0x0d
    3888:	9e 85       	ldd	r25, Y+14	; 0x0e
    388a:	20 e0       	ldi	r18, 0x00	; 0
    388c:	30 e0       	ldi	r19, 0x00	; 0
    388e:	4a ef       	ldi	r20, 0xFA	; 250
    3890:	54 e4       	ldi	r21, 0x44	; 68
    3892:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3896:	dc 01       	movw	r26, r24
    3898:	cb 01       	movw	r24, r22
    389a:	8f 83       	std	Y+7, r24	; 0x07
    389c:	98 87       	std	Y+8, r25	; 0x08
    389e:	a9 87       	std	Y+9, r26	; 0x09
    38a0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    38a2:	6f 81       	ldd	r22, Y+7	; 0x07
    38a4:	78 85       	ldd	r23, Y+8	; 0x08
    38a6:	89 85       	ldd	r24, Y+9	; 0x09
    38a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    38aa:	20 e0       	ldi	r18, 0x00	; 0
    38ac:	30 e0       	ldi	r19, 0x00	; 0
    38ae:	40 e8       	ldi	r20, 0x80	; 128
    38b0:	5f e3       	ldi	r21, 0x3F	; 63
    38b2:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    38b6:	88 23       	and	r24, r24
    38b8:	2c f4       	brge	.+10     	; 0x38c4 <LCD_voidSendEnPulse+0x70>
		__ticks = 1;
    38ba:	81 e0       	ldi	r24, 0x01	; 1
    38bc:	90 e0       	ldi	r25, 0x00	; 0
    38be:	9e 83       	std	Y+6, r25	; 0x06
    38c0:	8d 83       	std	Y+5, r24	; 0x05
    38c2:	3f c0       	rjmp	.+126    	; 0x3942 <LCD_voidSendEnPulse+0xee>
	else if (__tmp > 65535)
    38c4:	6f 81       	ldd	r22, Y+7	; 0x07
    38c6:	78 85       	ldd	r23, Y+8	; 0x08
    38c8:	89 85       	ldd	r24, Y+9	; 0x09
    38ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    38cc:	20 e0       	ldi	r18, 0x00	; 0
    38ce:	3f ef       	ldi	r19, 0xFF	; 255
    38d0:	4f e7       	ldi	r20, 0x7F	; 127
    38d2:	57 e4       	ldi	r21, 0x47	; 71
    38d4:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    38d8:	18 16       	cp	r1, r24
    38da:	4c f5       	brge	.+82     	; 0x392e <LCD_voidSendEnPulse+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    38de:	7c 85       	ldd	r23, Y+12	; 0x0c
    38e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    38e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    38e4:	20 e0       	ldi	r18, 0x00	; 0
    38e6:	30 e0       	ldi	r19, 0x00	; 0
    38e8:	40 e2       	ldi	r20, 0x20	; 32
    38ea:	51 e4       	ldi	r21, 0x41	; 65
    38ec:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    38f0:	dc 01       	movw	r26, r24
    38f2:	cb 01       	movw	r24, r22
    38f4:	bc 01       	movw	r22, r24
    38f6:	cd 01       	movw	r24, r26
    38f8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    38fc:	dc 01       	movw	r26, r24
    38fe:	cb 01       	movw	r24, r22
    3900:	9e 83       	std	Y+6, r25	; 0x06
    3902:	8d 83       	std	Y+5, r24	; 0x05
    3904:	0f c0       	rjmp	.+30     	; 0x3924 <LCD_voidSendEnPulse+0xd0>
    3906:	88 ec       	ldi	r24, 0xC8	; 200
    3908:	90 e0       	ldi	r25, 0x00	; 0
    390a:	9c 83       	std	Y+4, r25	; 0x04
    390c:	8b 83       	std	Y+3, r24	; 0x03
    390e:	8b 81       	ldd	r24, Y+3	; 0x03
    3910:	9c 81       	ldd	r25, Y+4	; 0x04
    3912:	01 97       	sbiw	r24, 0x01	; 1
    3914:	f1 f7       	brne	.-4      	; 0x3912 <LCD_voidSendEnPulse+0xbe>
    3916:	9c 83       	std	Y+4, r25	; 0x04
    3918:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    391a:	8d 81       	ldd	r24, Y+5	; 0x05
    391c:	9e 81       	ldd	r25, Y+6	; 0x06
    391e:	01 97       	sbiw	r24, 0x01	; 1
    3920:	9e 83       	std	Y+6, r25	; 0x06
    3922:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3924:	8d 81       	ldd	r24, Y+5	; 0x05
    3926:	9e 81       	ldd	r25, Y+6	; 0x06
    3928:	00 97       	sbiw	r24, 0x00	; 0
    392a:	69 f7       	brne	.-38     	; 0x3906 <LCD_voidSendEnPulse+0xb2>
    392c:	14 c0       	rjmp	.+40     	; 0x3956 <LCD_voidSendEnPulse+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    392e:	6f 81       	ldd	r22, Y+7	; 0x07
    3930:	78 85       	ldd	r23, Y+8	; 0x08
    3932:	89 85       	ldd	r24, Y+9	; 0x09
    3934:	9a 85       	ldd	r25, Y+10	; 0x0a
    3936:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    393a:	dc 01       	movw	r26, r24
    393c:	cb 01       	movw	r24, r22
    393e:	9e 83       	std	Y+6, r25	; 0x06
    3940:	8d 83       	std	Y+5, r24	; 0x05
    3942:	8d 81       	ldd	r24, Y+5	; 0x05
    3944:	9e 81       	ldd	r25, Y+6	; 0x06
    3946:	9a 83       	std	Y+2, r25	; 0x02
    3948:	89 83       	std	Y+1, r24	; 0x01
    394a:	89 81       	ldd	r24, Y+1	; 0x01
    394c:	9a 81       	ldd	r25, Y+2	; 0x02
    394e:	01 97       	sbiw	r24, 0x01	; 1
    3950:	f1 f7       	brne	.-4      	; 0x394e <LCD_voidSendEnPulse+0xfa>
    3952:	9a 83       	std	Y+2, r25	; 0x02
    3954:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinVal(LCD_EN_PORT , LCD_EN_PIN , LOW); //ENABLE high
    3956:	81 e0       	ldi	r24, 0x01	; 1
    3958:	62 e0       	ldi	r22, 0x02	; 2
    395a:	40 e0       	ldi	r20, 0x00	; 0
    395c:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>

}
    3960:	60 96       	adiw	r28, 0x10	; 16
    3962:	0f b6       	in	r0, 0x3f	; 63
    3964:	f8 94       	cli
    3966:	de bf       	out	0x3e, r29	; 62
    3968:	0f be       	out	0x3f, r0	; 63
    396a:	cd bf       	out	0x3d, r28	; 61
    396c:	cf 91       	pop	r28
    396e:	df 91       	pop	r29
    3970:	08 95       	ret

00003972 <Keypad_voidInit>:

#include "KEYPAD_cfg.h"
#include "KEYPAD_int.h"


void Keypad_voidInit (void){
    3972:	df 93       	push	r29
    3974:	cf 93       	push	r28
    3976:	00 d0       	rcall	.+0      	; 0x3978 <Keypad_voidInit+0x6>
    3978:	cd b7       	in	r28, 0x3d	; 61
    397a:	de b7       	in	r29, 0x3e	; 62

	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
    397c:	1a 82       	std	Y+2, r1	; 0x02
    397e:	31 c0       	rjmp	.+98     	; 0x39e2 <Keypad_voidInit+0x70>
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
    3980:	8a 81       	ldd	r24, Y+2	; 0x02
    3982:	88 2f       	mov	r24, r24
    3984:	90 e0       	ldi	r25, 0x00	; 0
    3986:	88 0f       	add	r24, r24
    3988:	99 1f       	adc	r25, r25
    398a:	fc 01       	movw	r30, r24
    398c:	e2 56       	subi	r30, 0x62	; 98
    398e:	fe 4f       	sbci	r31, 0xFE	; 254
    3990:	20 81       	ld	r18, Z
    3992:	8a 81       	ldd	r24, Y+2	; 0x02
    3994:	88 2f       	mov	r24, r24
    3996:	90 e0       	ldi	r25, 0x00	; 0
    3998:	88 0f       	add	r24, r24
    399a:	99 1f       	adc	r25, r25
    399c:	fc 01       	movw	r30, r24
    399e:	e1 56       	subi	r30, 0x61	; 97
    39a0:	fe 4f       	sbci	r31, 0xFE	; 254
    39a2:	90 81       	ld	r25, Z
    39a4:	82 2f       	mov	r24, r18
    39a6:	69 2f       	mov	r22, r25
    39a8:	41 e0       	ldi	r20, 0x01	; 1
    39aa:	0e 94 d5 11 	call	0x23aa	; 0x23aa <DIO_u8SetPinDir>
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
    39ae:	8a 81       	ldd	r24, Y+2	; 0x02
    39b0:	88 2f       	mov	r24, r24
    39b2:	90 e0       	ldi	r25, 0x00	; 0
    39b4:	88 0f       	add	r24, r24
    39b6:	99 1f       	adc	r25, r25
    39b8:	fc 01       	movw	r30, r24
    39ba:	e2 56       	subi	r30, 0x62	; 98
    39bc:	fe 4f       	sbci	r31, 0xFE	; 254
    39be:	20 81       	ld	r18, Z
    39c0:	8a 81       	ldd	r24, Y+2	; 0x02
    39c2:	88 2f       	mov	r24, r24
    39c4:	90 e0       	ldi	r25, 0x00	; 0
    39c6:	88 0f       	add	r24, r24
    39c8:	99 1f       	adc	r25, r25
    39ca:	fc 01       	movw	r30, r24
    39cc:	e1 56       	subi	r30, 0x61	; 97
    39ce:	fe 4f       	sbci	r31, 0xFE	; 254
    39d0:	90 81       	ld	r25, Z
    39d2:	82 2f       	mov	r24, r18
    39d4:	69 2f       	mov	r22, r25
    39d6:	41 e0       	ldi	r20, 0x01	; 1
    39d8:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>

void Keypad_voidInit (void){

	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
    39dc:	8a 81       	ldd	r24, Y+2	; 0x02
    39de:	8f 5f       	subi	r24, 0xFF	; 255
    39e0:	8a 83       	std	Y+2, r24	; 0x02
    39e2:	8a 81       	ldd	r24, Y+2	; 0x02
    39e4:	84 30       	cpi	r24, 0x04	; 4
    39e6:	60 f2       	brcs	.-104    	; 0x3980 <Keypad_voidInit+0xe>
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
	}
	for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ ){
    39e8:	19 82       	std	Y+1, r1	; 0x01
    39ea:	31 c0       	rjmp	.+98     	; 0x3a4e <Keypad_voidInit+0xdc>
		DIO_u8SetPinDir(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , INPUT );
    39ec:	89 81       	ldd	r24, Y+1	; 0x01
    39ee:	88 2f       	mov	r24, r24
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	88 0f       	add	r24, r24
    39f4:	99 1f       	adc	r25, r25
    39f6:	fc 01       	movw	r30, r24
    39f8:	ea 56       	subi	r30, 0x6A	; 106
    39fa:	fe 4f       	sbci	r31, 0xFE	; 254
    39fc:	20 81       	ld	r18, Z
    39fe:	89 81       	ldd	r24, Y+1	; 0x01
    3a00:	88 2f       	mov	r24, r24
    3a02:	90 e0       	ldi	r25, 0x00	; 0
    3a04:	88 0f       	add	r24, r24
    3a06:	99 1f       	adc	r25, r25
    3a08:	fc 01       	movw	r30, r24
    3a0a:	e9 56       	subi	r30, 0x69	; 105
    3a0c:	fe 4f       	sbci	r31, 0xFE	; 254
    3a0e:	90 81       	ld	r25, Z
    3a10:	82 2f       	mov	r24, r18
    3a12:	69 2f       	mov	r22, r25
    3a14:	40 e0       	ldi	r20, 0x00	; 0
    3a16:	0e 94 d5 11 	call	0x23aa	; 0x23aa <DIO_u8SetPinDir>
		//PULLUP
		DIO_u8SetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , HIGH );
    3a1a:	89 81       	ldd	r24, Y+1	; 0x01
    3a1c:	88 2f       	mov	r24, r24
    3a1e:	90 e0       	ldi	r25, 0x00	; 0
    3a20:	88 0f       	add	r24, r24
    3a22:	99 1f       	adc	r25, r25
    3a24:	fc 01       	movw	r30, r24
    3a26:	ea 56       	subi	r30, 0x6A	; 106
    3a28:	fe 4f       	sbci	r31, 0xFE	; 254
    3a2a:	20 81       	ld	r18, Z
    3a2c:	89 81       	ldd	r24, Y+1	; 0x01
    3a2e:	88 2f       	mov	r24, r24
    3a30:	90 e0       	ldi	r25, 0x00	; 0
    3a32:	88 0f       	add	r24, r24
    3a34:	99 1f       	adc	r25, r25
    3a36:	fc 01       	movw	r30, r24
    3a38:	e9 56       	subi	r30, 0x69	; 105
    3a3a:	fe 4f       	sbci	r31, 0xFE	; 254
    3a3c:	90 81       	ld	r25, Z
    3a3e:	82 2f       	mov	r24, r18
    3a40:	69 2f       	mov	r22, r25
    3a42:	41 e0       	ldi	r20, 0x01	; 1
    3a44:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
	}
	for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ ){
    3a48:	89 81       	ldd	r24, Y+1	; 0x01
    3a4a:	8f 5f       	subi	r24, 0xFF	; 255
    3a4c:	89 83       	std	Y+1, r24	; 0x01
    3a4e:	89 81       	ldd	r24, Y+1	; 0x01
    3a50:	84 30       	cpi	r24, 0x04	; 4
    3a52:	60 f2       	brcs	.-104    	; 0x39ec <Keypad_voidInit+0x7a>
		DIO_u8SetPinDir(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , INPUT );
		//PULLUP
		DIO_u8SetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , HIGH );
	}
}
    3a54:	0f 90       	pop	r0
    3a56:	0f 90       	pop	r0
    3a58:	cf 91       	pop	r28
    3a5a:	df 91       	pop	r29
    3a5c:	08 95       	ret

00003a5e <keypad_u8CheckPress>:

uint8 keypad_u8CheckPress(void){
    3a5e:	df 93       	push	r29
    3a60:	cf 93       	push	r28
    3a62:	cd b7       	in	r28, 0x3d	; 61
    3a64:	de b7       	in	r29, 0x3e	; 62
    3a66:	62 97       	sbiw	r28, 0x12	; 18
    3a68:	0f b6       	in	r0, 0x3f	; 63
    3a6a:	f8 94       	cli
    3a6c:	de bf       	out	0x3e, r29	; 62
    3a6e:	0f be       	out	0x3f, r0	; 63
    3a70:	cd bf       	out	0x3d, r28	; 61
	uint8 Local_u8KeyPressed  = NOTPRESSED;
    3a72:	8f ef       	ldi	r24, 0xFF	; 255
    3a74:	89 8b       	std	Y+17, r24	; 0x11
    3a76:	ff c0       	rjmp	.+510    	; 0x3c76 <keypad_u8CheckPress+0x218>
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
    3a78:	18 8a       	std	Y+16, r1	; 0x10
    3a7a:	f9 c0       	rjmp	.+498    	; 0x3c6e <keypad_u8CheckPress+0x210>
			{
				//activate column
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , LOW );
    3a7c:	88 89       	ldd	r24, Y+16	; 0x10
    3a7e:	88 2f       	mov	r24, r24
    3a80:	90 e0       	ldi	r25, 0x00	; 0
    3a82:	88 0f       	add	r24, r24
    3a84:	99 1f       	adc	r25, r25
    3a86:	fc 01       	movw	r30, r24
    3a88:	e2 56       	subi	r30, 0x62	; 98
    3a8a:	fe 4f       	sbci	r31, 0xFE	; 254
    3a8c:	20 81       	ld	r18, Z
    3a8e:	88 89       	ldd	r24, Y+16	; 0x10
    3a90:	88 2f       	mov	r24, r24
    3a92:	90 e0       	ldi	r25, 0x00	; 0
    3a94:	88 0f       	add	r24, r24
    3a96:	99 1f       	adc	r25, r25
    3a98:	fc 01       	movw	r30, r24
    3a9a:	e1 56       	subi	r30, 0x61	; 97
    3a9c:	fe 4f       	sbci	r31, 0xFE	; 254
    3a9e:	90 81       	ld	r25, Z
    3aa0:	82 2f       	mov	r24, r18
    3aa2:	69 2f       	mov	r22, r25
    3aa4:	40 e0       	ldi	r20, 0x00	; 0
    3aa6:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>

				for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ )
    3aaa:	1f 86       	std	Y+15, r1	; 0x0f
    3aac:	c2 c0       	rjmp	.+388    	; 0x3c32 <keypad_u8CheckPress+0x1d4>
				{
					//check status of current row
					DIO_u8GetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , &Local_u8RowStatus );
    3aae:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ab0:	88 2f       	mov	r24, r24
    3ab2:	90 e0       	ldi	r25, 0x00	; 0
    3ab4:	88 0f       	add	r24, r24
    3ab6:	99 1f       	adc	r25, r25
    3ab8:	fc 01       	movw	r30, r24
    3aba:	ea 56       	subi	r30, 0x6A	; 106
    3abc:	fe 4f       	sbci	r31, 0xFE	; 254
    3abe:	40 81       	ld	r20, Z
    3ac0:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ac2:	88 2f       	mov	r24, r24
    3ac4:	90 e0       	ldi	r25, 0x00	; 0
    3ac6:	88 0f       	add	r24, r24
    3ac8:	99 1f       	adc	r25, r25
    3aca:	fc 01       	movw	r30, r24
    3acc:	e9 56       	subi	r30, 0x69	; 105
    3ace:	fe 4f       	sbci	r31, 0xFE	; 254
    3ad0:	90 81       	ld	r25, Z
    3ad2:	9e 01       	movw	r18, r28
    3ad4:	2e 5e       	subi	r18, 0xEE	; 238
    3ad6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ad8:	84 2f       	mov	r24, r20
    3ada:	69 2f       	mov	r22, r25
    3adc:	a9 01       	movw	r20, r18
    3ade:	0e 94 f3 13 	call	0x27e6	; 0x27e6 <DIO_u8GetPinVal>
					if (Local_u8RowStatus == 0 )
    3ae2:	8a 89       	ldd	r24, Y+18	; 0x12
    3ae4:	88 23       	and	r24, r24
    3ae6:	09 f0       	breq	.+2      	; 0x3aea <keypad_u8CheckPress+0x8c>
    3ae8:	a1 c0       	rjmp	.+322    	; 0x3c2c <keypad_u8CheckPress+0x1ce>
    3aea:	80 e0       	ldi	r24, 0x00	; 0
    3aec:	90 e0       	ldi	r25, 0x00	; 0
    3aee:	a8 e4       	ldi	r26, 0x48	; 72
    3af0:	b2 e4       	ldi	r27, 0x42	; 66
    3af2:	8b 87       	std	Y+11, r24	; 0x0b
    3af4:	9c 87       	std	Y+12, r25	; 0x0c
    3af6:	ad 87       	std	Y+13, r26	; 0x0d
    3af8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3afa:	6b 85       	ldd	r22, Y+11	; 0x0b
    3afc:	7c 85       	ldd	r23, Y+12	; 0x0c
    3afe:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b00:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b02:	20 e0       	ldi	r18, 0x00	; 0
    3b04:	30 e0       	ldi	r19, 0x00	; 0
    3b06:	4a ef       	ldi	r20, 0xFA	; 250
    3b08:	54 e4       	ldi	r21, 0x44	; 68
    3b0a:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3b0e:	dc 01       	movw	r26, r24
    3b10:	cb 01       	movw	r24, r22
    3b12:	8f 83       	std	Y+7, r24	; 0x07
    3b14:	98 87       	std	Y+8, r25	; 0x08
    3b16:	a9 87       	std	Y+9, r26	; 0x09
    3b18:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3b1a:	6f 81       	ldd	r22, Y+7	; 0x07
    3b1c:	78 85       	ldd	r23, Y+8	; 0x08
    3b1e:	89 85       	ldd	r24, Y+9	; 0x09
    3b20:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b22:	20 e0       	ldi	r18, 0x00	; 0
    3b24:	30 e0       	ldi	r19, 0x00	; 0
    3b26:	40 e8       	ldi	r20, 0x80	; 128
    3b28:	5f e3       	ldi	r21, 0x3F	; 63
    3b2a:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    3b2e:	88 23       	and	r24, r24
    3b30:	2c f4       	brge	.+10     	; 0x3b3c <keypad_u8CheckPress+0xde>
		__ticks = 1;
    3b32:	81 e0       	ldi	r24, 0x01	; 1
    3b34:	90 e0       	ldi	r25, 0x00	; 0
    3b36:	9e 83       	std	Y+6, r25	; 0x06
    3b38:	8d 83       	std	Y+5, r24	; 0x05
    3b3a:	3f c0       	rjmp	.+126    	; 0x3bba <keypad_u8CheckPress+0x15c>
	else if (__tmp > 65535)
    3b3c:	6f 81       	ldd	r22, Y+7	; 0x07
    3b3e:	78 85       	ldd	r23, Y+8	; 0x08
    3b40:	89 85       	ldd	r24, Y+9	; 0x09
    3b42:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b44:	20 e0       	ldi	r18, 0x00	; 0
    3b46:	3f ef       	ldi	r19, 0xFF	; 255
    3b48:	4f e7       	ldi	r20, 0x7F	; 127
    3b4a:	57 e4       	ldi	r21, 0x47	; 71
    3b4c:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    3b50:	18 16       	cp	r1, r24
    3b52:	4c f5       	brge	.+82     	; 0x3ba6 <keypad_u8CheckPress+0x148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b54:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b56:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b58:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b5a:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b5c:	20 e0       	ldi	r18, 0x00	; 0
    3b5e:	30 e0       	ldi	r19, 0x00	; 0
    3b60:	40 e2       	ldi	r20, 0x20	; 32
    3b62:	51 e4       	ldi	r21, 0x41	; 65
    3b64:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3b68:	dc 01       	movw	r26, r24
    3b6a:	cb 01       	movw	r24, r22
    3b6c:	bc 01       	movw	r22, r24
    3b6e:	cd 01       	movw	r24, r26
    3b70:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3b74:	dc 01       	movw	r26, r24
    3b76:	cb 01       	movw	r24, r22
    3b78:	9e 83       	std	Y+6, r25	; 0x06
    3b7a:	8d 83       	std	Y+5, r24	; 0x05
    3b7c:	0f c0       	rjmp	.+30     	; 0x3b9c <keypad_u8CheckPress+0x13e>
    3b7e:	88 ec       	ldi	r24, 0xC8	; 200
    3b80:	90 e0       	ldi	r25, 0x00	; 0
    3b82:	9c 83       	std	Y+4, r25	; 0x04
    3b84:	8b 83       	std	Y+3, r24	; 0x03
    3b86:	8b 81       	ldd	r24, Y+3	; 0x03
    3b88:	9c 81       	ldd	r25, Y+4	; 0x04
    3b8a:	01 97       	sbiw	r24, 0x01	; 1
    3b8c:	f1 f7       	brne	.-4      	; 0x3b8a <keypad_u8CheckPress+0x12c>
    3b8e:	9c 83       	std	Y+4, r25	; 0x04
    3b90:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b92:	8d 81       	ldd	r24, Y+5	; 0x05
    3b94:	9e 81       	ldd	r25, Y+6	; 0x06
    3b96:	01 97       	sbiw	r24, 0x01	; 1
    3b98:	9e 83       	std	Y+6, r25	; 0x06
    3b9a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b9c:	8d 81       	ldd	r24, Y+5	; 0x05
    3b9e:	9e 81       	ldd	r25, Y+6	; 0x06
    3ba0:	00 97       	sbiw	r24, 0x00	; 0
    3ba2:	69 f7       	brne	.-38     	; 0x3b7e <keypad_u8CheckPress+0x120>
    3ba4:	14 c0       	rjmp	.+40     	; 0x3bce <keypad_u8CheckPress+0x170>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ba6:	6f 81       	ldd	r22, Y+7	; 0x07
    3ba8:	78 85       	ldd	r23, Y+8	; 0x08
    3baa:	89 85       	ldd	r24, Y+9	; 0x09
    3bac:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bae:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3bb2:	dc 01       	movw	r26, r24
    3bb4:	cb 01       	movw	r24, r22
    3bb6:	9e 83       	std	Y+6, r25	; 0x06
    3bb8:	8d 83       	std	Y+5, r24	; 0x05
    3bba:	8d 81       	ldd	r24, Y+5	; 0x05
    3bbc:	9e 81       	ldd	r25, Y+6	; 0x06
    3bbe:	9a 83       	std	Y+2, r25	; 0x02
    3bc0:	89 83       	std	Y+1, r24	; 0x01
    3bc2:	89 81       	ldd	r24, Y+1	; 0x01
    3bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    3bc6:	01 97       	sbiw	r24, 0x01	; 1
    3bc8:	f1 f7       	brne	.-4      	; 0x3bc6 <keypad_u8CheckPress+0x168>
    3bca:	9a 83       	std	Y+2, r25	; 0x02
    3bcc:	89 83       	std	Y+1, r24	; 0x01
					{
						_delay_ms(50);
						DIO_u8GetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , &Local_u8RowStatus );
    3bce:	8f 85       	ldd	r24, Y+15	; 0x0f
    3bd0:	88 2f       	mov	r24, r24
    3bd2:	90 e0       	ldi	r25, 0x00	; 0
    3bd4:	88 0f       	add	r24, r24
    3bd6:	99 1f       	adc	r25, r25
    3bd8:	fc 01       	movw	r30, r24
    3bda:	ea 56       	subi	r30, 0x6A	; 106
    3bdc:	fe 4f       	sbci	r31, 0xFE	; 254
    3bde:	40 81       	ld	r20, Z
    3be0:	8f 85       	ldd	r24, Y+15	; 0x0f
    3be2:	88 2f       	mov	r24, r24
    3be4:	90 e0       	ldi	r25, 0x00	; 0
    3be6:	88 0f       	add	r24, r24
    3be8:	99 1f       	adc	r25, r25
    3bea:	fc 01       	movw	r30, r24
    3bec:	e9 56       	subi	r30, 0x69	; 105
    3bee:	fe 4f       	sbci	r31, 0xFE	; 254
    3bf0:	90 81       	ld	r25, Z
    3bf2:	9e 01       	movw	r18, r28
    3bf4:	2e 5e       	subi	r18, 0xEE	; 238
    3bf6:	3f 4f       	sbci	r19, 0xFF	; 255
    3bf8:	84 2f       	mov	r24, r20
    3bfa:	69 2f       	mov	r22, r25
    3bfc:	a9 01       	movw	r20, r18
    3bfe:	0e 94 f3 13 	call	0x27e6	; 0x27e6 <DIO_u8GetPinVal>
						if (Local_u8RowStatus == 0 )
    3c02:	8a 89       	ldd	r24, Y+18	; 0x12
    3c04:	88 23       	and	r24, r24
    3c06:	91 f4       	brne	.+36     	; 0x3c2c <keypad_u8CheckPress+0x1ce>
						{
							Local_u8KeyPressed = KEYPAD_au8KeyVal [Local_u8Row][Local_u8Col];
    3c08:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c0a:	48 2f       	mov	r20, r24
    3c0c:	50 e0       	ldi	r21, 0x00	; 0
    3c0e:	88 89       	ldd	r24, Y+16	; 0x10
    3c10:	28 2f       	mov	r18, r24
    3c12:	30 e0       	ldi	r19, 0x00	; 0
    3c14:	ca 01       	movw	r24, r20
    3c16:	88 0f       	add	r24, r24
    3c18:	99 1f       	adc	r25, r25
    3c1a:	88 0f       	add	r24, r24
    3c1c:	99 1f       	adc	r25, r25
    3c1e:	82 0f       	add	r24, r18
    3c20:	93 1f       	adc	r25, r19
    3c22:	fc 01       	movw	r30, r24
    3c24:	ea 57       	subi	r30, 0x7A	; 122
    3c26:	fe 4f       	sbci	r31, 0xFE	; 254
    3c28:	80 81       	ld	r24, Z
    3c2a:	89 8b       	std	Y+17, r24	; 0x11
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
			{
				//activate column
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , LOW );

				for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ )
    3c2c:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c2e:	8f 5f       	subi	r24, 0xFF	; 255
    3c30:	8f 87       	std	Y+15, r24	; 0x0f
    3c32:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c34:	84 30       	cpi	r24, 0x04	; 4
    3c36:	08 f4       	brcc	.+2      	; 0x3c3a <keypad_u8CheckPress+0x1dc>
    3c38:	3a cf       	rjmp	.-396    	; 0x3aae <keypad_u8CheckPress+0x50>
					}

				}

				//Deactivate COl
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
    3c3a:	88 89       	ldd	r24, Y+16	; 0x10
    3c3c:	88 2f       	mov	r24, r24
    3c3e:	90 e0       	ldi	r25, 0x00	; 0
    3c40:	88 0f       	add	r24, r24
    3c42:	99 1f       	adc	r25, r25
    3c44:	fc 01       	movw	r30, r24
    3c46:	e2 56       	subi	r30, 0x62	; 98
    3c48:	fe 4f       	sbci	r31, 0xFE	; 254
    3c4a:	20 81       	ld	r18, Z
    3c4c:	88 89       	ldd	r24, Y+16	; 0x10
    3c4e:	88 2f       	mov	r24, r24
    3c50:	90 e0       	ldi	r25, 0x00	; 0
    3c52:	88 0f       	add	r24, r24
    3c54:	99 1f       	adc	r25, r25
    3c56:	fc 01       	movw	r30, r24
    3c58:	e1 56       	subi	r30, 0x61	; 97
    3c5a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c5c:	90 81       	ld	r25, Z
    3c5e:	82 2f       	mov	r24, r18
    3c60:	69 2f       	mov	r22, r25
    3c62:	41 e0       	ldi	r20, 0x01	; 1
    3c64:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <DIO_u8SetPinVal>
	uint8 Local_u8KeyPressed  = NOTPRESSED;
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
    3c68:	88 89       	ldd	r24, Y+16	; 0x10
    3c6a:	8f 5f       	subi	r24, 0xFF	; 255
    3c6c:	88 8b       	std	Y+16, r24	; 0x10
    3c6e:	88 89       	ldd	r24, Y+16	; 0x10
    3c70:	84 30       	cpi	r24, 0x04	; 4
    3c72:	08 f4       	brcc	.+2      	; 0x3c76 <keypad_u8CheckPress+0x218>
    3c74:	03 cf       	rjmp	.-506    	; 0x3a7c <keypad_u8CheckPress+0x1e>
uint8 keypad_u8CheckPress(void){
	uint8 Local_u8KeyPressed  = NOTPRESSED;
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
    3c76:	89 89       	ldd	r24, Y+17	; 0x11
    3c78:	8f 3f       	cpi	r24, 0xFF	; 255
    3c7a:	09 f4       	brne	.+2      	; 0x3c7e <keypad_u8CheckPress+0x220>
    3c7c:	fd ce       	rjmp	.-518    	; 0x3a78 <keypad_u8CheckPress+0x1a>

				//Deactivate COl
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
			}
		   }
			return Local_u8KeyPressed ;
    3c7e:	89 89       	ldd	r24, Y+17	; 0x11

}
    3c80:	62 96       	adiw	r28, 0x12	; 18
    3c82:	0f b6       	in	r0, 0x3f	; 63
    3c84:	f8 94       	cli
    3c86:	de bf       	out	0x3e, r29	; 62
    3c88:	0f be       	out	0x3f, r0	; 63
    3c8a:	cd bf       	out	0x3d, r28	; 61
    3c8c:	cf 91       	pop	r28
    3c8e:	df 91       	pop	r29
    3c90:	08 95       	ret

00003c92 <ScanData>:
uint8 FirstNumberSign =false;
uint8 Sign =1;
uint8 OtherNumberSign=false;

uint8 ScanData ()
{
    3c92:	df 93       	push	r29
    3c94:	cf 93       	push	r28
    3c96:	cd b7       	in	r28, 0x3d	; 61
    3c98:	de b7       	in	r29, 0x3e	; 62
    3c9a:	2f 97       	sbiw	r28, 0x0f	; 15
    3c9c:	0f b6       	in	r0, 0x3f	; 63
    3c9e:	f8 94       	cli
    3ca0:	de bf       	out	0x3e, r29	; 62
    3ca2:	0f be       	out	0x3f, r0	; 63
    3ca4:	cd bf       	out	0x3d, r28	; 61
	uint8 temp=0;
    3ca6:	1f 86       	std	Y+15, r1	; 0x0f
	temp = keypad_u8CheckPress();
    3ca8:	0e 94 2f 1d 	call	0x3a5e	; 0x3a5e <keypad_u8CheckPress>
    3cac:	8f 87       	std	Y+15, r24	; 0x0f
    3cae:	9d c0       	rjmp	.+314    	; 0x3dea <ScanData+0x158>
	while(temp!= '=')
	{

		if (temp == 'A')
    3cb0:	8f 85       	ldd	r24, Y+15	; 0x0f
    3cb2:	81 34       	cpi	r24, 0x41	; 65
    3cb4:	29 f4       	brne	.+10     	; 0x3cc0 <ScanData+0x2e>
		{
			Resetall();
    3cb6:	0e 94 ae 28 	call	0x515c	; 0x515c <Resetall>
			LCD_voidWriteCmd(0x01);
    3cba:	81 e0       	ldi	r24, 0x01	; 1
    3cbc:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
		}

		//storing any thing the user input
		if((temp!=0) && (temp != 'A'))
    3cc0:	8f 85       	ldd	r24, Y+15	; 0x0f
    3cc2:	88 23       	and	r24, r24
    3cc4:	09 f4       	brne	.+2      	; 0x3cc8 <ScanData+0x36>
    3cc6:	8e c0       	rjmp	.+284    	; 0x3de4 <ScanData+0x152>
    3cc8:	8f 85       	ldd	r24, Y+15	; 0x0f
    3cca:	81 34       	cpi	r24, 0x41	; 65
    3ccc:	09 f4       	brne	.+2      	; 0x3cd0 <ScanData+0x3e>
    3cce:	8a c0       	rjmp	.+276    	; 0x3de4 <ScanData+0x152>
		{

			Digit[DigitCounter]=temp;
    3cd0:	80 91 b2 01 	lds	r24, 0x01B2
    3cd4:	88 2f       	mov	r24, r24
    3cd6:	90 e0       	ldi	r25, 0x00	; 0
    3cd8:	fc 01       	movw	r30, r24
    3cda:	eb 54       	subi	r30, 0x4B	; 75
    3cdc:	fe 4f       	sbci	r31, 0xFE	; 254
    3cde:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ce0:	80 83       	st	Z, r24
			LCD_voidWriteChar(Digit[DigitCounter]);
    3ce2:	80 91 b2 01 	lds	r24, 0x01B2
    3ce6:	88 2f       	mov	r24, r24
    3ce8:	90 e0       	ldi	r25, 0x00	; 0
    3cea:	fc 01       	movw	r30, r24
    3cec:	eb 54       	subi	r30, 0x4B	; 75
    3cee:	fe 4f       	sbci	r31, 0xFE	; 254
    3cf0:	80 81       	ld	r24, Z
    3cf2:	0e 94 b2 18 	call	0x3164	; 0x3164 <LCD_voidWriteChar>
			DigitCounter++;
    3cf6:	80 91 b2 01 	lds	r24, 0x01B2
    3cfa:	8f 5f       	subi	r24, 0xFF	; 255
    3cfc:	80 93 b2 01 	sts	0x01B2, r24
    3d00:	80 e0       	ldi	r24, 0x00	; 0
    3d02:	90 e0       	ldi	r25, 0x00	; 0
    3d04:	a8 e4       	ldi	r26, 0x48	; 72
    3d06:	b2 e4       	ldi	r27, 0x42	; 66
    3d08:	8b 87       	std	Y+11, r24	; 0x0b
    3d0a:	9c 87       	std	Y+12, r25	; 0x0c
    3d0c:	ad 87       	std	Y+13, r26	; 0x0d
    3d0e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d10:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d12:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d14:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d16:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d18:	20 e0       	ldi	r18, 0x00	; 0
    3d1a:	30 e0       	ldi	r19, 0x00	; 0
    3d1c:	4a ef       	ldi	r20, 0xFA	; 250
    3d1e:	54 e4       	ldi	r21, 0x44	; 68
    3d20:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3d24:	dc 01       	movw	r26, r24
    3d26:	cb 01       	movw	r24, r22
    3d28:	8f 83       	std	Y+7, r24	; 0x07
    3d2a:	98 87       	std	Y+8, r25	; 0x08
    3d2c:	a9 87       	std	Y+9, r26	; 0x09
    3d2e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3d30:	6f 81       	ldd	r22, Y+7	; 0x07
    3d32:	78 85       	ldd	r23, Y+8	; 0x08
    3d34:	89 85       	ldd	r24, Y+9	; 0x09
    3d36:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d38:	20 e0       	ldi	r18, 0x00	; 0
    3d3a:	30 e0       	ldi	r19, 0x00	; 0
    3d3c:	40 e8       	ldi	r20, 0x80	; 128
    3d3e:	5f e3       	ldi	r21, 0x3F	; 63
    3d40:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    3d44:	88 23       	and	r24, r24
    3d46:	2c f4       	brge	.+10     	; 0x3d52 <ScanData+0xc0>
		__ticks = 1;
    3d48:	81 e0       	ldi	r24, 0x01	; 1
    3d4a:	90 e0       	ldi	r25, 0x00	; 0
    3d4c:	9e 83       	std	Y+6, r25	; 0x06
    3d4e:	8d 83       	std	Y+5, r24	; 0x05
    3d50:	3f c0       	rjmp	.+126    	; 0x3dd0 <ScanData+0x13e>
	else if (__tmp > 65535)
    3d52:	6f 81       	ldd	r22, Y+7	; 0x07
    3d54:	78 85       	ldd	r23, Y+8	; 0x08
    3d56:	89 85       	ldd	r24, Y+9	; 0x09
    3d58:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d5a:	20 e0       	ldi	r18, 0x00	; 0
    3d5c:	3f ef       	ldi	r19, 0xFF	; 255
    3d5e:	4f e7       	ldi	r20, 0x7F	; 127
    3d60:	57 e4       	ldi	r21, 0x47	; 71
    3d62:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    3d66:	18 16       	cp	r1, r24
    3d68:	4c f5       	brge	.+82     	; 0x3dbc <ScanData+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d6a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d6c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d6e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d70:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d72:	20 e0       	ldi	r18, 0x00	; 0
    3d74:	30 e0       	ldi	r19, 0x00	; 0
    3d76:	40 e2       	ldi	r20, 0x20	; 32
    3d78:	51 e4       	ldi	r21, 0x41	; 65
    3d7a:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    3d7e:	dc 01       	movw	r26, r24
    3d80:	cb 01       	movw	r24, r22
    3d82:	bc 01       	movw	r22, r24
    3d84:	cd 01       	movw	r24, r26
    3d86:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3d8a:	dc 01       	movw	r26, r24
    3d8c:	cb 01       	movw	r24, r22
    3d8e:	9e 83       	std	Y+6, r25	; 0x06
    3d90:	8d 83       	std	Y+5, r24	; 0x05
    3d92:	0f c0       	rjmp	.+30     	; 0x3db2 <ScanData+0x120>
    3d94:	88 ec       	ldi	r24, 0xC8	; 200
    3d96:	90 e0       	ldi	r25, 0x00	; 0
    3d98:	9c 83       	std	Y+4, r25	; 0x04
    3d9a:	8b 83       	std	Y+3, r24	; 0x03
    3d9c:	8b 81       	ldd	r24, Y+3	; 0x03
    3d9e:	9c 81       	ldd	r25, Y+4	; 0x04
    3da0:	01 97       	sbiw	r24, 0x01	; 1
    3da2:	f1 f7       	brne	.-4      	; 0x3da0 <ScanData+0x10e>
    3da4:	9c 83       	std	Y+4, r25	; 0x04
    3da6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3da8:	8d 81       	ldd	r24, Y+5	; 0x05
    3daa:	9e 81       	ldd	r25, Y+6	; 0x06
    3dac:	01 97       	sbiw	r24, 0x01	; 1
    3dae:	9e 83       	std	Y+6, r25	; 0x06
    3db0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3db2:	8d 81       	ldd	r24, Y+5	; 0x05
    3db4:	9e 81       	ldd	r25, Y+6	; 0x06
    3db6:	00 97       	sbiw	r24, 0x00	; 0
    3db8:	69 f7       	brne	.-38     	; 0x3d94 <ScanData+0x102>
    3dba:	14 c0       	rjmp	.+40     	; 0x3de4 <ScanData+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3dbc:	6f 81       	ldd	r22, Y+7	; 0x07
    3dbe:	78 85       	ldd	r23, Y+8	; 0x08
    3dc0:	89 85       	ldd	r24, Y+9	; 0x09
    3dc2:	9a 85       	ldd	r25, Y+10	; 0x0a
    3dc4:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3dc8:	dc 01       	movw	r26, r24
    3dca:	cb 01       	movw	r24, r22
    3dcc:	9e 83       	std	Y+6, r25	; 0x06
    3dce:	8d 83       	std	Y+5, r24	; 0x05
    3dd0:	8d 81       	ldd	r24, Y+5	; 0x05
    3dd2:	9e 81       	ldd	r25, Y+6	; 0x06
    3dd4:	9a 83       	std	Y+2, r25	; 0x02
    3dd6:	89 83       	std	Y+1, r24	; 0x01
    3dd8:	89 81       	ldd	r24, Y+1	; 0x01
    3dda:	9a 81       	ldd	r25, Y+2	; 0x02
    3ddc:	01 97       	sbiw	r24, 0x01	; 1
    3dde:	f1 f7       	brne	.-4      	; 0x3ddc <ScanData+0x14a>
    3de0:	9a 83       	std	Y+2, r25	; 0x02
    3de2:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(50);

		}
		temp=keypad_u8CheckPress();
    3de4:	0e 94 2f 1d 	call	0x3a5e	; 0x3a5e <keypad_u8CheckPress>
    3de8:	8f 87       	std	Y+15, r24	; 0x0f

uint8 ScanData ()
{
	uint8 temp=0;
	temp = keypad_u8CheckPress();
	while(temp!= '=')
    3dea:	8f 85       	ldd	r24, Y+15	; 0x0f
    3dec:	8d 33       	cpi	r24, 0x3D	; 61
    3dee:	09 f0       	breq	.+2      	; 0x3df2 <ScanData+0x160>
    3df0:	5f cf       	rjmp	.-322    	; 0x3cb0 <ScanData+0x1e>

		}
		temp=keypad_u8CheckPress();

	}
	Digit[DigitCounter]='=';
    3df2:	80 91 b2 01 	lds	r24, 0x01B2
    3df6:	88 2f       	mov	r24, r24
    3df8:	90 e0       	ldi	r25, 0x00	; 0
    3dfa:	fc 01       	movw	r30, r24
    3dfc:	eb 54       	subi	r30, 0x4B	; 75
    3dfe:	fe 4f       	sbci	r31, 0xFE	; 254
    3e00:	8d e3       	ldi	r24, 0x3D	; 61
    3e02:	80 83       	st	Z, r24
	LCD_voidWriteChar(Digit[DigitCounter]);
    3e04:	80 91 b2 01 	lds	r24, 0x01B2
    3e08:	88 2f       	mov	r24, r24
    3e0a:	90 e0       	ldi	r25, 0x00	; 0
    3e0c:	fc 01       	movw	r30, r24
    3e0e:	eb 54       	subi	r30, 0x4B	; 75
    3e10:	fe 4f       	sbci	r31, 0xFE	; 254
    3e12:	80 81       	ld	r24, Z
    3e14:	0e 94 b2 18 	call	0x3164	; 0x3164 <LCD_voidWriteChar>
	DigitCounter++;
    3e18:	80 91 b2 01 	lds	r24, 0x01B2
    3e1c:	8f 5f       	subi	r24, 0xFF	; 255
    3e1e:	80 93 b2 01 	sts	0x01B2, r24
	Digit[DigitCounter]='\0'; // to close array
    3e22:	80 91 b2 01 	lds	r24, 0x01B2
    3e26:	88 2f       	mov	r24, r24
    3e28:	90 e0       	ldi	r25, 0x00	; 0
    3e2a:	fc 01       	movw	r30, r24
    3e2c:	eb 54       	subi	r30, 0x4B	; 75
    3e2e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e30:	10 82       	st	Z, r1

	return AnalyzePoint;
    3e32:	82 e0       	ldi	r24, 0x02	; 2

}
    3e34:	2f 96       	adiw	r28, 0x0f	; 15
    3e36:	0f b6       	in	r0, 0x3f	; 63
    3e38:	f8 94       	cli
    3e3a:	de bf       	out	0x3e, r29	; 62
    3e3c:	0f be       	out	0x3f, r0	; 63
    3e3e:	cd bf       	out	0x3d, r28	; 61
    3e40:	cf 91       	pop	r28
    3e42:	df 91       	pop	r29
    3e44:	08 95       	ret

00003e46 <ConvertToInt>:

sint32 ConvertToInt(uint8 array[]){
    3e46:	df 93       	push	r29
    3e48:	cf 93       	push	r28
    3e4a:	cd b7       	in	r28, 0x3d	; 61
    3e4c:	de b7       	in	r29, 0x3e	; 62
    3e4e:	2e 97       	sbiw	r28, 0x0e	; 14
    3e50:	0f b6       	in	r0, 0x3f	; 63
    3e52:	f8 94       	cli
    3e54:	de bf       	out	0x3e, r29	; 62
    3e56:	0f be       	out	0x3f, r0	; 63
    3e58:	cd bf       	out	0x3d, r28	; 61
    3e5a:	9e 87       	std	Y+14, r25	; 0x0e
    3e5c:	8d 87       	std	Y+13, r24	; 0x0d
	sint32 num=0, sign=1, i=-1;
    3e5e:	19 86       	std	Y+9, r1	; 0x09
    3e60:	1a 86       	std	Y+10, r1	; 0x0a
    3e62:	1b 86       	std	Y+11, r1	; 0x0b
    3e64:	1c 86       	std	Y+12, r1	; 0x0c
    3e66:	81 e0       	ldi	r24, 0x01	; 1
    3e68:	90 e0       	ldi	r25, 0x00	; 0
    3e6a:	a0 e0       	ldi	r26, 0x00	; 0
    3e6c:	b0 e0       	ldi	r27, 0x00	; 0
    3e6e:	8d 83       	std	Y+5, r24	; 0x05
    3e70:	9e 83       	std	Y+6, r25	; 0x06
    3e72:	af 83       	std	Y+7, r26	; 0x07
    3e74:	b8 87       	std	Y+8, r27	; 0x08
    3e76:	8f ef       	ldi	r24, 0xFF	; 255
    3e78:	9f ef       	ldi	r25, 0xFF	; 255
    3e7a:	af ef       	ldi	r26, 0xFF	; 255
    3e7c:	bf ef       	ldi	r27, 0xFF	; 255
    3e7e:	89 83       	std	Y+1, r24	; 0x01
    3e80:	9a 83       	std	Y+2, r25	; 0x02
    3e82:	ab 83       	std	Y+3, r26	; 0x03
    3e84:	bc 83       	std	Y+4, r27	; 0x04

	if(array[0] == '-')    //check if the string is -ve
    3e86:	ed 85       	ldd	r30, Y+13	; 0x0d
    3e88:	fe 85       	ldd	r31, Y+14	; 0x0e
    3e8a:	80 81       	ld	r24, Z
    3e8c:	8d 32       	cpi	r24, 0x2D	; 45
    3e8e:	91 f5       	brne	.+100    	; 0x3ef4 <ConvertToInt+0xae>
	{
		sign = -1;
    3e90:	8f ef       	ldi	r24, 0xFF	; 255
    3e92:	9f ef       	ldi	r25, 0xFF	; 255
    3e94:	af ef       	ldi	r26, 0xFF	; 255
    3e96:	bf ef       	ldi	r27, 0xFF	; 255
    3e98:	8d 83       	std	Y+5, r24	; 0x05
    3e9a:	9e 83       	std	Y+6, r25	; 0x06
    3e9c:	af 83       	std	Y+7, r26	; 0x07
    3e9e:	b8 87       	std	Y+8, r27	; 0x08
		i = 0;           //skip the -ve sign to the number
    3ea0:	19 82       	std	Y+1, r1	; 0x01
    3ea2:	1a 82       	std	Y+2, r1	; 0x02
    3ea4:	1b 82       	std	Y+3, r1	; 0x03
    3ea6:	1c 82       	std	Y+4, r1	; 0x04
    3ea8:	25 c0       	rjmp	.+74     	; 0x3ef4 <ConvertToInt+0xae>
	}

	while(array[++i] != 0)
	{
		num = (num * 10) + (array[i] - '0');
    3eaa:	89 85       	ldd	r24, Y+9	; 0x09
    3eac:	9a 85       	ldd	r25, Y+10	; 0x0a
    3eae:	ab 85       	ldd	r26, Y+11	; 0x0b
    3eb0:	bc 85       	ldd	r27, Y+12	; 0x0c
    3eb2:	2a e0       	ldi	r18, 0x0A	; 10
    3eb4:	30 e0       	ldi	r19, 0x00	; 0
    3eb6:	40 e0       	ldi	r20, 0x00	; 0
    3eb8:	50 e0       	ldi	r21, 0x00	; 0
    3eba:	bc 01       	movw	r22, r24
    3ebc:	cd 01       	movw	r24, r26
    3ebe:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
    3ec2:	ab 01       	movw	r20, r22
    3ec4:	bc 01       	movw	r22, r24
    3ec6:	29 81       	ldd	r18, Y+1	; 0x01
    3ec8:	3a 81       	ldd	r19, Y+2	; 0x02
    3eca:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ecc:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ece:	fc 01       	movw	r30, r24
    3ed0:	e2 0f       	add	r30, r18
    3ed2:	f3 1f       	adc	r31, r19
    3ed4:	80 81       	ld	r24, Z
    3ed6:	88 2f       	mov	r24, r24
    3ed8:	90 e0       	ldi	r25, 0x00	; 0
    3eda:	c0 97       	sbiw	r24, 0x30	; 48
    3edc:	aa 27       	eor	r26, r26
    3ede:	97 fd       	sbrc	r25, 7
    3ee0:	a0 95       	com	r26
    3ee2:	ba 2f       	mov	r27, r26
    3ee4:	84 0f       	add	r24, r20
    3ee6:	95 1f       	adc	r25, r21
    3ee8:	a6 1f       	adc	r26, r22
    3eea:	b7 1f       	adc	r27, r23
    3eec:	89 87       	std	Y+9, r24	; 0x09
    3eee:	9a 87       	std	Y+10, r25	; 0x0a
    3ef0:	ab 87       	std	Y+11, r26	; 0x0b
    3ef2:	bc 87       	std	Y+12, r27	; 0x0c
	{
		sign = -1;
		i = 0;           //skip the -ve sign to the number
	}

	while(array[++i] != 0)
    3ef4:	89 81       	ldd	r24, Y+1	; 0x01
    3ef6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ef8:	ab 81       	ldd	r26, Y+3	; 0x03
    3efa:	bc 81       	ldd	r27, Y+4	; 0x04
    3efc:	01 96       	adiw	r24, 0x01	; 1
    3efe:	a1 1d       	adc	r26, r1
    3f00:	b1 1d       	adc	r27, r1
    3f02:	89 83       	std	Y+1, r24	; 0x01
    3f04:	9a 83       	std	Y+2, r25	; 0x02
    3f06:	ab 83       	std	Y+3, r26	; 0x03
    3f08:	bc 83       	std	Y+4, r27	; 0x04
    3f0a:	29 81       	ldd	r18, Y+1	; 0x01
    3f0c:	3a 81       	ldd	r19, Y+2	; 0x02
    3f0e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f10:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f12:	fc 01       	movw	r30, r24
    3f14:	e2 0f       	add	r30, r18
    3f16:	f3 1f       	adc	r31, r19
    3f18:	80 81       	ld	r24, Z
    3f1a:	88 23       	and	r24, r24
    3f1c:	31 f6       	brne	.-116    	; 0x3eaa <ConvertToInt+0x64>
	{
		num = (num * 10) + (array[i] - '0');
	}

	num *= sign;
    3f1e:	89 85       	ldd	r24, Y+9	; 0x09
    3f20:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f22:	ab 85       	ldd	r26, Y+11	; 0x0b
    3f24:	bc 85       	ldd	r27, Y+12	; 0x0c
    3f26:	2d 81       	ldd	r18, Y+5	; 0x05
    3f28:	3e 81       	ldd	r19, Y+6	; 0x06
    3f2a:	4f 81       	ldd	r20, Y+7	; 0x07
    3f2c:	58 85       	ldd	r21, Y+8	; 0x08
    3f2e:	bc 01       	movw	r22, r24
    3f30:	cd 01       	movw	r24, r26
    3f32:	0e 94 3f 29 	call	0x527e	; 0x527e <__mulsi3>
    3f36:	dc 01       	movw	r26, r24
    3f38:	cb 01       	movw	r24, r22
    3f3a:	89 87       	std	Y+9, r24	; 0x09
    3f3c:	9a 87       	std	Y+10, r25	; 0x0a
    3f3e:	ab 87       	std	Y+11, r26	; 0x0b
    3f40:	bc 87       	std	Y+12, r27	; 0x0c
	return num;
    3f42:	89 85       	ldd	r24, Y+9	; 0x09
    3f44:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f46:	ab 85       	ldd	r26, Y+11	; 0x0b
    3f48:	bc 85       	ldd	r27, Y+12	; 0x0c
}
    3f4a:	bc 01       	movw	r22, r24
    3f4c:	cd 01       	movw	r24, r26
    3f4e:	2e 96       	adiw	r28, 0x0e	; 14
    3f50:	0f b6       	in	r0, 0x3f	; 63
    3f52:	f8 94       	cli
    3f54:	de bf       	out	0x3e, r29	; 62
    3f56:	0f be       	out	0x3f, r0	; 63
    3f58:	cd bf       	out	0x3d, r28	; 61
    3f5a:	cf 91       	pop	r28
    3f5c:	df 91       	pop	r29
    3f5e:	08 95       	ret

00003f60 <InitArray>:

void InitArray(uint8 array[]){
    3f60:	df 93       	push	r29
    3f62:	cf 93       	push	r28
    3f64:	00 d0       	rcall	.+0      	; 0x3f66 <InitArray+0x6>
    3f66:	0f 92       	push	r0
    3f68:	cd b7       	in	r28, 0x3d	; 61
    3f6a:	de b7       	in	r29, 0x3e	; 62
    3f6c:	9b 83       	std	Y+3, r25	; 0x03
    3f6e:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i =0;
    3f70:	19 82       	std	Y+1, r1	; 0x01
    3f72:	0c c0       	rjmp	.+24     	; 0x3f8c <InitArray+0x2c>
	while(array[i] != '\0'){
		array[i]='\0';
    3f74:	89 81       	ldd	r24, Y+1	; 0x01
    3f76:	28 2f       	mov	r18, r24
    3f78:	30 e0       	ldi	r19, 0x00	; 0
    3f7a:	8a 81       	ldd	r24, Y+2	; 0x02
    3f7c:	9b 81       	ldd	r25, Y+3	; 0x03
    3f7e:	fc 01       	movw	r30, r24
    3f80:	e2 0f       	add	r30, r18
    3f82:	f3 1f       	adc	r31, r19
    3f84:	10 82       	st	Z, r1
		i++;
    3f86:	89 81       	ldd	r24, Y+1	; 0x01
    3f88:	8f 5f       	subi	r24, 0xFF	; 255
    3f8a:	89 83       	std	Y+1, r24	; 0x01
	return num;
}

void InitArray(uint8 array[]){
	uint8 i =0;
	while(array[i] != '\0'){
    3f8c:	89 81       	ldd	r24, Y+1	; 0x01
    3f8e:	28 2f       	mov	r18, r24
    3f90:	30 e0       	ldi	r19, 0x00	; 0
    3f92:	8a 81       	ldd	r24, Y+2	; 0x02
    3f94:	9b 81       	ldd	r25, Y+3	; 0x03
    3f96:	fc 01       	movw	r30, r24
    3f98:	e2 0f       	add	r30, r18
    3f9a:	f3 1f       	adc	r31, r19
    3f9c:	80 81       	ld	r24, Z
    3f9e:	88 23       	and	r24, r24
    3fa0:	49 f7       	brne	.-46     	; 0x3f74 <InitArray+0x14>
		array[i]='\0';
		i++;
	}
}
    3fa2:	0f 90       	pop	r0
    3fa4:	0f 90       	pop	r0
    3fa6:	0f 90       	pop	r0
    3fa8:	cf 91       	pop	r28
    3faa:	df 91       	pop	r29
    3fac:	08 95       	ret

00003fae <AnalyzeData>:


uint8 AnalyzeData()
{
    3fae:	8f 92       	push	r8
    3fb0:	9f 92       	push	r9
    3fb2:	af 92       	push	r10
    3fb4:	bf 92       	push	r11
    3fb6:	cf 92       	push	r12
    3fb8:	df 92       	push	r13
    3fba:	ef 92       	push	r14
    3fbc:	ff 92       	push	r15
    3fbe:	0f 93       	push	r16
    3fc0:	1f 93       	push	r17
    3fc2:	df 93       	push	r29
    3fc4:	cf 93       	push	r28
    3fc6:	cd b7       	in	r28, 0x3d	; 61
    3fc8:	de b7       	in	r29, 0x3e	; 62
    3fca:	a1 97       	sbiw	r28, 0x21	; 33
    3fcc:	0f b6       	in	r0, 0x3f	; 63
    3fce:	f8 94       	cli
    3fd0:	de bf       	out	0x3e, r29	; 62
    3fd2:	0f be       	out	0x3f, r0	; 63
    3fd4:	cd bf       	out	0x3d, r28	; 61
	uint8 TempArr[MaxNumberOfDigit]={0};
    3fd6:	80 e1       	ldi	r24, 0x10	; 16
    3fd8:	fe 01       	movw	r30, r28
    3fda:	71 96       	adiw	r30, 0x11	; 17
    3fdc:	df 01       	movw	r26, r30
    3fde:	98 2f       	mov	r25, r24
    3fe0:	1d 92       	st	X+, r1
    3fe2:	9a 95       	dec	r25
    3fe4:	e9 f7       	brne	.-6      	; 0x3fe0 <AnalyzeData+0x32>
	uint8 TempIndex=0;
    3fe6:	18 8a       	std	Y+16, r1	; 0x10
	uint8 index=0;
    3fe8:	1f 86       	std	Y+15, r1	; 0x0f

	Sign =1;
    3fea:	81 e0       	ldi	r24, 0x01	; 1
    3fec:	80 93 a6 01 	sts	0x01A6, r24
	OtherNumberSign =1;
    3ff0:	81 e0       	ldi	r24, 0x01	; 1
    3ff2:	80 93 b4 01 	sts	0x01B4, r24

	if (IsOperation(Digit[0]) && Digit[0]!= '-'&& Digit[0]!= '+') //input ex (*5)
    3ff6:	80 91 b5 01 	lds	r24, 0x01B5
    3ffa:	8a 32       	cpi	r24, 0x2A	; 42
    3ffc:	69 f0       	breq	.+26     	; 0x4018 <AnalyzeData+0x6a>
    3ffe:	80 91 b5 01 	lds	r24, 0x01B5
    4002:	8b 32       	cpi	r24, 0x2B	; 43
    4004:	49 f0       	breq	.+18     	; 0x4018 <AnalyzeData+0x6a>
    4006:	80 91 b5 01 	lds	r24, 0x01B5
    400a:	8d 32       	cpi	r24, 0x2D	; 45
    400c:	29 f0       	breq	.+10     	; 0x4018 <AnalyzeData+0x6a>
    400e:	80 91 b5 01 	lds	r24, 0x01B5
    4012:	8f 32       	cpi	r24, 0x2F	; 47
    4014:	09 f0       	breq	.+2      	; 0x4018 <AnalyzeData+0x6a>
    4016:	54 c1       	rjmp	.+680    	; 0x42c0 <AnalyzeData+0x312>
    4018:	80 91 b5 01 	lds	r24, 0x01B5
    401c:	8d 32       	cpi	r24, 0x2D	; 45
    401e:	09 f4       	brne	.+2      	; 0x4022 <AnalyzeData+0x74>
    4020:	4f c1       	rjmp	.+670    	; 0x42c0 <AnalyzeData+0x312>
    4022:	80 91 b5 01 	lds	r24, 0x01B5
    4026:	8b 32       	cpi	r24, 0x2B	; 43
    4028:	09 f4       	brne	.+2      	; 0x402c <AnalyzeData+0x7e>
    402a:	4a c1       	rjmp	.+660    	; 0x42c0 <AnalyzeData+0x312>
	{
		LCD_voidWriteString("Syntax error");
    402c:	81 e7       	ldi	r24, 0x71	; 113
    402e:	90 e0       	ldi	r25, 0x00	; 0
    4030:	0e 94 0a 1b 	call	0x3614	; 0x3614 <LCD_voidWriteString>
    4034:	80 e0       	ldi	r24, 0x00	; 0
    4036:	90 e0       	ldi	r25, 0x00	; 0
    4038:	a8 ec       	ldi	r26, 0xC8	; 200
    403a:	b2 e4       	ldi	r27, 0x42	; 66
    403c:	8b 87       	std	Y+11, r24	; 0x0b
    403e:	9c 87       	std	Y+12, r25	; 0x0c
    4040:	ad 87       	std	Y+13, r26	; 0x0d
    4042:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4044:	6b 85       	ldd	r22, Y+11	; 0x0b
    4046:	7c 85       	ldd	r23, Y+12	; 0x0c
    4048:	8d 85       	ldd	r24, Y+13	; 0x0d
    404a:	9e 85       	ldd	r25, Y+14	; 0x0e
    404c:	20 e0       	ldi	r18, 0x00	; 0
    404e:	30 e0       	ldi	r19, 0x00	; 0
    4050:	4a ef       	ldi	r20, 0xFA	; 250
    4052:	54 e4       	ldi	r21, 0x44	; 68
    4054:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    4058:	dc 01       	movw	r26, r24
    405a:	cb 01       	movw	r24, r22
    405c:	8f 83       	std	Y+7, r24	; 0x07
    405e:	98 87       	std	Y+8, r25	; 0x08
    4060:	a9 87       	std	Y+9, r26	; 0x09
    4062:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4064:	6f 81       	ldd	r22, Y+7	; 0x07
    4066:	78 85       	ldd	r23, Y+8	; 0x08
    4068:	89 85       	ldd	r24, Y+9	; 0x09
    406a:	9a 85       	ldd	r25, Y+10	; 0x0a
    406c:	20 e0       	ldi	r18, 0x00	; 0
    406e:	30 e0       	ldi	r19, 0x00	; 0
    4070:	40 e8       	ldi	r20, 0x80	; 128
    4072:	5f e3       	ldi	r21, 0x3F	; 63
    4074:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__ltsf2>
    4078:	88 23       	and	r24, r24
    407a:	2c f4       	brge	.+10     	; 0x4086 <AnalyzeData+0xd8>
		__ticks = 1;
    407c:	81 e0       	ldi	r24, 0x01	; 1
    407e:	90 e0       	ldi	r25, 0x00	; 0
    4080:	9e 83       	std	Y+6, r25	; 0x06
    4082:	8d 83       	std	Y+5, r24	; 0x05
    4084:	3f c0       	rjmp	.+126    	; 0x4104 <AnalyzeData+0x156>
	else if (__tmp > 65535)
    4086:	6f 81       	ldd	r22, Y+7	; 0x07
    4088:	78 85       	ldd	r23, Y+8	; 0x08
    408a:	89 85       	ldd	r24, Y+9	; 0x09
    408c:	9a 85       	ldd	r25, Y+10	; 0x0a
    408e:	20 e0       	ldi	r18, 0x00	; 0
    4090:	3f ef       	ldi	r19, 0xFF	; 255
    4092:	4f e7       	ldi	r20, 0x7F	; 127
    4094:	57 e4       	ldi	r21, 0x47	; 71
    4096:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__gtsf2>
    409a:	18 16       	cp	r1, r24
    409c:	4c f5       	brge	.+82     	; 0x40f0 <AnalyzeData+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    409e:	6b 85       	ldd	r22, Y+11	; 0x0b
    40a0:	7c 85       	ldd	r23, Y+12	; 0x0c
    40a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    40a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    40a6:	20 e0       	ldi	r18, 0x00	; 0
    40a8:	30 e0       	ldi	r19, 0x00	; 0
    40aa:	40 e2       	ldi	r20, 0x20	; 32
    40ac:	51 e4       	ldi	r21, 0x41	; 65
    40ae:	0e 94 3d 0c 	call	0x187a	; 0x187a <__mulsf3>
    40b2:	dc 01       	movw	r26, r24
    40b4:	cb 01       	movw	r24, r22
    40b6:	bc 01       	movw	r22, r24
    40b8:	cd 01       	movw	r24, r26
    40ba:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    40be:	dc 01       	movw	r26, r24
    40c0:	cb 01       	movw	r24, r22
    40c2:	9e 83       	std	Y+6, r25	; 0x06
    40c4:	8d 83       	std	Y+5, r24	; 0x05
    40c6:	0f c0       	rjmp	.+30     	; 0x40e6 <AnalyzeData+0x138>
    40c8:	88 ec       	ldi	r24, 0xC8	; 200
    40ca:	90 e0       	ldi	r25, 0x00	; 0
    40cc:	9c 83       	std	Y+4, r25	; 0x04
    40ce:	8b 83       	std	Y+3, r24	; 0x03
    40d0:	8b 81       	ldd	r24, Y+3	; 0x03
    40d2:	9c 81       	ldd	r25, Y+4	; 0x04
    40d4:	01 97       	sbiw	r24, 0x01	; 1
    40d6:	f1 f7       	brne	.-4      	; 0x40d4 <AnalyzeData+0x126>
    40d8:	9c 83       	std	Y+4, r25	; 0x04
    40da:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40dc:	8d 81       	ldd	r24, Y+5	; 0x05
    40de:	9e 81       	ldd	r25, Y+6	; 0x06
    40e0:	01 97       	sbiw	r24, 0x01	; 1
    40e2:	9e 83       	std	Y+6, r25	; 0x06
    40e4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40e6:	8d 81       	ldd	r24, Y+5	; 0x05
    40e8:	9e 81       	ldd	r25, Y+6	; 0x06
    40ea:	00 97       	sbiw	r24, 0x00	; 0
    40ec:	69 f7       	brne	.-38     	; 0x40c8 <AnalyzeData+0x11a>
    40ee:	14 c0       	rjmp	.+40     	; 0x4118 <AnalyzeData+0x16a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40f0:	6f 81       	ldd	r22, Y+7	; 0x07
    40f2:	78 85       	ldd	r23, Y+8	; 0x08
    40f4:	89 85       	ldd	r24, Y+9	; 0x09
    40f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    40f8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    40fc:	dc 01       	movw	r26, r24
    40fe:	cb 01       	movw	r24, r22
    4100:	9e 83       	std	Y+6, r25	; 0x06
    4102:	8d 83       	std	Y+5, r24	; 0x05
    4104:	8d 81       	ldd	r24, Y+5	; 0x05
    4106:	9e 81       	ldd	r25, Y+6	; 0x06
    4108:	9a 83       	std	Y+2, r25	; 0x02
    410a:	89 83       	std	Y+1, r24	; 0x01
    410c:	89 81       	ldd	r24, Y+1	; 0x01
    410e:	9a 81       	ldd	r25, Y+2	; 0x02
    4110:	01 97       	sbiw	r24, 0x01	; 1
    4112:	f1 f7       	brne	.-4      	; 0x4110 <AnalyzeData+0x162>
    4114:	9a 83       	std	Y+2, r25	; 0x02
    4116:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(100);
		return Reset;
    4118:	19 a2       	std	Y+33, r1	; 0x21
    411a:	f6 c0       	rjmp	.+492    	; 0x4308 <AnalyzeData+0x35a>
	}

	while(DigitCounter != 0)
	{
		if(((Digit[index]>='0') && (Digit[index]<='9')) || ((Digit[index]=='-') && (IsOperation(Digit[index-1])))/*||OtherNumberSign*/)
    411c:	8f 85       	ldd	r24, Y+15	; 0x0f
    411e:	88 2f       	mov	r24, r24
    4120:	90 e0       	ldi	r25, 0x00	; 0
    4122:	fc 01       	movw	r30, r24
    4124:	eb 54       	subi	r30, 0x4B	; 75
    4126:	fe 4f       	sbci	r31, 0xFE	; 254
    4128:	80 81       	ld	r24, Z
    412a:	80 33       	cpi	r24, 0x30	; 48
    412c:	48 f0       	brcs	.+18     	; 0x4140 <AnalyzeData+0x192>
    412e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4130:	88 2f       	mov	r24, r24
    4132:	90 e0       	ldi	r25, 0x00	; 0
    4134:	fc 01       	movw	r30, r24
    4136:	eb 54       	subi	r30, 0x4B	; 75
    4138:	fe 4f       	sbci	r31, 0xFE	; 254
    413a:	80 81       	ld	r24, Z
    413c:	8a 33       	cpi	r24, 0x3A	; 58
    413e:	88 f1       	brcs	.+98     	; 0x41a2 <AnalyzeData+0x1f4>
    4140:	8f 85       	ldd	r24, Y+15	; 0x0f
    4142:	88 2f       	mov	r24, r24
    4144:	90 e0       	ldi	r25, 0x00	; 0
    4146:	fc 01       	movw	r30, r24
    4148:	eb 54       	subi	r30, 0x4B	; 75
    414a:	fe 4f       	sbci	r31, 0xFE	; 254
    414c:	80 81       	ld	r24, Z
    414e:	8d 32       	cpi	r24, 0x2D	; 45
    4150:	e1 f5       	brne	.+120    	; 0x41ca <AnalyzeData+0x21c>
    4152:	8f 85       	ldd	r24, Y+15	; 0x0f
    4154:	88 2f       	mov	r24, r24
    4156:	90 e0       	ldi	r25, 0x00	; 0
    4158:	01 97       	sbiw	r24, 0x01	; 1
    415a:	fc 01       	movw	r30, r24
    415c:	eb 54       	subi	r30, 0x4B	; 75
    415e:	fe 4f       	sbci	r31, 0xFE	; 254
    4160:	80 81       	ld	r24, Z
    4162:	8a 32       	cpi	r24, 0x2A	; 42
    4164:	f1 f0       	breq	.+60     	; 0x41a2 <AnalyzeData+0x1f4>
    4166:	8f 85       	ldd	r24, Y+15	; 0x0f
    4168:	88 2f       	mov	r24, r24
    416a:	90 e0       	ldi	r25, 0x00	; 0
    416c:	01 97       	sbiw	r24, 0x01	; 1
    416e:	fc 01       	movw	r30, r24
    4170:	eb 54       	subi	r30, 0x4B	; 75
    4172:	fe 4f       	sbci	r31, 0xFE	; 254
    4174:	80 81       	ld	r24, Z
    4176:	8b 32       	cpi	r24, 0x2B	; 43
    4178:	a1 f0       	breq	.+40     	; 0x41a2 <AnalyzeData+0x1f4>
    417a:	8f 85       	ldd	r24, Y+15	; 0x0f
    417c:	88 2f       	mov	r24, r24
    417e:	90 e0       	ldi	r25, 0x00	; 0
    4180:	01 97       	sbiw	r24, 0x01	; 1
    4182:	fc 01       	movw	r30, r24
    4184:	eb 54       	subi	r30, 0x4B	; 75
    4186:	fe 4f       	sbci	r31, 0xFE	; 254
    4188:	80 81       	ld	r24, Z
    418a:	8d 32       	cpi	r24, 0x2D	; 45
    418c:	51 f0       	breq	.+20     	; 0x41a2 <AnalyzeData+0x1f4>
    418e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4190:	88 2f       	mov	r24, r24
    4192:	90 e0       	ldi	r25, 0x00	; 0
    4194:	01 97       	sbiw	r24, 0x01	; 1
    4196:	fc 01       	movw	r30, r24
    4198:	eb 54       	subi	r30, 0x4B	; 75
    419a:	fe 4f       	sbci	r31, 0xFE	; 254
    419c:	80 81       	ld	r24, Z
    419e:	8f 32       	cpi	r24, 0x2F	; 47
    41a0:	a1 f4       	brne	.+40     	; 0x41ca <AnalyzeData+0x21c>
		{
			TempArr[TempIndex]=Digit[index];
    41a2:	88 89       	ldd	r24, Y+16	; 0x10
    41a4:	28 2f       	mov	r18, r24
    41a6:	30 e0       	ldi	r19, 0x00	; 0
    41a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    41aa:	88 2f       	mov	r24, r24
    41ac:	90 e0       	ldi	r25, 0x00	; 0
    41ae:	fc 01       	movw	r30, r24
    41b0:	eb 54       	subi	r30, 0x4B	; 75
    41b2:	fe 4f       	sbci	r31, 0xFE	; 254
    41b4:	40 81       	ld	r20, Z
    41b6:	ce 01       	movw	r24, r28
    41b8:	41 96       	adiw	r24, 0x11	; 17
    41ba:	fc 01       	movw	r30, r24
    41bc:	e2 0f       	add	r30, r18
    41be:	f3 1f       	adc	r31, r19
    41c0:	40 83       	st	Z, r20
			TempIndex++;
    41c2:	88 89       	ldd	r24, Y+16	; 0x10
    41c4:	8f 5f       	subi	r24, 0xFF	; 255
    41c6:	88 8b       	std	Y+16, r24	; 0x10
    41c8:	73 c0       	rjmp	.+230    	; 0x42b0 <AnalyzeData+0x302>

		}
		else if (((IsOperation(Digit[index]))||(Digit[index]== '=')))
    41ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    41cc:	88 2f       	mov	r24, r24
    41ce:	90 e0       	ldi	r25, 0x00	; 0
    41d0:	fc 01       	movw	r30, r24
    41d2:	eb 54       	subi	r30, 0x4B	; 75
    41d4:	fe 4f       	sbci	r31, 0xFE	; 254
    41d6:	80 81       	ld	r24, Z
    41d8:	8a 32       	cpi	r24, 0x2A	; 42
    41da:	29 f1       	breq	.+74     	; 0x4226 <AnalyzeData+0x278>
    41dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    41de:	88 2f       	mov	r24, r24
    41e0:	90 e0       	ldi	r25, 0x00	; 0
    41e2:	fc 01       	movw	r30, r24
    41e4:	eb 54       	subi	r30, 0x4B	; 75
    41e6:	fe 4f       	sbci	r31, 0xFE	; 254
    41e8:	80 81       	ld	r24, Z
    41ea:	8b 32       	cpi	r24, 0x2B	; 43
    41ec:	e1 f0       	breq	.+56     	; 0x4226 <AnalyzeData+0x278>
    41ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    41f0:	88 2f       	mov	r24, r24
    41f2:	90 e0       	ldi	r25, 0x00	; 0
    41f4:	fc 01       	movw	r30, r24
    41f6:	eb 54       	subi	r30, 0x4B	; 75
    41f8:	fe 4f       	sbci	r31, 0xFE	; 254
    41fa:	80 81       	ld	r24, Z
    41fc:	8d 32       	cpi	r24, 0x2D	; 45
    41fe:	99 f0       	breq	.+38     	; 0x4226 <AnalyzeData+0x278>
    4200:	8f 85       	ldd	r24, Y+15	; 0x0f
    4202:	88 2f       	mov	r24, r24
    4204:	90 e0       	ldi	r25, 0x00	; 0
    4206:	fc 01       	movw	r30, r24
    4208:	eb 54       	subi	r30, 0x4B	; 75
    420a:	fe 4f       	sbci	r31, 0xFE	; 254
    420c:	80 81       	ld	r24, Z
    420e:	8f 32       	cpi	r24, 0x2F	; 47
    4210:	51 f0       	breq	.+20     	; 0x4226 <AnalyzeData+0x278>
    4212:	8f 85       	ldd	r24, Y+15	; 0x0f
    4214:	88 2f       	mov	r24, r24
    4216:	90 e0       	ldi	r25, 0x00	; 0
    4218:	fc 01       	movw	r30, r24
    421a:	eb 54       	subi	r30, 0x4B	; 75
    421c:	fe 4f       	sbci	r31, 0xFE	; 254
    421e:	80 81       	ld	r24, Z
    4220:	8d 33       	cpi	r24, 0x3D	; 61
    4222:	09 f0       	breq	.+2      	; 0x4226 <AnalyzeData+0x278>
    4224:	45 c0       	rjmp	.+138    	; 0x42b0 <AnalyzeData+0x302>
		{
			Operations[OperationsCounter]=Digit[index];
    4226:	80 91 b1 01 	lds	r24, 0x01B1
    422a:	28 2f       	mov	r18, r24
    422c:	30 e0       	ldi	r19, 0x00	; 0
    422e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4230:	88 2f       	mov	r24, r24
    4232:	90 e0       	ldi	r25, 0x00	; 0
    4234:	fc 01       	movw	r30, r24
    4236:	eb 54       	subi	r30, 0x4B	; 75
    4238:	fe 4f       	sbci	r31, 0xFE	; 254
    423a:	80 81       	ld	r24, Z
    423c:	f9 01       	movw	r30, r18
    423e:	eb 5d       	subi	r30, 0xDB	; 219
    4240:	fd 4f       	sbci	r31, 0xFD	; 253
    4242:	80 83       	st	Z, r24
			OperationsCounter++;
    4244:	80 91 b1 01 	lds	r24, 0x01B1
    4248:	8f 5f       	subi	r24, 0xFF	; 255
    424a:	80 93 b1 01 	sts	0x01B1, r24
			Operands[OperandsCounter]= ConvertToInt(TempArr)/* Sign*/;
    424e:	80 91 b0 01 	lds	r24, 0x01B0
    4252:	88 2e       	mov	r8, r24
    4254:	99 24       	eor	r9, r9
    4256:	ce 01       	movw	r24, r28
    4258:	41 96       	adiw	r24, 0x11	; 17
    425a:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <ConvertToInt>
    425e:	5b 01       	movw	r10, r22
    4260:	6c 01       	movw	r12, r24
    4262:	86 01       	movw	r16, r12
    4264:	75 01       	movw	r14, r10
    4266:	11 0f       	add	r17, r17
    4268:	ee 08       	sbc	r14, r14
    426a:	fe 2c       	mov	r15, r14
    426c:	87 01       	movw	r16, r14
    426e:	a6 01       	movw	r20, r12
    4270:	95 01       	movw	r18, r10
    4272:	6e 2d       	mov	r22, r14
    4274:	7e 2d       	mov	r23, r14
    4276:	8e 2d       	mov	r24, r14
    4278:	9e 2d       	mov	r25, r14
    427a:	f4 01       	movw	r30, r8
    427c:	ee 0f       	add	r30, r30
    427e:	ff 1f       	adc	r31, r31
    4280:	ee 0f       	add	r30, r30
    4282:	ff 1f       	adc	r31, r31
    4284:	ee 0f       	add	r30, r30
    4286:	ff 1f       	adc	r31, r31
    4288:	eb 53       	subi	r30, 0x3B	; 59
    428a:	fe 4f       	sbci	r31, 0xFE	; 254
    428c:	20 83       	st	Z, r18
    428e:	31 83       	std	Z+1, r19	; 0x01
    4290:	42 83       	std	Z+2, r20	; 0x02
    4292:	53 83       	std	Z+3, r21	; 0x03
    4294:	64 83       	std	Z+4, r22	; 0x04
    4296:	75 83       	std	Z+5, r23	; 0x05
    4298:	86 83       	std	Z+6, r24	; 0x06
    429a:	97 83       	std	Z+7, r25	; 0x07
			OperandsCounter++;
    429c:	80 91 b0 01 	lds	r24, 0x01B0
    42a0:	8f 5f       	subi	r24, 0xFF	; 255
    42a2:	80 93 b0 01 	sts	0x01B0, r24
			InitArray(TempArr);
    42a6:	ce 01       	movw	r24, r28
    42a8:	41 96       	adiw	r24, 0x11	; 17
    42aa:	0e 94 b0 1f 	call	0x3f60	; 0x3f60 <InitArray>
			TempIndex=0;
    42ae:	18 8a       	std	Y+16, r1	; 0x10
		}
		index++;
    42b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    42b2:	8f 5f       	subi	r24, 0xFF	; 255
    42b4:	8f 87       	std	Y+15, r24	; 0x0f
		DigitCounter--;
    42b6:	80 91 b2 01 	lds	r24, 0x01B2
    42ba:	81 50       	subi	r24, 0x01	; 1
    42bc:	80 93 b2 01 	sts	0x01B2, r24
		LCD_voidWriteString("Syntax error");
		_delay_ms(100);
		return Reset;
	}

	while(DigitCounter != 0)
    42c0:	80 91 b2 01 	lds	r24, 0x01B2
    42c4:	88 23       	and	r24, r24
    42c6:	09 f0       	breq	.+2      	; 0x42ca <AnalyzeData+0x31c>
    42c8:	29 cf       	rjmp	.-430    	; 0x411c <AnalyzeData+0x16e>
			TempIndex=0;
		}
		index++;
		DigitCounter--;
	}
	Operations[OperationsCounter]='\0';
    42ca:	80 91 b1 01 	lds	r24, 0x01B1
    42ce:	88 2f       	mov	r24, r24
    42d0:	90 e0       	ldi	r25, 0x00	; 0
    42d2:	fc 01       	movw	r30, r24
    42d4:	eb 5d       	subi	r30, 0xDB	; 219
    42d6:	fd 4f       	sbci	r31, 0xFD	; 253
    42d8:	10 82       	st	Z, r1
	Operands[OperandsCounter] ='\0';
    42da:	80 91 b0 01 	lds	r24, 0x01B0
    42de:	88 2f       	mov	r24, r24
    42e0:	90 e0       	ldi	r25, 0x00	; 0
    42e2:	88 0f       	add	r24, r24
    42e4:	99 1f       	adc	r25, r25
    42e6:	88 0f       	add	r24, r24
    42e8:	99 1f       	adc	r25, r25
    42ea:	88 0f       	add	r24, r24
    42ec:	99 1f       	adc	r25, r25
    42ee:	fc 01       	movw	r30, r24
    42f0:	eb 53       	subi	r30, 0x3B	; 59
    42f2:	fe 4f       	sbci	r31, 0xFE	; 254
    42f4:	10 82       	st	Z, r1
    42f6:	11 82       	std	Z+1, r1	; 0x01
    42f8:	12 82       	std	Z+2, r1	; 0x02
    42fa:	13 82       	std	Z+3, r1	; 0x03
    42fc:	14 82       	std	Z+4, r1	; 0x04
    42fe:	15 82       	std	Z+5, r1	; 0x05
    4300:	16 82       	std	Z+6, r1	; 0x06
    4302:	17 82       	std	Z+7, r1	; 0x07
	return CalculatePoint;
    4304:	a3 e0       	ldi	r26, 0x03	; 3
    4306:	a9 a3       	std	Y+33, r26	; 0x21
    4308:	89 a1       	ldd	r24, Y+33	; 0x21
}
    430a:	a1 96       	adiw	r28, 0x21	; 33
    430c:	0f b6       	in	r0, 0x3f	; 63
    430e:	f8 94       	cli
    4310:	de bf       	out	0x3e, r29	; 62
    4312:	0f be       	out	0x3f, r0	; 63
    4314:	cd bf       	out	0x3d, r28	; 61
    4316:	cf 91       	pop	r28
    4318:	df 91       	pop	r29
    431a:	1f 91       	pop	r17
    431c:	0f 91       	pop	r16
    431e:	ff 90       	pop	r15
    4320:	ef 90       	pop	r14
    4322:	df 90       	pop	r13
    4324:	cf 90       	pop	r12
    4326:	bf 90       	pop	r11
    4328:	af 90       	pop	r10
    432a:	9f 90       	pop	r9
    432c:	8f 90       	pop	r8
    432e:	08 95       	ret

00004330 <shift_s64array_left>:


void shift_s64array_left(uint64* array ,uint8 start_index){
    4330:	df 93       	push	r29
    4332:	cf 93       	push	r28
    4334:	00 d0       	rcall	.+0      	; 0x4336 <shift_s64array_left+0x6>
    4336:	00 d0       	rcall	.+0      	; 0x4338 <shift_s64array_left+0x8>
    4338:	cd b7       	in	r28, 0x3d	; 61
    433a:	de b7       	in	r29, 0x3e	; 62
    433c:	9b 83       	std	Y+3, r25	; 0x03
    433e:	8a 83       	std	Y+2, r24	; 0x02
    4340:	6c 83       	std	Y+4, r22	; 0x04


	for(uint8 i = start_index;1; i++) {
    4342:	8c 81       	ldd	r24, Y+4	; 0x04
    4344:	89 83       	std	Y+1, r24	; 0x01

		array[i]=array[i+1];
    4346:	89 81       	ldd	r24, Y+1	; 0x01
    4348:	88 2f       	mov	r24, r24
    434a:	90 e0       	ldi	r25, 0x00	; 0
    434c:	9c 01       	movw	r18, r24
    434e:	22 0f       	add	r18, r18
    4350:	33 1f       	adc	r19, r19
    4352:	22 0f       	add	r18, r18
    4354:	33 1f       	adc	r19, r19
    4356:	22 0f       	add	r18, r18
    4358:	33 1f       	adc	r19, r19
    435a:	8a 81       	ldd	r24, Y+2	; 0x02
    435c:	9b 81       	ldd	r25, Y+3	; 0x03
    435e:	dc 01       	movw	r26, r24
    4360:	a2 0f       	add	r26, r18
    4362:	b3 1f       	adc	r27, r19
    4364:	89 81       	ldd	r24, Y+1	; 0x01
    4366:	88 2f       	mov	r24, r24
    4368:	90 e0       	ldi	r25, 0x00	; 0
    436a:	01 96       	adiw	r24, 0x01	; 1
    436c:	9c 01       	movw	r18, r24
    436e:	22 0f       	add	r18, r18
    4370:	33 1f       	adc	r19, r19
    4372:	22 0f       	add	r18, r18
    4374:	33 1f       	adc	r19, r19
    4376:	22 0f       	add	r18, r18
    4378:	33 1f       	adc	r19, r19
    437a:	8a 81       	ldd	r24, Y+2	; 0x02
    437c:	9b 81       	ldd	r25, Y+3	; 0x03
    437e:	fc 01       	movw	r30, r24
    4380:	e2 0f       	add	r30, r18
    4382:	f3 1f       	adc	r31, r19
    4384:	20 81       	ld	r18, Z
    4386:	31 81       	ldd	r19, Z+1	; 0x01
    4388:	42 81       	ldd	r20, Z+2	; 0x02
    438a:	53 81       	ldd	r21, Z+3	; 0x03
    438c:	64 81       	ldd	r22, Z+4	; 0x04
    438e:	75 81       	ldd	r23, Z+5	; 0x05
    4390:	86 81       	ldd	r24, Z+6	; 0x06
    4392:	97 81       	ldd	r25, Z+7	; 0x07
    4394:	2c 93       	st	X, r18
    4396:	11 96       	adiw	r26, 0x01	; 1
    4398:	3c 93       	st	X, r19
    439a:	11 97       	sbiw	r26, 0x01	; 1
    439c:	12 96       	adiw	r26, 0x02	; 2
    439e:	4c 93       	st	X, r20
    43a0:	12 97       	sbiw	r26, 0x02	; 2
    43a2:	13 96       	adiw	r26, 0x03	; 3
    43a4:	5c 93       	st	X, r21
    43a6:	13 97       	sbiw	r26, 0x03	; 3
    43a8:	14 96       	adiw	r26, 0x04	; 4
    43aa:	6c 93       	st	X, r22
    43ac:	14 97       	sbiw	r26, 0x04	; 4
    43ae:	15 96       	adiw	r26, 0x05	; 5
    43b0:	7c 93       	st	X, r23
    43b2:	15 97       	sbiw	r26, 0x05	; 5
    43b4:	16 96       	adiw	r26, 0x06	; 6
    43b6:	8c 93       	st	X, r24
    43b8:	16 97       	sbiw	r26, 0x06	; 6
    43ba:	17 96       	adiw	r26, 0x07	; 7
    43bc:	9c 93       	st	X, r25
    43be:	17 97       	sbiw	r26, 0x07	; 7
		if(array[i] == '\0'){
    43c0:	89 81       	ldd	r24, Y+1	; 0x01
    43c2:	88 2f       	mov	r24, r24
    43c4:	90 e0       	ldi	r25, 0x00	; 0
    43c6:	9c 01       	movw	r18, r24
    43c8:	22 0f       	add	r18, r18
    43ca:	33 1f       	adc	r19, r19
    43cc:	22 0f       	add	r18, r18
    43ce:	33 1f       	adc	r19, r19
    43d0:	22 0f       	add	r18, r18
    43d2:	33 1f       	adc	r19, r19
    43d4:	8a 81       	ldd	r24, Y+2	; 0x02
    43d6:	9b 81       	ldd	r25, Y+3	; 0x03
    43d8:	fc 01       	movw	r30, r24
    43da:	e2 0f       	add	r30, r18
    43dc:	f3 1f       	adc	r31, r19
    43de:	20 81       	ld	r18, Z
    43e0:	31 81       	ldd	r19, Z+1	; 0x01
    43e2:	42 81       	ldd	r20, Z+2	; 0x02
    43e4:	53 81       	ldd	r21, Z+3	; 0x03
    43e6:	64 81       	ldd	r22, Z+4	; 0x04
    43e8:	75 81       	ldd	r23, Z+5	; 0x05
    43ea:	86 81       	ldd	r24, Z+6	; 0x06
    43ec:	97 81       	ldd	r25, Z+7	; 0x07
    43ee:	e2 2f       	mov	r30, r18
    43f0:	e3 2b       	or	r30, r19
    43f2:	e4 2b       	or	r30, r20
    43f4:	e5 2b       	or	r30, r21
    43f6:	e6 2b       	or	r30, r22
    43f8:	e7 2b       	or	r30, r23
    43fa:	e8 2b       	or	r30, r24
    43fc:	e9 2b       	or	r30, r25
    43fe:	ee 23       	and	r30, r30
    4400:	21 f0       	breq	.+8      	; 0x440a <shift_s64array_left+0xda>


void shift_s64array_left(uint64* array ,uint8 start_index){


	for(uint8 i = start_index;1; i++) {
    4402:	89 81       	ldd	r24, Y+1	; 0x01
    4404:	8f 5f       	subi	r24, 0xFF	; 255
    4406:	89 83       	std	Y+1, r24	; 0x01
    4408:	9e cf       	rjmp	.-196    	; 0x4346 <shift_s64array_left+0x16>
		array[i]=array[i+1];
		if(array[i] == '\0'){
			break;
		}
	}
}
    440a:	0f 90       	pop	r0
    440c:	0f 90       	pop	r0
    440e:	0f 90       	pop	r0
    4410:	0f 90       	pop	r0
    4412:	cf 91       	pop	r28
    4414:	df 91       	pop	r29
    4416:	08 95       	ret

00004418 <shift_uint8array_left>:

void shift_uint8array_left(uint8 array[] ,uint8 start_index){
    4418:	df 93       	push	r29
    441a:	cf 93       	push	r28
    441c:	00 d0       	rcall	.+0      	; 0x441e <shift_uint8array_left+0x6>
    441e:	00 d0       	rcall	.+0      	; 0x4420 <shift_uint8array_left+0x8>
    4420:	cd b7       	in	r28, 0x3d	; 61
    4422:	de b7       	in	r29, 0x3e	; 62
    4424:	9b 83       	std	Y+3, r25	; 0x03
    4426:	8a 83       	std	Y+2, r24	; 0x02
    4428:	6c 83       	std	Y+4, r22	; 0x04


	for(uint8 i = start_index;1; i++) {
    442a:	8c 81       	ldd	r24, Y+4	; 0x04
    442c:	89 83       	std	Y+1, r24	; 0x01

		array[i]=array[i+1];
    442e:	89 81       	ldd	r24, Y+1	; 0x01
    4430:	28 2f       	mov	r18, r24
    4432:	30 e0       	ldi	r19, 0x00	; 0
    4434:	8a 81       	ldd	r24, Y+2	; 0x02
    4436:	9b 81       	ldd	r25, Y+3	; 0x03
    4438:	dc 01       	movw	r26, r24
    443a:	a2 0f       	add	r26, r18
    443c:	b3 1f       	adc	r27, r19
    443e:	89 81       	ldd	r24, Y+1	; 0x01
    4440:	88 2f       	mov	r24, r24
    4442:	90 e0       	ldi	r25, 0x00	; 0
    4444:	9c 01       	movw	r18, r24
    4446:	2f 5f       	subi	r18, 0xFF	; 255
    4448:	3f 4f       	sbci	r19, 0xFF	; 255
    444a:	8a 81       	ldd	r24, Y+2	; 0x02
    444c:	9b 81       	ldd	r25, Y+3	; 0x03
    444e:	fc 01       	movw	r30, r24
    4450:	e2 0f       	add	r30, r18
    4452:	f3 1f       	adc	r31, r19
    4454:	80 81       	ld	r24, Z
    4456:	8c 93       	st	X, r24
		if(array[i] == '\0'){
    4458:	89 81       	ldd	r24, Y+1	; 0x01
    445a:	28 2f       	mov	r18, r24
    445c:	30 e0       	ldi	r19, 0x00	; 0
    445e:	8a 81       	ldd	r24, Y+2	; 0x02
    4460:	9b 81       	ldd	r25, Y+3	; 0x03
    4462:	fc 01       	movw	r30, r24
    4464:	e2 0f       	add	r30, r18
    4466:	f3 1f       	adc	r31, r19
    4468:	80 81       	ld	r24, Z
    446a:	88 23       	and	r24, r24
    446c:	21 f0       	breq	.+8      	; 0x4476 <shift_uint8array_left+0x5e>
}

void shift_uint8array_left(uint8 array[] ,uint8 start_index){


	for(uint8 i = start_index;1; i++) {
    446e:	89 81       	ldd	r24, Y+1	; 0x01
    4470:	8f 5f       	subi	r24, 0xFF	; 255
    4472:	89 83       	std	Y+1, r24	; 0x01
    4474:	dc cf       	rjmp	.-72     	; 0x442e <shift_uint8array_left+0x16>
		array[i]=array[i+1];
		if(array[i] == '\0'){
			break;
		}
	}
}
    4476:	0f 90       	pop	r0
    4478:	0f 90       	pop	r0
    447a:	0f 90       	pop	r0
    447c:	0f 90       	pop	r0
    447e:	cf 91       	pop	r28
    4480:	df 91       	pop	r29
    4482:	08 95       	ret

00004484 <SubCalculate>:

sint64 SubCalculate(sint64 operand1,sint64 operand2,uint8 operation)
{
    4484:	8f 92       	push	r8
    4486:	af 92       	push	r10
    4488:	bf 92       	push	r11
    448a:	cf 92       	push	r12
    448c:	df 92       	push	r13
    448e:	ef 92       	push	r14
    4490:	ff 92       	push	r15
    4492:	0f 93       	push	r16
    4494:	1f 93       	push	r17
    4496:	df 93       	push	r29
    4498:	cf 93       	push	r28
    449a:	cd b7       	in	r28, 0x3d	; 61
    449c:	de b7       	in	r29, 0x3e	; 62
    449e:	c9 57       	subi	r28, 0x79	; 121
    44a0:	d0 40       	sbci	r29, 0x00	; 0
    44a2:	0f b6       	in	r0, 0x3f	; 63
    44a4:	f8 94       	cli
    44a6:	de bf       	out	0x3e, r29	; 62
    44a8:	0f be       	out	0x3f, r0	; 63
    44aa:	cd bf       	out	0x3d, r28	; 61
    44ac:	29 87       	std	Y+9, r18	; 0x09
    44ae:	3a 87       	std	Y+10, r19	; 0x0a
    44b0:	4b 87       	std	Y+11, r20	; 0x0b
    44b2:	5c 87       	std	Y+12, r21	; 0x0c
    44b4:	6d 87       	std	Y+13, r22	; 0x0d
    44b6:	7e 87       	std	Y+14, r23	; 0x0e
    44b8:	8f 87       	std	Y+15, r24	; 0x0f
    44ba:	98 8b       	std	Y+16, r25	; 0x10
    44bc:	a9 8a       	std	Y+17, r10	; 0x11
    44be:	ba 8a       	std	Y+18, r11	; 0x12
    44c0:	cb 8a       	std	Y+19, r12	; 0x13
    44c2:	dc 8a       	std	Y+20, r13	; 0x14
    44c4:	ed 8a       	std	Y+21, r14	; 0x15
    44c6:	fe 8a       	std	Y+22, r15	; 0x16
    44c8:	0f 8b       	std	Y+23, r16	; 0x17
    44ca:	18 8f       	std	Y+24, r17	; 0x18
    44cc:	89 8e       	std	Y+25, r8	; 0x19
	sint64 return_value = 0;
    44ce:	19 82       	std	Y+1, r1	; 0x01
    44d0:	1a 82       	std	Y+2, r1	; 0x02
    44d2:	1b 82       	std	Y+3, r1	; 0x03
    44d4:	1c 82       	std	Y+4, r1	; 0x04
    44d6:	1d 82       	std	Y+5, r1	; 0x05
    44d8:	1e 82       	std	Y+6, r1	; 0x06
    44da:	1f 82       	std	Y+7, r1	; 0x07
    44dc:	18 86       	std	Y+8, r1	; 0x08
	if (operation != '=')
    44de:	89 8d       	ldd	r24, Y+25	; 0x19
    44e0:	8d 33       	cpi	r24, 0x3D	; 61
    44e2:	09 f4       	brne	.+2      	; 0x44e6 <SubCalculate+0x62>
    44e4:	ed c3       	rjmp	.+2010   	; 0x4cc0 <SubCalculate+0x83c>
	{
		switch(operation)
    44e6:	89 8d       	ldd	r24, Y+25	; 0x19
    44e8:	28 2f       	mov	r18, r24
    44ea:	30 e0       	ldi	r19, 0x00	; 0
    44ec:	3b a3       	std	Y+35, r19	; 0x23
    44ee:	2a a3       	std	Y+34, r18	; 0x22
    44f0:	8a a1       	ldd	r24, Y+34	; 0x22
    44f2:	9b a1       	ldd	r25, Y+35	; 0x23
    44f4:	8b 32       	cpi	r24, 0x2B	; 43
    44f6:	91 05       	cpc	r25, r1
    44f8:	c9 f0       	breq	.+50     	; 0x452c <SubCalculate+0xa8>
    44fa:	2a a1       	ldd	r18, Y+34	; 0x22
    44fc:	3b a1       	ldd	r19, Y+35	; 0x23
    44fe:	2c 32       	cpi	r18, 0x2C	; 44
    4500:	31 05       	cpc	r19, r1
    4502:	3c f4       	brge	.+14     	; 0x4512 <SubCalculate+0x8e>
    4504:	8a a1       	ldd	r24, Y+34	; 0x22
    4506:	9b a1       	ldd	r25, Y+35	; 0x23
    4508:	8a 32       	cpi	r24, 0x2A	; 42
    450a:	91 05       	cpc	r25, r1
    450c:	09 f4       	brne	.+2      	; 0x4510 <SubCalculate+0x8c>
    450e:	82 c3       	rjmp	.+1796   	; 0x4c14 <SubCalculate+0x790>
    4510:	c6 c3       	rjmp	.+1932   	; 0x4c9e <SubCalculate+0x81a>
    4512:	2a a1       	ldd	r18, Y+34	; 0x22
    4514:	3b a1       	ldd	r19, Y+35	; 0x23
    4516:	2d 32       	cpi	r18, 0x2D	; 45
    4518:	31 05       	cpc	r19, r1
    451a:	09 f4       	brne	.+2      	; 0x451e <SubCalculate+0x9a>
    451c:	61 c1       	rjmp	.+706    	; 0x47e0 <SubCalculate+0x35c>
    451e:	8a a1       	ldd	r24, Y+34	; 0x22
    4520:	9b a1       	ldd	r25, Y+35	; 0x23
    4522:	8f 32       	cpi	r24, 0x2F	; 47
    4524:	91 05       	cpc	r25, r1
    4526:	09 f4       	brne	.+2      	; 0x452a <SubCalculate+0xa6>
    4528:	98 c3       	rjmp	.+1840   	; 0x4c5a <SubCalculate+0x7d6>
    452a:	b9 c3       	rjmp	.+1906   	; 0x4c9e <SubCalculate+0x81a>
		{
			case '+' :
			return_value = operand1+operand2;
    452c:	99 85       	ldd	r25, Y+9	; 0x09
    452e:	9c a3       	std	Y+36, r25	; 0x24
    4530:	2a 85       	ldd	r18, Y+10	; 0x0a
    4532:	2d a3       	std	Y+37, r18	; 0x25
    4534:	3b 85       	ldd	r19, Y+11	; 0x0b
    4536:	3e a3       	std	Y+38, r19	; 0x26
    4538:	8c 85       	ldd	r24, Y+12	; 0x0c
    453a:	8f a3       	std	Y+39, r24	; 0x27
    453c:	9d 85       	ldd	r25, Y+13	; 0x0d
    453e:	98 a7       	std	Y+40, r25	; 0x28
    4540:	2e 85       	ldd	r18, Y+14	; 0x0e
    4542:	29 a7       	std	Y+41, r18	; 0x29
    4544:	3f 85       	ldd	r19, Y+15	; 0x0f
    4546:	3a a7       	std	Y+42, r19	; 0x2a
    4548:	88 89       	ldd	r24, Y+16	; 0x10
    454a:	8b a7       	std	Y+43, r24	; 0x2b
    454c:	99 89       	ldd	r25, Y+17	; 0x11
    454e:	9c a7       	std	Y+44, r25	; 0x2c
    4550:	2a 89       	ldd	r18, Y+18	; 0x12
    4552:	2d a7       	std	Y+45, r18	; 0x2d
    4554:	3b 89       	ldd	r19, Y+19	; 0x13
    4556:	3e a7       	std	Y+46, r19	; 0x2e
    4558:	8c 89       	ldd	r24, Y+20	; 0x14
    455a:	8f a7       	std	Y+47, r24	; 0x2f
    455c:	9d 89       	ldd	r25, Y+21	; 0x15
    455e:	98 ab       	std	Y+48, r25	; 0x30
    4560:	2e 89       	ldd	r18, Y+22	; 0x16
    4562:	29 ab       	std	Y+49, r18	; 0x31
    4564:	3f 89       	ldd	r19, Y+23	; 0x17
    4566:	3a ab       	std	Y+50, r19	; 0x32
    4568:	88 8d       	ldd	r24, Y+24	; 0x18
    456a:	8b ab       	std	Y+51, r24	; 0x33
    456c:	9c a1       	ldd	r25, Y+36	; 0x24
    456e:	2c a5       	ldd	r18, Y+44	; 0x2c
    4570:	92 0f       	add	r25, r18
    4572:	9c ab       	std	Y+52, r25	; 0x34
    4574:	31 e0       	ldi	r19, 0x01	; 1
    4576:	3c af       	std	Y+60, r19	; 0x3c
    4578:	8c a9       	ldd	r24, Y+52	; 0x34
    457a:	9c a1       	ldd	r25, Y+36	; 0x24
    457c:	89 17       	cp	r24, r25
    457e:	08 f0       	brcs	.+2      	; 0x4582 <SubCalculate+0xfe>
    4580:	1c ae       	std	Y+60, r1	; 0x3c
    4582:	2d a1       	ldd	r18, Y+37	; 0x25
    4584:	3d a5       	ldd	r19, Y+45	; 0x2d
    4586:	23 0f       	add	r18, r19
    4588:	2d ab       	std	Y+53, r18	; 0x35
    458a:	81 e0       	ldi	r24, 0x01	; 1
    458c:	8d af       	std	Y+61, r24	; 0x3d
    458e:	9d a9       	ldd	r25, Y+53	; 0x35
    4590:	2d a1       	ldd	r18, Y+37	; 0x25
    4592:	92 17       	cp	r25, r18
    4594:	08 f0       	brcs	.+2      	; 0x4598 <SubCalculate+0x114>
    4596:	1d ae       	std	Y+61, r1	; 0x3d
    4598:	3c ad       	ldd	r19, Y+60	; 0x3c
    459a:	8d a9       	ldd	r24, Y+53	; 0x35
    459c:	38 0f       	add	r19, r24
    459e:	3e af       	std	Y+62, r19	; 0x3e
    45a0:	91 e0       	ldi	r25, 0x01	; 1
    45a2:	9f af       	std	Y+63, r25	; 0x3f
    45a4:	2e ad       	ldd	r18, Y+62	; 0x3e
    45a6:	3d a9       	ldd	r19, Y+53	; 0x35
    45a8:	23 17       	cp	r18, r19
    45aa:	08 f0       	brcs	.+2      	; 0x45ae <SubCalculate+0x12a>
    45ac:	1f ae       	std	Y+63, r1	; 0x3f
    45ae:	8d ad       	ldd	r24, Y+61	; 0x3d
    45b0:	9f ad       	ldd	r25, Y+63	; 0x3f
    45b2:	89 2b       	or	r24, r25
    45b4:	8d af       	std	Y+61, r24	; 0x3d
    45b6:	2e ad       	ldd	r18, Y+62	; 0x3e
    45b8:	2d ab       	std	Y+53, r18	; 0x35
    45ba:	3e a1       	ldd	r19, Y+38	; 0x26
    45bc:	8e a5       	ldd	r24, Y+46	; 0x2e
    45be:	38 0f       	add	r19, r24
    45c0:	3e ab       	std	Y+54, r19	; 0x36
    45c2:	91 e0       	ldi	r25, 0x01	; 1
    45c4:	21 96       	adiw	r28, 0x01	; 1
    45c6:	9f af       	std	Y+63, r25	; 0x3f
    45c8:	21 97       	sbiw	r28, 0x01	; 1
    45ca:	2e a9       	ldd	r18, Y+54	; 0x36
    45cc:	3e a1       	ldd	r19, Y+38	; 0x26
    45ce:	23 17       	cp	r18, r19
    45d0:	18 f0       	brcs	.+6      	; 0x45d8 <SubCalculate+0x154>
    45d2:	21 96       	adiw	r28, 0x01	; 1
    45d4:	1f ae       	std	Y+63, r1	; 0x3f
    45d6:	21 97       	sbiw	r28, 0x01	; 1
    45d8:	8d ad       	ldd	r24, Y+61	; 0x3d
    45da:	9e a9       	ldd	r25, Y+54	; 0x36
    45dc:	89 0f       	add	r24, r25
    45de:	22 96       	adiw	r28, 0x02	; 2
    45e0:	8f af       	std	Y+63, r24	; 0x3f
    45e2:	22 97       	sbiw	r28, 0x02	; 2
    45e4:	21 e0       	ldi	r18, 0x01	; 1
    45e6:	23 96       	adiw	r28, 0x03	; 3
    45e8:	2f af       	std	Y+63, r18	; 0x3f
    45ea:	23 97       	sbiw	r28, 0x03	; 3
    45ec:	22 96       	adiw	r28, 0x02	; 2
    45ee:	3f ad       	ldd	r19, Y+63	; 0x3f
    45f0:	22 97       	sbiw	r28, 0x02	; 2
    45f2:	8e a9       	ldd	r24, Y+54	; 0x36
    45f4:	38 17       	cp	r19, r24
    45f6:	18 f0       	brcs	.+6      	; 0x45fe <SubCalculate+0x17a>
    45f8:	23 96       	adiw	r28, 0x03	; 3
    45fa:	1f ae       	std	Y+63, r1	; 0x3f
    45fc:	23 97       	sbiw	r28, 0x03	; 3
    45fe:	21 96       	adiw	r28, 0x01	; 1
    4600:	9f ad       	ldd	r25, Y+63	; 0x3f
    4602:	21 97       	sbiw	r28, 0x01	; 1
    4604:	23 96       	adiw	r28, 0x03	; 3
    4606:	2f ad       	ldd	r18, Y+63	; 0x3f
    4608:	23 97       	sbiw	r28, 0x03	; 3
    460a:	92 2b       	or	r25, r18
    460c:	21 96       	adiw	r28, 0x01	; 1
    460e:	9f af       	std	Y+63, r25	; 0x3f
    4610:	21 97       	sbiw	r28, 0x01	; 1
    4612:	22 96       	adiw	r28, 0x02	; 2
    4614:	3f ad       	ldd	r19, Y+63	; 0x3f
    4616:	22 97       	sbiw	r28, 0x02	; 2
    4618:	3e ab       	std	Y+54, r19	; 0x36
    461a:	8f a1       	ldd	r24, Y+39	; 0x27
    461c:	9f a5       	ldd	r25, Y+47	; 0x2f
    461e:	89 0f       	add	r24, r25
    4620:	8f ab       	std	Y+55, r24	; 0x37
    4622:	21 e0       	ldi	r18, 0x01	; 1
    4624:	24 96       	adiw	r28, 0x04	; 4
    4626:	2f af       	std	Y+63, r18	; 0x3f
    4628:	24 97       	sbiw	r28, 0x04	; 4
    462a:	3f a9       	ldd	r19, Y+55	; 0x37
    462c:	8f a1       	ldd	r24, Y+39	; 0x27
    462e:	38 17       	cp	r19, r24
    4630:	18 f0       	brcs	.+6      	; 0x4638 <SubCalculate+0x1b4>
    4632:	24 96       	adiw	r28, 0x04	; 4
    4634:	1f ae       	std	Y+63, r1	; 0x3f
    4636:	24 97       	sbiw	r28, 0x04	; 4
    4638:	21 96       	adiw	r28, 0x01	; 1
    463a:	9f ad       	ldd	r25, Y+63	; 0x3f
    463c:	21 97       	sbiw	r28, 0x01	; 1
    463e:	2f a9       	ldd	r18, Y+55	; 0x37
    4640:	92 0f       	add	r25, r18
    4642:	25 96       	adiw	r28, 0x05	; 5
    4644:	9f af       	std	Y+63, r25	; 0x3f
    4646:	25 97       	sbiw	r28, 0x05	; 5
    4648:	31 e0       	ldi	r19, 0x01	; 1
    464a:	26 96       	adiw	r28, 0x06	; 6
    464c:	3f af       	std	Y+63, r19	; 0x3f
    464e:	26 97       	sbiw	r28, 0x06	; 6
    4650:	25 96       	adiw	r28, 0x05	; 5
    4652:	8f ad       	ldd	r24, Y+63	; 0x3f
    4654:	25 97       	sbiw	r28, 0x05	; 5
    4656:	9f a9       	ldd	r25, Y+55	; 0x37
    4658:	89 17       	cp	r24, r25
    465a:	18 f0       	brcs	.+6      	; 0x4662 <SubCalculate+0x1de>
    465c:	26 96       	adiw	r28, 0x06	; 6
    465e:	1f ae       	std	Y+63, r1	; 0x3f
    4660:	26 97       	sbiw	r28, 0x06	; 6
    4662:	24 96       	adiw	r28, 0x04	; 4
    4664:	2f ad       	ldd	r18, Y+63	; 0x3f
    4666:	24 97       	sbiw	r28, 0x04	; 4
    4668:	26 96       	adiw	r28, 0x06	; 6
    466a:	3f ad       	ldd	r19, Y+63	; 0x3f
    466c:	26 97       	sbiw	r28, 0x06	; 6
    466e:	23 2b       	or	r18, r19
    4670:	24 96       	adiw	r28, 0x04	; 4
    4672:	2f af       	std	Y+63, r18	; 0x3f
    4674:	24 97       	sbiw	r28, 0x04	; 4
    4676:	25 96       	adiw	r28, 0x05	; 5
    4678:	8f ad       	ldd	r24, Y+63	; 0x3f
    467a:	25 97       	sbiw	r28, 0x05	; 5
    467c:	8f ab       	std	Y+55, r24	; 0x37
    467e:	98 a5       	ldd	r25, Y+40	; 0x28
    4680:	28 a9       	ldd	r18, Y+48	; 0x30
    4682:	92 0f       	add	r25, r18
    4684:	98 af       	std	Y+56, r25	; 0x38
    4686:	31 e0       	ldi	r19, 0x01	; 1
    4688:	27 96       	adiw	r28, 0x07	; 7
    468a:	3f af       	std	Y+63, r19	; 0x3f
    468c:	27 97       	sbiw	r28, 0x07	; 7
    468e:	88 ad       	ldd	r24, Y+56	; 0x38
    4690:	98 a5       	ldd	r25, Y+40	; 0x28
    4692:	89 17       	cp	r24, r25
    4694:	18 f0       	brcs	.+6      	; 0x469c <SubCalculate+0x218>
    4696:	27 96       	adiw	r28, 0x07	; 7
    4698:	1f ae       	std	Y+63, r1	; 0x3f
    469a:	27 97       	sbiw	r28, 0x07	; 7
    469c:	24 96       	adiw	r28, 0x04	; 4
    469e:	2f ad       	ldd	r18, Y+63	; 0x3f
    46a0:	24 97       	sbiw	r28, 0x04	; 4
    46a2:	38 ad       	ldd	r19, Y+56	; 0x38
    46a4:	23 0f       	add	r18, r19
    46a6:	28 96       	adiw	r28, 0x08	; 8
    46a8:	2f af       	std	Y+63, r18	; 0x3f
    46aa:	28 97       	sbiw	r28, 0x08	; 8
    46ac:	81 e0       	ldi	r24, 0x01	; 1
    46ae:	29 96       	adiw	r28, 0x09	; 9
    46b0:	8f af       	std	Y+63, r24	; 0x3f
    46b2:	29 97       	sbiw	r28, 0x09	; 9
    46b4:	28 96       	adiw	r28, 0x08	; 8
    46b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    46b8:	28 97       	sbiw	r28, 0x08	; 8
    46ba:	28 ad       	ldd	r18, Y+56	; 0x38
    46bc:	92 17       	cp	r25, r18
    46be:	18 f0       	brcs	.+6      	; 0x46c6 <SubCalculate+0x242>
    46c0:	29 96       	adiw	r28, 0x09	; 9
    46c2:	1f ae       	std	Y+63, r1	; 0x3f
    46c4:	29 97       	sbiw	r28, 0x09	; 9
    46c6:	27 96       	adiw	r28, 0x07	; 7
    46c8:	3f ad       	ldd	r19, Y+63	; 0x3f
    46ca:	27 97       	sbiw	r28, 0x07	; 7
    46cc:	29 96       	adiw	r28, 0x09	; 9
    46ce:	8f ad       	ldd	r24, Y+63	; 0x3f
    46d0:	29 97       	sbiw	r28, 0x09	; 9
    46d2:	38 2b       	or	r19, r24
    46d4:	27 96       	adiw	r28, 0x07	; 7
    46d6:	3f af       	std	Y+63, r19	; 0x3f
    46d8:	27 97       	sbiw	r28, 0x07	; 7
    46da:	28 96       	adiw	r28, 0x08	; 8
    46dc:	9f ad       	ldd	r25, Y+63	; 0x3f
    46de:	28 97       	sbiw	r28, 0x08	; 8
    46e0:	98 af       	std	Y+56, r25	; 0x38
    46e2:	29 a5       	ldd	r18, Y+41	; 0x29
    46e4:	39 a9       	ldd	r19, Y+49	; 0x31
    46e6:	23 0f       	add	r18, r19
    46e8:	29 af       	std	Y+57, r18	; 0x39
    46ea:	81 e0       	ldi	r24, 0x01	; 1
    46ec:	2a 96       	adiw	r28, 0x0a	; 10
    46ee:	8f af       	std	Y+63, r24	; 0x3f
    46f0:	2a 97       	sbiw	r28, 0x0a	; 10
    46f2:	99 ad       	ldd	r25, Y+57	; 0x39
    46f4:	29 a5       	ldd	r18, Y+41	; 0x29
    46f6:	92 17       	cp	r25, r18
    46f8:	18 f0       	brcs	.+6      	; 0x4700 <SubCalculate+0x27c>
    46fa:	2a 96       	adiw	r28, 0x0a	; 10
    46fc:	1f ae       	std	Y+63, r1	; 0x3f
    46fe:	2a 97       	sbiw	r28, 0x0a	; 10
    4700:	27 96       	adiw	r28, 0x07	; 7
    4702:	3f ad       	ldd	r19, Y+63	; 0x3f
    4704:	27 97       	sbiw	r28, 0x07	; 7
    4706:	89 ad       	ldd	r24, Y+57	; 0x39
    4708:	38 0f       	add	r19, r24
    470a:	2b 96       	adiw	r28, 0x0b	; 11
    470c:	3f af       	std	Y+63, r19	; 0x3f
    470e:	2b 97       	sbiw	r28, 0x0b	; 11
    4710:	91 e0       	ldi	r25, 0x01	; 1
    4712:	2c 96       	adiw	r28, 0x0c	; 12
    4714:	9f af       	std	Y+63, r25	; 0x3f
    4716:	2c 97       	sbiw	r28, 0x0c	; 12
    4718:	2b 96       	adiw	r28, 0x0b	; 11
    471a:	2f ad       	ldd	r18, Y+63	; 0x3f
    471c:	2b 97       	sbiw	r28, 0x0b	; 11
    471e:	39 ad       	ldd	r19, Y+57	; 0x39
    4720:	23 17       	cp	r18, r19
    4722:	18 f0       	brcs	.+6      	; 0x472a <SubCalculate+0x2a6>
    4724:	2c 96       	adiw	r28, 0x0c	; 12
    4726:	1f ae       	std	Y+63, r1	; 0x3f
    4728:	2c 97       	sbiw	r28, 0x0c	; 12
    472a:	2a 96       	adiw	r28, 0x0a	; 10
    472c:	8f ad       	ldd	r24, Y+63	; 0x3f
    472e:	2a 97       	sbiw	r28, 0x0a	; 10
    4730:	2c 96       	adiw	r28, 0x0c	; 12
    4732:	9f ad       	ldd	r25, Y+63	; 0x3f
    4734:	2c 97       	sbiw	r28, 0x0c	; 12
    4736:	89 2b       	or	r24, r25
    4738:	2a 96       	adiw	r28, 0x0a	; 10
    473a:	8f af       	std	Y+63, r24	; 0x3f
    473c:	2a 97       	sbiw	r28, 0x0a	; 10
    473e:	2b 96       	adiw	r28, 0x0b	; 11
    4740:	2f ad       	ldd	r18, Y+63	; 0x3f
    4742:	2b 97       	sbiw	r28, 0x0b	; 11
    4744:	29 af       	std	Y+57, r18	; 0x39
    4746:	3a a5       	ldd	r19, Y+42	; 0x2a
    4748:	8a a9       	ldd	r24, Y+50	; 0x32
    474a:	38 0f       	add	r19, r24
    474c:	3a af       	std	Y+58, r19	; 0x3a
    474e:	91 e0       	ldi	r25, 0x01	; 1
    4750:	2d 96       	adiw	r28, 0x0d	; 13
    4752:	9f af       	std	Y+63, r25	; 0x3f
    4754:	2d 97       	sbiw	r28, 0x0d	; 13
    4756:	2a ad       	ldd	r18, Y+58	; 0x3a
    4758:	3a a5       	ldd	r19, Y+42	; 0x2a
    475a:	23 17       	cp	r18, r19
    475c:	18 f0       	brcs	.+6      	; 0x4764 <SubCalculate+0x2e0>
    475e:	2d 96       	adiw	r28, 0x0d	; 13
    4760:	1f ae       	std	Y+63, r1	; 0x3f
    4762:	2d 97       	sbiw	r28, 0x0d	; 13
    4764:	2a 96       	adiw	r28, 0x0a	; 10
    4766:	8f ad       	ldd	r24, Y+63	; 0x3f
    4768:	2a 97       	sbiw	r28, 0x0a	; 10
    476a:	9a ad       	ldd	r25, Y+58	; 0x3a
    476c:	89 0f       	add	r24, r25
    476e:	2e 96       	adiw	r28, 0x0e	; 14
    4770:	8f af       	std	Y+63, r24	; 0x3f
    4772:	2e 97       	sbiw	r28, 0x0e	; 14
    4774:	21 e0       	ldi	r18, 0x01	; 1
    4776:	2f 96       	adiw	r28, 0x0f	; 15
    4778:	2f af       	std	Y+63, r18	; 0x3f
    477a:	2f 97       	sbiw	r28, 0x0f	; 15
    477c:	2e 96       	adiw	r28, 0x0e	; 14
    477e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4780:	2e 97       	sbiw	r28, 0x0e	; 14
    4782:	8a ad       	ldd	r24, Y+58	; 0x3a
    4784:	38 17       	cp	r19, r24
    4786:	18 f0       	brcs	.+6      	; 0x478e <SubCalculate+0x30a>
    4788:	2f 96       	adiw	r28, 0x0f	; 15
    478a:	1f ae       	std	Y+63, r1	; 0x3f
    478c:	2f 97       	sbiw	r28, 0x0f	; 15
    478e:	2d 96       	adiw	r28, 0x0d	; 13
    4790:	9f ad       	ldd	r25, Y+63	; 0x3f
    4792:	2d 97       	sbiw	r28, 0x0d	; 13
    4794:	2f 96       	adiw	r28, 0x0f	; 15
    4796:	2f ad       	ldd	r18, Y+63	; 0x3f
    4798:	2f 97       	sbiw	r28, 0x0f	; 15
    479a:	92 2b       	or	r25, r18
    479c:	2d 96       	adiw	r28, 0x0d	; 13
    479e:	9f af       	std	Y+63, r25	; 0x3f
    47a0:	2d 97       	sbiw	r28, 0x0d	; 13
    47a2:	2e 96       	adiw	r28, 0x0e	; 14
    47a4:	3f ad       	ldd	r19, Y+63	; 0x3f
    47a6:	2e 97       	sbiw	r28, 0x0e	; 14
    47a8:	3a af       	std	Y+58, r19	; 0x3a
    47aa:	8b a5       	ldd	r24, Y+43	; 0x2b
    47ac:	9b a9       	ldd	r25, Y+51	; 0x33
    47ae:	89 0f       	add	r24, r25
    47b0:	8b af       	std	Y+59, r24	; 0x3b
    47b2:	2d 96       	adiw	r28, 0x0d	; 13
    47b4:	8f ad       	ldd	r24, Y+63	; 0x3f
    47b6:	2d 97       	sbiw	r28, 0x0d	; 13
    47b8:	2b ad       	ldd	r18, Y+59	; 0x3b
    47ba:	82 0f       	add	r24, r18
    47bc:	8b af       	std	Y+59, r24	; 0x3b
    47be:	3c a9       	ldd	r19, Y+52	; 0x34
    47c0:	39 83       	std	Y+1, r19	; 0x01
    47c2:	8d a9       	ldd	r24, Y+53	; 0x35
    47c4:	8a 83       	std	Y+2, r24	; 0x02
    47c6:	9e a9       	ldd	r25, Y+54	; 0x36
    47c8:	9b 83       	std	Y+3, r25	; 0x03
    47ca:	2f a9       	ldd	r18, Y+55	; 0x37
    47cc:	2c 83       	std	Y+4, r18	; 0x04
    47ce:	38 ad       	ldd	r19, Y+56	; 0x38
    47d0:	3d 83       	std	Y+5, r19	; 0x05
    47d2:	89 ad       	ldd	r24, Y+57	; 0x39
    47d4:	8e 83       	std	Y+6, r24	; 0x06
    47d6:	9a ad       	ldd	r25, Y+58	; 0x3a
    47d8:	9f 83       	std	Y+7, r25	; 0x07
    47da:	2b ad       	ldd	r18, Y+59	; 0x3b
    47dc:	28 87       	std	Y+8, r18	; 0x08
    47de:	5f c2       	rjmp	.+1214   	; 0x4c9e <SubCalculate+0x81a>
			break;
			case '-' :
			return_value = operand1-operand2;
    47e0:	39 85       	ldd	r19, Y+9	; 0x09
    47e2:	60 96       	adiw	r28, 0x10	; 16
    47e4:	3f af       	std	Y+63, r19	; 0x3f
    47e6:	60 97       	sbiw	r28, 0x10	; 16
    47e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    47ea:	61 96       	adiw	r28, 0x11	; 17
    47ec:	8f af       	std	Y+63, r24	; 0x3f
    47ee:	61 97       	sbiw	r28, 0x11	; 17
    47f0:	9b 85       	ldd	r25, Y+11	; 0x0b
    47f2:	62 96       	adiw	r28, 0x12	; 18
    47f4:	9f af       	std	Y+63, r25	; 0x3f
    47f6:	62 97       	sbiw	r28, 0x12	; 18
    47f8:	2c 85       	ldd	r18, Y+12	; 0x0c
    47fa:	63 96       	adiw	r28, 0x13	; 19
    47fc:	2f af       	std	Y+63, r18	; 0x3f
    47fe:	63 97       	sbiw	r28, 0x13	; 19
    4800:	3d 85       	ldd	r19, Y+13	; 0x0d
    4802:	64 96       	adiw	r28, 0x14	; 20
    4804:	3f af       	std	Y+63, r19	; 0x3f
    4806:	64 97       	sbiw	r28, 0x14	; 20
    4808:	8e 85       	ldd	r24, Y+14	; 0x0e
    480a:	65 96       	adiw	r28, 0x15	; 21
    480c:	8f af       	std	Y+63, r24	; 0x3f
    480e:	65 97       	sbiw	r28, 0x15	; 21
    4810:	9f 85       	ldd	r25, Y+15	; 0x0f
    4812:	66 96       	adiw	r28, 0x16	; 22
    4814:	9f af       	std	Y+63, r25	; 0x3f
    4816:	66 97       	sbiw	r28, 0x16	; 22
    4818:	28 89       	ldd	r18, Y+16	; 0x10
    481a:	67 96       	adiw	r28, 0x17	; 23
    481c:	2f af       	std	Y+63, r18	; 0x3f
    481e:	67 97       	sbiw	r28, 0x17	; 23
    4820:	39 89       	ldd	r19, Y+17	; 0x11
    4822:	68 96       	adiw	r28, 0x18	; 24
    4824:	3f af       	std	Y+63, r19	; 0x3f
    4826:	68 97       	sbiw	r28, 0x18	; 24
    4828:	8a 89       	ldd	r24, Y+18	; 0x12
    482a:	69 96       	adiw	r28, 0x19	; 25
    482c:	8f af       	std	Y+63, r24	; 0x3f
    482e:	69 97       	sbiw	r28, 0x19	; 25
    4830:	9b 89       	ldd	r25, Y+19	; 0x13
    4832:	6a 96       	adiw	r28, 0x1a	; 26
    4834:	9f af       	std	Y+63, r25	; 0x3f
    4836:	6a 97       	sbiw	r28, 0x1a	; 26
    4838:	2c 89       	ldd	r18, Y+20	; 0x14
    483a:	6b 96       	adiw	r28, 0x1b	; 27
    483c:	2f af       	std	Y+63, r18	; 0x3f
    483e:	6b 97       	sbiw	r28, 0x1b	; 27
    4840:	3d 89       	ldd	r19, Y+21	; 0x15
    4842:	6c 96       	adiw	r28, 0x1c	; 28
    4844:	3f af       	std	Y+63, r19	; 0x3f
    4846:	6c 97       	sbiw	r28, 0x1c	; 28
    4848:	8e 89       	ldd	r24, Y+22	; 0x16
    484a:	6d 96       	adiw	r28, 0x1d	; 29
    484c:	8f af       	std	Y+63, r24	; 0x3f
    484e:	6d 97       	sbiw	r28, 0x1d	; 29
    4850:	9f 89       	ldd	r25, Y+23	; 0x17
    4852:	6e 96       	adiw	r28, 0x1e	; 30
    4854:	9f af       	std	Y+63, r25	; 0x3f
    4856:	6e 97       	sbiw	r28, 0x1e	; 30
    4858:	28 8d       	ldd	r18, Y+24	; 0x18
    485a:	6f 96       	adiw	r28, 0x1f	; 31
    485c:	2f af       	std	Y+63, r18	; 0x3f
    485e:	6f 97       	sbiw	r28, 0x1f	; 31
    4860:	60 96       	adiw	r28, 0x10	; 16
    4862:	3f ad       	ldd	r19, Y+63	; 0x3f
    4864:	60 97       	sbiw	r28, 0x10	; 16
    4866:	68 96       	adiw	r28, 0x18	; 24
    4868:	8f ad       	ldd	r24, Y+63	; 0x3f
    486a:	68 97       	sbiw	r28, 0x18	; 24
    486c:	38 1b       	sub	r19, r24
    486e:	a0 96       	adiw	r28, 0x20	; 32
    4870:	3f af       	std	Y+63, r19	; 0x3f
    4872:	a0 97       	sbiw	r28, 0x20	; 32
    4874:	91 e0       	ldi	r25, 0x01	; 1
    4876:	a8 96       	adiw	r28, 0x28	; 40
    4878:	9f af       	std	Y+63, r25	; 0x3f
    487a:	a8 97       	sbiw	r28, 0x28	; 40
    487c:	a0 96       	adiw	r28, 0x20	; 32
    487e:	2f ad       	ldd	r18, Y+63	; 0x3f
    4880:	a0 97       	sbiw	r28, 0x20	; 32
    4882:	60 96       	adiw	r28, 0x10	; 16
    4884:	3f ad       	ldd	r19, Y+63	; 0x3f
    4886:	60 97       	sbiw	r28, 0x10	; 16
    4888:	32 17       	cp	r19, r18
    488a:	18 f0       	brcs	.+6      	; 0x4892 <SubCalculate+0x40e>
    488c:	a8 96       	adiw	r28, 0x28	; 40
    488e:	1f ae       	std	Y+63, r1	; 0x3f
    4890:	a8 97       	sbiw	r28, 0x28	; 40
    4892:	61 96       	adiw	r28, 0x11	; 17
    4894:	8f ad       	ldd	r24, Y+63	; 0x3f
    4896:	61 97       	sbiw	r28, 0x11	; 17
    4898:	69 96       	adiw	r28, 0x19	; 25
    489a:	9f ad       	ldd	r25, Y+63	; 0x3f
    489c:	69 97       	sbiw	r28, 0x19	; 25
    489e:	89 1b       	sub	r24, r25
    48a0:	a1 96       	adiw	r28, 0x21	; 33
    48a2:	8f af       	std	Y+63, r24	; 0x3f
    48a4:	a1 97       	sbiw	r28, 0x21	; 33
    48a6:	21 e0       	ldi	r18, 0x01	; 1
    48a8:	a9 96       	adiw	r28, 0x29	; 41
    48aa:	2f af       	std	Y+63, r18	; 0x3f
    48ac:	a9 97       	sbiw	r28, 0x29	; 41
    48ae:	a1 96       	adiw	r28, 0x21	; 33
    48b0:	3f ad       	ldd	r19, Y+63	; 0x3f
    48b2:	a1 97       	sbiw	r28, 0x21	; 33
    48b4:	61 96       	adiw	r28, 0x11	; 17
    48b6:	8f ad       	ldd	r24, Y+63	; 0x3f
    48b8:	61 97       	sbiw	r28, 0x11	; 17
    48ba:	83 17       	cp	r24, r19
    48bc:	18 f0       	brcs	.+6      	; 0x48c4 <SubCalculate+0x440>
    48be:	a9 96       	adiw	r28, 0x29	; 41
    48c0:	1f ae       	std	Y+63, r1	; 0x3f
    48c2:	a9 97       	sbiw	r28, 0x29	; 41
    48c4:	a1 96       	adiw	r28, 0x21	; 33
    48c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    48c8:	a1 97       	sbiw	r28, 0x21	; 33
    48ca:	a8 96       	adiw	r28, 0x28	; 40
    48cc:	2f ad       	ldd	r18, Y+63	; 0x3f
    48ce:	a8 97       	sbiw	r28, 0x28	; 40
    48d0:	92 1b       	sub	r25, r18
    48d2:	aa 96       	adiw	r28, 0x2a	; 42
    48d4:	9f af       	std	Y+63, r25	; 0x3f
    48d6:	aa 97       	sbiw	r28, 0x2a	; 42
    48d8:	31 e0       	ldi	r19, 0x01	; 1
    48da:	ab 96       	adiw	r28, 0x2b	; 43
    48dc:	3f af       	std	Y+63, r19	; 0x3f
    48de:	ab 97       	sbiw	r28, 0x2b	; 43
    48e0:	aa 96       	adiw	r28, 0x2a	; 42
    48e2:	8f ad       	ldd	r24, Y+63	; 0x3f
    48e4:	aa 97       	sbiw	r28, 0x2a	; 42
    48e6:	a1 96       	adiw	r28, 0x21	; 33
    48e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    48ea:	a1 97       	sbiw	r28, 0x21	; 33
    48ec:	98 17       	cp	r25, r24
    48ee:	18 f0       	brcs	.+6      	; 0x48f6 <SubCalculate+0x472>
    48f0:	ab 96       	adiw	r28, 0x2b	; 43
    48f2:	1f ae       	std	Y+63, r1	; 0x3f
    48f4:	ab 97       	sbiw	r28, 0x2b	; 43
    48f6:	a9 96       	adiw	r28, 0x29	; 41
    48f8:	2f ad       	ldd	r18, Y+63	; 0x3f
    48fa:	a9 97       	sbiw	r28, 0x29	; 41
    48fc:	ab 96       	adiw	r28, 0x2b	; 43
    48fe:	3f ad       	ldd	r19, Y+63	; 0x3f
    4900:	ab 97       	sbiw	r28, 0x2b	; 43
    4902:	23 2b       	or	r18, r19
    4904:	a9 96       	adiw	r28, 0x29	; 41
    4906:	2f af       	std	Y+63, r18	; 0x3f
    4908:	a9 97       	sbiw	r28, 0x29	; 41
    490a:	aa 96       	adiw	r28, 0x2a	; 42
    490c:	8f ad       	ldd	r24, Y+63	; 0x3f
    490e:	aa 97       	sbiw	r28, 0x2a	; 42
    4910:	a1 96       	adiw	r28, 0x21	; 33
    4912:	8f af       	std	Y+63, r24	; 0x3f
    4914:	a1 97       	sbiw	r28, 0x21	; 33
    4916:	62 96       	adiw	r28, 0x12	; 18
    4918:	9f ad       	ldd	r25, Y+63	; 0x3f
    491a:	62 97       	sbiw	r28, 0x12	; 18
    491c:	6a 96       	adiw	r28, 0x1a	; 26
    491e:	2f ad       	ldd	r18, Y+63	; 0x3f
    4920:	6a 97       	sbiw	r28, 0x1a	; 26
    4922:	92 1b       	sub	r25, r18
    4924:	a2 96       	adiw	r28, 0x22	; 34
    4926:	9f af       	std	Y+63, r25	; 0x3f
    4928:	a2 97       	sbiw	r28, 0x22	; 34
    492a:	31 e0       	ldi	r19, 0x01	; 1
    492c:	ac 96       	adiw	r28, 0x2c	; 44
    492e:	3f af       	std	Y+63, r19	; 0x3f
    4930:	ac 97       	sbiw	r28, 0x2c	; 44
    4932:	a2 96       	adiw	r28, 0x22	; 34
    4934:	8f ad       	ldd	r24, Y+63	; 0x3f
    4936:	a2 97       	sbiw	r28, 0x22	; 34
    4938:	62 96       	adiw	r28, 0x12	; 18
    493a:	9f ad       	ldd	r25, Y+63	; 0x3f
    493c:	62 97       	sbiw	r28, 0x12	; 18
    493e:	98 17       	cp	r25, r24
    4940:	18 f0       	brcs	.+6      	; 0x4948 <SubCalculate+0x4c4>
    4942:	ac 96       	adiw	r28, 0x2c	; 44
    4944:	1f ae       	std	Y+63, r1	; 0x3f
    4946:	ac 97       	sbiw	r28, 0x2c	; 44
    4948:	a2 96       	adiw	r28, 0x22	; 34
    494a:	2f ad       	ldd	r18, Y+63	; 0x3f
    494c:	a2 97       	sbiw	r28, 0x22	; 34
    494e:	a9 96       	adiw	r28, 0x29	; 41
    4950:	3f ad       	ldd	r19, Y+63	; 0x3f
    4952:	a9 97       	sbiw	r28, 0x29	; 41
    4954:	23 1b       	sub	r18, r19
    4956:	ad 96       	adiw	r28, 0x2d	; 45
    4958:	2f af       	std	Y+63, r18	; 0x3f
    495a:	ad 97       	sbiw	r28, 0x2d	; 45
    495c:	81 e0       	ldi	r24, 0x01	; 1
    495e:	ae 96       	adiw	r28, 0x2e	; 46
    4960:	8f af       	std	Y+63, r24	; 0x3f
    4962:	ae 97       	sbiw	r28, 0x2e	; 46
    4964:	ad 96       	adiw	r28, 0x2d	; 45
    4966:	9f ad       	ldd	r25, Y+63	; 0x3f
    4968:	ad 97       	sbiw	r28, 0x2d	; 45
    496a:	a2 96       	adiw	r28, 0x22	; 34
    496c:	2f ad       	ldd	r18, Y+63	; 0x3f
    496e:	a2 97       	sbiw	r28, 0x22	; 34
    4970:	29 17       	cp	r18, r25
    4972:	18 f0       	brcs	.+6      	; 0x497a <SubCalculate+0x4f6>
    4974:	ae 96       	adiw	r28, 0x2e	; 46
    4976:	1f ae       	std	Y+63, r1	; 0x3f
    4978:	ae 97       	sbiw	r28, 0x2e	; 46
    497a:	ac 96       	adiw	r28, 0x2c	; 44
    497c:	3f ad       	ldd	r19, Y+63	; 0x3f
    497e:	ac 97       	sbiw	r28, 0x2c	; 44
    4980:	ae 96       	adiw	r28, 0x2e	; 46
    4982:	8f ad       	ldd	r24, Y+63	; 0x3f
    4984:	ae 97       	sbiw	r28, 0x2e	; 46
    4986:	38 2b       	or	r19, r24
    4988:	ac 96       	adiw	r28, 0x2c	; 44
    498a:	3f af       	std	Y+63, r19	; 0x3f
    498c:	ac 97       	sbiw	r28, 0x2c	; 44
    498e:	ad 96       	adiw	r28, 0x2d	; 45
    4990:	9f ad       	ldd	r25, Y+63	; 0x3f
    4992:	ad 97       	sbiw	r28, 0x2d	; 45
    4994:	a2 96       	adiw	r28, 0x22	; 34
    4996:	9f af       	std	Y+63, r25	; 0x3f
    4998:	a2 97       	sbiw	r28, 0x22	; 34
    499a:	63 96       	adiw	r28, 0x13	; 19
    499c:	2f ad       	ldd	r18, Y+63	; 0x3f
    499e:	63 97       	sbiw	r28, 0x13	; 19
    49a0:	6b 96       	adiw	r28, 0x1b	; 27
    49a2:	3f ad       	ldd	r19, Y+63	; 0x3f
    49a4:	6b 97       	sbiw	r28, 0x1b	; 27
    49a6:	23 1b       	sub	r18, r19
    49a8:	a3 96       	adiw	r28, 0x23	; 35
    49aa:	2f af       	std	Y+63, r18	; 0x3f
    49ac:	a3 97       	sbiw	r28, 0x23	; 35
    49ae:	81 e0       	ldi	r24, 0x01	; 1
    49b0:	af 96       	adiw	r28, 0x2f	; 47
    49b2:	8f af       	std	Y+63, r24	; 0x3f
    49b4:	af 97       	sbiw	r28, 0x2f	; 47
    49b6:	a3 96       	adiw	r28, 0x23	; 35
    49b8:	9f ad       	ldd	r25, Y+63	; 0x3f
    49ba:	a3 97       	sbiw	r28, 0x23	; 35
    49bc:	63 96       	adiw	r28, 0x13	; 19
    49be:	2f ad       	ldd	r18, Y+63	; 0x3f
    49c0:	63 97       	sbiw	r28, 0x13	; 19
    49c2:	29 17       	cp	r18, r25
    49c4:	18 f0       	brcs	.+6      	; 0x49cc <SubCalculate+0x548>
    49c6:	af 96       	adiw	r28, 0x2f	; 47
    49c8:	1f ae       	std	Y+63, r1	; 0x3f
    49ca:	af 97       	sbiw	r28, 0x2f	; 47
    49cc:	a3 96       	adiw	r28, 0x23	; 35
    49ce:	3f ad       	ldd	r19, Y+63	; 0x3f
    49d0:	a3 97       	sbiw	r28, 0x23	; 35
    49d2:	ac 96       	adiw	r28, 0x2c	; 44
    49d4:	8f ad       	ldd	r24, Y+63	; 0x3f
    49d6:	ac 97       	sbiw	r28, 0x2c	; 44
    49d8:	38 1b       	sub	r19, r24
    49da:	e0 96       	adiw	r28, 0x30	; 48
    49dc:	3f af       	std	Y+63, r19	; 0x3f
    49de:	e0 97       	sbiw	r28, 0x30	; 48
    49e0:	91 e0       	ldi	r25, 0x01	; 1
    49e2:	e1 96       	adiw	r28, 0x31	; 49
    49e4:	9f af       	std	Y+63, r25	; 0x3f
    49e6:	e1 97       	sbiw	r28, 0x31	; 49
    49e8:	e0 96       	adiw	r28, 0x30	; 48
    49ea:	2f ad       	ldd	r18, Y+63	; 0x3f
    49ec:	e0 97       	sbiw	r28, 0x30	; 48
    49ee:	a3 96       	adiw	r28, 0x23	; 35
    49f0:	3f ad       	ldd	r19, Y+63	; 0x3f
    49f2:	a3 97       	sbiw	r28, 0x23	; 35
    49f4:	32 17       	cp	r19, r18
    49f6:	18 f0       	brcs	.+6      	; 0x49fe <SubCalculate+0x57a>
    49f8:	e1 96       	adiw	r28, 0x31	; 49
    49fa:	1f ae       	std	Y+63, r1	; 0x3f
    49fc:	e1 97       	sbiw	r28, 0x31	; 49
    49fe:	af 96       	adiw	r28, 0x2f	; 47
    4a00:	8f ad       	ldd	r24, Y+63	; 0x3f
    4a02:	af 97       	sbiw	r28, 0x2f	; 47
    4a04:	e1 96       	adiw	r28, 0x31	; 49
    4a06:	9f ad       	ldd	r25, Y+63	; 0x3f
    4a08:	e1 97       	sbiw	r28, 0x31	; 49
    4a0a:	89 2b       	or	r24, r25
    4a0c:	af 96       	adiw	r28, 0x2f	; 47
    4a0e:	8f af       	std	Y+63, r24	; 0x3f
    4a10:	af 97       	sbiw	r28, 0x2f	; 47
    4a12:	e0 96       	adiw	r28, 0x30	; 48
    4a14:	2f ad       	ldd	r18, Y+63	; 0x3f
    4a16:	e0 97       	sbiw	r28, 0x30	; 48
    4a18:	a3 96       	adiw	r28, 0x23	; 35
    4a1a:	2f af       	std	Y+63, r18	; 0x3f
    4a1c:	a3 97       	sbiw	r28, 0x23	; 35
    4a1e:	64 96       	adiw	r28, 0x14	; 20
    4a20:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a22:	64 97       	sbiw	r28, 0x14	; 20
    4a24:	6c 96       	adiw	r28, 0x1c	; 28
    4a26:	8f ad       	ldd	r24, Y+63	; 0x3f
    4a28:	6c 97       	sbiw	r28, 0x1c	; 28
    4a2a:	38 1b       	sub	r19, r24
    4a2c:	a4 96       	adiw	r28, 0x24	; 36
    4a2e:	3f af       	std	Y+63, r19	; 0x3f
    4a30:	a4 97       	sbiw	r28, 0x24	; 36
    4a32:	91 e0       	ldi	r25, 0x01	; 1
    4a34:	e2 96       	adiw	r28, 0x32	; 50
    4a36:	9f af       	std	Y+63, r25	; 0x3f
    4a38:	e2 97       	sbiw	r28, 0x32	; 50
    4a3a:	a4 96       	adiw	r28, 0x24	; 36
    4a3c:	2f ad       	ldd	r18, Y+63	; 0x3f
    4a3e:	a4 97       	sbiw	r28, 0x24	; 36
    4a40:	64 96       	adiw	r28, 0x14	; 20
    4a42:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a44:	64 97       	sbiw	r28, 0x14	; 20
    4a46:	32 17       	cp	r19, r18
    4a48:	18 f0       	brcs	.+6      	; 0x4a50 <SubCalculate+0x5cc>
    4a4a:	e2 96       	adiw	r28, 0x32	; 50
    4a4c:	1f ae       	std	Y+63, r1	; 0x3f
    4a4e:	e2 97       	sbiw	r28, 0x32	; 50
    4a50:	a4 96       	adiw	r28, 0x24	; 36
    4a52:	8f ad       	ldd	r24, Y+63	; 0x3f
    4a54:	a4 97       	sbiw	r28, 0x24	; 36
    4a56:	af 96       	adiw	r28, 0x2f	; 47
    4a58:	9f ad       	ldd	r25, Y+63	; 0x3f
    4a5a:	af 97       	sbiw	r28, 0x2f	; 47
    4a5c:	89 1b       	sub	r24, r25
    4a5e:	e3 96       	adiw	r28, 0x33	; 51
    4a60:	8f af       	std	Y+63, r24	; 0x3f
    4a62:	e3 97       	sbiw	r28, 0x33	; 51
    4a64:	21 e0       	ldi	r18, 0x01	; 1
    4a66:	e4 96       	adiw	r28, 0x34	; 52
    4a68:	2f af       	std	Y+63, r18	; 0x3f
    4a6a:	e4 97       	sbiw	r28, 0x34	; 52
    4a6c:	e3 96       	adiw	r28, 0x33	; 51
    4a6e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a70:	e3 97       	sbiw	r28, 0x33	; 51
    4a72:	a4 96       	adiw	r28, 0x24	; 36
    4a74:	8f ad       	ldd	r24, Y+63	; 0x3f
    4a76:	a4 97       	sbiw	r28, 0x24	; 36
    4a78:	83 17       	cp	r24, r19
    4a7a:	18 f0       	brcs	.+6      	; 0x4a82 <SubCalculate+0x5fe>
    4a7c:	e4 96       	adiw	r28, 0x34	; 52
    4a7e:	1f ae       	std	Y+63, r1	; 0x3f
    4a80:	e4 97       	sbiw	r28, 0x34	; 52
    4a82:	e2 96       	adiw	r28, 0x32	; 50
    4a84:	9f ad       	ldd	r25, Y+63	; 0x3f
    4a86:	e2 97       	sbiw	r28, 0x32	; 50
    4a88:	e4 96       	adiw	r28, 0x34	; 52
    4a8a:	2f ad       	ldd	r18, Y+63	; 0x3f
    4a8c:	e4 97       	sbiw	r28, 0x34	; 52
    4a8e:	92 2b       	or	r25, r18
    4a90:	e2 96       	adiw	r28, 0x32	; 50
    4a92:	9f af       	std	Y+63, r25	; 0x3f
    4a94:	e2 97       	sbiw	r28, 0x32	; 50
    4a96:	e3 96       	adiw	r28, 0x33	; 51
    4a98:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a9a:	e3 97       	sbiw	r28, 0x33	; 51
    4a9c:	a4 96       	adiw	r28, 0x24	; 36
    4a9e:	3f af       	std	Y+63, r19	; 0x3f
    4aa0:	a4 97       	sbiw	r28, 0x24	; 36
    4aa2:	65 96       	adiw	r28, 0x15	; 21
    4aa4:	8f ad       	ldd	r24, Y+63	; 0x3f
    4aa6:	65 97       	sbiw	r28, 0x15	; 21
    4aa8:	6d 96       	adiw	r28, 0x1d	; 29
    4aaa:	9f ad       	ldd	r25, Y+63	; 0x3f
    4aac:	6d 97       	sbiw	r28, 0x1d	; 29
    4aae:	89 1b       	sub	r24, r25
    4ab0:	a5 96       	adiw	r28, 0x25	; 37
    4ab2:	8f af       	std	Y+63, r24	; 0x3f
    4ab4:	a5 97       	sbiw	r28, 0x25	; 37
    4ab6:	21 e0       	ldi	r18, 0x01	; 1
    4ab8:	e5 96       	adiw	r28, 0x35	; 53
    4aba:	2f af       	std	Y+63, r18	; 0x3f
    4abc:	e5 97       	sbiw	r28, 0x35	; 53
    4abe:	a5 96       	adiw	r28, 0x25	; 37
    4ac0:	3f ad       	ldd	r19, Y+63	; 0x3f
    4ac2:	a5 97       	sbiw	r28, 0x25	; 37
    4ac4:	65 96       	adiw	r28, 0x15	; 21
    4ac6:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ac8:	65 97       	sbiw	r28, 0x15	; 21
    4aca:	83 17       	cp	r24, r19
    4acc:	18 f0       	brcs	.+6      	; 0x4ad4 <SubCalculate+0x650>
    4ace:	e5 96       	adiw	r28, 0x35	; 53
    4ad0:	1f ae       	std	Y+63, r1	; 0x3f
    4ad2:	e5 97       	sbiw	r28, 0x35	; 53
    4ad4:	a5 96       	adiw	r28, 0x25	; 37
    4ad6:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ad8:	a5 97       	sbiw	r28, 0x25	; 37
    4ada:	e2 96       	adiw	r28, 0x32	; 50
    4adc:	2f ad       	ldd	r18, Y+63	; 0x3f
    4ade:	e2 97       	sbiw	r28, 0x32	; 50
    4ae0:	92 1b       	sub	r25, r18
    4ae2:	e6 96       	adiw	r28, 0x36	; 54
    4ae4:	9f af       	std	Y+63, r25	; 0x3f
    4ae6:	e6 97       	sbiw	r28, 0x36	; 54
    4ae8:	31 e0       	ldi	r19, 0x01	; 1
    4aea:	e7 96       	adiw	r28, 0x37	; 55
    4aec:	3f af       	std	Y+63, r19	; 0x3f
    4aee:	e7 97       	sbiw	r28, 0x37	; 55
    4af0:	e6 96       	adiw	r28, 0x36	; 54
    4af2:	8f ad       	ldd	r24, Y+63	; 0x3f
    4af4:	e6 97       	sbiw	r28, 0x36	; 54
    4af6:	a5 96       	adiw	r28, 0x25	; 37
    4af8:	9f ad       	ldd	r25, Y+63	; 0x3f
    4afa:	a5 97       	sbiw	r28, 0x25	; 37
    4afc:	98 17       	cp	r25, r24
    4afe:	18 f0       	brcs	.+6      	; 0x4b06 <SubCalculate+0x682>
    4b00:	e7 96       	adiw	r28, 0x37	; 55
    4b02:	1f ae       	std	Y+63, r1	; 0x3f
    4b04:	e7 97       	sbiw	r28, 0x37	; 55
    4b06:	e5 96       	adiw	r28, 0x35	; 53
    4b08:	2f ad       	ldd	r18, Y+63	; 0x3f
    4b0a:	e5 97       	sbiw	r28, 0x35	; 53
    4b0c:	e7 96       	adiw	r28, 0x37	; 55
    4b0e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b10:	e7 97       	sbiw	r28, 0x37	; 55
    4b12:	23 2b       	or	r18, r19
    4b14:	e5 96       	adiw	r28, 0x35	; 53
    4b16:	2f af       	std	Y+63, r18	; 0x3f
    4b18:	e5 97       	sbiw	r28, 0x35	; 53
    4b1a:	e6 96       	adiw	r28, 0x36	; 54
    4b1c:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b1e:	e6 97       	sbiw	r28, 0x36	; 54
    4b20:	a5 96       	adiw	r28, 0x25	; 37
    4b22:	8f af       	std	Y+63, r24	; 0x3f
    4b24:	a5 97       	sbiw	r28, 0x25	; 37
    4b26:	66 96       	adiw	r28, 0x16	; 22
    4b28:	9f ad       	ldd	r25, Y+63	; 0x3f
    4b2a:	66 97       	sbiw	r28, 0x16	; 22
    4b2c:	6e 96       	adiw	r28, 0x1e	; 30
    4b2e:	2f ad       	ldd	r18, Y+63	; 0x3f
    4b30:	6e 97       	sbiw	r28, 0x1e	; 30
    4b32:	92 1b       	sub	r25, r18
    4b34:	a6 96       	adiw	r28, 0x26	; 38
    4b36:	9f af       	std	Y+63, r25	; 0x3f
    4b38:	a6 97       	sbiw	r28, 0x26	; 38
    4b3a:	31 e0       	ldi	r19, 0x01	; 1
    4b3c:	e8 96       	adiw	r28, 0x38	; 56
    4b3e:	3f af       	std	Y+63, r19	; 0x3f
    4b40:	e8 97       	sbiw	r28, 0x38	; 56
    4b42:	a6 96       	adiw	r28, 0x26	; 38
    4b44:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b46:	a6 97       	sbiw	r28, 0x26	; 38
    4b48:	66 96       	adiw	r28, 0x16	; 22
    4b4a:	9f ad       	ldd	r25, Y+63	; 0x3f
    4b4c:	66 97       	sbiw	r28, 0x16	; 22
    4b4e:	98 17       	cp	r25, r24
    4b50:	18 f0       	brcs	.+6      	; 0x4b58 <SubCalculate+0x6d4>
    4b52:	e8 96       	adiw	r28, 0x38	; 56
    4b54:	1f ae       	std	Y+63, r1	; 0x3f
    4b56:	e8 97       	sbiw	r28, 0x38	; 56
    4b58:	a6 96       	adiw	r28, 0x26	; 38
    4b5a:	2f ad       	ldd	r18, Y+63	; 0x3f
    4b5c:	a6 97       	sbiw	r28, 0x26	; 38
    4b5e:	e5 96       	adiw	r28, 0x35	; 53
    4b60:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b62:	e5 97       	sbiw	r28, 0x35	; 53
    4b64:	23 1b       	sub	r18, r19
    4b66:	e9 96       	adiw	r28, 0x39	; 57
    4b68:	2f af       	std	Y+63, r18	; 0x3f
    4b6a:	e9 97       	sbiw	r28, 0x39	; 57
    4b6c:	81 e0       	ldi	r24, 0x01	; 1
    4b6e:	ea 96       	adiw	r28, 0x3a	; 58
    4b70:	8f af       	std	Y+63, r24	; 0x3f
    4b72:	ea 97       	sbiw	r28, 0x3a	; 58
    4b74:	e9 96       	adiw	r28, 0x39	; 57
    4b76:	9f ad       	ldd	r25, Y+63	; 0x3f
    4b78:	e9 97       	sbiw	r28, 0x39	; 57
    4b7a:	a6 96       	adiw	r28, 0x26	; 38
    4b7c:	2f ad       	ldd	r18, Y+63	; 0x3f
    4b7e:	a6 97       	sbiw	r28, 0x26	; 38
    4b80:	29 17       	cp	r18, r25
    4b82:	18 f0       	brcs	.+6      	; 0x4b8a <SubCalculate+0x706>
    4b84:	ea 96       	adiw	r28, 0x3a	; 58
    4b86:	1f ae       	std	Y+63, r1	; 0x3f
    4b88:	ea 97       	sbiw	r28, 0x3a	; 58
    4b8a:	e8 96       	adiw	r28, 0x38	; 56
    4b8c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b8e:	e8 97       	sbiw	r28, 0x38	; 56
    4b90:	ea 96       	adiw	r28, 0x3a	; 58
    4b92:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b94:	ea 97       	sbiw	r28, 0x3a	; 58
    4b96:	38 2b       	or	r19, r24
    4b98:	e8 96       	adiw	r28, 0x38	; 56
    4b9a:	3f af       	std	Y+63, r19	; 0x3f
    4b9c:	e8 97       	sbiw	r28, 0x38	; 56
    4b9e:	e9 96       	adiw	r28, 0x39	; 57
    4ba0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ba2:	e9 97       	sbiw	r28, 0x39	; 57
    4ba4:	a6 96       	adiw	r28, 0x26	; 38
    4ba6:	9f af       	std	Y+63, r25	; 0x3f
    4ba8:	a6 97       	sbiw	r28, 0x26	; 38
    4baa:	67 96       	adiw	r28, 0x17	; 23
    4bac:	2f ad       	ldd	r18, Y+63	; 0x3f
    4bae:	67 97       	sbiw	r28, 0x17	; 23
    4bb0:	6f 96       	adiw	r28, 0x1f	; 31
    4bb2:	3f ad       	ldd	r19, Y+63	; 0x3f
    4bb4:	6f 97       	sbiw	r28, 0x1f	; 31
    4bb6:	23 1b       	sub	r18, r19
    4bb8:	a7 96       	adiw	r28, 0x27	; 39
    4bba:	2f af       	std	Y+63, r18	; 0x3f
    4bbc:	a7 97       	sbiw	r28, 0x27	; 39
    4bbe:	a7 96       	adiw	r28, 0x27	; 39
    4bc0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4bc2:	a7 97       	sbiw	r28, 0x27	; 39
    4bc4:	e8 96       	adiw	r28, 0x38	; 56
    4bc6:	9f ad       	ldd	r25, Y+63	; 0x3f
    4bc8:	e8 97       	sbiw	r28, 0x38	; 56
    4bca:	89 1b       	sub	r24, r25
    4bcc:	a7 96       	adiw	r28, 0x27	; 39
    4bce:	8f af       	std	Y+63, r24	; 0x3f
    4bd0:	a7 97       	sbiw	r28, 0x27	; 39
    4bd2:	a0 96       	adiw	r28, 0x20	; 32
    4bd4:	2f ad       	ldd	r18, Y+63	; 0x3f
    4bd6:	a0 97       	sbiw	r28, 0x20	; 32
    4bd8:	29 83       	std	Y+1, r18	; 0x01
    4bda:	a1 96       	adiw	r28, 0x21	; 33
    4bdc:	3f ad       	ldd	r19, Y+63	; 0x3f
    4bde:	a1 97       	sbiw	r28, 0x21	; 33
    4be0:	3a 83       	std	Y+2, r19	; 0x02
    4be2:	a2 96       	adiw	r28, 0x22	; 34
    4be4:	8f ad       	ldd	r24, Y+63	; 0x3f
    4be6:	a2 97       	sbiw	r28, 0x22	; 34
    4be8:	8b 83       	std	Y+3, r24	; 0x03
    4bea:	a3 96       	adiw	r28, 0x23	; 35
    4bec:	9f ad       	ldd	r25, Y+63	; 0x3f
    4bee:	a3 97       	sbiw	r28, 0x23	; 35
    4bf0:	9c 83       	std	Y+4, r25	; 0x04
    4bf2:	a4 96       	adiw	r28, 0x24	; 36
    4bf4:	2f ad       	ldd	r18, Y+63	; 0x3f
    4bf6:	a4 97       	sbiw	r28, 0x24	; 36
    4bf8:	2d 83       	std	Y+5, r18	; 0x05
    4bfa:	a5 96       	adiw	r28, 0x25	; 37
    4bfc:	3f ad       	ldd	r19, Y+63	; 0x3f
    4bfe:	a5 97       	sbiw	r28, 0x25	; 37
    4c00:	3e 83       	std	Y+6, r19	; 0x06
    4c02:	a6 96       	adiw	r28, 0x26	; 38
    4c04:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c06:	a6 97       	sbiw	r28, 0x26	; 38
    4c08:	8f 83       	std	Y+7, r24	; 0x07
    4c0a:	a7 96       	adiw	r28, 0x27	; 39
    4c0c:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c0e:	a7 97       	sbiw	r28, 0x27	; 39
    4c10:	98 87       	std	Y+8, r25	; 0x08
    4c12:	45 c0       	rjmp	.+138    	; 0x4c9e <SubCalculate+0x81a>
			break;
			case '*' :
			return_value = operand1*operand2;
    4c14:	29 85       	ldd	r18, Y+9	; 0x09
    4c16:	3a 85       	ldd	r19, Y+10	; 0x0a
    4c18:	4b 85       	ldd	r20, Y+11	; 0x0b
    4c1a:	5c 85       	ldd	r21, Y+12	; 0x0c
    4c1c:	6d 85       	ldd	r22, Y+13	; 0x0d
    4c1e:	7e 85       	ldd	r23, Y+14	; 0x0e
    4c20:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c22:	98 89       	ldd	r25, Y+16	; 0x10
    4c24:	a9 88       	ldd	r10, Y+17	; 0x11
    4c26:	ba 88       	ldd	r11, Y+18	; 0x12
    4c28:	cb 88       	ldd	r12, Y+19	; 0x13
    4c2a:	dc 88       	ldd	r13, Y+20	; 0x14
    4c2c:	ed 88       	ldd	r14, Y+21	; 0x15
    4c2e:	fe 88       	ldd	r15, Y+22	; 0x16
    4c30:	0f 89       	ldd	r16, Y+23	; 0x17
    4c32:	18 8d       	ldd	r17, Y+24	; 0x18
    4c34:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    4c38:	a2 2e       	mov	r10, r18
    4c3a:	b3 2e       	mov	r11, r19
    4c3c:	c4 2e       	mov	r12, r20
    4c3e:	d5 2e       	mov	r13, r21
    4c40:	e6 2e       	mov	r14, r22
    4c42:	f7 2e       	mov	r15, r23
    4c44:	08 2f       	mov	r16, r24
    4c46:	19 2f       	mov	r17, r25
    4c48:	a9 82       	std	Y+1, r10	; 0x01
    4c4a:	ba 82       	std	Y+2, r11	; 0x02
    4c4c:	cb 82       	std	Y+3, r12	; 0x03
    4c4e:	dc 82       	std	Y+4, r13	; 0x04
    4c50:	ed 82       	std	Y+5, r14	; 0x05
    4c52:	fe 82       	std	Y+6, r15	; 0x06
    4c54:	0f 83       	std	Y+7, r16	; 0x07
    4c56:	18 87       	std	Y+8, r17	; 0x08
    4c58:	22 c0       	rjmp	.+68     	; 0x4c9e <SubCalculate+0x81a>
			break;
			case '/' :
			return_value = operand1/operand2;
    4c5a:	29 85       	ldd	r18, Y+9	; 0x09
    4c5c:	3a 85       	ldd	r19, Y+10	; 0x0a
    4c5e:	4b 85       	ldd	r20, Y+11	; 0x0b
    4c60:	5c 85       	ldd	r21, Y+12	; 0x0c
    4c62:	6d 85       	ldd	r22, Y+13	; 0x0d
    4c64:	7e 85       	ldd	r23, Y+14	; 0x0e
    4c66:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c68:	98 89       	ldd	r25, Y+16	; 0x10
    4c6a:	a9 88       	ldd	r10, Y+17	; 0x11
    4c6c:	ba 88       	ldd	r11, Y+18	; 0x12
    4c6e:	cb 88       	ldd	r12, Y+19	; 0x13
    4c70:	dc 88       	ldd	r13, Y+20	; 0x14
    4c72:	ed 88       	ldd	r14, Y+21	; 0x15
    4c74:	fe 88       	ldd	r15, Y+22	; 0x16
    4c76:	0f 89       	ldd	r16, Y+23	; 0x17
    4c78:	18 8d       	ldd	r17, Y+24	; 0x18
    4c7a:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__divdi3>
    4c7e:	a2 2e       	mov	r10, r18
    4c80:	b3 2e       	mov	r11, r19
    4c82:	c4 2e       	mov	r12, r20
    4c84:	d5 2e       	mov	r13, r21
    4c86:	e6 2e       	mov	r14, r22
    4c88:	f7 2e       	mov	r15, r23
    4c8a:	08 2f       	mov	r16, r24
    4c8c:	19 2f       	mov	r17, r25
    4c8e:	a9 82       	std	Y+1, r10	; 0x01
    4c90:	ba 82       	std	Y+2, r11	; 0x02
    4c92:	cb 82       	std	Y+3, r12	; 0x03
    4c94:	dc 82       	std	Y+4, r13	; 0x04
    4c96:	ed 82       	std	Y+5, r14	; 0x05
    4c98:	fe 82       	std	Y+6, r15	; 0x06
    4c9a:	0f 83       	std	Y+7, r16	; 0x07
    4c9c:	18 87       	std	Y+8, r17	; 0x08
			break;
		}

		return return_value;
    4c9e:	29 81       	ldd	r18, Y+1	; 0x01
    4ca0:	2a 8f       	std	Y+26, r18	; 0x1a
    4ca2:	3a 81       	ldd	r19, Y+2	; 0x02
    4ca4:	3b 8f       	std	Y+27, r19	; 0x1b
    4ca6:	8b 81       	ldd	r24, Y+3	; 0x03
    4ca8:	8c 8f       	std	Y+28, r24	; 0x1c
    4caa:	9c 81       	ldd	r25, Y+4	; 0x04
    4cac:	9d 8f       	std	Y+29, r25	; 0x1d
    4cae:	2d 81       	ldd	r18, Y+5	; 0x05
    4cb0:	2e 8f       	std	Y+30, r18	; 0x1e
    4cb2:	3e 81       	ldd	r19, Y+6	; 0x06
    4cb4:	3f 8f       	std	Y+31, r19	; 0x1f
    4cb6:	8f 81       	ldd	r24, Y+7	; 0x07
    4cb8:	88 a3       	std	Y+32, r24	; 0x20
    4cba:	98 85       	ldd	r25, Y+8	; 0x08
    4cbc:	99 a3       	std	Y+33, r25	; 0x21
    4cbe:	08 c0       	rjmp	.+16     	; 0x4cd0 <SubCalculate+0x84c>
	}

	return 0;
    4cc0:	1a 8e       	std	Y+26, r1	; 0x1a
    4cc2:	1b 8e       	std	Y+27, r1	; 0x1b
    4cc4:	1c 8e       	std	Y+28, r1	; 0x1c
    4cc6:	1d 8e       	std	Y+29, r1	; 0x1d
    4cc8:	1e 8e       	std	Y+30, r1	; 0x1e
    4cca:	1f 8e       	std	Y+31, r1	; 0x1f
    4ccc:	18 a2       	std	Y+32, r1	; 0x20
    4cce:	19 a2       	std	Y+33, r1	; 0x21
    4cd0:	aa 8c       	ldd	r10, Y+26	; 0x1a
    4cd2:	bb 8c       	ldd	r11, Y+27	; 0x1b
    4cd4:	cc 8c       	ldd	r12, Y+28	; 0x1c
    4cd6:	dd 8c       	ldd	r13, Y+29	; 0x1d
    4cd8:	ee 8c       	ldd	r14, Y+30	; 0x1e
    4cda:	ff 8c       	ldd	r15, Y+31	; 0x1f
    4cdc:	08 a1       	ldd	r16, Y+32	; 0x20
    4cde:	19 a1       	ldd	r17, Y+33	; 0x21
}
    4ce0:	2a 2d       	mov	r18, r10
    4ce2:	3b 2d       	mov	r19, r11
    4ce4:	4c 2d       	mov	r20, r12
    4ce6:	5d 2d       	mov	r21, r13
    4ce8:	6e 2d       	mov	r22, r14
    4cea:	7f 2d       	mov	r23, r15
    4cec:	80 2f       	mov	r24, r16
    4cee:	91 2f       	mov	r25, r17
    4cf0:	c7 58       	subi	r28, 0x87	; 135
    4cf2:	df 4f       	sbci	r29, 0xFF	; 255
    4cf4:	0f b6       	in	r0, 0x3f	; 63
    4cf6:	f8 94       	cli
    4cf8:	de bf       	out	0x3e, r29	; 62
    4cfa:	0f be       	out	0x3f, r0	; 63
    4cfc:	cd bf       	out	0x3d, r28	; 61
    4cfe:	cf 91       	pop	r28
    4d00:	df 91       	pop	r29
    4d02:	1f 91       	pop	r17
    4d04:	0f 91       	pop	r16
    4d06:	ff 90       	pop	r15
    4d08:	ef 90       	pop	r14
    4d0a:	df 90       	pop	r13
    4d0c:	cf 90       	pop	r12
    4d0e:	bf 90       	pop	r11
    4d10:	af 90       	pop	r10
    4d12:	8f 90       	pop	r8
    4d14:	08 95       	ret

00004d16 <calculate>:

uint8 calculate(){
    4d16:	2f 92       	push	r2
    4d18:	3f 92       	push	r3
    4d1a:	4f 92       	push	r4
    4d1c:	5f 92       	push	r5
    4d1e:	6f 92       	push	r6
    4d20:	7f 92       	push	r7
    4d22:	8f 92       	push	r8
    4d24:	9f 92       	push	r9
    4d26:	af 92       	push	r10
    4d28:	bf 92       	push	r11
    4d2a:	cf 92       	push	r12
    4d2c:	df 92       	push	r13
    4d2e:	ef 92       	push	r14
    4d30:	ff 92       	push	r15
    4d32:	0f 93       	push	r16
    4d34:	1f 93       	push	r17
    4d36:	df 93       	push	r29
    4d38:	cf 93       	push	r28
    4d3a:	00 d0       	rcall	.+0      	; 0x4d3c <calculate+0x26>
    4d3c:	00 d0       	rcall	.+0      	; 0x4d3e <calculate+0x28>
    4d3e:	00 d0       	rcall	.+0      	; 0x4d40 <calculate+0x2a>
    4d40:	cd b7       	in	r28, 0x3d	; 61
    4d42:	de b7       	in	r29, 0x3e	; 62
	uint8 Operations_index=0 , Operands_index;
    4d44:	1a 82       	std	Y+2, r1	; 0x02
    4d46:	f9 c0       	rjmp	.+498    	; 0x4f3a <calculate+0x224>

	while((Operations[Operations_index] != '=') && (Operations[Operations_index] != '\0') )
	{
		if (Operations[Operations_index] == '*')
    4d48:	8a 81       	ldd	r24, Y+2	; 0x02
    4d4a:	88 2f       	mov	r24, r24
    4d4c:	90 e0       	ldi	r25, 0x00	; 0
    4d4e:	fc 01       	movw	r30, r24
    4d50:	eb 5d       	subi	r30, 0xDB	; 219
    4d52:	fd 4f       	sbci	r31, 0xFD	; 253
    4d54:	80 81       	ld	r24, Z
    4d56:	8a 32       	cpi	r24, 0x2A	; 42
    4d58:	09 f0       	breq	.+2      	; 0x4d5c <calculate+0x46>
    4d5a:	71 c0       	rjmp	.+226    	; 0x4e3e <calculate+0x128>
		{
			Operands[Operations_index] = Operands[Operations_index] * Operands[Operations_index+1];
    4d5c:	8a 81       	ldd	r24, Y+2	; 0x02
    4d5e:	28 2f       	mov	r18, r24
    4d60:	30 e0       	ldi	r19, 0x00	; 0
    4d62:	3e 83       	std	Y+6, r19	; 0x06
    4d64:	2d 83       	std	Y+5, r18	; 0x05
    4d66:	8a 81       	ldd	r24, Y+2	; 0x02
    4d68:	88 2f       	mov	r24, r24
    4d6a:	90 e0       	ldi	r25, 0x00	; 0
    4d6c:	88 0f       	add	r24, r24
    4d6e:	99 1f       	adc	r25, r25
    4d70:	88 0f       	add	r24, r24
    4d72:	99 1f       	adc	r25, r25
    4d74:	88 0f       	add	r24, r24
    4d76:	99 1f       	adc	r25, r25
    4d78:	fc 01       	movw	r30, r24
    4d7a:	eb 53       	subi	r30, 0x3B	; 59
    4d7c:	fe 4f       	sbci	r31, 0xFE	; 254
    4d7e:	a0 80       	ld	r10, Z
    4d80:	b1 80       	ldd	r11, Z+1	; 0x01
    4d82:	c2 80       	ldd	r12, Z+2	; 0x02
    4d84:	d3 80       	ldd	r13, Z+3	; 0x03
    4d86:	e4 80       	ldd	r14, Z+4	; 0x04
    4d88:	f5 80       	ldd	r15, Z+5	; 0x05
    4d8a:	06 81       	ldd	r16, Z+6	; 0x06
    4d8c:	17 81       	ldd	r17, Z+7	; 0x07
    4d8e:	8a 81       	ldd	r24, Y+2	; 0x02
    4d90:	88 2f       	mov	r24, r24
    4d92:	90 e0       	ldi	r25, 0x00	; 0
    4d94:	01 96       	adiw	r24, 0x01	; 1
    4d96:	88 0f       	add	r24, r24
    4d98:	99 1f       	adc	r25, r25
    4d9a:	88 0f       	add	r24, r24
    4d9c:	99 1f       	adc	r25, r25
    4d9e:	88 0f       	add	r24, r24
    4da0:	99 1f       	adc	r25, r25
    4da2:	fc 01       	movw	r30, r24
    4da4:	eb 53       	subi	r30, 0x3B	; 59
    4da6:	fe 4f       	sbci	r31, 0xFE	; 254
    4da8:	20 80       	ld	r2, Z
    4daa:	31 80       	ldd	r3, Z+1	; 0x01
    4dac:	42 80       	ldd	r4, Z+2	; 0x02
    4dae:	53 80       	ldd	r5, Z+3	; 0x03
    4db0:	64 80       	ldd	r6, Z+4	; 0x04
    4db2:	75 80       	ldd	r7, Z+5	; 0x05
    4db4:	86 80       	ldd	r8, Z+6	; 0x06
    4db6:	97 80       	ldd	r9, Z+7	; 0x07
    4db8:	2a 2d       	mov	r18, r10
    4dba:	3b 2d       	mov	r19, r11
    4dbc:	4c 2d       	mov	r20, r12
    4dbe:	5d 2d       	mov	r21, r13
    4dc0:	6e 2d       	mov	r22, r14
    4dc2:	7f 2d       	mov	r23, r15
    4dc4:	80 2f       	mov	r24, r16
    4dc6:	91 2f       	mov	r25, r17
    4dc8:	a2 2c       	mov	r10, r2
    4dca:	b3 2c       	mov	r11, r3
    4dcc:	c4 2c       	mov	r12, r4
    4dce:	d5 2c       	mov	r13, r5
    4dd0:	e6 2c       	mov	r14, r6
    4dd2:	f7 2c       	mov	r15, r7
    4dd4:	08 2d       	mov	r16, r8
    4dd6:	19 2d       	mov	r17, r9
    4dd8:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    4ddc:	a2 2e       	mov	r10, r18
    4dde:	b3 2e       	mov	r11, r19
    4de0:	c4 2e       	mov	r12, r20
    4de2:	d5 2e       	mov	r13, r21
    4de4:	e6 2e       	mov	r14, r22
    4de6:	f7 2e       	mov	r15, r23
    4de8:	08 2f       	mov	r16, r24
    4dea:	19 2f       	mov	r17, r25
    4dec:	2a 2d       	mov	r18, r10
    4dee:	3b 2d       	mov	r19, r11
    4df0:	4c 2d       	mov	r20, r12
    4df2:	5d 2d       	mov	r21, r13
    4df4:	6e 2d       	mov	r22, r14
    4df6:	7f 2d       	mov	r23, r15
    4df8:	80 2f       	mov	r24, r16
    4dfa:	91 2f       	mov	r25, r17
    4dfc:	ed 81       	ldd	r30, Y+5	; 0x05
    4dfe:	fe 81       	ldd	r31, Y+6	; 0x06
    4e00:	ee 0f       	add	r30, r30
    4e02:	ff 1f       	adc	r31, r31
    4e04:	ee 0f       	add	r30, r30
    4e06:	ff 1f       	adc	r31, r31
    4e08:	ee 0f       	add	r30, r30
    4e0a:	ff 1f       	adc	r31, r31
    4e0c:	eb 53       	subi	r30, 0x3B	; 59
    4e0e:	fe 4f       	sbci	r31, 0xFE	; 254
    4e10:	20 83       	st	Z, r18
    4e12:	31 83       	std	Z+1, r19	; 0x01
    4e14:	42 83       	std	Z+2, r20	; 0x02
    4e16:	53 83       	std	Z+3, r21	; 0x03
    4e18:	64 83       	std	Z+4, r22	; 0x04
    4e1a:	75 83       	std	Z+5, r23	; 0x05
    4e1c:	86 83       	std	Z+6, r24	; 0x06
    4e1e:	97 83       	std	Z+7, r25	; 0x07
			shift_s64array_left((uint64*)Operands,Operations_index+1);
    4e20:	25 ec       	ldi	r18, 0xC5	; 197
    4e22:	31 e0       	ldi	r19, 0x01	; 1
    4e24:	8a 81       	ldd	r24, Y+2	; 0x02
    4e26:	48 2f       	mov	r20, r24
    4e28:	4f 5f       	subi	r20, 0xFF	; 255
    4e2a:	c9 01       	movw	r24, r18
    4e2c:	64 2f       	mov	r22, r20
    4e2e:	0e 94 98 21 	call	0x4330	; 0x4330 <shift_s64array_left>
			shift_uint8array_left(Operations,Operations_index);
    4e32:	85 e2       	ldi	r24, 0x25	; 37
    4e34:	92 e0       	ldi	r25, 0x02	; 2
    4e36:	6a 81       	ldd	r22, Y+2	; 0x02
    4e38:	0e 94 0c 22 	call	0x4418	; 0x4418 <shift_uint8array_left>
    4e3c:	7e c0       	rjmp	.+252    	; 0x4f3a <calculate+0x224>

		}
		else if (Operations[Operations_index] == '/')
    4e3e:	8a 81       	ldd	r24, Y+2	; 0x02
    4e40:	88 2f       	mov	r24, r24
    4e42:	90 e0       	ldi	r25, 0x00	; 0
    4e44:	fc 01       	movw	r30, r24
    4e46:	eb 5d       	subi	r30, 0xDB	; 219
    4e48:	fd 4f       	sbci	r31, 0xFD	; 253
    4e4a:	80 81       	ld	r24, Z
    4e4c:	8f 32       	cpi	r24, 0x2F	; 47
    4e4e:	09 f0       	breq	.+2      	; 0x4e52 <calculate+0x13c>
    4e50:	71 c0       	rjmp	.+226    	; 0x4f34 <calculate+0x21e>
		{
			Operands[Operations_index] = Operands[Operations_index] / Operands[Operations_index+1];
    4e52:	8a 81       	ldd	r24, Y+2	; 0x02
    4e54:	28 2f       	mov	r18, r24
    4e56:	30 e0       	ldi	r19, 0x00	; 0
    4e58:	3c 83       	std	Y+4, r19	; 0x04
    4e5a:	2b 83       	std	Y+3, r18	; 0x03
    4e5c:	8a 81       	ldd	r24, Y+2	; 0x02
    4e5e:	88 2f       	mov	r24, r24
    4e60:	90 e0       	ldi	r25, 0x00	; 0
    4e62:	88 0f       	add	r24, r24
    4e64:	99 1f       	adc	r25, r25
    4e66:	88 0f       	add	r24, r24
    4e68:	99 1f       	adc	r25, r25
    4e6a:	88 0f       	add	r24, r24
    4e6c:	99 1f       	adc	r25, r25
    4e6e:	fc 01       	movw	r30, r24
    4e70:	eb 53       	subi	r30, 0x3B	; 59
    4e72:	fe 4f       	sbci	r31, 0xFE	; 254
    4e74:	a0 80       	ld	r10, Z
    4e76:	b1 80       	ldd	r11, Z+1	; 0x01
    4e78:	c2 80       	ldd	r12, Z+2	; 0x02
    4e7a:	d3 80       	ldd	r13, Z+3	; 0x03
    4e7c:	e4 80       	ldd	r14, Z+4	; 0x04
    4e7e:	f5 80       	ldd	r15, Z+5	; 0x05
    4e80:	06 81       	ldd	r16, Z+6	; 0x06
    4e82:	17 81       	ldd	r17, Z+7	; 0x07
    4e84:	8a 81       	ldd	r24, Y+2	; 0x02
    4e86:	88 2f       	mov	r24, r24
    4e88:	90 e0       	ldi	r25, 0x00	; 0
    4e8a:	01 96       	adiw	r24, 0x01	; 1
    4e8c:	88 0f       	add	r24, r24
    4e8e:	99 1f       	adc	r25, r25
    4e90:	88 0f       	add	r24, r24
    4e92:	99 1f       	adc	r25, r25
    4e94:	88 0f       	add	r24, r24
    4e96:	99 1f       	adc	r25, r25
    4e98:	fc 01       	movw	r30, r24
    4e9a:	eb 53       	subi	r30, 0x3B	; 59
    4e9c:	fe 4f       	sbci	r31, 0xFE	; 254
    4e9e:	20 80       	ld	r2, Z
    4ea0:	31 80       	ldd	r3, Z+1	; 0x01
    4ea2:	42 80       	ldd	r4, Z+2	; 0x02
    4ea4:	53 80       	ldd	r5, Z+3	; 0x03
    4ea6:	64 80       	ldd	r6, Z+4	; 0x04
    4ea8:	75 80       	ldd	r7, Z+5	; 0x05
    4eaa:	86 80       	ldd	r8, Z+6	; 0x06
    4eac:	97 80       	ldd	r9, Z+7	; 0x07
    4eae:	2a 2d       	mov	r18, r10
    4eb0:	3b 2d       	mov	r19, r11
    4eb2:	4c 2d       	mov	r20, r12
    4eb4:	5d 2d       	mov	r21, r13
    4eb6:	6e 2d       	mov	r22, r14
    4eb8:	7f 2d       	mov	r23, r15
    4eba:	80 2f       	mov	r24, r16
    4ebc:	91 2f       	mov	r25, r17
    4ebe:	a2 2c       	mov	r10, r2
    4ec0:	b3 2c       	mov	r11, r3
    4ec2:	c4 2c       	mov	r12, r4
    4ec4:	d5 2c       	mov	r13, r5
    4ec6:	e6 2c       	mov	r14, r6
    4ec8:	f7 2c       	mov	r15, r7
    4eca:	08 2d       	mov	r16, r8
    4ecc:	19 2d       	mov	r17, r9
    4ece:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__divdi3>
    4ed2:	a2 2e       	mov	r10, r18
    4ed4:	b3 2e       	mov	r11, r19
    4ed6:	c4 2e       	mov	r12, r20
    4ed8:	d5 2e       	mov	r13, r21
    4eda:	e6 2e       	mov	r14, r22
    4edc:	f7 2e       	mov	r15, r23
    4ede:	08 2f       	mov	r16, r24
    4ee0:	19 2f       	mov	r17, r25
    4ee2:	2a 2d       	mov	r18, r10
    4ee4:	3b 2d       	mov	r19, r11
    4ee6:	4c 2d       	mov	r20, r12
    4ee8:	5d 2d       	mov	r21, r13
    4eea:	6e 2d       	mov	r22, r14
    4eec:	7f 2d       	mov	r23, r15
    4eee:	80 2f       	mov	r24, r16
    4ef0:	91 2f       	mov	r25, r17
    4ef2:	eb 81       	ldd	r30, Y+3	; 0x03
    4ef4:	fc 81       	ldd	r31, Y+4	; 0x04
    4ef6:	ee 0f       	add	r30, r30
    4ef8:	ff 1f       	adc	r31, r31
    4efa:	ee 0f       	add	r30, r30
    4efc:	ff 1f       	adc	r31, r31
    4efe:	ee 0f       	add	r30, r30
    4f00:	ff 1f       	adc	r31, r31
    4f02:	eb 53       	subi	r30, 0x3B	; 59
    4f04:	fe 4f       	sbci	r31, 0xFE	; 254
    4f06:	20 83       	st	Z, r18
    4f08:	31 83       	std	Z+1, r19	; 0x01
    4f0a:	42 83       	std	Z+2, r20	; 0x02
    4f0c:	53 83       	std	Z+3, r21	; 0x03
    4f0e:	64 83       	std	Z+4, r22	; 0x04
    4f10:	75 83       	std	Z+5, r23	; 0x05
    4f12:	86 83       	std	Z+6, r24	; 0x06
    4f14:	97 83       	std	Z+7, r25	; 0x07
			shift_s64array_left((uint64*)Operands,Operations_index+1);
    4f16:	25 ec       	ldi	r18, 0xC5	; 197
    4f18:	31 e0       	ldi	r19, 0x01	; 1
    4f1a:	8a 81       	ldd	r24, Y+2	; 0x02
    4f1c:	48 2f       	mov	r20, r24
    4f1e:	4f 5f       	subi	r20, 0xFF	; 255
    4f20:	c9 01       	movw	r24, r18
    4f22:	64 2f       	mov	r22, r20
    4f24:	0e 94 98 21 	call	0x4330	; 0x4330 <shift_s64array_left>
			shift_uint8array_left(Operations,Operations_index);
    4f28:	85 e2       	ldi	r24, 0x25	; 37
    4f2a:	92 e0       	ldi	r25, 0x02	; 2
    4f2c:	6a 81       	ldd	r22, Y+2	; 0x02
    4f2e:	0e 94 0c 22 	call	0x4418	; 0x4418 <shift_uint8array_left>
    4f32:	03 c0       	rjmp	.+6      	; 0x4f3a <calculate+0x224>

		}
		else
		{
			Operations_index++;
    4f34:	8a 81       	ldd	r24, Y+2	; 0x02
    4f36:	8f 5f       	subi	r24, 0xFF	; 255
    4f38:	8a 83       	std	Y+2, r24	; 0x02
}

uint8 calculate(){
	uint8 Operations_index=0 , Operands_index;

	while((Operations[Operations_index] != '=') && (Operations[Operations_index] != '\0') )
    4f3a:	8a 81       	ldd	r24, Y+2	; 0x02
    4f3c:	88 2f       	mov	r24, r24
    4f3e:	90 e0       	ldi	r25, 0x00	; 0
    4f40:	fc 01       	movw	r30, r24
    4f42:	eb 5d       	subi	r30, 0xDB	; 219
    4f44:	fd 4f       	sbci	r31, 0xFD	; 253
    4f46:	80 81       	ld	r24, Z
    4f48:	8d 33       	cpi	r24, 0x3D	; 61
    4f4a:	51 f0       	breq	.+20     	; 0x4f60 <calculate+0x24a>
    4f4c:	8a 81       	ldd	r24, Y+2	; 0x02
    4f4e:	88 2f       	mov	r24, r24
    4f50:	90 e0       	ldi	r25, 0x00	; 0
    4f52:	fc 01       	movw	r30, r24
    4f54:	eb 5d       	subi	r30, 0xDB	; 219
    4f56:	fd 4f       	sbci	r31, 0xFD	; 253
    4f58:	80 81       	ld	r24, Z
    4f5a:	88 23       	and	r24, r24
    4f5c:	09 f0       	breq	.+2      	; 0x4f60 <calculate+0x24a>
    4f5e:	f4 ce       	rjmp	.-536    	; 0x4d48 <calculate+0x32>
		{
			Operations_index++;
		}
	}

	Operations_index=0; Operands_index =1;
    4f60:	1a 82       	std	Y+2, r1	; 0x02
    4f62:	81 e0       	ldi	r24, 0x01	; 1
    4f64:	89 83       	std	Y+1, r24	; 0x01
	Result = Operands[0];
    4f66:	20 91 c5 01 	lds	r18, 0x01C5
    4f6a:	30 91 c6 01 	lds	r19, 0x01C6
    4f6e:	40 91 c7 01 	lds	r20, 0x01C7
    4f72:	50 91 c8 01 	lds	r21, 0x01C8
    4f76:	60 91 c9 01 	lds	r22, 0x01C9
    4f7a:	70 91 ca 01 	lds	r23, 0x01CA
    4f7e:	80 91 cb 01 	lds	r24, 0x01CB
    4f82:	90 91 cc 01 	lds	r25, 0x01CC
    4f86:	20 93 a8 01 	sts	0x01A8, r18
    4f8a:	30 93 a9 01 	sts	0x01A9, r19
    4f8e:	40 93 aa 01 	sts	0x01AA, r20
    4f92:	50 93 ab 01 	sts	0x01AB, r21
    4f96:	60 93 ac 01 	sts	0x01AC, r22
    4f9a:	70 93 ad 01 	sts	0x01AD, r23
    4f9e:	80 93 ae 01 	sts	0x01AE, r24
    4fa2:	90 93 af 01 	sts	0x01AF, r25
    4fa6:	5c c0       	rjmp	.+184    	; 0x5060 <calculate+0x34a>
	while((Operations[Operations_index] != '=') && (Operands[Operands_index] != '\0') )
	{
		Result =SubCalculate(Result,Operands[Operands_index],Operations[Operations_index]);
    4fa8:	a0 90 a8 01 	lds	r10, 0x01A8
    4fac:	b0 90 a9 01 	lds	r11, 0x01A9
    4fb0:	c0 90 aa 01 	lds	r12, 0x01AA
    4fb4:	d0 90 ab 01 	lds	r13, 0x01AB
    4fb8:	e0 90 ac 01 	lds	r14, 0x01AC
    4fbc:	f0 90 ad 01 	lds	r15, 0x01AD
    4fc0:	00 91 ae 01 	lds	r16, 0x01AE
    4fc4:	10 91 af 01 	lds	r17, 0x01AF
    4fc8:	89 81       	ldd	r24, Y+1	; 0x01
    4fca:	88 2f       	mov	r24, r24
    4fcc:	90 e0       	ldi	r25, 0x00	; 0
    4fce:	88 0f       	add	r24, r24
    4fd0:	99 1f       	adc	r25, r25
    4fd2:	88 0f       	add	r24, r24
    4fd4:	99 1f       	adc	r25, r25
    4fd6:	88 0f       	add	r24, r24
    4fd8:	99 1f       	adc	r25, r25
    4fda:	fc 01       	movw	r30, r24
    4fdc:	eb 53       	subi	r30, 0x3B	; 59
    4fde:	fe 4f       	sbci	r31, 0xFE	; 254
    4fe0:	20 80       	ld	r2, Z
    4fe2:	31 80       	ldd	r3, Z+1	; 0x01
    4fe4:	42 80       	ldd	r4, Z+2	; 0x02
    4fe6:	53 80       	ldd	r5, Z+3	; 0x03
    4fe8:	64 80       	ldd	r6, Z+4	; 0x04
    4fea:	75 80       	ldd	r7, Z+5	; 0x05
    4fec:	86 80       	ldd	r8, Z+6	; 0x06
    4fee:	97 80       	ldd	r9, Z+7	; 0x07
    4ff0:	8a 81       	ldd	r24, Y+2	; 0x02
    4ff2:	88 2f       	mov	r24, r24
    4ff4:	90 e0       	ldi	r25, 0x00	; 0
    4ff6:	fc 01       	movw	r30, r24
    4ff8:	eb 5d       	subi	r30, 0xDB	; 219
    4ffa:	fd 4f       	sbci	r31, 0xFD	; 253
    4ffc:	e0 81       	ld	r30, Z
    4ffe:	2a 2d       	mov	r18, r10
    5000:	3b 2d       	mov	r19, r11
    5002:	4c 2d       	mov	r20, r12
    5004:	5d 2d       	mov	r21, r13
    5006:	6e 2d       	mov	r22, r14
    5008:	7f 2d       	mov	r23, r15
    500a:	80 2f       	mov	r24, r16
    500c:	91 2f       	mov	r25, r17
    500e:	a2 2c       	mov	r10, r2
    5010:	b3 2c       	mov	r11, r3
    5012:	c4 2c       	mov	r12, r4
    5014:	d5 2c       	mov	r13, r5
    5016:	e6 2c       	mov	r14, r6
    5018:	f7 2c       	mov	r15, r7
    501a:	08 2d       	mov	r16, r8
    501c:	19 2d       	mov	r17, r9
    501e:	8e 2e       	mov	r8, r30
    5020:	0e 94 42 22 	call	0x4484	; 0x4484 <SubCalculate>
    5024:	a2 2e       	mov	r10, r18
    5026:	b3 2e       	mov	r11, r19
    5028:	c4 2e       	mov	r12, r20
    502a:	d5 2e       	mov	r13, r21
    502c:	e6 2e       	mov	r14, r22
    502e:	f7 2e       	mov	r15, r23
    5030:	08 2f       	mov	r16, r24
    5032:	19 2f       	mov	r17, r25
    5034:	a0 92 a8 01 	sts	0x01A8, r10
    5038:	b0 92 a9 01 	sts	0x01A9, r11
    503c:	c0 92 aa 01 	sts	0x01AA, r12
    5040:	d0 92 ab 01 	sts	0x01AB, r13
    5044:	e0 92 ac 01 	sts	0x01AC, r14
    5048:	f0 92 ad 01 	sts	0x01AD, r15
    504c:	00 93 ae 01 	sts	0x01AE, r16
    5050:	10 93 af 01 	sts	0x01AF, r17
		Operations_index++;
    5054:	8a 81       	ldd	r24, Y+2	; 0x02
    5056:	8f 5f       	subi	r24, 0xFF	; 255
    5058:	8a 83       	std	Y+2, r24	; 0x02
		Operands_index++;
    505a:	89 81       	ldd	r24, Y+1	; 0x01
    505c:	8f 5f       	subi	r24, 0xFF	; 255
    505e:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	Operations_index=0; Operands_index =1;
	Result = Operands[0];
	while((Operations[Operations_index] != '=') && (Operands[Operands_index] != '\0') )
    5060:	8a 81       	ldd	r24, Y+2	; 0x02
    5062:	88 2f       	mov	r24, r24
    5064:	90 e0       	ldi	r25, 0x00	; 0
    5066:	fc 01       	movw	r30, r24
    5068:	eb 5d       	subi	r30, 0xDB	; 219
    506a:	fd 4f       	sbci	r31, 0xFD	; 253
    506c:	80 81       	ld	r24, Z
    506e:	8d 33       	cpi	r24, 0x3D	; 61
    5070:	f9 f0       	breq	.+62     	; 0x50b0 <calculate+0x39a>
    5072:	89 81       	ldd	r24, Y+1	; 0x01
    5074:	88 2f       	mov	r24, r24
    5076:	90 e0       	ldi	r25, 0x00	; 0
    5078:	88 0f       	add	r24, r24
    507a:	99 1f       	adc	r25, r25
    507c:	88 0f       	add	r24, r24
    507e:	99 1f       	adc	r25, r25
    5080:	88 0f       	add	r24, r24
    5082:	99 1f       	adc	r25, r25
    5084:	fc 01       	movw	r30, r24
    5086:	eb 53       	subi	r30, 0x3B	; 59
    5088:	fe 4f       	sbci	r31, 0xFE	; 254
    508a:	20 81       	ld	r18, Z
    508c:	31 81       	ldd	r19, Z+1	; 0x01
    508e:	42 81       	ldd	r20, Z+2	; 0x02
    5090:	53 81       	ldd	r21, Z+3	; 0x03
    5092:	64 81       	ldd	r22, Z+4	; 0x04
    5094:	75 81       	ldd	r23, Z+5	; 0x05
    5096:	86 81       	ldd	r24, Z+6	; 0x06
    5098:	97 81       	ldd	r25, Z+7	; 0x07
    509a:	e2 2f       	mov	r30, r18
    509c:	e3 2b       	or	r30, r19
    509e:	e4 2b       	or	r30, r20
    50a0:	e5 2b       	or	r30, r21
    50a2:	e6 2b       	or	r30, r22
    50a4:	e7 2b       	or	r30, r23
    50a6:	e8 2b       	or	r30, r24
    50a8:	e9 2b       	or	r30, r25
    50aa:	ee 23       	and	r30, r30
    50ac:	09 f0       	breq	.+2      	; 0x50b0 <calculate+0x39a>
    50ae:	7c cf       	rjmp	.-264    	; 0x4fa8 <calculate+0x292>
		Result =SubCalculate(Result,Operands[Operands_index],Operations[Operations_index]);
		Operations_index++;
		Operands_index++;
	}

	return DisplayPoint;
    50b0:	84 e0       	ldi	r24, 0x04	; 4
}
    50b2:	26 96       	adiw	r28, 0x06	; 6
    50b4:	0f b6       	in	r0, 0x3f	; 63
    50b6:	f8 94       	cli
    50b8:	de bf       	out	0x3e, r29	; 62
    50ba:	0f be       	out	0x3f, r0	; 63
    50bc:	cd bf       	out	0x3d, r28	; 61
    50be:	cf 91       	pop	r28
    50c0:	df 91       	pop	r29
    50c2:	1f 91       	pop	r17
    50c4:	0f 91       	pop	r16
    50c6:	ff 90       	pop	r15
    50c8:	ef 90       	pop	r14
    50ca:	df 90       	pop	r13
    50cc:	cf 90       	pop	r12
    50ce:	bf 90       	pop	r11
    50d0:	af 90       	pop	r10
    50d2:	9f 90       	pop	r9
    50d4:	8f 90       	pop	r8
    50d6:	7f 90       	pop	r7
    50d8:	6f 90       	pop	r6
    50da:	5f 90       	pop	r5
    50dc:	4f 90       	pop	r4
    50de:	3f 90       	pop	r3
    50e0:	2f 90       	pop	r2
    50e2:	08 95       	ret

000050e4 <display>:

uint8  display()
{
    50e4:	af 92       	push	r10
    50e6:	bf 92       	push	r11
    50e8:	cf 92       	push	r12
    50ea:	df 92       	push	r13
    50ec:	ef 92       	push	r14
    50ee:	ff 92       	push	r15
    50f0:	0f 93       	push	r16
    50f2:	1f 93       	push	r17
    50f4:	df 93       	push	r29
    50f6:	cf 93       	push	r28
    50f8:	cd b7       	in	r28, 0x3d	; 61
    50fa:	de b7       	in	r29, 0x3e	; 62

	LCD_voidMoveCursor(2,1);
    50fc:	82 e0       	ldi	r24, 0x02	; 2
    50fe:	61 e0       	ldi	r22, 0x01	; 1
    5100:	0e 94 64 1a 	call	0x34c8	; 0x34c8 <LCD_voidMoveCursor>
	LCD_voidWriteRealNumber(Result);
    5104:	a0 90 a8 01 	lds	r10, 0x01A8
    5108:	b0 90 a9 01 	lds	r11, 0x01A9
    510c:	c0 90 aa 01 	lds	r12, 0x01AA
    5110:	d0 90 ab 01 	lds	r13, 0x01AB
    5114:	e0 90 ac 01 	lds	r14, 0x01AC
    5118:	f0 90 ad 01 	lds	r15, 0x01AD
    511c:	00 91 ae 01 	lds	r16, 0x01AE
    5120:	10 91 af 01 	lds	r17, 0x01AF
    5124:	2a 2d       	mov	r18, r10
    5126:	3b 2d       	mov	r19, r11
    5128:	4c 2d       	mov	r20, r12
    512a:	5d 2d       	mov	r21, r13
    512c:	6e 2d       	mov	r22, r14
    512e:	7f 2d       	mov	r23, r15
    5130:	80 2f       	mov	r24, r16
    5132:	91 2f       	mov	r25, r17
    5134:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__floatdisf>
    5138:	dc 01       	movw	r26, r24
    513a:	cb 01       	movw	r24, r22
    513c:	bc 01       	movw	r22, r24
    513e:	cd 01       	movw	r24, r26
    5140:	0e 94 66 1b 	call	0x36cc	; 0x36cc <LCD_voidWriteRealNumber>

	return Reset;
    5144:	80 e0       	ldi	r24, 0x00	; 0
}
    5146:	cf 91       	pop	r28
    5148:	df 91       	pop	r29
    514a:	1f 91       	pop	r17
    514c:	0f 91       	pop	r16
    514e:	ff 90       	pop	r15
    5150:	ef 90       	pop	r14
    5152:	df 90       	pop	r13
    5154:	cf 90       	pop	r12
    5156:	bf 90       	pop	r11
    5158:	af 90       	pop	r10
    515a:	08 95       	ret

0000515c <Resetall>:

uint8  Resetall()
{
    515c:	df 93       	push	r29
    515e:	cf 93       	push	r28
    5160:	0f 92       	push	r0
    5162:	cd b7       	in	r28, 0x3d	; 61
    5164:	de b7       	in	r29, 0x3e	; 62
	uint8 index=0;
    5166:	19 82       	std	Y+1, r1	; 0x01
	for(index=0;index<MaxNumberOfDigit;index++)
    5168:	19 82       	std	Y+1, r1	; 0x01
    516a:	0a c0       	rjmp	.+20     	; 0x5180 <Resetall+0x24>
	Digit[index]=0;
    516c:	89 81       	ldd	r24, Y+1	; 0x01
    516e:	88 2f       	mov	r24, r24
    5170:	90 e0       	ldi	r25, 0x00	; 0
    5172:	fc 01       	movw	r30, r24
    5174:	eb 54       	subi	r30, 0x4B	; 75
    5176:	fe 4f       	sbci	r31, 0xFE	; 254
    5178:	10 82       	st	Z, r1
}

uint8  Resetall()
{
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
    517a:	89 81       	ldd	r24, Y+1	; 0x01
    517c:	8f 5f       	subi	r24, 0xFF	; 255
    517e:	89 83       	std	Y+1, r24	; 0x01
    5180:	89 81       	ldd	r24, Y+1	; 0x01
    5182:	80 31       	cpi	r24, 0x10	; 16
    5184:	98 f3       	brcs	.-26     	; 0x516c <Resetall+0x10>
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
    5186:	19 82       	std	Y+1, r1	; 0x01
    5188:	17 c0       	rjmp	.+46     	; 0x51b8 <Resetall+0x5c>
	Operands[index]=0;
    518a:	89 81       	ldd	r24, Y+1	; 0x01
    518c:	88 2f       	mov	r24, r24
    518e:	90 e0       	ldi	r25, 0x00	; 0
    5190:	88 0f       	add	r24, r24
    5192:	99 1f       	adc	r25, r25
    5194:	88 0f       	add	r24, r24
    5196:	99 1f       	adc	r25, r25
    5198:	88 0f       	add	r24, r24
    519a:	99 1f       	adc	r25, r25
    519c:	fc 01       	movw	r30, r24
    519e:	eb 53       	subi	r30, 0x3B	; 59
    51a0:	fe 4f       	sbci	r31, 0xFE	; 254
    51a2:	10 82       	st	Z, r1
    51a4:	11 82       	std	Z+1, r1	; 0x01
    51a6:	12 82       	std	Z+2, r1	; 0x02
    51a8:	13 82       	std	Z+3, r1	; 0x03
    51aa:	14 82       	std	Z+4, r1	; 0x04
    51ac:	15 82       	std	Z+5, r1	; 0x05
    51ae:	16 82       	std	Z+6, r1	; 0x06
    51b0:	17 82       	std	Z+7, r1	; 0x07
uint8  Resetall()
{
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
    51b2:	89 81       	ldd	r24, Y+1	; 0x01
    51b4:	8f 5f       	subi	r24, 0xFF	; 255
    51b6:	89 83       	std	Y+1, r24	; 0x01
    51b8:	89 81       	ldd	r24, Y+1	; 0x01
    51ba:	8c 30       	cpi	r24, 0x0C	; 12
    51bc:	30 f3       	brcs	.-52     	; 0x518a <Resetall+0x2e>
	Operands[index]=0;
	for(index=0;index<MaxNumberOfOperations;index++)
    51be:	19 82       	std	Y+1, r1	; 0x01
    51c0:	0a c0       	rjmp	.+20     	; 0x51d6 <Resetall+0x7a>
	Operations[index]=0;
    51c2:	89 81       	ldd	r24, Y+1	; 0x01
    51c4:	88 2f       	mov	r24, r24
    51c6:	90 e0       	ldi	r25, 0x00	; 0
    51c8:	fc 01       	movw	r30, r24
    51ca:	eb 5d       	subi	r30, 0xDB	; 219
    51cc:	fd 4f       	sbci	r31, 0xFD	; 253
    51ce:	10 82       	st	Z, r1
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
	Operands[index]=0;
	for(index=0;index<MaxNumberOfOperations;index++)
    51d0:	89 81       	ldd	r24, Y+1	; 0x01
    51d2:	8f 5f       	subi	r24, 0xFF	; 255
    51d4:	89 83       	std	Y+1, r24	; 0x01
    51d6:	89 81       	ldd	r24, Y+1	; 0x01
    51d8:	8b 30       	cpi	r24, 0x0B	; 11
    51da:	98 f3       	brcs	.-26     	; 0x51c2 <Resetall+0x66>
	Operations[index]=0;
	OperandsCounter=0;
    51dc:	10 92 b0 01 	sts	0x01B0, r1
	OperationsCounter=0;
    51e0:	10 92 b1 01 	sts	0x01B1, r1
	DigitCounter=0;
    51e4:	10 92 b2 01 	sts	0x01B2, r1
	Result=0;
    51e8:	10 92 a8 01 	sts	0x01A8, r1
    51ec:	10 92 a9 01 	sts	0x01A9, r1
    51f0:	10 92 aa 01 	sts	0x01AA, r1
    51f4:	10 92 ab 01 	sts	0x01AB, r1
    51f8:	10 92 ac 01 	sts	0x01AC, r1
    51fc:	10 92 ad 01 	sts	0x01AD, r1
    5200:	10 92 ae 01 	sts	0x01AE, r1
    5204:	10 92 af 01 	sts	0x01AF, r1

	return StartPoint;
    5208:	81 e0       	ldi	r24, 0x01	; 1
}
    520a:	0f 90       	pop	r0
    520c:	cf 91       	pop	r28
    520e:	df 91       	pop	r29
    5210:	08 95       	ret

00005212 <main>:
#include "../HAL/KEYPAD/KEYPAD_int.h"
#include "../HAL/LCD/LCD_int.h"
#include "calculator.h"
#include <util/delay.h>

int main (void){
    5212:	df 93       	push	r29
    5214:	cf 93       	push	r28
    5216:	0f 92       	push	r0
    5218:	cd b7       	in	r28, 0x3d	; 61
    521a:	de b7       	in	r29, 0x3e	; 62
	LCD_voidInit();
    521c:	0e 94 13 16 	call	0x2c26	; 0x2c26 <LCD_voidInit>
	Keypad_voidInit();
    5220:	0e 94 b9 1c 	call	0x3972	; 0x3972 <Keypad_voidInit>
	uint8 Flag;

		while(1)
		{

					Flag=StartPoint;
    5224:	81 e0       	ldi	r24, 0x01	; 1
    5226:	89 83       	std	Y+1, r24	; 0x01
    5228:	03 c0       	rjmp	.+6      	; 0x5230 <main+0x1e>
					while(Flag==StartPoint)		{   Flag=ScanData();	  }
    522a:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <ScanData>
    522e:	89 83       	std	Y+1, r24	; 0x01
    5230:	89 81       	ldd	r24, Y+1	; 0x01
    5232:	81 30       	cpi	r24, 0x01	; 1
    5234:	d1 f3       	breq	.-12     	; 0x522a <main+0x18>
    5236:	03 c0       	rjmp	.+6      	; 0x523e <main+0x2c>
					while(Flag==AnalyzePoint)	{   Flag=AnalyzeData();	  }
    5238:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <AnalyzeData>
    523c:	89 83       	std	Y+1, r24	; 0x01
    523e:	89 81       	ldd	r24, Y+1	; 0x01
    5240:	82 30       	cpi	r24, 0x02	; 2
    5242:	d1 f3       	breq	.-12     	; 0x5238 <main+0x26>
    5244:	03 c0       	rjmp	.+6      	; 0x524c <main+0x3a>
					while(Flag==CalculatePoint)	{   Flag=calculate();     }
    5246:	0e 94 8b 26 	call	0x4d16	; 0x4d16 <calculate>
    524a:	89 83       	std	Y+1, r24	; 0x01
    524c:	89 81       	ldd	r24, Y+1	; 0x01
    524e:	83 30       	cpi	r24, 0x03	; 3
    5250:	d1 f3       	breq	.-12     	; 0x5246 <main+0x34>
    5252:	03 c0       	rjmp	.+6      	; 0x525a <main+0x48>
					while(Flag==DisplayPoint)	{   Flag=display();	      }
    5254:	0e 94 72 28 	call	0x50e4	; 0x50e4 <display>
    5258:	89 83       	std	Y+1, r24	; 0x01
    525a:	89 81       	ldd	r24, Y+1	; 0x01
    525c:	84 30       	cpi	r24, 0x04	; 4
    525e:	d1 f3       	breq	.-12     	; 0x5254 <main+0x42>
    5260:	03 c0       	rjmp	.+6      	; 0x5268 <main+0x56>
					while(Flag==Reset)			{   Flag=Resetall();      }
    5262:	0e 94 ae 28 	call	0x515c	; 0x515c <Resetall>
    5266:	89 83       	std	Y+1, r24	; 0x01
    5268:	89 81       	ldd	r24, Y+1	; 0x01
    526a:	88 23       	and	r24, r24
    526c:	d1 f3       	breq	.-12     	; 0x5262 <main+0x50>

					while(keypad_u8CheckPress()!='A'){}
    526e:	0e 94 2f 1d 	call	0x3a5e	; 0x3a5e <keypad_u8CheckPress>
    5272:	81 34       	cpi	r24, 0x41	; 65
    5274:	e1 f7       	brne	.-8      	; 0x526e <main+0x5c>
					LCD_voidWriteCmd(0X01);
    5276:	81 e0       	ldi	r24, 0x01	; 1
    5278:	0e 94 98 18 	call	0x3130	; 0x3130 <LCD_voidWriteCmd>
    527c:	d3 cf       	rjmp	.-90     	; 0x5224 <main+0x12>

0000527e <__mulsi3>:
    527e:	62 9f       	mul	r22, r18
    5280:	d0 01       	movw	r26, r0
    5282:	73 9f       	mul	r23, r19
    5284:	f0 01       	movw	r30, r0
    5286:	82 9f       	mul	r24, r18
    5288:	e0 0d       	add	r30, r0
    528a:	f1 1d       	adc	r31, r1
    528c:	64 9f       	mul	r22, r20
    528e:	e0 0d       	add	r30, r0
    5290:	f1 1d       	adc	r31, r1
    5292:	92 9f       	mul	r25, r18
    5294:	f0 0d       	add	r31, r0
    5296:	83 9f       	mul	r24, r19
    5298:	f0 0d       	add	r31, r0
    529a:	74 9f       	mul	r23, r20
    529c:	f0 0d       	add	r31, r0
    529e:	65 9f       	mul	r22, r21
    52a0:	f0 0d       	add	r31, r0
    52a2:	99 27       	eor	r25, r25
    52a4:	72 9f       	mul	r23, r18
    52a6:	b0 0d       	add	r27, r0
    52a8:	e1 1d       	adc	r30, r1
    52aa:	f9 1f       	adc	r31, r25
    52ac:	63 9f       	mul	r22, r19
    52ae:	b0 0d       	add	r27, r0
    52b0:	e1 1d       	adc	r30, r1
    52b2:	f9 1f       	adc	r31, r25
    52b4:	bd 01       	movw	r22, r26
    52b6:	cf 01       	movw	r24, r30
    52b8:	11 24       	eor	r1, r1
    52ba:	08 95       	ret

000052bc <__udivmodsi4>:
    52bc:	a1 e2       	ldi	r26, 0x21	; 33
    52be:	1a 2e       	mov	r1, r26
    52c0:	aa 1b       	sub	r26, r26
    52c2:	bb 1b       	sub	r27, r27
    52c4:	fd 01       	movw	r30, r26
    52c6:	0d c0       	rjmp	.+26     	; 0x52e2 <__udivmodsi4_ep>

000052c8 <__udivmodsi4_loop>:
    52c8:	aa 1f       	adc	r26, r26
    52ca:	bb 1f       	adc	r27, r27
    52cc:	ee 1f       	adc	r30, r30
    52ce:	ff 1f       	adc	r31, r31
    52d0:	a2 17       	cp	r26, r18
    52d2:	b3 07       	cpc	r27, r19
    52d4:	e4 07       	cpc	r30, r20
    52d6:	f5 07       	cpc	r31, r21
    52d8:	20 f0       	brcs	.+8      	; 0x52e2 <__udivmodsi4_ep>
    52da:	a2 1b       	sub	r26, r18
    52dc:	b3 0b       	sbc	r27, r19
    52de:	e4 0b       	sbc	r30, r20
    52e0:	f5 0b       	sbc	r31, r21

000052e2 <__udivmodsi4_ep>:
    52e2:	66 1f       	adc	r22, r22
    52e4:	77 1f       	adc	r23, r23
    52e6:	88 1f       	adc	r24, r24
    52e8:	99 1f       	adc	r25, r25
    52ea:	1a 94       	dec	r1
    52ec:	69 f7       	brne	.-38     	; 0x52c8 <__udivmodsi4_loop>
    52ee:	60 95       	com	r22
    52f0:	70 95       	com	r23
    52f2:	80 95       	com	r24
    52f4:	90 95       	com	r25
    52f6:	9b 01       	movw	r18, r22
    52f8:	ac 01       	movw	r20, r24
    52fa:	bd 01       	movw	r22, r26
    52fc:	cf 01       	movw	r24, r30
    52fe:	08 95       	ret

00005300 <__prologue_saves__>:
    5300:	2f 92       	push	r2
    5302:	3f 92       	push	r3
    5304:	4f 92       	push	r4
    5306:	5f 92       	push	r5
    5308:	6f 92       	push	r6
    530a:	7f 92       	push	r7
    530c:	8f 92       	push	r8
    530e:	9f 92       	push	r9
    5310:	af 92       	push	r10
    5312:	bf 92       	push	r11
    5314:	cf 92       	push	r12
    5316:	df 92       	push	r13
    5318:	ef 92       	push	r14
    531a:	ff 92       	push	r15
    531c:	0f 93       	push	r16
    531e:	1f 93       	push	r17
    5320:	cf 93       	push	r28
    5322:	df 93       	push	r29
    5324:	cd b7       	in	r28, 0x3d	; 61
    5326:	de b7       	in	r29, 0x3e	; 62
    5328:	ca 1b       	sub	r28, r26
    532a:	db 0b       	sbc	r29, r27
    532c:	0f b6       	in	r0, 0x3f	; 63
    532e:	f8 94       	cli
    5330:	de bf       	out	0x3e, r29	; 62
    5332:	0f be       	out	0x3f, r0	; 63
    5334:	cd bf       	out	0x3d, r28	; 61
    5336:	09 94       	ijmp

00005338 <__epilogue_restores__>:
    5338:	2a 88       	ldd	r2, Y+18	; 0x12
    533a:	39 88       	ldd	r3, Y+17	; 0x11
    533c:	48 88       	ldd	r4, Y+16	; 0x10
    533e:	5f 84       	ldd	r5, Y+15	; 0x0f
    5340:	6e 84       	ldd	r6, Y+14	; 0x0e
    5342:	7d 84       	ldd	r7, Y+13	; 0x0d
    5344:	8c 84       	ldd	r8, Y+12	; 0x0c
    5346:	9b 84       	ldd	r9, Y+11	; 0x0b
    5348:	aa 84       	ldd	r10, Y+10	; 0x0a
    534a:	b9 84       	ldd	r11, Y+9	; 0x09
    534c:	c8 84       	ldd	r12, Y+8	; 0x08
    534e:	df 80       	ldd	r13, Y+7	; 0x07
    5350:	ee 80       	ldd	r14, Y+6	; 0x06
    5352:	fd 80       	ldd	r15, Y+5	; 0x05
    5354:	0c 81       	ldd	r16, Y+4	; 0x04
    5356:	1b 81       	ldd	r17, Y+3	; 0x03
    5358:	aa 81       	ldd	r26, Y+2	; 0x02
    535a:	b9 81       	ldd	r27, Y+1	; 0x01
    535c:	ce 0f       	add	r28, r30
    535e:	d1 1d       	adc	r29, r1
    5360:	0f b6       	in	r0, 0x3f	; 63
    5362:	f8 94       	cli
    5364:	de bf       	out	0x3e, r29	; 62
    5366:	0f be       	out	0x3f, r0	; 63
    5368:	cd bf       	out	0x3d, r28	; 61
    536a:	ed 01       	movw	r28, r26
    536c:	08 95       	ret

0000536e <sprintf>:
    536e:	ae e0       	ldi	r26, 0x0E	; 14
    5370:	b0 e0       	ldi	r27, 0x00	; 0
    5372:	ed eb       	ldi	r30, 0xBD	; 189
    5374:	f9 e2       	ldi	r31, 0x29	; 41
    5376:	0c 94 8e 29 	jmp	0x531c	; 0x531c <__prologue_saves__+0x1c>
    537a:	0d 89       	ldd	r16, Y+21	; 0x15
    537c:	1e 89       	ldd	r17, Y+22	; 0x16
    537e:	86 e0       	ldi	r24, 0x06	; 6
    5380:	8c 83       	std	Y+4, r24	; 0x04
    5382:	1a 83       	std	Y+2, r17	; 0x02
    5384:	09 83       	std	Y+1, r16	; 0x01
    5386:	8f ef       	ldi	r24, 0xFF	; 255
    5388:	9f e7       	ldi	r25, 0x7F	; 127
    538a:	9e 83       	std	Y+6, r25	; 0x06
    538c:	8d 83       	std	Y+5, r24	; 0x05
    538e:	9e 01       	movw	r18, r28
    5390:	27 5e       	subi	r18, 0xE7	; 231
    5392:	3f 4f       	sbci	r19, 0xFF	; 255
    5394:	ce 01       	movw	r24, r28
    5396:	01 96       	adiw	r24, 0x01	; 1
    5398:	6f 89       	ldd	r22, Y+23	; 0x17
    539a:	78 8d       	ldd	r23, Y+24	; 0x18
    539c:	a9 01       	movw	r20, r18
    539e:	0e 94 db 29 	call	0x53b6	; 0x53b6 <vfprintf>
    53a2:	2f 81       	ldd	r18, Y+7	; 0x07
    53a4:	38 85       	ldd	r19, Y+8	; 0x08
    53a6:	02 0f       	add	r16, r18
    53a8:	13 1f       	adc	r17, r19
    53aa:	f8 01       	movw	r30, r16
    53ac:	10 82       	st	Z, r1
    53ae:	2e 96       	adiw	r28, 0x0e	; 14
    53b0:	e4 e0       	ldi	r30, 0x04	; 4
    53b2:	0c 94 aa 29 	jmp	0x5354	; 0x5354 <__epilogue_restores__+0x1c>

000053b6 <vfprintf>:
    53b6:	ab e0       	ldi	r26, 0x0B	; 11
    53b8:	b0 e0       	ldi	r27, 0x00	; 0
    53ba:	e1 ee       	ldi	r30, 0xE1	; 225
    53bc:	f9 e2       	ldi	r31, 0x29	; 41
    53be:	0c 94 80 29 	jmp	0x5300	; 0x5300 <__prologue_saves__>
    53c2:	3c 01       	movw	r6, r24
    53c4:	2b 01       	movw	r4, r22
    53c6:	5a 01       	movw	r10, r20
    53c8:	fc 01       	movw	r30, r24
    53ca:	17 82       	std	Z+7, r1	; 0x07
    53cc:	16 82       	std	Z+6, r1	; 0x06
    53ce:	83 81       	ldd	r24, Z+3	; 0x03
    53d0:	81 fd       	sbrc	r24, 1
    53d2:	03 c0       	rjmp	.+6      	; 0x53da <vfprintf+0x24>
    53d4:	6f ef       	ldi	r22, 0xFF	; 255
    53d6:	7f ef       	ldi	r23, 0xFF	; 255
    53d8:	c6 c1       	rjmp	.+908    	; 0x5766 <vfprintf+0x3b0>
    53da:	9a e0       	ldi	r25, 0x0A	; 10
    53dc:	89 2e       	mov	r8, r25
    53de:	1e 01       	movw	r2, r28
    53e0:	08 94       	sec
    53e2:	21 1c       	adc	r2, r1
    53e4:	31 1c       	adc	r3, r1
    53e6:	f3 01       	movw	r30, r6
    53e8:	23 81       	ldd	r18, Z+3	; 0x03
    53ea:	f2 01       	movw	r30, r4
    53ec:	23 fd       	sbrc	r18, 3
    53ee:	85 91       	lpm	r24, Z+
    53f0:	23 ff       	sbrs	r18, 3
    53f2:	81 91       	ld	r24, Z+
    53f4:	2f 01       	movw	r4, r30
    53f6:	88 23       	and	r24, r24
    53f8:	09 f4       	brne	.+2      	; 0x53fc <vfprintf+0x46>
    53fa:	b2 c1       	rjmp	.+868    	; 0x5760 <vfprintf+0x3aa>
    53fc:	85 32       	cpi	r24, 0x25	; 37
    53fe:	39 f4       	brne	.+14     	; 0x540e <vfprintf+0x58>
    5400:	23 fd       	sbrc	r18, 3
    5402:	85 91       	lpm	r24, Z+
    5404:	23 ff       	sbrs	r18, 3
    5406:	81 91       	ld	r24, Z+
    5408:	2f 01       	movw	r4, r30
    540a:	85 32       	cpi	r24, 0x25	; 37
    540c:	29 f4       	brne	.+10     	; 0x5418 <vfprintf+0x62>
    540e:	90 e0       	ldi	r25, 0x00	; 0
    5410:	b3 01       	movw	r22, r6
    5412:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    5416:	e7 cf       	rjmp	.-50     	; 0x53e6 <vfprintf+0x30>
    5418:	98 2f       	mov	r25, r24
    541a:	ff 24       	eor	r15, r15
    541c:	ee 24       	eor	r14, r14
    541e:	99 24       	eor	r9, r9
    5420:	ff e1       	ldi	r31, 0x1F	; 31
    5422:	ff 15       	cp	r31, r15
    5424:	d0 f0       	brcs	.+52     	; 0x545a <vfprintf+0xa4>
    5426:	9b 32       	cpi	r25, 0x2B	; 43
    5428:	69 f0       	breq	.+26     	; 0x5444 <vfprintf+0x8e>
    542a:	9c 32       	cpi	r25, 0x2C	; 44
    542c:	28 f4       	brcc	.+10     	; 0x5438 <vfprintf+0x82>
    542e:	90 32       	cpi	r25, 0x20	; 32
    5430:	59 f0       	breq	.+22     	; 0x5448 <vfprintf+0x92>
    5432:	93 32       	cpi	r25, 0x23	; 35
    5434:	91 f4       	brne	.+36     	; 0x545a <vfprintf+0xa4>
    5436:	0e c0       	rjmp	.+28     	; 0x5454 <vfprintf+0x9e>
    5438:	9d 32       	cpi	r25, 0x2D	; 45
    543a:	49 f0       	breq	.+18     	; 0x544e <vfprintf+0x98>
    543c:	90 33       	cpi	r25, 0x30	; 48
    543e:	69 f4       	brne	.+26     	; 0x545a <vfprintf+0xa4>
    5440:	41 e0       	ldi	r20, 0x01	; 1
    5442:	24 c0       	rjmp	.+72     	; 0x548c <vfprintf+0xd6>
    5444:	52 e0       	ldi	r21, 0x02	; 2
    5446:	f5 2a       	or	r15, r21
    5448:	84 e0       	ldi	r24, 0x04	; 4
    544a:	f8 2a       	or	r15, r24
    544c:	28 c0       	rjmp	.+80     	; 0x549e <vfprintf+0xe8>
    544e:	98 e0       	ldi	r25, 0x08	; 8
    5450:	f9 2a       	or	r15, r25
    5452:	25 c0       	rjmp	.+74     	; 0x549e <vfprintf+0xe8>
    5454:	e0 e1       	ldi	r30, 0x10	; 16
    5456:	fe 2a       	or	r15, r30
    5458:	22 c0       	rjmp	.+68     	; 0x549e <vfprintf+0xe8>
    545a:	f7 fc       	sbrc	r15, 7
    545c:	29 c0       	rjmp	.+82     	; 0x54b0 <vfprintf+0xfa>
    545e:	89 2f       	mov	r24, r25
    5460:	80 53       	subi	r24, 0x30	; 48
    5462:	8a 30       	cpi	r24, 0x0A	; 10
    5464:	70 f4       	brcc	.+28     	; 0x5482 <vfprintf+0xcc>
    5466:	f6 fe       	sbrs	r15, 6
    5468:	05 c0       	rjmp	.+10     	; 0x5474 <vfprintf+0xbe>
    546a:	98 9c       	mul	r9, r8
    546c:	90 2c       	mov	r9, r0
    546e:	11 24       	eor	r1, r1
    5470:	98 0e       	add	r9, r24
    5472:	15 c0       	rjmp	.+42     	; 0x549e <vfprintf+0xe8>
    5474:	e8 9c       	mul	r14, r8
    5476:	e0 2c       	mov	r14, r0
    5478:	11 24       	eor	r1, r1
    547a:	e8 0e       	add	r14, r24
    547c:	f0 e2       	ldi	r31, 0x20	; 32
    547e:	ff 2a       	or	r15, r31
    5480:	0e c0       	rjmp	.+28     	; 0x549e <vfprintf+0xe8>
    5482:	9e 32       	cpi	r25, 0x2E	; 46
    5484:	29 f4       	brne	.+10     	; 0x5490 <vfprintf+0xda>
    5486:	f6 fc       	sbrc	r15, 6
    5488:	6b c1       	rjmp	.+726    	; 0x5760 <vfprintf+0x3aa>
    548a:	40 e4       	ldi	r20, 0x40	; 64
    548c:	f4 2a       	or	r15, r20
    548e:	07 c0       	rjmp	.+14     	; 0x549e <vfprintf+0xe8>
    5490:	9c 36       	cpi	r25, 0x6C	; 108
    5492:	19 f4       	brne	.+6      	; 0x549a <vfprintf+0xe4>
    5494:	50 e8       	ldi	r21, 0x80	; 128
    5496:	f5 2a       	or	r15, r21
    5498:	02 c0       	rjmp	.+4      	; 0x549e <vfprintf+0xe8>
    549a:	98 36       	cpi	r25, 0x68	; 104
    549c:	49 f4       	brne	.+18     	; 0x54b0 <vfprintf+0xfa>
    549e:	f2 01       	movw	r30, r4
    54a0:	23 fd       	sbrc	r18, 3
    54a2:	95 91       	lpm	r25, Z+
    54a4:	23 ff       	sbrs	r18, 3
    54a6:	91 91       	ld	r25, Z+
    54a8:	2f 01       	movw	r4, r30
    54aa:	99 23       	and	r25, r25
    54ac:	09 f0       	breq	.+2      	; 0x54b0 <vfprintf+0xfa>
    54ae:	b8 cf       	rjmp	.-144    	; 0x5420 <vfprintf+0x6a>
    54b0:	89 2f       	mov	r24, r25
    54b2:	85 54       	subi	r24, 0x45	; 69
    54b4:	83 30       	cpi	r24, 0x03	; 3
    54b6:	18 f0       	brcs	.+6      	; 0x54be <vfprintf+0x108>
    54b8:	80 52       	subi	r24, 0x20	; 32
    54ba:	83 30       	cpi	r24, 0x03	; 3
    54bc:	38 f4       	brcc	.+14     	; 0x54cc <vfprintf+0x116>
    54be:	44 e0       	ldi	r20, 0x04	; 4
    54c0:	50 e0       	ldi	r21, 0x00	; 0
    54c2:	a4 0e       	add	r10, r20
    54c4:	b5 1e       	adc	r11, r21
    54c6:	5f e3       	ldi	r21, 0x3F	; 63
    54c8:	59 83       	std	Y+1, r21	; 0x01
    54ca:	0f c0       	rjmp	.+30     	; 0x54ea <vfprintf+0x134>
    54cc:	93 36       	cpi	r25, 0x63	; 99
    54ce:	31 f0       	breq	.+12     	; 0x54dc <vfprintf+0x126>
    54d0:	93 37       	cpi	r25, 0x73	; 115
    54d2:	79 f0       	breq	.+30     	; 0x54f2 <vfprintf+0x13c>
    54d4:	93 35       	cpi	r25, 0x53	; 83
    54d6:	09 f0       	breq	.+2      	; 0x54da <vfprintf+0x124>
    54d8:	56 c0       	rjmp	.+172    	; 0x5586 <vfprintf+0x1d0>
    54da:	20 c0       	rjmp	.+64     	; 0x551c <vfprintf+0x166>
    54dc:	f5 01       	movw	r30, r10
    54de:	80 81       	ld	r24, Z
    54e0:	89 83       	std	Y+1, r24	; 0x01
    54e2:	42 e0       	ldi	r20, 0x02	; 2
    54e4:	50 e0       	ldi	r21, 0x00	; 0
    54e6:	a4 0e       	add	r10, r20
    54e8:	b5 1e       	adc	r11, r21
    54ea:	61 01       	movw	r12, r2
    54ec:	01 e0       	ldi	r16, 0x01	; 1
    54ee:	10 e0       	ldi	r17, 0x00	; 0
    54f0:	12 c0       	rjmp	.+36     	; 0x5516 <vfprintf+0x160>
    54f2:	f5 01       	movw	r30, r10
    54f4:	c0 80       	ld	r12, Z
    54f6:	d1 80       	ldd	r13, Z+1	; 0x01
    54f8:	f6 fc       	sbrc	r15, 6
    54fa:	03 c0       	rjmp	.+6      	; 0x5502 <vfprintf+0x14c>
    54fc:	6f ef       	ldi	r22, 0xFF	; 255
    54fe:	7f ef       	ldi	r23, 0xFF	; 255
    5500:	02 c0       	rjmp	.+4      	; 0x5506 <vfprintf+0x150>
    5502:	69 2d       	mov	r22, r9
    5504:	70 e0       	ldi	r23, 0x00	; 0
    5506:	42 e0       	ldi	r20, 0x02	; 2
    5508:	50 e0       	ldi	r21, 0x00	; 0
    550a:	a4 0e       	add	r10, r20
    550c:	b5 1e       	adc	r11, r21
    550e:	c6 01       	movw	r24, r12
    5510:	0e 94 c3 2b 	call	0x5786	; 0x5786 <strnlen>
    5514:	8c 01       	movw	r16, r24
    5516:	5f e7       	ldi	r21, 0x7F	; 127
    5518:	f5 22       	and	r15, r21
    551a:	14 c0       	rjmp	.+40     	; 0x5544 <vfprintf+0x18e>
    551c:	f5 01       	movw	r30, r10
    551e:	c0 80       	ld	r12, Z
    5520:	d1 80       	ldd	r13, Z+1	; 0x01
    5522:	f6 fc       	sbrc	r15, 6
    5524:	03 c0       	rjmp	.+6      	; 0x552c <vfprintf+0x176>
    5526:	6f ef       	ldi	r22, 0xFF	; 255
    5528:	7f ef       	ldi	r23, 0xFF	; 255
    552a:	02 c0       	rjmp	.+4      	; 0x5530 <vfprintf+0x17a>
    552c:	69 2d       	mov	r22, r9
    552e:	70 e0       	ldi	r23, 0x00	; 0
    5530:	42 e0       	ldi	r20, 0x02	; 2
    5532:	50 e0       	ldi	r21, 0x00	; 0
    5534:	a4 0e       	add	r10, r20
    5536:	b5 1e       	adc	r11, r21
    5538:	c6 01       	movw	r24, r12
    553a:	0e 94 b8 2b 	call	0x5770	; 0x5770 <strnlen_P>
    553e:	8c 01       	movw	r16, r24
    5540:	50 e8       	ldi	r21, 0x80	; 128
    5542:	f5 2a       	or	r15, r21
    5544:	f3 fe       	sbrs	r15, 3
    5546:	07 c0       	rjmp	.+14     	; 0x5556 <vfprintf+0x1a0>
    5548:	1a c0       	rjmp	.+52     	; 0x557e <vfprintf+0x1c8>
    554a:	80 e2       	ldi	r24, 0x20	; 32
    554c:	90 e0       	ldi	r25, 0x00	; 0
    554e:	b3 01       	movw	r22, r6
    5550:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    5554:	ea 94       	dec	r14
    5556:	8e 2d       	mov	r24, r14
    5558:	90 e0       	ldi	r25, 0x00	; 0
    555a:	08 17       	cp	r16, r24
    555c:	19 07       	cpc	r17, r25
    555e:	a8 f3       	brcs	.-22     	; 0x554a <vfprintf+0x194>
    5560:	0e c0       	rjmp	.+28     	; 0x557e <vfprintf+0x1c8>
    5562:	f6 01       	movw	r30, r12
    5564:	f7 fc       	sbrc	r15, 7
    5566:	85 91       	lpm	r24, Z+
    5568:	f7 fe       	sbrs	r15, 7
    556a:	81 91       	ld	r24, Z+
    556c:	6f 01       	movw	r12, r30
    556e:	90 e0       	ldi	r25, 0x00	; 0
    5570:	b3 01       	movw	r22, r6
    5572:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    5576:	e1 10       	cpse	r14, r1
    5578:	ea 94       	dec	r14
    557a:	01 50       	subi	r16, 0x01	; 1
    557c:	10 40       	sbci	r17, 0x00	; 0
    557e:	01 15       	cp	r16, r1
    5580:	11 05       	cpc	r17, r1
    5582:	79 f7       	brne	.-34     	; 0x5562 <vfprintf+0x1ac>
    5584:	ea c0       	rjmp	.+468    	; 0x575a <vfprintf+0x3a4>
    5586:	94 36       	cpi	r25, 0x64	; 100
    5588:	11 f0       	breq	.+4      	; 0x558e <vfprintf+0x1d8>
    558a:	99 36       	cpi	r25, 0x69	; 105
    558c:	69 f5       	brne	.+90     	; 0x55e8 <vfprintf+0x232>
    558e:	f7 fe       	sbrs	r15, 7
    5590:	08 c0       	rjmp	.+16     	; 0x55a2 <vfprintf+0x1ec>
    5592:	f5 01       	movw	r30, r10
    5594:	20 81       	ld	r18, Z
    5596:	31 81       	ldd	r19, Z+1	; 0x01
    5598:	42 81       	ldd	r20, Z+2	; 0x02
    559a:	53 81       	ldd	r21, Z+3	; 0x03
    559c:	84 e0       	ldi	r24, 0x04	; 4
    559e:	90 e0       	ldi	r25, 0x00	; 0
    55a0:	0a c0       	rjmp	.+20     	; 0x55b6 <vfprintf+0x200>
    55a2:	f5 01       	movw	r30, r10
    55a4:	80 81       	ld	r24, Z
    55a6:	91 81       	ldd	r25, Z+1	; 0x01
    55a8:	9c 01       	movw	r18, r24
    55aa:	44 27       	eor	r20, r20
    55ac:	37 fd       	sbrc	r19, 7
    55ae:	40 95       	com	r20
    55b0:	54 2f       	mov	r21, r20
    55b2:	82 e0       	ldi	r24, 0x02	; 2
    55b4:	90 e0       	ldi	r25, 0x00	; 0
    55b6:	a8 0e       	add	r10, r24
    55b8:	b9 1e       	adc	r11, r25
    55ba:	9f e6       	ldi	r25, 0x6F	; 111
    55bc:	f9 22       	and	r15, r25
    55be:	57 ff       	sbrs	r21, 7
    55c0:	09 c0       	rjmp	.+18     	; 0x55d4 <vfprintf+0x21e>
    55c2:	50 95       	com	r21
    55c4:	40 95       	com	r20
    55c6:	30 95       	com	r19
    55c8:	21 95       	neg	r18
    55ca:	3f 4f       	sbci	r19, 0xFF	; 255
    55cc:	4f 4f       	sbci	r20, 0xFF	; 255
    55ce:	5f 4f       	sbci	r21, 0xFF	; 255
    55d0:	e0 e8       	ldi	r30, 0x80	; 128
    55d2:	fe 2a       	or	r15, r30
    55d4:	ca 01       	movw	r24, r20
    55d6:	b9 01       	movw	r22, r18
    55d8:	a1 01       	movw	r20, r2
    55da:	2a e0       	ldi	r18, 0x0A	; 10
    55dc:	30 e0       	ldi	r19, 0x00	; 0
    55de:	0e 94 fa 2b 	call	0x57f4	; 0x57f4 <__ultoa_invert>
    55e2:	d8 2e       	mov	r13, r24
    55e4:	d2 18       	sub	r13, r2
    55e6:	40 c0       	rjmp	.+128    	; 0x5668 <vfprintf+0x2b2>
    55e8:	95 37       	cpi	r25, 0x75	; 117
    55ea:	29 f4       	brne	.+10     	; 0x55f6 <vfprintf+0x240>
    55ec:	1f 2d       	mov	r17, r15
    55ee:	1f 7e       	andi	r17, 0xEF	; 239
    55f0:	2a e0       	ldi	r18, 0x0A	; 10
    55f2:	30 e0       	ldi	r19, 0x00	; 0
    55f4:	1d c0       	rjmp	.+58     	; 0x5630 <vfprintf+0x27a>
    55f6:	1f 2d       	mov	r17, r15
    55f8:	19 7f       	andi	r17, 0xF9	; 249
    55fa:	9f 36       	cpi	r25, 0x6F	; 111
    55fc:	61 f0       	breq	.+24     	; 0x5616 <vfprintf+0x260>
    55fe:	90 37       	cpi	r25, 0x70	; 112
    5600:	20 f4       	brcc	.+8      	; 0x560a <vfprintf+0x254>
    5602:	98 35       	cpi	r25, 0x58	; 88
    5604:	09 f0       	breq	.+2      	; 0x5608 <vfprintf+0x252>
    5606:	ac c0       	rjmp	.+344    	; 0x5760 <vfprintf+0x3aa>
    5608:	0f c0       	rjmp	.+30     	; 0x5628 <vfprintf+0x272>
    560a:	90 37       	cpi	r25, 0x70	; 112
    560c:	39 f0       	breq	.+14     	; 0x561c <vfprintf+0x266>
    560e:	98 37       	cpi	r25, 0x78	; 120
    5610:	09 f0       	breq	.+2      	; 0x5614 <vfprintf+0x25e>
    5612:	a6 c0       	rjmp	.+332    	; 0x5760 <vfprintf+0x3aa>
    5614:	04 c0       	rjmp	.+8      	; 0x561e <vfprintf+0x268>
    5616:	28 e0       	ldi	r18, 0x08	; 8
    5618:	30 e0       	ldi	r19, 0x00	; 0
    561a:	0a c0       	rjmp	.+20     	; 0x5630 <vfprintf+0x27a>
    561c:	10 61       	ori	r17, 0x10	; 16
    561e:	14 fd       	sbrc	r17, 4
    5620:	14 60       	ori	r17, 0x04	; 4
    5622:	20 e1       	ldi	r18, 0x10	; 16
    5624:	30 e0       	ldi	r19, 0x00	; 0
    5626:	04 c0       	rjmp	.+8      	; 0x5630 <vfprintf+0x27a>
    5628:	14 fd       	sbrc	r17, 4
    562a:	16 60       	ori	r17, 0x06	; 6
    562c:	20 e1       	ldi	r18, 0x10	; 16
    562e:	32 e0       	ldi	r19, 0x02	; 2
    5630:	17 ff       	sbrs	r17, 7
    5632:	08 c0       	rjmp	.+16     	; 0x5644 <vfprintf+0x28e>
    5634:	f5 01       	movw	r30, r10
    5636:	60 81       	ld	r22, Z
    5638:	71 81       	ldd	r23, Z+1	; 0x01
    563a:	82 81       	ldd	r24, Z+2	; 0x02
    563c:	93 81       	ldd	r25, Z+3	; 0x03
    563e:	44 e0       	ldi	r20, 0x04	; 4
    5640:	50 e0       	ldi	r21, 0x00	; 0
    5642:	08 c0       	rjmp	.+16     	; 0x5654 <vfprintf+0x29e>
    5644:	f5 01       	movw	r30, r10
    5646:	80 81       	ld	r24, Z
    5648:	91 81       	ldd	r25, Z+1	; 0x01
    564a:	bc 01       	movw	r22, r24
    564c:	80 e0       	ldi	r24, 0x00	; 0
    564e:	90 e0       	ldi	r25, 0x00	; 0
    5650:	42 e0       	ldi	r20, 0x02	; 2
    5652:	50 e0       	ldi	r21, 0x00	; 0
    5654:	a4 0e       	add	r10, r20
    5656:	b5 1e       	adc	r11, r21
    5658:	a1 01       	movw	r20, r2
    565a:	0e 94 fa 2b 	call	0x57f4	; 0x57f4 <__ultoa_invert>
    565e:	d8 2e       	mov	r13, r24
    5660:	d2 18       	sub	r13, r2
    5662:	8f e7       	ldi	r24, 0x7F	; 127
    5664:	f8 2e       	mov	r15, r24
    5666:	f1 22       	and	r15, r17
    5668:	f6 fe       	sbrs	r15, 6
    566a:	0b c0       	rjmp	.+22     	; 0x5682 <vfprintf+0x2cc>
    566c:	5e ef       	ldi	r21, 0xFE	; 254
    566e:	f5 22       	and	r15, r21
    5670:	d9 14       	cp	r13, r9
    5672:	38 f4       	brcc	.+14     	; 0x5682 <vfprintf+0x2cc>
    5674:	f4 fe       	sbrs	r15, 4
    5676:	07 c0       	rjmp	.+14     	; 0x5686 <vfprintf+0x2d0>
    5678:	f2 fc       	sbrc	r15, 2
    567a:	05 c0       	rjmp	.+10     	; 0x5686 <vfprintf+0x2d0>
    567c:	8f ee       	ldi	r24, 0xEF	; 239
    567e:	f8 22       	and	r15, r24
    5680:	02 c0       	rjmp	.+4      	; 0x5686 <vfprintf+0x2d0>
    5682:	1d 2d       	mov	r17, r13
    5684:	01 c0       	rjmp	.+2      	; 0x5688 <vfprintf+0x2d2>
    5686:	19 2d       	mov	r17, r9
    5688:	f4 fe       	sbrs	r15, 4
    568a:	0d c0       	rjmp	.+26     	; 0x56a6 <vfprintf+0x2f0>
    568c:	fe 01       	movw	r30, r28
    568e:	ed 0d       	add	r30, r13
    5690:	f1 1d       	adc	r31, r1
    5692:	80 81       	ld	r24, Z
    5694:	80 33       	cpi	r24, 0x30	; 48
    5696:	19 f4       	brne	.+6      	; 0x569e <vfprintf+0x2e8>
    5698:	99 ee       	ldi	r25, 0xE9	; 233
    569a:	f9 22       	and	r15, r25
    569c:	08 c0       	rjmp	.+16     	; 0x56ae <vfprintf+0x2f8>
    569e:	1f 5f       	subi	r17, 0xFF	; 255
    56a0:	f2 fe       	sbrs	r15, 2
    56a2:	05 c0       	rjmp	.+10     	; 0x56ae <vfprintf+0x2f8>
    56a4:	03 c0       	rjmp	.+6      	; 0x56ac <vfprintf+0x2f6>
    56a6:	8f 2d       	mov	r24, r15
    56a8:	86 78       	andi	r24, 0x86	; 134
    56aa:	09 f0       	breq	.+2      	; 0x56ae <vfprintf+0x2f8>
    56ac:	1f 5f       	subi	r17, 0xFF	; 255
    56ae:	0f 2d       	mov	r16, r15
    56b0:	f3 fc       	sbrc	r15, 3
    56b2:	14 c0       	rjmp	.+40     	; 0x56dc <vfprintf+0x326>
    56b4:	f0 fe       	sbrs	r15, 0
    56b6:	0f c0       	rjmp	.+30     	; 0x56d6 <vfprintf+0x320>
    56b8:	1e 15       	cp	r17, r14
    56ba:	10 f0       	brcs	.+4      	; 0x56c0 <vfprintf+0x30a>
    56bc:	9d 2c       	mov	r9, r13
    56be:	0b c0       	rjmp	.+22     	; 0x56d6 <vfprintf+0x320>
    56c0:	9d 2c       	mov	r9, r13
    56c2:	9e 0c       	add	r9, r14
    56c4:	91 1a       	sub	r9, r17
    56c6:	1e 2d       	mov	r17, r14
    56c8:	06 c0       	rjmp	.+12     	; 0x56d6 <vfprintf+0x320>
    56ca:	80 e2       	ldi	r24, 0x20	; 32
    56cc:	90 e0       	ldi	r25, 0x00	; 0
    56ce:	b3 01       	movw	r22, r6
    56d0:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    56d4:	1f 5f       	subi	r17, 0xFF	; 255
    56d6:	1e 15       	cp	r17, r14
    56d8:	c0 f3       	brcs	.-16     	; 0x56ca <vfprintf+0x314>
    56da:	04 c0       	rjmp	.+8      	; 0x56e4 <vfprintf+0x32e>
    56dc:	1e 15       	cp	r17, r14
    56de:	10 f4       	brcc	.+4      	; 0x56e4 <vfprintf+0x32e>
    56e0:	e1 1a       	sub	r14, r17
    56e2:	01 c0       	rjmp	.+2      	; 0x56e6 <vfprintf+0x330>
    56e4:	ee 24       	eor	r14, r14
    56e6:	04 ff       	sbrs	r16, 4
    56e8:	0f c0       	rjmp	.+30     	; 0x5708 <vfprintf+0x352>
    56ea:	80 e3       	ldi	r24, 0x30	; 48
    56ec:	90 e0       	ldi	r25, 0x00	; 0
    56ee:	b3 01       	movw	r22, r6
    56f0:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    56f4:	02 ff       	sbrs	r16, 2
    56f6:	1d c0       	rjmp	.+58     	; 0x5732 <vfprintf+0x37c>
    56f8:	01 fd       	sbrc	r16, 1
    56fa:	03 c0       	rjmp	.+6      	; 0x5702 <vfprintf+0x34c>
    56fc:	88 e7       	ldi	r24, 0x78	; 120
    56fe:	90 e0       	ldi	r25, 0x00	; 0
    5700:	0e c0       	rjmp	.+28     	; 0x571e <vfprintf+0x368>
    5702:	88 e5       	ldi	r24, 0x58	; 88
    5704:	90 e0       	ldi	r25, 0x00	; 0
    5706:	0b c0       	rjmp	.+22     	; 0x571e <vfprintf+0x368>
    5708:	80 2f       	mov	r24, r16
    570a:	86 78       	andi	r24, 0x86	; 134
    570c:	91 f0       	breq	.+36     	; 0x5732 <vfprintf+0x37c>
    570e:	01 ff       	sbrs	r16, 1
    5710:	02 c0       	rjmp	.+4      	; 0x5716 <vfprintf+0x360>
    5712:	8b e2       	ldi	r24, 0x2B	; 43
    5714:	01 c0       	rjmp	.+2      	; 0x5718 <vfprintf+0x362>
    5716:	80 e2       	ldi	r24, 0x20	; 32
    5718:	f7 fc       	sbrc	r15, 7
    571a:	8d e2       	ldi	r24, 0x2D	; 45
    571c:	90 e0       	ldi	r25, 0x00	; 0
    571e:	b3 01       	movw	r22, r6
    5720:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    5724:	06 c0       	rjmp	.+12     	; 0x5732 <vfprintf+0x37c>
    5726:	80 e3       	ldi	r24, 0x30	; 48
    5728:	90 e0       	ldi	r25, 0x00	; 0
    572a:	b3 01       	movw	r22, r6
    572c:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    5730:	9a 94       	dec	r9
    5732:	d9 14       	cp	r13, r9
    5734:	c0 f3       	brcs	.-16     	; 0x5726 <vfprintf+0x370>
    5736:	da 94       	dec	r13
    5738:	f1 01       	movw	r30, r2
    573a:	ed 0d       	add	r30, r13
    573c:	f1 1d       	adc	r31, r1
    573e:	80 81       	ld	r24, Z
    5740:	90 e0       	ldi	r25, 0x00	; 0
    5742:	b3 01       	movw	r22, r6
    5744:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    5748:	dd 20       	and	r13, r13
    574a:	a9 f7       	brne	.-22     	; 0x5736 <vfprintf+0x380>
    574c:	06 c0       	rjmp	.+12     	; 0x575a <vfprintf+0x3a4>
    574e:	80 e2       	ldi	r24, 0x20	; 32
    5750:	90 e0       	ldi	r25, 0x00	; 0
    5752:	b3 01       	movw	r22, r6
    5754:	0e 94 ce 2b 	call	0x579c	; 0x579c <fputc>
    5758:	ea 94       	dec	r14
    575a:	ee 20       	and	r14, r14
    575c:	c1 f7       	brne	.-16     	; 0x574e <vfprintf+0x398>
    575e:	43 ce       	rjmp	.-890    	; 0x53e6 <vfprintf+0x30>
    5760:	f3 01       	movw	r30, r6
    5762:	66 81       	ldd	r22, Z+6	; 0x06
    5764:	77 81       	ldd	r23, Z+7	; 0x07
    5766:	cb 01       	movw	r24, r22
    5768:	2b 96       	adiw	r28, 0x0b	; 11
    576a:	e2 e1       	ldi	r30, 0x12	; 18
    576c:	0c 94 9c 29 	jmp	0x5338	; 0x5338 <__epilogue_restores__>

00005770 <strnlen_P>:
    5770:	fc 01       	movw	r30, r24
    5772:	05 90       	lpm	r0, Z+
    5774:	61 50       	subi	r22, 0x01	; 1
    5776:	70 40       	sbci	r23, 0x00	; 0
    5778:	01 10       	cpse	r0, r1
    577a:	d8 f7       	brcc	.-10     	; 0x5772 <strnlen_P+0x2>
    577c:	80 95       	com	r24
    577e:	90 95       	com	r25
    5780:	8e 0f       	add	r24, r30
    5782:	9f 1f       	adc	r25, r31
    5784:	08 95       	ret

00005786 <strnlen>:
    5786:	fc 01       	movw	r30, r24
    5788:	61 50       	subi	r22, 0x01	; 1
    578a:	70 40       	sbci	r23, 0x00	; 0
    578c:	01 90       	ld	r0, Z+
    578e:	01 10       	cpse	r0, r1
    5790:	d8 f7       	brcc	.-10     	; 0x5788 <strnlen+0x2>
    5792:	80 95       	com	r24
    5794:	90 95       	com	r25
    5796:	8e 0f       	add	r24, r30
    5798:	9f 1f       	adc	r25, r31
    579a:	08 95       	ret

0000579c <fputc>:
    579c:	0f 93       	push	r16
    579e:	1f 93       	push	r17
    57a0:	cf 93       	push	r28
    57a2:	df 93       	push	r29
    57a4:	8c 01       	movw	r16, r24
    57a6:	eb 01       	movw	r28, r22
    57a8:	8b 81       	ldd	r24, Y+3	; 0x03
    57aa:	81 ff       	sbrs	r24, 1
    57ac:	1b c0       	rjmp	.+54     	; 0x57e4 <fputc+0x48>
    57ae:	82 ff       	sbrs	r24, 2
    57b0:	0d c0       	rjmp	.+26     	; 0x57cc <fputc+0x30>
    57b2:	2e 81       	ldd	r18, Y+6	; 0x06
    57b4:	3f 81       	ldd	r19, Y+7	; 0x07
    57b6:	8c 81       	ldd	r24, Y+4	; 0x04
    57b8:	9d 81       	ldd	r25, Y+5	; 0x05
    57ba:	28 17       	cp	r18, r24
    57bc:	39 07       	cpc	r19, r25
    57be:	64 f4       	brge	.+24     	; 0x57d8 <fputc+0x3c>
    57c0:	e8 81       	ld	r30, Y
    57c2:	f9 81       	ldd	r31, Y+1	; 0x01
    57c4:	01 93       	st	Z+, r16
    57c6:	f9 83       	std	Y+1, r31	; 0x01
    57c8:	e8 83       	st	Y, r30
    57ca:	06 c0       	rjmp	.+12     	; 0x57d8 <fputc+0x3c>
    57cc:	e8 85       	ldd	r30, Y+8	; 0x08
    57ce:	f9 85       	ldd	r31, Y+9	; 0x09
    57d0:	80 2f       	mov	r24, r16
    57d2:	09 95       	icall
    57d4:	89 2b       	or	r24, r25
    57d6:	31 f4       	brne	.+12     	; 0x57e4 <fputc+0x48>
    57d8:	8e 81       	ldd	r24, Y+6	; 0x06
    57da:	9f 81       	ldd	r25, Y+7	; 0x07
    57dc:	01 96       	adiw	r24, 0x01	; 1
    57de:	9f 83       	std	Y+7, r25	; 0x07
    57e0:	8e 83       	std	Y+6, r24	; 0x06
    57e2:	02 c0       	rjmp	.+4      	; 0x57e8 <fputc+0x4c>
    57e4:	0f ef       	ldi	r16, 0xFF	; 255
    57e6:	1f ef       	ldi	r17, 0xFF	; 255
    57e8:	c8 01       	movw	r24, r16
    57ea:	df 91       	pop	r29
    57ec:	cf 91       	pop	r28
    57ee:	1f 91       	pop	r17
    57f0:	0f 91       	pop	r16
    57f2:	08 95       	ret

000057f4 <__ultoa_invert>:
    57f4:	fa 01       	movw	r30, r20
    57f6:	aa 27       	eor	r26, r26
    57f8:	28 30       	cpi	r18, 0x08	; 8
    57fa:	51 f1       	breq	.+84     	; 0x5850 <__ultoa_invert+0x5c>
    57fc:	20 31       	cpi	r18, 0x10	; 16
    57fe:	81 f1       	breq	.+96     	; 0x5860 <__ultoa_invert+0x6c>
    5800:	e8 94       	clt
    5802:	6f 93       	push	r22
    5804:	6e 7f       	andi	r22, 0xFE	; 254
    5806:	6e 5f       	subi	r22, 0xFE	; 254
    5808:	7f 4f       	sbci	r23, 0xFF	; 255
    580a:	8f 4f       	sbci	r24, 0xFF	; 255
    580c:	9f 4f       	sbci	r25, 0xFF	; 255
    580e:	af 4f       	sbci	r26, 0xFF	; 255
    5810:	b1 e0       	ldi	r27, 0x01	; 1
    5812:	3e d0       	rcall	.+124    	; 0x5890 <__ultoa_invert+0x9c>
    5814:	b4 e0       	ldi	r27, 0x04	; 4
    5816:	3c d0       	rcall	.+120    	; 0x5890 <__ultoa_invert+0x9c>
    5818:	67 0f       	add	r22, r23
    581a:	78 1f       	adc	r23, r24
    581c:	89 1f       	adc	r24, r25
    581e:	9a 1f       	adc	r25, r26
    5820:	a1 1d       	adc	r26, r1
    5822:	68 0f       	add	r22, r24
    5824:	79 1f       	adc	r23, r25
    5826:	8a 1f       	adc	r24, r26
    5828:	91 1d       	adc	r25, r1
    582a:	a1 1d       	adc	r26, r1
    582c:	6a 0f       	add	r22, r26
    582e:	71 1d       	adc	r23, r1
    5830:	81 1d       	adc	r24, r1
    5832:	91 1d       	adc	r25, r1
    5834:	a1 1d       	adc	r26, r1
    5836:	20 d0       	rcall	.+64     	; 0x5878 <__ultoa_invert+0x84>
    5838:	09 f4       	brne	.+2      	; 0x583c <__ultoa_invert+0x48>
    583a:	68 94       	set
    583c:	3f 91       	pop	r19
    583e:	2a e0       	ldi	r18, 0x0A	; 10
    5840:	26 9f       	mul	r18, r22
    5842:	11 24       	eor	r1, r1
    5844:	30 19       	sub	r19, r0
    5846:	30 5d       	subi	r19, 0xD0	; 208
    5848:	31 93       	st	Z+, r19
    584a:	de f6       	brtc	.-74     	; 0x5802 <__ultoa_invert+0xe>
    584c:	cf 01       	movw	r24, r30
    584e:	08 95       	ret
    5850:	46 2f       	mov	r20, r22
    5852:	47 70       	andi	r20, 0x07	; 7
    5854:	40 5d       	subi	r20, 0xD0	; 208
    5856:	41 93       	st	Z+, r20
    5858:	b3 e0       	ldi	r27, 0x03	; 3
    585a:	0f d0       	rcall	.+30     	; 0x587a <__ultoa_invert+0x86>
    585c:	c9 f7       	brne	.-14     	; 0x5850 <__ultoa_invert+0x5c>
    585e:	f6 cf       	rjmp	.-20     	; 0x584c <__ultoa_invert+0x58>
    5860:	46 2f       	mov	r20, r22
    5862:	4f 70       	andi	r20, 0x0F	; 15
    5864:	40 5d       	subi	r20, 0xD0	; 208
    5866:	4a 33       	cpi	r20, 0x3A	; 58
    5868:	18 f0       	brcs	.+6      	; 0x5870 <__ultoa_invert+0x7c>
    586a:	49 5d       	subi	r20, 0xD9	; 217
    586c:	31 fd       	sbrc	r19, 1
    586e:	40 52       	subi	r20, 0x20	; 32
    5870:	41 93       	st	Z+, r20
    5872:	02 d0       	rcall	.+4      	; 0x5878 <__ultoa_invert+0x84>
    5874:	a9 f7       	brne	.-22     	; 0x5860 <__ultoa_invert+0x6c>
    5876:	ea cf       	rjmp	.-44     	; 0x584c <__ultoa_invert+0x58>
    5878:	b4 e0       	ldi	r27, 0x04	; 4
    587a:	a6 95       	lsr	r26
    587c:	97 95       	ror	r25
    587e:	87 95       	ror	r24
    5880:	77 95       	ror	r23
    5882:	67 95       	ror	r22
    5884:	ba 95       	dec	r27
    5886:	c9 f7       	brne	.-14     	; 0x587a <__ultoa_invert+0x86>
    5888:	00 97       	sbiw	r24, 0x00	; 0
    588a:	61 05       	cpc	r22, r1
    588c:	71 05       	cpc	r23, r1
    588e:	08 95       	ret
    5890:	9b 01       	movw	r18, r22
    5892:	ac 01       	movw	r20, r24
    5894:	0a 2e       	mov	r0, r26
    5896:	06 94       	lsr	r0
    5898:	57 95       	ror	r21
    589a:	47 95       	ror	r20
    589c:	37 95       	ror	r19
    589e:	27 95       	ror	r18
    58a0:	ba 95       	dec	r27
    58a2:	c9 f7       	brne	.-14     	; 0x5896 <__ultoa_invert+0xa2>
    58a4:	62 0f       	add	r22, r18
    58a6:	73 1f       	adc	r23, r19
    58a8:	84 1f       	adc	r24, r20
    58aa:	95 1f       	adc	r25, r21
    58ac:	a0 1d       	adc	r26, r0
    58ae:	08 95       	ret

000058b0 <_exit>:
    58b0:	f8 94       	cli

000058b2 <__stop_program>:
    58b2:	ff cf       	rjmp	.-2      	; 0x58b2 <__stop_program>
