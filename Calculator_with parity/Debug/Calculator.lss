
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005550  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000148  00800060  00005550  000055e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000087  008001a8  008001a8  0000572c  2**0
                  ALLOC
  3 .stab         00002c28  00000000  00000000  0000572c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000155d  00000000  00000000  00008354  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c0  00000000  00000000  000098b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000020f  00000000  00000000  00009a71  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000296c  00000000  00000000  00009c80  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013f0  00000000  00000000  0000c5ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000012da  00000000  00000000  0000d9dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001e0  00000000  00000000  0000ecb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000033c  00000000  00000000  0000ee98  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000184b  00000000  00000000  0000f1d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  00010a1f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e5       	ldi	r30, 0x50	; 80
      68:	f5 e5       	ldi	r31, 0x55	; 85
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 3a       	cpi	r26, 0xA8	; 168
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a8 ea       	ldi	r26, 0xA8	; 168
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 32       	cpi	r26, 0x2F	; 47
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 57 27 	call	0x4eae	; 0x4eae <main>
      8a:	0c 94 a6 2a 	jmp	0x554c	; 0x554c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 ce 27 	jmp	0x4f9c	; 0x4f9c <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 ea 27 	jmp	0x4fd4	; 0x4fd4 <__epilogue_restores__>

00000288 <__fixunssfsi>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	1f 93       	push	r17
     290:	7b 01       	movw	r14, r22
     292:	8c 01       	movw	r16, r24
     294:	20 e0       	ldi	r18, 0x00	; 0
     296:	30 e0       	ldi	r19, 0x00	; 0
     298:	40 e0       	ldi	r20, 0x00	; 0
     29a:	5f e4       	ldi	r21, 0x4F	; 79
     29c:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <__gesf2>
     2a0:	88 23       	and	r24, r24
     2a2:	8c f0       	brlt	.+34     	; 0x2c6 <__fixunssfsi+0x3e>
     2a4:	c8 01       	movw	r24, r16
     2a6:	b7 01       	movw	r22, r14
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	5f e4       	ldi	r21, 0x4F	; 79
     2b0:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <__subsf3>
     2b4:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <__fixsfsi>
     2b8:	9b 01       	movw	r18, r22
     2ba:	ac 01       	movw	r20, r24
     2bc:	20 50       	subi	r18, 0x00	; 0
     2be:	30 40       	sbci	r19, 0x00	; 0
     2c0:	40 40       	sbci	r20, 0x00	; 0
     2c2:	50 48       	sbci	r21, 0x80	; 128
     2c4:	06 c0       	rjmp	.+12     	; 0x2d2 <__fixunssfsi+0x4a>
     2c6:	c8 01       	movw	r24, r16
     2c8:	b7 01       	movw	r22, r14
     2ca:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <__fixsfsi>
     2ce:	9b 01       	movw	r18, r22
     2d0:	ac 01       	movw	r20, r24
     2d2:	b9 01       	movw	r22, r18
     2d4:	ca 01       	movw	r24, r20
     2d6:	1f 91       	pop	r17
     2d8:	0f 91       	pop	r16
     2da:	ff 90       	pop	r15
     2dc:	ef 90       	pop	r14
     2de:	08 95       	ret

000002e0 <__divdi3>:
     2e0:	a2 e7       	ldi	r26, 0x72	; 114
     2e2:	b0 e0       	ldi	r27, 0x00	; 0
     2e4:	e6 e7       	ldi	r30, 0x76	; 118
     2e6:	f1 e0       	ldi	r31, 0x01	; 1
     2e8:	0c 94 ce 27 	jmp	0x4f9c	; 0x4f9c <__prologue_saves__>
     2ec:	98 2e       	mov	r9, r24
     2ee:	89 2e       	mov	r8, r25
     2f0:	71 2e       	mov	r7, r17
     2f2:	88 e0       	ldi	r24, 0x08	; 8
     2f4:	fe 01       	movw	r30, r28
     2f6:	31 96       	adiw	r30, 0x01	; 1
     2f8:	df 01       	movw	r26, r30
     2fa:	68 2e       	mov	r6, r24
     2fc:	1d 92       	st	X+, r1
     2fe:	6a 94       	dec	r6
     300:	e9 f7       	brne	.-6      	; 0x2fc <__divdi3+0x1c>
     302:	29 83       	std	Y+1, r18	; 0x01
     304:	3a 83       	std	Y+2, r19	; 0x02
     306:	4b 83       	std	Y+3, r20	; 0x03
     308:	5c 83       	std	Y+4, r21	; 0x04
     30a:	6d 83       	std	Y+5, r22	; 0x05
     30c:	7e 83       	std	Y+6, r23	; 0x06
     30e:	9f 82       	std	Y+7, r9	; 0x07
     310:	98 87       	std	Y+8, r25	; 0x08
     312:	fe 01       	movw	r30, r28
     314:	39 96       	adiw	r30, 0x09	; 9
     316:	df 01       	movw	r26, r30
     318:	1d 92       	st	X+, r1
     31a:	8a 95       	dec	r24
     31c:	e9 f7       	brne	.-6      	; 0x318 <__divdi3+0x38>
     31e:	a9 86       	std	Y+9, r10	; 0x09
     320:	ba 86       	std	Y+10, r11	; 0x0a
     322:	cb 86       	std	Y+11, r12	; 0x0b
     324:	dc 86       	std	Y+12, r13	; 0x0c
     326:	ed 86       	std	Y+13, r14	; 0x0d
     328:	fe 86       	std	Y+14, r15	; 0x0e
     32a:	0f 87       	std	Y+15, r16	; 0x0f
     32c:	18 8b       	std	Y+16, r17	; 0x10
     32e:	8d 81       	ldd	r24, Y+5	; 0x05
     330:	9e 81       	ldd	r25, Y+6	; 0x06
     332:	af 81       	ldd	r26, Y+7	; 0x07
     334:	b8 85       	ldd	r27, Y+8	; 0x08
     336:	b7 fd       	sbrc	r27, 7
     338:	07 c0       	rjmp	.+14     	; 0x348 <__divdi3+0x68>
     33a:	e1 96       	adiw	r28, 0x31	; 49
     33c:	1c ae       	std	Y+60, r1	; 0x3c
     33e:	1d ae       	std	Y+61, r1	; 0x3d
     340:	1e ae       	std	Y+62, r1	; 0x3e
     342:	1f ae       	std	Y+63, r1	; 0x3f
     344:	e1 97       	sbiw	r28, 0x31	; 49
     346:	64 c0       	rjmp	.+200    	; 0x410 <__divdi3+0x130>
     348:	21 95       	neg	r18
     34a:	81 e0       	ldi	r24, 0x01	; 1
     34c:	12 16       	cp	r1, r18
     34e:	08 f0       	brcs	.+2      	; 0x352 <__divdi3+0x72>
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	31 95       	neg	r19
     354:	91 e0       	ldi	r25, 0x01	; 1
     356:	13 16       	cp	r1, r19
     358:	08 f0       	brcs	.+2      	; 0x35c <__divdi3+0x7c>
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	b3 2f       	mov	r27, r19
     35e:	b8 1b       	sub	r27, r24
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	3b 17       	cp	r19, r27
     364:	08 f0       	brcs	.+2      	; 0x368 <__divdi3+0x88>
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	98 2b       	or	r25, r24
     36a:	41 95       	neg	r20
     36c:	31 e0       	ldi	r19, 0x01	; 1
     36e:	14 16       	cp	r1, r20
     370:	08 f0       	brcs	.+2      	; 0x374 <__divdi3+0x94>
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	a4 2f       	mov	r26, r20
     376:	a9 1b       	sub	r26, r25
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	4a 17       	cp	r20, r26
     37c:	08 f0       	brcs	.+2      	; 0x380 <__divdi3+0xa0>
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	38 2b       	or	r19, r24
     382:	51 95       	neg	r21
     384:	91 e0       	ldi	r25, 0x01	; 1
     386:	15 16       	cp	r1, r21
     388:	08 f0       	brcs	.+2      	; 0x38c <__divdi3+0xac>
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	f5 2f       	mov	r31, r21
     38e:	f3 1b       	sub	r31, r19
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	5f 17       	cp	r21, r31
     394:	08 f0       	brcs	.+2      	; 0x398 <__divdi3+0xb8>
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	98 2b       	or	r25, r24
     39a:	61 95       	neg	r22
     39c:	31 e0       	ldi	r19, 0x01	; 1
     39e:	16 16       	cp	r1, r22
     3a0:	08 f0       	brcs	.+2      	; 0x3a4 <__divdi3+0xc4>
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	e6 2f       	mov	r30, r22
     3a6:	e9 1b       	sub	r30, r25
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	6e 17       	cp	r22, r30
     3ac:	08 f0       	brcs	.+2      	; 0x3b0 <__divdi3+0xd0>
     3ae:	80 e0       	ldi	r24, 0x00	; 0
     3b0:	38 2b       	or	r19, r24
     3b2:	71 95       	neg	r23
     3b4:	41 e0       	ldi	r20, 0x01	; 1
     3b6:	17 16       	cp	r1, r23
     3b8:	08 f0       	brcs	.+2      	; 0x3bc <__divdi3+0xdc>
     3ba:	40 e0       	ldi	r20, 0x00	; 0
     3bc:	57 2f       	mov	r21, r23
     3be:	53 1b       	sub	r21, r19
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	75 17       	cp	r23, r21
     3c4:	08 f0       	brcs	.+2      	; 0x3c8 <__divdi3+0xe8>
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	48 2b       	or	r20, r24
     3ca:	89 2d       	mov	r24, r9
     3cc:	81 95       	neg	r24
     3ce:	91 e0       	ldi	r25, 0x01	; 1
     3d0:	18 16       	cp	r1, r24
     3d2:	08 f0       	brcs	.+2      	; 0x3d6 <__divdi3+0xf6>
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	68 2e       	mov	r6, r24
     3d8:	64 1a       	sub	r6, r20
     3da:	46 2d       	mov	r20, r6
     3dc:	31 e0       	ldi	r19, 0x01	; 1
     3de:	86 15       	cp	r24, r6
     3e0:	08 f0       	brcs	.+2      	; 0x3e4 <__divdi3+0x104>
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	93 2b       	or	r25, r19
     3e6:	88 2d       	mov	r24, r8
     3e8:	81 95       	neg	r24
     3ea:	89 1b       	sub	r24, r25
     3ec:	29 83       	std	Y+1, r18	; 0x01
     3ee:	ba 83       	std	Y+2, r27	; 0x02
     3f0:	ab 83       	std	Y+3, r26	; 0x03
     3f2:	fc 83       	std	Y+4, r31	; 0x04
     3f4:	ed 83       	std	Y+5, r30	; 0x05
     3f6:	5e 83       	std	Y+6, r21	; 0x06
     3f8:	4f 83       	std	Y+7, r20	; 0x07
     3fa:	88 87       	std	Y+8, r24	; 0x08
     3fc:	2f ef       	ldi	r18, 0xFF	; 255
     3fe:	3f ef       	ldi	r19, 0xFF	; 255
     400:	4f ef       	ldi	r20, 0xFF	; 255
     402:	5f ef       	ldi	r21, 0xFF	; 255
     404:	e1 96       	adiw	r28, 0x31	; 49
     406:	2c af       	std	Y+60, r18	; 0x3c
     408:	3d af       	std	Y+61, r19	; 0x3d
     40a:	4e af       	std	Y+62, r20	; 0x3e
     40c:	5f af       	std	Y+63, r21	; 0x3f
     40e:	e1 97       	sbiw	r28, 0x31	; 49
     410:	8d 85       	ldd	r24, Y+13	; 0x0d
     412:	9e 85       	ldd	r25, Y+14	; 0x0e
     414:	af 85       	ldd	r26, Y+15	; 0x0f
     416:	b8 89       	ldd	r27, Y+16	; 0x10
     418:	b7 ff       	sbrs	r27, 7
     41a:	6a c0       	rjmp	.+212    	; 0x4f0 <__divdi3+0x210>
     41c:	e1 96       	adiw	r28, 0x31	; 49
     41e:	4c ad       	ldd	r20, Y+60	; 0x3c
     420:	5d ad       	ldd	r21, Y+61	; 0x3d
     422:	6e ad       	ldd	r22, Y+62	; 0x3e
     424:	7f ad       	ldd	r23, Y+63	; 0x3f
     426:	e1 97       	sbiw	r28, 0x31	; 49
     428:	40 95       	com	r20
     42a:	50 95       	com	r21
     42c:	60 95       	com	r22
     42e:	70 95       	com	r23
     430:	e1 96       	adiw	r28, 0x31	; 49
     432:	4c af       	std	Y+60, r20	; 0x3c
     434:	5d af       	std	Y+61, r21	; 0x3d
     436:	6e af       	std	Y+62, r22	; 0x3e
     438:	7f af       	std	Y+63, r23	; 0x3f
     43a:	e1 97       	sbiw	r28, 0x31	; 49
     43c:	a1 94       	neg	r10
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	1a 14       	cp	r1, r10
     442:	08 f0       	brcs	.+2      	; 0x446 <__divdi3+0x166>
     444:	80 e0       	ldi	r24, 0x00	; 0
     446:	b1 94       	neg	r11
     448:	91 e0       	ldi	r25, 0x01	; 1
     44a:	1b 14       	cp	r1, r11
     44c:	08 f0       	brcs	.+2      	; 0x450 <__divdi3+0x170>
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	6b 2d       	mov	r22, r11
     452:	68 1b       	sub	r22, r24
     454:	81 e0       	ldi	r24, 0x01	; 1
     456:	b6 16       	cp	r11, r22
     458:	08 f0       	brcs	.+2      	; 0x45c <__divdi3+0x17c>
     45a:	80 e0       	ldi	r24, 0x00	; 0
     45c:	98 2b       	or	r25, r24
     45e:	c1 94       	neg	r12
     460:	21 e0       	ldi	r18, 0x01	; 1
     462:	1c 14       	cp	r1, r12
     464:	08 f0       	brcs	.+2      	; 0x468 <__divdi3+0x188>
     466:	20 e0       	ldi	r18, 0x00	; 0
     468:	5c 2d       	mov	r21, r12
     46a:	59 1b       	sub	r21, r25
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	c5 16       	cp	r12, r21
     470:	08 f0       	brcs	.+2      	; 0x474 <__divdi3+0x194>
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	28 2b       	or	r18, r24
     476:	d1 94       	neg	r13
     478:	91 e0       	ldi	r25, 0x01	; 1
     47a:	1d 14       	cp	r1, r13
     47c:	08 f0       	brcs	.+2      	; 0x480 <__divdi3+0x1a0>
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	4d 2d       	mov	r20, r13
     482:	42 1b       	sub	r20, r18
     484:	81 e0       	ldi	r24, 0x01	; 1
     486:	d4 16       	cp	r13, r20
     488:	08 f0       	brcs	.+2      	; 0x48c <__divdi3+0x1ac>
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	98 2b       	or	r25, r24
     48e:	e1 94       	neg	r14
     490:	21 e0       	ldi	r18, 0x01	; 1
     492:	1e 14       	cp	r1, r14
     494:	08 f0       	brcs	.+2      	; 0x498 <__divdi3+0x1b8>
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	3e 2d       	mov	r19, r14
     49a:	39 1b       	sub	r19, r25
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	e3 16       	cp	r14, r19
     4a0:	08 f0       	brcs	.+2      	; 0x4a4 <__divdi3+0x1c4>
     4a2:	80 e0       	ldi	r24, 0x00	; 0
     4a4:	28 2b       	or	r18, r24
     4a6:	f1 94       	neg	r15
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	1f 14       	cp	r1, r15
     4ac:	08 f0       	brcs	.+2      	; 0x4b0 <__divdi3+0x1d0>
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	7f 2d       	mov	r23, r15
     4b2:	72 1b       	sub	r23, r18
     4b4:	27 2f       	mov	r18, r23
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	f7 16       	cp	r15, r23
     4ba:	08 f0       	brcs	.+2      	; 0x4be <__divdi3+0x1de>
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	98 2b       	or	r25, r24
     4c0:	01 95       	neg	r16
     4c2:	11 e0       	ldi	r17, 0x01	; 1
     4c4:	10 16       	cp	r1, r16
     4c6:	08 f0       	brcs	.+2      	; 0x4ca <__divdi3+0x1ea>
     4c8:	10 e0       	ldi	r17, 0x00	; 0
     4ca:	80 2f       	mov	r24, r16
     4cc:	89 1b       	sub	r24, r25
     4ce:	98 2f       	mov	r25, r24
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	09 17       	cp	r16, r25
     4d4:	08 f0       	brcs	.+2      	; 0x4d8 <__divdi3+0x1f8>
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	18 2b       	or	r17, r24
     4da:	87 2d       	mov	r24, r7
     4dc:	81 95       	neg	r24
     4de:	81 1b       	sub	r24, r17
     4e0:	a9 86       	std	Y+9, r10	; 0x09
     4e2:	6a 87       	std	Y+10, r22	; 0x0a
     4e4:	5b 87       	std	Y+11, r21	; 0x0b
     4e6:	4c 87       	std	Y+12, r20	; 0x0c
     4e8:	3d 87       	std	Y+13, r19	; 0x0d
     4ea:	2e 87       	std	Y+14, r18	; 0x0e
     4ec:	9f 87       	std	Y+15, r25	; 0x0f
     4ee:	88 8b       	std	Y+16, r24	; 0x10
     4f0:	99 81       	ldd	r25, Y+1	; 0x01
     4f2:	2a 81       	ldd	r18, Y+2	; 0x02
     4f4:	3b 81       	ldd	r19, Y+3	; 0x03
     4f6:	4c 81       	ldd	r20, Y+4	; 0x04
     4f8:	5d 81       	ldd	r21, Y+5	; 0x05
     4fa:	6e 81       	ldd	r22, Y+6	; 0x06
     4fc:	7f 81       	ldd	r23, Y+7	; 0x07
     4fe:	a8 85       	ldd	r26, Y+8	; 0x08
     500:	b9 85       	ldd	r27, Y+9	; 0x09
     502:	1a 85       	ldd	r17, Y+10	; 0x0a
     504:	0b 85       	ldd	r16, Y+11	; 0x0b
     506:	fc 84       	ldd	r15, Y+12	; 0x0c
     508:	ed 84       	ldd	r14, Y+13	; 0x0d
     50a:	de 84       	ldd	r13, Y+14	; 0x0e
     50c:	cf 84       	ldd	r12, Y+15	; 0x0f
     50e:	b8 88       	ldd	r11, Y+16	; 0x10
     510:	88 e0       	ldi	r24, 0x08	; 8
     512:	e1 e1       	ldi	r30, 0x11	; 17
     514:	8e 2e       	mov	r8, r30
     516:	91 2c       	mov	r9, r1
     518:	8c 0e       	add	r8, r28
     51a:	9d 1e       	adc	r9, r29
     51c:	f4 01       	movw	r30, r8
     51e:	68 2e       	mov	r6, r24
     520:	11 92       	st	Z+, r1
     522:	6a 94       	dec	r6
     524:	e9 f7       	brne	.-6      	; 0x520 <__divdi3+0x240>
     526:	99 8b       	std	Y+17, r25	; 0x11
     528:	2a 8b       	std	Y+18, r18	; 0x12
     52a:	3b 8b       	std	Y+19, r19	; 0x13
     52c:	4c 8b       	std	Y+20, r20	; 0x14
     52e:	5d 8b       	std	Y+21, r21	; 0x15
     530:	6e 8b       	std	Y+22, r22	; 0x16
     532:	7f 8b       	std	Y+23, r23	; 0x17
     534:	a8 8f       	std	Y+24, r26	; 0x18
     536:	9e 01       	movw	r18, r28
     538:	27 5e       	subi	r18, 0xE7	; 231
     53a:	3f 4f       	sbci	r19, 0xFF	; 255
     53c:	f9 01       	movw	r30, r18
     53e:	11 92       	st	Z+, r1
     540:	8a 95       	dec	r24
     542:	e9 f7       	brne	.-6      	; 0x53e <__divdi3+0x25e>
     544:	b9 8f       	std	Y+25, r27	; 0x19
     546:	1a 8f       	std	Y+26, r17	; 0x1a
     548:	0b 8f       	std	Y+27, r16	; 0x1b
     54a:	fc 8e       	std	Y+28, r15	; 0x1c
     54c:	ed 8e       	std	Y+29, r14	; 0x1d
     54e:	de 8e       	std	Y+30, r13	; 0x1e
     550:	cf 8e       	std	Y+31, r12	; 0x1f
     552:	b8 a2       	std	Y+32, r11	; 0x20
     554:	29 8c       	ldd	r2, Y+25	; 0x19
     556:	3a 8c       	ldd	r3, Y+26	; 0x1a
     558:	4b 8c       	ldd	r4, Y+27	; 0x1b
     55a:	5c 8c       	ldd	r5, Y+28	; 0x1c
     55c:	ed 8c       	ldd	r14, Y+29	; 0x1d
     55e:	fe 8c       	ldd	r15, Y+30	; 0x1e
     560:	0f 8d       	ldd	r16, Y+31	; 0x1f
     562:	18 a1       	ldd	r17, Y+32	; 0x20
     564:	69 88       	ldd	r6, Y+17	; 0x11
     566:	7a 88       	ldd	r7, Y+18	; 0x12
     568:	8b 88       	ldd	r8, Y+19	; 0x13
     56a:	9c 88       	ldd	r9, Y+20	; 0x14
     56c:	21 96       	adiw	r28, 0x01	; 1
     56e:	6c ae       	std	Y+60, r6	; 0x3c
     570:	7d ae       	std	Y+61, r7	; 0x3d
     572:	8e ae       	std	Y+62, r8	; 0x3e
     574:	9f ae       	std	Y+63, r9	; 0x3f
     576:	21 97       	sbiw	r28, 0x01	; 1
     578:	6d 88       	ldd	r6, Y+21	; 0x15
     57a:	7e 88       	ldd	r7, Y+22	; 0x16
     57c:	8f 88       	ldd	r8, Y+23	; 0x17
     57e:	98 8c       	ldd	r9, Y+24	; 0x18
     580:	e1 14       	cp	r14, r1
     582:	f1 04       	cpc	r15, r1
     584:	01 05       	cpc	r16, r1
     586:	11 05       	cpc	r17, r1
     588:	09 f0       	breq	.+2      	; 0x58c <__divdi3+0x2ac>
     58a:	d9 c3       	rjmp	.+1970   	; 0xd3e <__stack+0x4df>
     58c:	62 14       	cp	r6, r2
     58e:	73 04       	cpc	r7, r3
     590:	84 04       	cpc	r8, r4
     592:	95 04       	cpc	r9, r5
     594:	08 f0       	brcs	.+2      	; 0x598 <__divdi3+0x2b8>
     596:	57 c1       	rjmp	.+686    	; 0x846 <__divdi3+0x566>
     598:	00 e0       	ldi	r16, 0x00	; 0
     59a:	20 16       	cp	r2, r16
     59c:	00 e0       	ldi	r16, 0x00	; 0
     59e:	30 06       	cpc	r3, r16
     5a0:	01 e0       	ldi	r16, 0x01	; 1
     5a2:	40 06       	cpc	r4, r16
     5a4:	00 e0       	ldi	r16, 0x00	; 0
     5a6:	50 06       	cpc	r5, r16
     5a8:	88 f4       	brcc	.+34     	; 0x5cc <__divdi3+0x2ec>
     5aa:	1f ef       	ldi	r17, 0xFF	; 255
     5ac:	21 16       	cp	r2, r17
     5ae:	31 04       	cpc	r3, r1
     5b0:	41 04       	cpc	r4, r1
     5b2:	51 04       	cpc	r5, r1
     5b4:	39 f0       	breq	.+14     	; 0x5c4 <__divdi3+0x2e4>
     5b6:	30 f0       	brcs	.+12     	; 0x5c4 <__divdi3+0x2e4>
     5b8:	48 e0       	ldi	r20, 0x08	; 8
     5ba:	e4 2e       	mov	r14, r20
     5bc:	f1 2c       	mov	r15, r1
     5be:	01 2d       	mov	r16, r1
     5c0:	11 2d       	mov	r17, r1
     5c2:	18 c0       	rjmp	.+48     	; 0x5f4 <__divdi3+0x314>
     5c4:	ee 24       	eor	r14, r14
     5c6:	ff 24       	eor	r15, r15
     5c8:	87 01       	movw	r16, r14
     5ca:	14 c0       	rjmp	.+40     	; 0x5f4 <__divdi3+0x314>
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	22 16       	cp	r2, r18
     5d0:	20 e0       	ldi	r18, 0x00	; 0
     5d2:	32 06       	cpc	r3, r18
     5d4:	20 e0       	ldi	r18, 0x00	; 0
     5d6:	42 06       	cpc	r4, r18
     5d8:	21 e0       	ldi	r18, 0x01	; 1
     5da:	52 06       	cpc	r5, r18
     5dc:	30 f0       	brcs	.+12     	; 0x5ea <__divdi3+0x30a>
     5de:	38 e1       	ldi	r19, 0x18	; 24
     5e0:	e3 2e       	mov	r14, r19
     5e2:	f1 2c       	mov	r15, r1
     5e4:	01 2d       	mov	r16, r1
     5e6:	11 2d       	mov	r17, r1
     5e8:	05 c0       	rjmp	.+10     	; 0x5f4 <__divdi3+0x314>
     5ea:	20 e1       	ldi	r18, 0x10	; 16
     5ec:	e2 2e       	mov	r14, r18
     5ee:	f1 2c       	mov	r15, r1
     5f0:	01 2d       	mov	r16, r1
     5f2:	11 2d       	mov	r17, r1
     5f4:	d2 01       	movw	r26, r4
     5f6:	c1 01       	movw	r24, r2
     5f8:	0e 2c       	mov	r0, r14
     5fa:	04 c0       	rjmp	.+8      	; 0x604 <__divdi3+0x324>
     5fc:	b6 95       	lsr	r27
     5fe:	a7 95       	ror	r26
     600:	97 95       	ror	r25
     602:	87 95       	ror	r24
     604:	0a 94       	dec	r0
     606:	d2 f7       	brpl	.-12     	; 0x5fc <__divdi3+0x31c>
     608:	8a 57       	subi	r24, 0x7A	; 122
     60a:	9f 4f       	sbci	r25, 0xFF	; 255
     60c:	dc 01       	movw	r26, r24
     60e:	2c 91       	ld	r18, X
     610:	80 e2       	ldi	r24, 0x20	; 32
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	a0 e0       	ldi	r26, 0x00	; 0
     616:	b0 e0       	ldi	r27, 0x00	; 0
     618:	8e 19       	sub	r24, r14
     61a:	9f 09       	sbc	r25, r15
     61c:	a0 0b       	sbc	r26, r16
     61e:	b1 0b       	sbc	r27, r17
     620:	7c 01       	movw	r14, r24
     622:	8d 01       	movw	r16, r26
     624:	e2 1a       	sub	r14, r18
     626:	f1 08       	sbc	r15, r1
     628:	01 09       	sbc	r16, r1
     62a:	11 09       	sbc	r17, r1
     62c:	e1 14       	cp	r14, r1
     62e:	f1 04       	cpc	r15, r1
     630:	01 05       	cpc	r16, r1
     632:	11 05       	cpc	r17, r1
     634:	d1 f1       	breq	.+116    	; 0x6aa <__divdi3+0x3ca>
     636:	0e 2c       	mov	r0, r14
     638:	04 c0       	rjmp	.+8      	; 0x642 <__divdi3+0x362>
     63a:	22 0c       	add	r2, r2
     63c:	33 1c       	adc	r3, r3
     63e:	44 1c       	adc	r4, r4
     640:	55 1c       	adc	r5, r5
     642:	0a 94       	dec	r0
     644:	d2 f7       	brpl	.-12     	; 0x63a <__divdi3+0x35a>
     646:	a4 01       	movw	r20, r8
     648:	93 01       	movw	r18, r6
     64a:	0e 2c       	mov	r0, r14
     64c:	04 c0       	rjmp	.+8      	; 0x656 <__divdi3+0x376>
     64e:	22 0f       	add	r18, r18
     650:	33 1f       	adc	r19, r19
     652:	44 1f       	adc	r20, r20
     654:	55 1f       	adc	r21, r21
     656:	0a 94       	dec	r0
     658:	d2 f7       	brpl	.-12     	; 0x64e <__divdi3+0x36e>
     65a:	80 e2       	ldi	r24, 0x20	; 32
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	8e 19       	sub	r24, r14
     660:	9f 09       	sbc	r25, r15
     662:	21 96       	adiw	r28, 0x01	; 1
     664:	6c ac       	ldd	r6, Y+60	; 0x3c
     666:	7d ac       	ldd	r7, Y+61	; 0x3d
     668:	8e ac       	ldd	r8, Y+62	; 0x3e
     66a:	9f ac       	ldd	r9, Y+63	; 0x3f
     66c:	21 97       	sbiw	r28, 0x01	; 1
     66e:	04 c0       	rjmp	.+8      	; 0x678 <__divdi3+0x398>
     670:	96 94       	lsr	r9
     672:	87 94       	ror	r8
     674:	77 94       	ror	r7
     676:	67 94       	ror	r6
     678:	8a 95       	dec	r24
     67a:	d2 f7       	brpl	.-12     	; 0x670 <__divdi3+0x390>
     67c:	62 2a       	or	r6, r18
     67e:	73 2a       	or	r7, r19
     680:	84 2a       	or	r8, r20
     682:	95 2a       	or	r9, r21
     684:	21 96       	adiw	r28, 0x01	; 1
     686:	ac ac       	ldd	r10, Y+60	; 0x3c
     688:	bd ac       	ldd	r11, Y+61	; 0x3d
     68a:	ce ac       	ldd	r12, Y+62	; 0x3e
     68c:	df ac       	ldd	r13, Y+63	; 0x3f
     68e:	21 97       	sbiw	r28, 0x01	; 1
     690:	04 c0       	rjmp	.+8      	; 0x69a <__divdi3+0x3ba>
     692:	aa 0c       	add	r10, r10
     694:	bb 1c       	adc	r11, r11
     696:	cc 1c       	adc	r12, r12
     698:	dd 1c       	adc	r13, r13
     69a:	ea 94       	dec	r14
     69c:	d2 f7       	brpl	.-12     	; 0x692 <__divdi3+0x3b2>
     69e:	21 96       	adiw	r28, 0x01	; 1
     6a0:	ac ae       	std	Y+60, r10	; 0x3c
     6a2:	bd ae       	std	Y+61, r11	; 0x3d
     6a4:	ce ae       	std	Y+62, r12	; 0x3e
     6a6:	df ae       	std	Y+63, r13	; 0x3f
     6a8:	21 97       	sbiw	r28, 0x01	; 1
     6aa:	62 01       	movw	r12, r4
     6ac:	ee 24       	eor	r14, r14
     6ae:	ff 24       	eor	r15, r15
     6b0:	29 96       	adiw	r28, 0x09	; 9
     6b2:	cc ae       	std	Y+60, r12	; 0x3c
     6b4:	dd ae       	std	Y+61, r13	; 0x3d
     6b6:	ee ae       	std	Y+62, r14	; 0x3e
     6b8:	ff ae       	std	Y+63, r15	; 0x3f
     6ba:	29 97       	sbiw	r28, 0x09	; 9
     6bc:	92 01       	movw	r18, r4
     6be:	81 01       	movw	r16, r2
     6c0:	20 70       	andi	r18, 0x00	; 0
     6c2:	30 70       	andi	r19, 0x00	; 0
     6c4:	2d 96       	adiw	r28, 0x0d	; 13
     6c6:	0c af       	std	Y+60, r16	; 0x3c
     6c8:	1d af       	std	Y+61, r17	; 0x3d
     6ca:	2e af       	std	Y+62, r18	; 0x3e
     6cc:	3f af       	std	Y+63, r19	; 0x3f
     6ce:	2d 97       	sbiw	r28, 0x0d	; 13
     6d0:	c4 01       	movw	r24, r8
     6d2:	b3 01       	movw	r22, r6
     6d4:	a7 01       	movw	r20, r14
     6d6:	96 01       	movw	r18, r12
     6d8:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     6dc:	7b 01       	movw	r14, r22
     6de:	8c 01       	movw	r16, r24
     6e0:	c4 01       	movw	r24, r8
     6e2:	b3 01       	movw	r22, r6
     6e4:	29 96       	adiw	r28, 0x09	; 9
     6e6:	2c ad       	ldd	r18, Y+60	; 0x3c
     6e8:	3d ad       	ldd	r19, Y+61	; 0x3d
     6ea:	4e ad       	ldd	r20, Y+62	; 0x3e
     6ec:	5f ad       	ldd	r21, Y+63	; 0x3f
     6ee:	29 97       	sbiw	r28, 0x09	; 9
     6f0:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     6f4:	c9 01       	movw	r24, r18
     6f6:	da 01       	movw	r26, r20
     6f8:	3c 01       	movw	r6, r24
     6fa:	4d 01       	movw	r8, r26
     6fc:	c4 01       	movw	r24, r8
     6fe:	b3 01       	movw	r22, r6
     700:	2d 96       	adiw	r28, 0x0d	; 13
     702:	2c ad       	ldd	r18, Y+60	; 0x3c
     704:	3d ad       	ldd	r19, Y+61	; 0x3d
     706:	4e ad       	ldd	r20, Y+62	; 0x3e
     708:	5f ad       	ldd	r21, Y+63	; 0x3f
     70a:	2d 97       	sbiw	r28, 0x0d	; 13
     70c:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     710:	9b 01       	movw	r18, r22
     712:	ac 01       	movw	r20, r24
     714:	87 01       	movw	r16, r14
     716:	ff 24       	eor	r15, r15
     718:	ee 24       	eor	r14, r14
     71a:	21 96       	adiw	r28, 0x01	; 1
     71c:	ac ac       	ldd	r10, Y+60	; 0x3c
     71e:	bd ac       	ldd	r11, Y+61	; 0x3d
     720:	ce ac       	ldd	r12, Y+62	; 0x3e
     722:	df ac       	ldd	r13, Y+63	; 0x3f
     724:	21 97       	sbiw	r28, 0x01	; 1
     726:	c6 01       	movw	r24, r12
     728:	aa 27       	eor	r26, r26
     72a:	bb 27       	eor	r27, r27
     72c:	57 01       	movw	r10, r14
     72e:	68 01       	movw	r12, r16
     730:	a8 2a       	or	r10, r24
     732:	b9 2a       	or	r11, r25
     734:	ca 2a       	or	r12, r26
     736:	db 2a       	or	r13, r27
     738:	a2 16       	cp	r10, r18
     73a:	b3 06       	cpc	r11, r19
     73c:	c4 06       	cpc	r12, r20
     73e:	d5 06       	cpc	r13, r21
     740:	e0 f4       	brcc	.+56     	; 0x77a <__divdi3+0x49a>
     742:	08 94       	sec
     744:	61 08       	sbc	r6, r1
     746:	71 08       	sbc	r7, r1
     748:	81 08       	sbc	r8, r1
     74a:	91 08       	sbc	r9, r1
     74c:	a2 0c       	add	r10, r2
     74e:	b3 1c       	adc	r11, r3
     750:	c4 1c       	adc	r12, r4
     752:	d5 1c       	adc	r13, r5
     754:	a2 14       	cp	r10, r2
     756:	b3 04       	cpc	r11, r3
     758:	c4 04       	cpc	r12, r4
     75a:	d5 04       	cpc	r13, r5
     75c:	70 f0       	brcs	.+28     	; 0x77a <__divdi3+0x49a>
     75e:	a2 16       	cp	r10, r18
     760:	b3 06       	cpc	r11, r19
     762:	c4 06       	cpc	r12, r20
     764:	d5 06       	cpc	r13, r21
     766:	48 f4       	brcc	.+18     	; 0x77a <__divdi3+0x49a>
     768:	08 94       	sec
     76a:	61 08       	sbc	r6, r1
     76c:	71 08       	sbc	r7, r1
     76e:	81 08       	sbc	r8, r1
     770:	91 08       	sbc	r9, r1
     772:	a2 0c       	add	r10, r2
     774:	b3 1c       	adc	r11, r3
     776:	c4 1c       	adc	r12, r4
     778:	d5 1c       	adc	r13, r5
     77a:	a2 1a       	sub	r10, r18
     77c:	b3 0a       	sbc	r11, r19
     77e:	c4 0a       	sbc	r12, r20
     780:	d5 0a       	sbc	r13, r21
     782:	c6 01       	movw	r24, r12
     784:	b5 01       	movw	r22, r10
     786:	29 96       	adiw	r28, 0x09	; 9
     788:	2c ad       	ldd	r18, Y+60	; 0x3c
     78a:	3d ad       	ldd	r19, Y+61	; 0x3d
     78c:	4e ad       	ldd	r20, Y+62	; 0x3e
     78e:	5f ad       	ldd	r21, Y+63	; 0x3f
     790:	29 97       	sbiw	r28, 0x09	; 9
     792:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     796:	7b 01       	movw	r14, r22
     798:	8c 01       	movw	r16, r24
     79a:	c6 01       	movw	r24, r12
     79c:	b5 01       	movw	r22, r10
     79e:	29 96       	adiw	r28, 0x09	; 9
     7a0:	2c ad       	ldd	r18, Y+60	; 0x3c
     7a2:	3d ad       	ldd	r19, Y+61	; 0x3d
     7a4:	4e ad       	ldd	r20, Y+62	; 0x3e
     7a6:	5f ad       	ldd	r21, Y+63	; 0x3f
     7a8:	29 97       	sbiw	r28, 0x09	; 9
     7aa:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     7ae:	c9 01       	movw	r24, r18
     7b0:	da 01       	movw	r26, r20
     7b2:	5c 01       	movw	r10, r24
     7b4:	6d 01       	movw	r12, r26
     7b6:	c6 01       	movw	r24, r12
     7b8:	b5 01       	movw	r22, r10
     7ba:	2d 96       	adiw	r28, 0x0d	; 13
     7bc:	2c ad       	ldd	r18, Y+60	; 0x3c
     7be:	3d ad       	ldd	r19, Y+61	; 0x3d
     7c0:	4e ad       	ldd	r20, Y+62	; 0x3e
     7c2:	5f ad       	ldd	r21, Y+63	; 0x3f
     7c4:	2d 97       	sbiw	r28, 0x0d	; 13
     7c6:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     7ca:	9b 01       	movw	r18, r22
     7cc:	ac 01       	movw	r20, r24
     7ce:	87 01       	movw	r16, r14
     7d0:	ff 24       	eor	r15, r15
     7d2:	ee 24       	eor	r14, r14
     7d4:	21 96       	adiw	r28, 0x01	; 1
     7d6:	8c ad       	ldd	r24, Y+60	; 0x3c
     7d8:	9d ad       	ldd	r25, Y+61	; 0x3d
     7da:	ae ad       	ldd	r26, Y+62	; 0x3e
     7dc:	bf ad       	ldd	r27, Y+63	; 0x3f
     7de:	21 97       	sbiw	r28, 0x01	; 1
     7e0:	a0 70       	andi	r26, 0x00	; 0
     7e2:	b0 70       	andi	r27, 0x00	; 0
     7e4:	e8 2a       	or	r14, r24
     7e6:	f9 2a       	or	r15, r25
     7e8:	0a 2b       	or	r16, r26
     7ea:	1b 2b       	or	r17, r27
     7ec:	e2 16       	cp	r14, r18
     7ee:	f3 06       	cpc	r15, r19
     7f0:	04 07       	cpc	r16, r20
     7f2:	15 07       	cpc	r17, r21
     7f4:	c0 f4       	brcc	.+48     	; 0x826 <__divdi3+0x546>
     7f6:	08 94       	sec
     7f8:	a1 08       	sbc	r10, r1
     7fa:	b1 08       	sbc	r11, r1
     7fc:	c1 08       	sbc	r12, r1
     7fe:	d1 08       	sbc	r13, r1
     800:	e2 0c       	add	r14, r2
     802:	f3 1c       	adc	r15, r3
     804:	04 1d       	adc	r16, r4
     806:	15 1d       	adc	r17, r5
     808:	e2 14       	cp	r14, r2
     80a:	f3 04       	cpc	r15, r3
     80c:	04 05       	cpc	r16, r4
     80e:	15 05       	cpc	r17, r5
     810:	50 f0       	brcs	.+20     	; 0x826 <__divdi3+0x546>
     812:	e2 16       	cp	r14, r18
     814:	f3 06       	cpc	r15, r19
     816:	04 07       	cpc	r16, r20
     818:	15 07       	cpc	r17, r21
     81a:	28 f4       	brcc	.+10     	; 0x826 <__divdi3+0x546>
     81c:	08 94       	sec
     81e:	a1 08       	sbc	r10, r1
     820:	b1 08       	sbc	r11, r1
     822:	c1 08       	sbc	r12, r1
     824:	d1 08       	sbc	r13, r1
     826:	d3 01       	movw	r26, r6
     828:	99 27       	eor	r25, r25
     82a:	88 27       	eor	r24, r24
     82c:	86 01       	movw	r16, r12
     82e:	75 01       	movw	r14, r10
     830:	e8 2a       	or	r14, r24
     832:	f9 2a       	or	r15, r25
     834:	0a 2b       	or	r16, r26
     836:	1b 2b       	or	r17, r27
     838:	25 96       	adiw	r28, 0x05	; 5
     83a:	ec ae       	std	Y+60, r14	; 0x3c
     83c:	fd ae       	std	Y+61, r15	; 0x3d
     83e:	0e af       	std	Y+62, r16	; 0x3e
     840:	1f af       	std	Y+63, r17	; 0x3f
     842:	25 97       	sbiw	r28, 0x05	; 5
     844:	eb c4       	rjmp	.+2518   	; 0x121c <__stack+0x9bd>
     846:	21 14       	cp	r2, r1
     848:	31 04       	cpc	r3, r1
     84a:	41 04       	cpc	r4, r1
     84c:	51 04       	cpc	r5, r1
     84e:	71 f4       	brne	.+28     	; 0x86c <__stack+0xd>
     850:	61 e0       	ldi	r22, 0x01	; 1
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	80 e0       	ldi	r24, 0x00	; 0
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	40 e0       	ldi	r20, 0x00	; 0
     85e:	50 e0       	ldi	r21, 0x00	; 0
     860:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     864:	c9 01       	movw	r24, r18
     866:	da 01       	movw	r26, r20
     868:	1c 01       	movw	r2, r24
     86a:	2d 01       	movw	r4, r26
     86c:	00 e0       	ldi	r16, 0x00	; 0
     86e:	20 16       	cp	r2, r16
     870:	00 e0       	ldi	r16, 0x00	; 0
     872:	30 06       	cpc	r3, r16
     874:	01 e0       	ldi	r16, 0x01	; 1
     876:	40 06       	cpc	r4, r16
     878:	00 e0       	ldi	r16, 0x00	; 0
     87a:	50 06       	cpc	r5, r16
     87c:	88 f4       	brcc	.+34     	; 0x8a0 <__stack+0x41>
     87e:	1f ef       	ldi	r17, 0xFF	; 255
     880:	21 16       	cp	r2, r17
     882:	31 04       	cpc	r3, r1
     884:	41 04       	cpc	r4, r1
     886:	51 04       	cpc	r5, r1
     888:	31 f0       	breq	.+12     	; 0x896 <__stack+0x37>
     88a:	28 f0       	brcs	.+10     	; 0x896 <__stack+0x37>
     88c:	48 e0       	ldi	r20, 0x08	; 8
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	60 e0       	ldi	r22, 0x00	; 0
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	17 c0       	rjmp	.+46     	; 0x8c4 <__stack+0x65>
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	50 e0       	ldi	r21, 0x00	; 0
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	70 e0       	ldi	r23, 0x00	; 0
     89e:	12 c0       	rjmp	.+36     	; 0x8c4 <__stack+0x65>
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	22 16       	cp	r2, r18
     8a4:	20 e0       	ldi	r18, 0x00	; 0
     8a6:	32 06       	cpc	r3, r18
     8a8:	20 e0       	ldi	r18, 0x00	; 0
     8aa:	42 06       	cpc	r4, r18
     8ac:	21 e0       	ldi	r18, 0x01	; 1
     8ae:	52 06       	cpc	r5, r18
     8b0:	28 f0       	brcs	.+10     	; 0x8bc <__stack+0x5d>
     8b2:	48 e1       	ldi	r20, 0x18	; 24
     8b4:	50 e0       	ldi	r21, 0x00	; 0
     8b6:	60 e0       	ldi	r22, 0x00	; 0
     8b8:	70 e0       	ldi	r23, 0x00	; 0
     8ba:	04 c0       	rjmp	.+8      	; 0x8c4 <__stack+0x65>
     8bc:	40 e1       	ldi	r20, 0x10	; 16
     8be:	50 e0       	ldi	r21, 0x00	; 0
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	d2 01       	movw	r26, r4
     8c6:	c1 01       	movw	r24, r2
     8c8:	04 2e       	mov	r0, r20
     8ca:	04 c0       	rjmp	.+8      	; 0x8d4 <__stack+0x75>
     8cc:	b6 95       	lsr	r27
     8ce:	a7 95       	ror	r26
     8d0:	97 95       	ror	r25
     8d2:	87 95       	ror	r24
     8d4:	0a 94       	dec	r0
     8d6:	d2 f7       	brpl	.-12     	; 0x8cc <__stack+0x6d>
     8d8:	8a 57       	subi	r24, 0x7A	; 122
     8da:	9f 4f       	sbci	r25, 0xFF	; 255
     8dc:	dc 01       	movw	r26, r24
     8de:	2c 91       	ld	r18, X
     8e0:	e0 e2       	ldi	r30, 0x20	; 32
     8e2:	ee 2e       	mov	r14, r30
     8e4:	f1 2c       	mov	r15, r1
     8e6:	01 2d       	mov	r16, r1
     8e8:	11 2d       	mov	r17, r1
     8ea:	d8 01       	movw	r26, r16
     8ec:	c7 01       	movw	r24, r14
     8ee:	84 1b       	sub	r24, r20
     8f0:	95 0b       	sbc	r25, r21
     8f2:	a6 0b       	sbc	r26, r22
     8f4:	b7 0b       	sbc	r27, r23
     8f6:	82 1b       	sub	r24, r18
     8f8:	91 09       	sbc	r25, r1
     8fa:	a1 09       	sbc	r26, r1
     8fc:	b1 09       	sbc	r27, r1
     8fe:	00 97       	sbiw	r24, 0x00	; 0
     900:	a1 05       	cpc	r26, r1
     902:	b1 05       	cpc	r27, r1
     904:	61 f4       	brne	.+24     	; 0x91e <__stack+0xbf>
     906:	64 01       	movw	r12, r8
     908:	53 01       	movw	r10, r6
     90a:	a2 18       	sub	r10, r2
     90c:	b3 08       	sbc	r11, r3
     90e:	c4 08       	sbc	r12, r4
     910:	d5 08       	sbc	r13, r5
     912:	31 e0       	ldi	r19, 0x01	; 1
     914:	63 2e       	mov	r6, r19
     916:	71 2c       	mov	r7, r1
     918:	81 2c       	mov	r8, r1
     91a:	91 2c       	mov	r9, r1
     91c:	24 c1       	rjmp	.+584    	; 0xb66 <__stack+0x307>
     91e:	e3 96       	adiw	r28, 0x33	; 51
     920:	8f af       	std	Y+63, r24	; 0x3f
     922:	e3 97       	sbiw	r28, 0x33	; 51
     924:	08 2e       	mov	r0, r24
     926:	04 c0       	rjmp	.+8      	; 0x930 <__stack+0xd1>
     928:	22 0c       	add	r2, r2
     92a:	33 1c       	adc	r3, r3
     92c:	44 1c       	adc	r4, r4
     92e:	55 1c       	adc	r5, r5
     930:	0a 94       	dec	r0
     932:	d2 f7       	brpl	.-12     	; 0x928 <__stack+0xc9>
     934:	ee 2d       	mov	r30, r14
     936:	e8 1b       	sub	r30, r24
     938:	64 01       	movw	r12, r8
     93a:	53 01       	movw	r10, r6
     93c:	0e 2e       	mov	r0, r30
     93e:	04 c0       	rjmp	.+8      	; 0x948 <__stack+0xe9>
     940:	d6 94       	lsr	r13
     942:	c7 94       	ror	r12
     944:	b7 94       	ror	r11
     946:	a7 94       	ror	r10
     948:	0a 94       	dec	r0
     94a:	d2 f7       	brpl	.-12     	; 0x940 <__stack+0xe1>
     94c:	a4 01       	movw	r20, r8
     94e:	93 01       	movw	r18, r6
     950:	e3 96       	adiw	r28, 0x33	; 51
     952:	0f ac       	ldd	r0, Y+63	; 0x3f
     954:	e3 97       	sbiw	r28, 0x33	; 51
     956:	04 c0       	rjmp	.+8      	; 0x960 <__stack+0x101>
     958:	22 0f       	add	r18, r18
     95a:	33 1f       	adc	r19, r19
     95c:	44 1f       	adc	r20, r20
     95e:	55 1f       	adc	r21, r21
     960:	0a 94       	dec	r0
     962:	d2 f7       	brpl	.-12     	; 0x958 <__stack+0xf9>
     964:	21 96       	adiw	r28, 0x01	; 1
     966:	6c ac       	ldd	r6, Y+60	; 0x3c
     968:	7d ac       	ldd	r7, Y+61	; 0x3d
     96a:	8e ac       	ldd	r8, Y+62	; 0x3e
     96c:	9f ac       	ldd	r9, Y+63	; 0x3f
     96e:	21 97       	sbiw	r28, 0x01	; 1
     970:	0e 2e       	mov	r0, r30
     972:	04 c0       	rjmp	.+8      	; 0x97c <__stack+0x11d>
     974:	96 94       	lsr	r9
     976:	87 94       	ror	r8
     978:	77 94       	ror	r7
     97a:	67 94       	ror	r6
     97c:	0a 94       	dec	r0
     97e:	d2 f7       	brpl	.-12     	; 0x974 <__stack+0x115>
     980:	84 01       	movw	r16, r8
     982:	73 01       	movw	r14, r6
     984:	e2 2a       	or	r14, r18
     986:	f3 2a       	or	r15, r19
     988:	04 2b       	or	r16, r20
     98a:	15 2b       	or	r17, r21
     98c:	e9 ae       	std	Y+57, r14	; 0x39
     98e:	fa ae       	std	Y+58, r15	; 0x3a
     990:	0b af       	std	Y+59, r16	; 0x3b
     992:	1c af       	std	Y+60, r17	; 0x3c
     994:	32 01       	movw	r6, r4
     996:	88 24       	eor	r8, r8
     998:	99 24       	eor	r9, r9
     99a:	92 01       	movw	r18, r4
     99c:	81 01       	movw	r16, r2
     99e:	20 70       	andi	r18, 0x00	; 0
     9a0:	30 70       	andi	r19, 0x00	; 0
     9a2:	61 96       	adiw	r28, 0x11	; 17
     9a4:	0c af       	std	Y+60, r16	; 0x3c
     9a6:	1d af       	std	Y+61, r17	; 0x3d
     9a8:	2e af       	std	Y+62, r18	; 0x3e
     9aa:	3f af       	std	Y+63, r19	; 0x3f
     9ac:	61 97       	sbiw	r28, 0x11	; 17
     9ae:	c6 01       	movw	r24, r12
     9b0:	b5 01       	movw	r22, r10
     9b2:	a4 01       	movw	r20, r8
     9b4:	93 01       	movw	r18, r6
     9b6:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     9ba:	7b 01       	movw	r14, r22
     9bc:	8c 01       	movw	r16, r24
     9be:	c6 01       	movw	r24, r12
     9c0:	b5 01       	movw	r22, r10
     9c2:	a4 01       	movw	r20, r8
     9c4:	93 01       	movw	r18, r6
     9c6:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     9ca:	c9 01       	movw	r24, r18
     9cc:	da 01       	movw	r26, r20
     9ce:	65 96       	adiw	r28, 0x15	; 21
     9d0:	8c af       	std	Y+60, r24	; 0x3c
     9d2:	9d af       	std	Y+61, r25	; 0x3d
     9d4:	ae af       	std	Y+62, r26	; 0x3e
     9d6:	bf af       	std	Y+63, r27	; 0x3f
     9d8:	65 97       	sbiw	r28, 0x15	; 21
     9da:	bc 01       	movw	r22, r24
     9dc:	cd 01       	movw	r24, r26
     9de:	61 96       	adiw	r28, 0x11	; 17
     9e0:	2c ad       	ldd	r18, Y+60	; 0x3c
     9e2:	3d ad       	ldd	r19, Y+61	; 0x3d
     9e4:	4e ad       	ldd	r20, Y+62	; 0x3e
     9e6:	5f ad       	ldd	r21, Y+63	; 0x3f
     9e8:	61 97       	sbiw	r28, 0x11	; 17
     9ea:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     9ee:	9b 01       	movw	r18, r22
     9f0:	ac 01       	movw	r20, r24
     9f2:	87 01       	movw	r16, r14
     9f4:	ff 24       	eor	r15, r15
     9f6:	ee 24       	eor	r14, r14
     9f8:	a9 ac       	ldd	r10, Y+57	; 0x39
     9fa:	ba ac       	ldd	r11, Y+58	; 0x3a
     9fc:	cb ac       	ldd	r12, Y+59	; 0x3b
     9fe:	dc ac       	ldd	r13, Y+60	; 0x3c
     a00:	c6 01       	movw	r24, r12
     a02:	aa 27       	eor	r26, r26
     a04:	bb 27       	eor	r27, r27
     a06:	5c 01       	movw	r10, r24
     a08:	6d 01       	movw	r12, r26
     a0a:	ae 28       	or	r10, r14
     a0c:	bf 28       	or	r11, r15
     a0e:	c0 2a       	or	r12, r16
     a10:	d1 2a       	or	r13, r17
     a12:	a2 16       	cp	r10, r18
     a14:	b3 06       	cpc	r11, r19
     a16:	c4 06       	cpc	r12, r20
     a18:	d5 06       	cpc	r13, r21
     a1a:	60 f5       	brcc	.+88     	; 0xa74 <__stack+0x215>
     a1c:	65 96       	adiw	r28, 0x15	; 21
     a1e:	6c ad       	ldd	r22, Y+60	; 0x3c
     a20:	7d ad       	ldd	r23, Y+61	; 0x3d
     a22:	8e ad       	ldd	r24, Y+62	; 0x3e
     a24:	9f ad       	ldd	r25, Y+63	; 0x3f
     a26:	65 97       	sbiw	r28, 0x15	; 21
     a28:	61 50       	subi	r22, 0x01	; 1
     a2a:	70 40       	sbci	r23, 0x00	; 0
     a2c:	80 40       	sbci	r24, 0x00	; 0
     a2e:	90 40       	sbci	r25, 0x00	; 0
     a30:	65 96       	adiw	r28, 0x15	; 21
     a32:	6c af       	std	Y+60, r22	; 0x3c
     a34:	7d af       	std	Y+61, r23	; 0x3d
     a36:	8e af       	std	Y+62, r24	; 0x3e
     a38:	9f af       	std	Y+63, r25	; 0x3f
     a3a:	65 97       	sbiw	r28, 0x15	; 21
     a3c:	a2 0c       	add	r10, r2
     a3e:	b3 1c       	adc	r11, r3
     a40:	c4 1c       	adc	r12, r4
     a42:	d5 1c       	adc	r13, r5
     a44:	a2 14       	cp	r10, r2
     a46:	b3 04       	cpc	r11, r3
     a48:	c4 04       	cpc	r12, r4
     a4a:	d5 04       	cpc	r13, r5
     a4c:	98 f0       	brcs	.+38     	; 0xa74 <__stack+0x215>
     a4e:	a2 16       	cp	r10, r18
     a50:	b3 06       	cpc	r11, r19
     a52:	c4 06       	cpc	r12, r20
     a54:	d5 06       	cpc	r13, r21
     a56:	70 f4       	brcc	.+28     	; 0xa74 <__stack+0x215>
     a58:	61 50       	subi	r22, 0x01	; 1
     a5a:	70 40       	sbci	r23, 0x00	; 0
     a5c:	80 40       	sbci	r24, 0x00	; 0
     a5e:	90 40       	sbci	r25, 0x00	; 0
     a60:	65 96       	adiw	r28, 0x15	; 21
     a62:	6c af       	std	Y+60, r22	; 0x3c
     a64:	7d af       	std	Y+61, r23	; 0x3d
     a66:	8e af       	std	Y+62, r24	; 0x3e
     a68:	9f af       	std	Y+63, r25	; 0x3f
     a6a:	65 97       	sbiw	r28, 0x15	; 21
     a6c:	a2 0c       	add	r10, r2
     a6e:	b3 1c       	adc	r11, r3
     a70:	c4 1c       	adc	r12, r4
     a72:	d5 1c       	adc	r13, r5
     a74:	a2 1a       	sub	r10, r18
     a76:	b3 0a       	sbc	r11, r19
     a78:	c4 0a       	sbc	r12, r20
     a7a:	d5 0a       	sbc	r13, r21
     a7c:	c6 01       	movw	r24, r12
     a7e:	b5 01       	movw	r22, r10
     a80:	a4 01       	movw	r20, r8
     a82:	93 01       	movw	r18, r6
     a84:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     a88:	7b 01       	movw	r14, r22
     a8a:	8c 01       	movw	r16, r24
     a8c:	c6 01       	movw	r24, r12
     a8e:	b5 01       	movw	r22, r10
     a90:	a4 01       	movw	r20, r8
     a92:	93 01       	movw	r18, r6
     a94:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     a98:	c9 01       	movw	r24, r18
     a9a:	da 01       	movw	r26, r20
     a9c:	3c 01       	movw	r6, r24
     a9e:	4d 01       	movw	r8, r26
     aa0:	c4 01       	movw	r24, r8
     aa2:	b3 01       	movw	r22, r6
     aa4:	61 96       	adiw	r28, 0x11	; 17
     aa6:	2c ad       	ldd	r18, Y+60	; 0x3c
     aa8:	3d ad       	ldd	r19, Y+61	; 0x3d
     aaa:	4e ad       	ldd	r20, Y+62	; 0x3e
     aac:	5f ad       	ldd	r21, Y+63	; 0x3f
     aae:	61 97       	sbiw	r28, 0x11	; 17
     ab0:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     ab4:	9b 01       	movw	r18, r22
     ab6:	ac 01       	movw	r20, r24
     ab8:	87 01       	movw	r16, r14
     aba:	ff 24       	eor	r15, r15
     abc:	ee 24       	eor	r14, r14
     abe:	89 ad       	ldd	r24, Y+57	; 0x39
     ac0:	9a ad       	ldd	r25, Y+58	; 0x3a
     ac2:	ab ad       	ldd	r26, Y+59	; 0x3b
     ac4:	bc ad       	ldd	r27, Y+60	; 0x3c
     ac6:	a0 70       	andi	r26, 0x00	; 0
     ac8:	b0 70       	andi	r27, 0x00	; 0
     aca:	57 01       	movw	r10, r14
     acc:	68 01       	movw	r12, r16
     ace:	a8 2a       	or	r10, r24
     ad0:	b9 2a       	or	r11, r25
     ad2:	ca 2a       	or	r12, r26
     ad4:	db 2a       	or	r13, r27
     ad6:	a2 16       	cp	r10, r18
     ad8:	b3 06       	cpc	r11, r19
     ada:	c4 06       	cpc	r12, r20
     adc:	d5 06       	cpc	r13, r21
     ade:	e0 f4       	brcc	.+56     	; 0xb18 <__stack+0x2b9>
     ae0:	08 94       	sec
     ae2:	61 08       	sbc	r6, r1
     ae4:	71 08       	sbc	r7, r1
     ae6:	81 08       	sbc	r8, r1
     ae8:	91 08       	sbc	r9, r1
     aea:	a2 0c       	add	r10, r2
     aec:	b3 1c       	adc	r11, r3
     aee:	c4 1c       	adc	r12, r4
     af0:	d5 1c       	adc	r13, r5
     af2:	a2 14       	cp	r10, r2
     af4:	b3 04       	cpc	r11, r3
     af6:	c4 04       	cpc	r12, r4
     af8:	d5 04       	cpc	r13, r5
     afa:	70 f0       	brcs	.+28     	; 0xb18 <__stack+0x2b9>
     afc:	a2 16       	cp	r10, r18
     afe:	b3 06       	cpc	r11, r19
     b00:	c4 06       	cpc	r12, r20
     b02:	d5 06       	cpc	r13, r21
     b04:	48 f4       	brcc	.+18     	; 0xb18 <__stack+0x2b9>
     b06:	08 94       	sec
     b08:	61 08       	sbc	r6, r1
     b0a:	71 08       	sbc	r7, r1
     b0c:	81 08       	sbc	r8, r1
     b0e:	91 08       	sbc	r9, r1
     b10:	a2 0c       	add	r10, r2
     b12:	b3 1c       	adc	r11, r3
     b14:	c4 1c       	adc	r12, r4
     b16:	d5 1c       	adc	r13, r5
     b18:	21 96       	adiw	r28, 0x01	; 1
     b1a:	8c ad       	ldd	r24, Y+60	; 0x3c
     b1c:	9d ad       	ldd	r25, Y+61	; 0x3d
     b1e:	ae ad       	ldd	r26, Y+62	; 0x3e
     b20:	bf ad       	ldd	r27, Y+63	; 0x3f
     b22:	21 97       	sbiw	r28, 0x01	; 1
     b24:	e3 96       	adiw	r28, 0x33	; 51
     b26:	0f ac       	ldd	r0, Y+63	; 0x3f
     b28:	e3 97       	sbiw	r28, 0x33	; 51
     b2a:	04 c0       	rjmp	.+8      	; 0xb34 <__stack+0x2d5>
     b2c:	88 0f       	add	r24, r24
     b2e:	99 1f       	adc	r25, r25
     b30:	aa 1f       	adc	r26, r26
     b32:	bb 1f       	adc	r27, r27
     b34:	0a 94       	dec	r0
     b36:	d2 f7       	brpl	.-12     	; 0xb2c <__stack+0x2cd>
     b38:	21 96       	adiw	r28, 0x01	; 1
     b3a:	8c af       	std	Y+60, r24	; 0x3c
     b3c:	9d af       	std	Y+61, r25	; 0x3d
     b3e:	ae af       	std	Y+62, r26	; 0x3e
     b40:	bf af       	std	Y+63, r27	; 0x3f
     b42:	21 97       	sbiw	r28, 0x01	; 1
     b44:	a2 1a       	sub	r10, r18
     b46:	b3 0a       	sbc	r11, r19
     b48:	c4 0a       	sbc	r12, r20
     b4a:	d5 0a       	sbc	r13, r21
     b4c:	65 96       	adiw	r28, 0x15	; 21
     b4e:	ec ac       	ldd	r14, Y+60	; 0x3c
     b50:	fd ac       	ldd	r15, Y+61	; 0x3d
     b52:	0e ad       	ldd	r16, Y+62	; 0x3e
     b54:	1f ad       	ldd	r17, Y+63	; 0x3f
     b56:	65 97       	sbiw	r28, 0x15	; 21
     b58:	d7 01       	movw	r26, r14
     b5a:	99 27       	eor	r25, r25
     b5c:	88 27       	eor	r24, r24
     b5e:	68 2a       	or	r6, r24
     b60:	79 2a       	or	r7, r25
     b62:	8a 2a       	or	r8, r26
     b64:	9b 2a       	or	r9, r27
     b66:	82 01       	movw	r16, r4
     b68:	22 27       	eor	r18, r18
     b6a:	33 27       	eor	r19, r19
     b6c:	69 96       	adiw	r28, 0x19	; 25
     b6e:	0c af       	std	Y+60, r16	; 0x3c
     b70:	1d af       	std	Y+61, r17	; 0x3d
     b72:	2e af       	std	Y+62, r18	; 0x3e
     b74:	3f af       	std	Y+63, r19	; 0x3f
     b76:	69 97       	sbiw	r28, 0x19	; 25
     b78:	a2 01       	movw	r20, r4
     b7a:	91 01       	movw	r18, r2
     b7c:	40 70       	andi	r20, 0x00	; 0
     b7e:	50 70       	andi	r21, 0x00	; 0
     b80:	6d 96       	adiw	r28, 0x1d	; 29
     b82:	2c af       	std	Y+60, r18	; 0x3c
     b84:	3d af       	std	Y+61, r19	; 0x3d
     b86:	4e af       	std	Y+62, r20	; 0x3e
     b88:	5f af       	std	Y+63, r21	; 0x3f
     b8a:	6d 97       	sbiw	r28, 0x1d	; 29
     b8c:	c6 01       	movw	r24, r12
     b8e:	b5 01       	movw	r22, r10
     b90:	69 96       	adiw	r28, 0x19	; 25
     b92:	2c ad       	ldd	r18, Y+60	; 0x3c
     b94:	3d ad       	ldd	r19, Y+61	; 0x3d
     b96:	4e ad       	ldd	r20, Y+62	; 0x3e
     b98:	5f ad       	ldd	r21, Y+63	; 0x3f
     b9a:	69 97       	sbiw	r28, 0x19	; 25
     b9c:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     ba0:	7b 01       	movw	r14, r22
     ba2:	8c 01       	movw	r16, r24
     ba4:	c6 01       	movw	r24, r12
     ba6:	b5 01       	movw	r22, r10
     ba8:	69 96       	adiw	r28, 0x19	; 25
     baa:	2c ad       	ldd	r18, Y+60	; 0x3c
     bac:	3d ad       	ldd	r19, Y+61	; 0x3d
     bae:	4e ad       	ldd	r20, Y+62	; 0x3e
     bb0:	5f ad       	ldd	r21, Y+63	; 0x3f
     bb2:	69 97       	sbiw	r28, 0x19	; 25
     bb4:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     bb8:	c9 01       	movw	r24, r18
     bba:	da 01       	movw	r26, r20
     bbc:	a1 96       	adiw	r28, 0x21	; 33
     bbe:	8c af       	std	Y+60, r24	; 0x3c
     bc0:	9d af       	std	Y+61, r25	; 0x3d
     bc2:	ae af       	std	Y+62, r26	; 0x3e
     bc4:	bf af       	std	Y+63, r27	; 0x3f
     bc6:	a1 97       	sbiw	r28, 0x21	; 33
     bc8:	bc 01       	movw	r22, r24
     bca:	cd 01       	movw	r24, r26
     bcc:	6d 96       	adiw	r28, 0x1d	; 29
     bce:	2c ad       	ldd	r18, Y+60	; 0x3c
     bd0:	3d ad       	ldd	r19, Y+61	; 0x3d
     bd2:	4e ad       	ldd	r20, Y+62	; 0x3e
     bd4:	5f ad       	ldd	r21, Y+63	; 0x3f
     bd6:	6d 97       	sbiw	r28, 0x1d	; 29
     bd8:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     bdc:	9b 01       	movw	r18, r22
     bde:	ac 01       	movw	r20, r24
     be0:	87 01       	movw	r16, r14
     be2:	ff 24       	eor	r15, r15
     be4:	ee 24       	eor	r14, r14
     be6:	21 96       	adiw	r28, 0x01	; 1
     be8:	ac ac       	ldd	r10, Y+60	; 0x3c
     bea:	bd ac       	ldd	r11, Y+61	; 0x3d
     bec:	ce ac       	ldd	r12, Y+62	; 0x3e
     bee:	df ac       	ldd	r13, Y+63	; 0x3f
     bf0:	21 97       	sbiw	r28, 0x01	; 1
     bf2:	c6 01       	movw	r24, r12
     bf4:	aa 27       	eor	r26, r26
     bf6:	bb 27       	eor	r27, r27
     bf8:	57 01       	movw	r10, r14
     bfa:	68 01       	movw	r12, r16
     bfc:	a8 2a       	or	r10, r24
     bfe:	b9 2a       	or	r11, r25
     c00:	ca 2a       	or	r12, r26
     c02:	db 2a       	or	r13, r27
     c04:	a2 16       	cp	r10, r18
     c06:	b3 06       	cpc	r11, r19
     c08:	c4 06       	cpc	r12, r20
     c0a:	d5 06       	cpc	r13, r21
     c0c:	60 f5       	brcc	.+88     	; 0xc66 <__stack+0x407>
     c0e:	a1 96       	adiw	r28, 0x21	; 33
     c10:	6c ad       	ldd	r22, Y+60	; 0x3c
     c12:	7d ad       	ldd	r23, Y+61	; 0x3d
     c14:	8e ad       	ldd	r24, Y+62	; 0x3e
     c16:	9f ad       	ldd	r25, Y+63	; 0x3f
     c18:	a1 97       	sbiw	r28, 0x21	; 33
     c1a:	61 50       	subi	r22, 0x01	; 1
     c1c:	70 40       	sbci	r23, 0x00	; 0
     c1e:	80 40       	sbci	r24, 0x00	; 0
     c20:	90 40       	sbci	r25, 0x00	; 0
     c22:	a1 96       	adiw	r28, 0x21	; 33
     c24:	6c af       	std	Y+60, r22	; 0x3c
     c26:	7d af       	std	Y+61, r23	; 0x3d
     c28:	8e af       	std	Y+62, r24	; 0x3e
     c2a:	9f af       	std	Y+63, r25	; 0x3f
     c2c:	a1 97       	sbiw	r28, 0x21	; 33
     c2e:	a2 0c       	add	r10, r2
     c30:	b3 1c       	adc	r11, r3
     c32:	c4 1c       	adc	r12, r4
     c34:	d5 1c       	adc	r13, r5
     c36:	a2 14       	cp	r10, r2
     c38:	b3 04       	cpc	r11, r3
     c3a:	c4 04       	cpc	r12, r4
     c3c:	d5 04       	cpc	r13, r5
     c3e:	98 f0       	brcs	.+38     	; 0xc66 <__stack+0x407>
     c40:	a2 16       	cp	r10, r18
     c42:	b3 06       	cpc	r11, r19
     c44:	c4 06       	cpc	r12, r20
     c46:	d5 06       	cpc	r13, r21
     c48:	70 f4       	brcc	.+28     	; 0xc66 <__stack+0x407>
     c4a:	61 50       	subi	r22, 0x01	; 1
     c4c:	70 40       	sbci	r23, 0x00	; 0
     c4e:	80 40       	sbci	r24, 0x00	; 0
     c50:	90 40       	sbci	r25, 0x00	; 0
     c52:	a1 96       	adiw	r28, 0x21	; 33
     c54:	6c af       	std	Y+60, r22	; 0x3c
     c56:	7d af       	std	Y+61, r23	; 0x3d
     c58:	8e af       	std	Y+62, r24	; 0x3e
     c5a:	9f af       	std	Y+63, r25	; 0x3f
     c5c:	a1 97       	sbiw	r28, 0x21	; 33
     c5e:	a2 0c       	add	r10, r2
     c60:	b3 1c       	adc	r11, r3
     c62:	c4 1c       	adc	r12, r4
     c64:	d5 1c       	adc	r13, r5
     c66:	a2 1a       	sub	r10, r18
     c68:	b3 0a       	sbc	r11, r19
     c6a:	c4 0a       	sbc	r12, r20
     c6c:	d5 0a       	sbc	r13, r21
     c6e:	c6 01       	movw	r24, r12
     c70:	b5 01       	movw	r22, r10
     c72:	69 96       	adiw	r28, 0x19	; 25
     c74:	2c ad       	ldd	r18, Y+60	; 0x3c
     c76:	3d ad       	ldd	r19, Y+61	; 0x3d
     c78:	4e ad       	ldd	r20, Y+62	; 0x3e
     c7a:	5f ad       	ldd	r21, Y+63	; 0x3f
     c7c:	69 97       	sbiw	r28, 0x19	; 25
     c7e:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     c82:	7b 01       	movw	r14, r22
     c84:	8c 01       	movw	r16, r24
     c86:	c6 01       	movw	r24, r12
     c88:	b5 01       	movw	r22, r10
     c8a:	69 96       	adiw	r28, 0x19	; 25
     c8c:	2c ad       	ldd	r18, Y+60	; 0x3c
     c8e:	3d ad       	ldd	r19, Y+61	; 0x3d
     c90:	4e ad       	ldd	r20, Y+62	; 0x3e
     c92:	5f ad       	ldd	r21, Y+63	; 0x3f
     c94:	69 97       	sbiw	r28, 0x19	; 25
     c96:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     c9a:	c9 01       	movw	r24, r18
     c9c:	da 01       	movw	r26, r20
     c9e:	5c 01       	movw	r10, r24
     ca0:	6d 01       	movw	r12, r26
     ca2:	c6 01       	movw	r24, r12
     ca4:	b5 01       	movw	r22, r10
     ca6:	6d 96       	adiw	r28, 0x1d	; 29
     ca8:	2c ad       	ldd	r18, Y+60	; 0x3c
     caa:	3d ad       	ldd	r19, Y+61	; 0x3d
     cac:	4e ad       	ldd	r20, Y+62	; 0x3e
     cae:	5f ad       	ldd	r21, Y+63	; 0x3f
     cb0:	6d 97       	sbiw	r28, 0x1d	; 29
     cb2:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     cb6:	9b 01       	movw	r18, r22
     cb8:	ac 01       	movw	r20, r24
     cba:	87 01       	movw	r16, r14
     cbc:	ff 24       	eor	r15, r15
     cbe:	ee 24       	eor	r14, r14
     cc0:	21 96       	adiw	r28, 0x01	; 1
     cc2:	8c ad       	ldd	r24, Y+60	; 0x3c
     cc4:	9d ad       	ldd	r25, Y+61	; 0x3d
     cc6:	ae ad       	ldd	r26, Y+62	; 0x3e
     cc8:	bf ad       	ldd	r27, Y+63	; 0x3f
     cca:	21 97       	sbiw	r28, 0x01	; 1
     ccc:	a0 70       	andi	r26, 0x00	; 0
     cce:	b0 70       	andi	r27, 0x00	; 0
     cd0:	e8 2a       	or	r14, r24
     cd2:	f9 2a       	or	r15, r25
     cd4:	0a 2b       	or	r16, r26
     cd6:	1b 2b       	or	r17, r27
     cd8:	e2 16       	cp	r14, r18
     cda:	f3 06       	cpc	r15, r19
     cdc:	04 07       	cpc	r16, r20
     cde:	15 07       	cpc	r17, r21
     ce0:	c0 f4       	brcc	.+48     	; 0xd12 <__stack+0x4b3>
     ce2:	08 94       	sec
     ce4:	a1 08       	sbc	r10, r1
     ce6:	b1 08       	sbc	r11, r1
     ce8:	c1 08       	sbc	r12, r1
     cea:	d1 08       	sbc	r13, r1
     cec:	e2 0c       	add	r14, r2
     cee:	f3 1c       	adc	r15, r3
     cf0:	04 1d       	adc	r16, r4
     cf2:	15 1d       	adc	r17, r5
     cf4:	e2 14       	cp	r14, r2
     cf6:	f3 04       	cpc	r15, r3
     cf8:	04 05       	cpc	r16, r4
     cfa:	15 05       	cpc	r17, r5
     cfc:	50 f0       	brcs	.+20     	; 0xd12 <__stack+0x4b3>
     cfe:	e2 16       	cp	r14, r18
     d00:	f3 06       	cpc	r15, r19
     d02:	04 07       	cpc	r16, r20
     d04:	15 07       	cpc	r17, r21
     d06:	28 f4       	brcc	.+10     	; 0xd12 <__stack+0x4b3>
     d08:	08 94       	sec
     d0a:	a1 08       	sbc	r10, r1
     d0c:	b1 08       	sbc	r11, r1
     d0e:	c1 08       	sbc	r12, r1
     d10:	d1 08       	sbc	r13, r1
     d12:	a1 96       	adiw	r28, 0x21	; 33
     d14:	ec ac       	ldd	r14, Y+60	; 0x3c
     d16:	fd ac       	ldd	r15, Y+61	; 0x3d
     d18:	0e ad       	ldd	r16, Y+62	; 0x3e
     d1a:	1f ad       	ldd	r17, Y+63	; 0x3f
     d1c:	a1 97       	sbiw	r28, 0x21	; 33
     d1e:	d7 01       	movw	r26, r14
     d20:	99 27       	eor	r25, r25
     d22:	88 27       	eor	r24, r24
     d24:	96 01       	movw	r18, r12
     d26:	85 01       	movw	r16, r10
     d28:	08 2b       	or	r16, r24
     d2a:	19 2b       	or	r17, r25
     d2c:	2a 2b       	or	r18, r26
     d2e:	3b 2b       	or	r19, r27
     d30:	25 96       	adiw	r28, 0x05	; 5
     d32:	0c af       	std	Y+60, r16	; 0x3c
     d34:	1d af       	std	Y+61, r17	; 0x3d
     d36:	2e af       	std	Y+62, r18	; 0x3e
     d38:	3f af       	std	Y+63, r19	; 0x3f
     d3a:	25 97       	sbiw	r28, 0x05	; 5
     d3c:	72 c2       	rjmp	.+1252   	; 0x1222 <__stack+0x9c3>
     d3e:	6e 14       	cp	r6, r14
     d40:	7f 04       	cpc	r7, r15
     d42:	80 06       	cpc	r8, r16
     d44:	91 06       	cpc	r9, r17
     d46:	08 f4       	brcc	.+2      	; 0xd4a <__stack+0x4eb>
     d48:	5f c2       	rjmp	.+1214   	; 0x1208 <__stack+0x9a9>
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	e2 16       	cp	r14, r18
     d4e:	20 e0       	ldi	r18, 0x00	; 0
     d50:	f2 06       	cpc	r15, r18
     d52:	21 e0       	ldi	r18, 0x01	; 1
     d54:	02 07       	cpc	r16, r18
     d56:	20 e0       	ldi	r18, 0x00	; 0
     d58:	12 07       	cpc	r17, r18
     d5a:	88 f4       	brcc	.+34     	; 0xd7e <__stack+0x51f>
     d5c:	3f ef       	ldi	r19, 0xFF	; 255
     d5e:	e3 16       	cp	r14, r19
     d60:	f1 04       	cpc	r15, r1
     d62:	01 05       	cpc	r16, r1
     d64:	11 05       	cpc	r17, r1
     d66:	31 f0       	breq	.+12     	; 0xd74 <__stack+0x515>
     d68:	28 f0       	brcs	.+10     	; 0xd74 <__stack+0x515>
     d6a:	48 e0       	ldi	r20, 0x08	; 8
     d6c:	50 e0       	ldi	r21, 0x00	; 0
     d6e:	60 e0       	ldi	r22, 0x00	; 0
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	17 c0       	rjmp	.+46     	; 0xda2 <__stack+0x543>
     d74:	40 e0       	ldi	r20, 0x00	; 0
     d76:	50 e0       	ldi	r21, 0x00	; 0
     d78:	60 e0       	ldi	r22, 0x00	; 0
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	12 c0       	rjmp	.+36     	; 0xda2 <__stack+0x543>
     d7e:	40 e0       	ldi	r20, 0x00	; 0
     d80:	e4 16       	cp	r14, r20
     d82:	40 e0       	ldi	r20, 0x00	; 0
     d84:	f4 06       	cpc	r15, r20
     d86:	40 e0       	ldi	r20, 0x00	; 0
     d88:	04 07       	cpc	r16, r20
     d8a:	41 e0       	ldi	r20, 0x01	; 1
     d8c:	14 07       	cpc	r17, r20
     d8e:	28 f0       	brcs	.+10     	; 0xd9a <__stack+0x53b>
     d90:	48 e1       	ldi	r20, 0x18	; 24
     d92:	50 e0       	ldi	r21, 0x00	; 0
     d94:	60 e0       	ldi	r22, 0x00	; 0
     d96:	70 e0       	ldi	r23, 0x00	; 0
     d98:	04 c0       	rjmp	.+8      	; 0xda2 <__stack+0x543>
     d9a:	40 e1       	ldi	r20, 0x10	; 16
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	60 e0       	ldi	r22, 0x00	; 0
     da0:	70 e0       	ldi	r23, 0x00	; 0
     da2:	d8 01       	movw	r26, r16
     da4:	c7 01       	movw	r24, r14
     da6:	04 2e       	mov	r0, r20
     da8:	04 c0       	rjmp	.+8      	; 0xdb2 <__stack+0x553>
     daa:	b6 95       	lsr	r27
     dac:	a7 95       	ror	r26
     dae:	97 95       	ror	r25
     db0:	87 95       	ror	r24
     db2:	0a 94       	dec	r0
     db4:	d2 f7       	brpl	.-12     	; 0xdaa <__stack+0x54b>
     db6:	8a 57       	subi	r24, 0x7A	; 122
     db8:	9f 4f       	sbci	r25, 0xFF	; 255
     dba:	dc 01       	movw	r26, r24
     dbc:	2c 91       	ld	r18, X
     dbe:	30 e2       	ldi	r19, 0x20	; 32
     dc0:	a3 2e       	mov	r10, r19
     dc2:	b1 2c       	mov	r11, r1
     dc4:	c1 2c       	mov	r12, r1
     dc6:	d1 2c       	mov	r13, r1
     dc8:	d6 01       	movw	r26, r12
     dca:	c5 01       	movw	r24, r10
     dcc:	84 1b       	sub	r24, r20
     dce:	95 0b       	sbc	r25, r21
     dd0:	a6 0b       	sbc	r26, r22
     dd2:	b7 0b       	sbc	r27, r23
     dd4:	82 1b       	sub	r24, r18
     dd6:	91 09       	sbc	r25, r1
     dd8:	a1 09       	sbc	r26, r1
     dda:	b1 09       	sbc	r27, r1
     ddc:	00 97       	sbiw	r24, 0x00	; 0
     dde:	a1 05       	cpc	r26, r1
     de0:	b1 05       	cpc	r27, r1
     de2:	99 f4       	brne	.+38     	; 0xe0a <__stack+0x5ab>
     de4:	e6 14       	cp	r14, r6
     de6:	f7 04       	cpc	r15, r7
     de8:	08 05       	cpc	r16, r8
     dea:	19 05       	cpc	r17, r9
     dec:	08 f4       	brcc	.+2      	; 0xdf0 <__stack+0x591>
     dee:	fe c1       	rjmp	.+1020   	; 0x11ec <__stack+0x98d>
     df0:	21 96       	adiw	r28, 0x01	; 1
     df2:	6c ac       	ldd	r6, Y+60	; 0x3c
     df4:	7d ac       	ldd	r7, Y+61	; 0x3d
     df6:	8e ac       	ldd	r8, Y+62	; 0x3e
     df8:	9f ac       	ldd	r9, Y+63	; 0x3f
     dfa:	21 97       	sbiw	r28, 0x01	; 1
     dfc:	62 14       	cp	r6, r2
     dfe:	73 04       	cpc	r7, r3
     e00:	84 04       	cpc	r8, r4
     e02:	95 04       	cpc	r9, r5
     e04:	08 f0       	brcs	.+2      	; 0xe08 <__stack+0x5a9>
     e06:	f2 c1       	rjmp	.+996    	; 0x11ec <__stack+0x98d>
     e08:	ff c1       	rjmp	.+1022   	; 0x1208 <__stack+0x9a9>
     e0a:	e2 96       	adiw	r28, 0x32	; 50
     e0c:	8f af       	std	Y+63, r24	; 0x3f
     e0e:	e2 97       	sbiw	r28, 0x32	; 50
     e10:	08 2e       	mov	r0, r24
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <__stack+0x5bd>
     e14:	ee 0c       	add	r14, r14
     e16:	ff 1c       	adc	r15, r15
     e18:	00 1f       	adc	r16, r16
     e1a:	11 1f       	adc	r17, r17
     e1c:	0a 94       	dec	r0
     e1e:	d2 f7       	brpl	.-12     	; 0xe14 <__stack+0x5b5>
     e20:	6a 2d       	mov	r22, r10
     e22:	68 1b       	sub	r22, r24
     e24:	d2 01       	movw	r26, r4
     e26:	c1 01       	movw	r24, r2
     e28:	06 2e       	mov	r0, r22
     e2a:	04 c0       	rjmp	.+8      	; 0xe34 <__stack+0x5d5>
     e2c:	b6 95       	lsr	r27
     e2e:	a7 95       	ror	r26
     e30:	97 95       	ror	r25
     e32:	87 95       	ror	r24
     e34:	0a 94       	dec	r0
     e36:	d2 f7       	brpl	.-12     	; 0xe2c <__stack+0x5cd>
     e38:	5c 01       	movw	r10, r24
     e3a:	6d 01       	movw	r12, r26
     e3c:	ae 28       	or	r10, r14
     e3e:	bf 28       	or	r11, r15
     e40:	c0 2a       	or	r12, r16
     e42:	d1 2a       	or	r13, r17
     e44:	ad aa       	std	Y+53, r10	; 0x35
     e46:	be aa       	std	Y+54, r11	; 0x36
     e48:	cf aa       	std	Y+55, r12	; 0x37
     e4a:	d8 ae       	std	Y+56, r13	; 0x38
     e4c:	72 01       	movw	r14, r4
     e4e:	61 01       	movw	r12, r2
     e50:	e2 96       	adiw	r28, 0x32	; 50
     e52:	0f ac       	ldd	r0, Y+63	; 0x3f
     e54:	e2 97       	sbiw	r28, 0x32	; 50
     e56:	04 c0       	rjmp	.+8      	; 0xe60 <__stack+0x601>
     e58:	cc 0c       	add	r12, r12
     e5a:	dd 1c       	adc	r13, r13
     e5c:	ee 1c       	adc	r14, r14
     e5e:	ff 1c       	adc	r15, r15
     e60:	0a 94       	dec	r0
     e62:	d2 f7       	brpl	.-12     	; 0xe58 <__stack+0x5f9>
     e64:	c9 aa       	std	Y+49, r12	; 0x31
     e66:	da aa       	std	Y+50, r13	; 0x32
     e68:	eb aa       	std	Y+51, r14	; 0x33
     e6a:	fc aa       	std	Y+52, r15	; 0x34
     e6c:	64 01       	movw	r12, r8
     e6e:	53 01       	movw	r10, r6
     e70:	06 2e       	mov	r0, r22
     e72:	04 c0       	rjmp	.+8      	; 0xe7c <__stack+0x61d>
     e74:	d6 94       	lsr	r13
     e76:	c7 94       	ror	r12
     e78:	b7 94       	ror	r11
     e7a:	a7 94       	ror	r10
     e7c:	0a 94       	dec	r0
     e7e:	d2 f7       	brpl	.-12     	; 0xe74 <__stack+0x615>
     e80:	d4 01       	movw	r26, r8
     e82:	c3 01       	movw	r24, r6
     e84:	e2 96       	adiw	r28, 0x32	; 50
     e86:	0f ac       	ldd	r0, Y+63	; 0x3f
     e88:	e2 97       	sbiw	r28, 0x32	; 50
     e8a:	04 c0       	rjmp	.+8      	; 0xe94 <__stack+0x635>
     e8c:	88 0f       	add	r24, r24
     e8e:	99 1f       	adc	r25, r25
     e90:	aa 1f       	adc	r26, r26
     e92:	bb 1f       	adc	r27, r27
     e94:	0a 94       	dec	r0
     e96:	d2 f7       	brpl	.-12     	; 0xe8c <__stack+0x62d>
     e98:	21 96       	adiw	r28, 0x01	; 1
     e9a:	ec ac       	ldd	r14, Y+60	; 0x3c
     e9c:	fd ac       	ldd	r15, Y+61	; 0x3d
     e9e:	0e ad       	ldd	r16, Y+62	; 0x3e
     ea0:	1f ad       	ldd	r17, Y+63	; 0x3f
     ea2:	21 97       	sbiw	r28, 0x01	; 1
     ea4:	04 c0       	rjmp	.+8      	; 0xeae <__stack+0x64f>
     ea6:	16 95       	lsr	r17
     ea8:	07 95       	ror	r16
     eaa:	f7 94       	ror	r15
     eac:	e7 94       	ror	r14
     eae:	6a 95       	dec	r22
     eb0:	d2 f7       	brpl	.-12     	; 0xea6 <__stack+0x647>
     eb2:	37 01       	movw	r6, r14
     eb4:	48 01       	movw	r8, r16
     eb6:	68 2a       	or	r6, r24
     eb8:	79 2a       	or	r7, r25
     eba:	8a 2a       	or	r8, r26
     ebc:	9b 2a       	or	r9, r27
     ebe:	6d a6       	std	Y+45, r6	; 0x2d
     ec0:	7e a6       	std	Y+46, r7	; 0x2e
     ec2:	8f a6       	std	Y+47, r8	; 0x2f
     ec4:	98 aa       	std	Y+48, r9	; 0x30
     ec6:	ed a8       	ldd	r14, Y+53	; 0x35
     ec8:	fe a8       	ldd	r15, Y+54	; 0x36
     eca:	0f a9       	ldd	r16, Y+55	; 0x37
     ecc:	18 ad       	ldd	r17, Y+56	; 0x38
     ece:	38 01       	movw	r6, r16
     ed0:	88 24       	eor	r8, r8
     ed2:	99 24       	eor	r9, r9
     ed4:	98 01       	movw	r18, r16
     ed6:	87 01       	movw	r16, r14
     ed8:	20 70       	andi	r18, 0x00	; 0
     eda:	30 70       	andi	r19, 0x00	; 0
     edc:	a5 96       	adiw	r28, 0x25	; 37
     ede:	0c af       	std	Y+60, r16	; 0x3c
     ee0:	1d af       	std	Y+61, r17	; 0x3d
     ee2:	2e af       	std	Y+62, r18	; 0x3e
     ee4:	3f af       	std	Y+63, r19	; 0x3f
     ee6:	a5 97       	sbiw	r28, 0x25	; 37
     ee8:	c6 01       	movw	r24, r12
     eea:	b5 01       	movw	r22, r10
     eec:	a4 01       	movw	r20, r8
     eee:	93 01       	movw	r18, r6
     ef0:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     ef4:	7b 01       	movw	r14, r22
     ef6:	8c 01       	movw	r16, r24
     ef8:	c6 01       	movw	r24, r12
     efa:	b5 01       	movw	r22, r10
     efc:	a4 01       	movw	r20, r8
     efe:	93 01       	movw	r18, r6
     f00:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     f04:	c9 01       	movw	r24, r18
     f06:	da 01       	movw	r26, r20
     f08:	1c 01       	movw	r2, r24
     f0a:	2d 01       	movw	r4, r26
     f0c:	c2 01       	movw	r24, r4
     f0e:	b1 01       	movw	r22, r2
     f10:	a5 96       	adiw	r28, 0x25	; 37
     f12:	2c ad       	ldd	r18, Y+60	; 0x3c
     f14:	3d ad       	ldd	r19, Y+61	; 0x3d
     f16:	4e ad       	ldd	r20, Y+62	; 0x3e
     f18:	5f ad       	ldd	r21, Y+63	; 0x3f
     f1a:	a5 97       	sbiw	r28, 0x25	; 37
     f1c:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     f20:	9b 01       	movw	r18, r22
     f22:	ac 01       	movw	r20, r24
     f24:	87 01       	movw	r16, r14
     f26:	ff 24       	eor	r15, r15
     f28:	ee 24       	eor	r14, r14
     f2a:	ad a4       	ldd	r10, Y+45	; 0x2d
     f2c:	be a4       	ldd	r11, Y+46	; 0x2e
     f2e:	cf a4       	ldd	r12, Y+47	; 0x2f
     f30:	d8 a8       	ldd	r13, Y+48	; 0x30
     f32:	c6 01       	movw	r24, r12
     f34:	aa 27       	eor	r26, r26
     f36:	bb 27       	eor	r27, r27
     f38:	57 01       	movw	r10, r14
     f3a:	68 01       	movw	r12, r16
     f3c:	a8 2a       	or	r10, r24
     f3e:	b9 2a       	or	r11, r25
     f40:	ca 2a       	or	r12, r26
     f42:	db 2a       	or	r13, r27
     f44:	a2 16       	cp	r10, r18
     f46:	b3 06       	cpc	r11, r19
     f48:	c4 06       	cpc	r12, r20
     f4a:	d5 06       	cpc	r13, r21
     f4c:	00 f5       	brcc	.+64     	; 0xf8e <__stack+0x72f>
     f4e:	08 94       	sec
     f50:	21 08       	sbc	r2, r1
     f52:	31 08       	sbc	r3, r1
     f54:	41 08       	sbc	r4, r1
     f56:	51 08       	sbc	r5, r1
     f58:	ed a8       	ldd	r14, Y+53	; 0x35
     f5a:	fe a8       	ldd	r15, Y+54	; 0x36
     f5c:	0f a9       	ldd	r16, Y+55	; 0x37
     f5e:	18 ad       	ldd	r17, Y+56	; 0x38
     f60:	ae 0c       	add	r10, r14
     f62:	bf 1c       	adc	r11, r15
     f64:	c0 1e       	adc	r12, r16
     f66:	d1 1e       	adc	r13, r17
     f68:	ae 14       	cp	r10, r14
     f6a:	bf 04       	cpc	r11, r15
     f6c:	c0 06       	cpc	r12, r16
     f6e:	d1 06       	cpc	r13, r17
     f70:	70 f0       	brcs	.+28     	; 0xf8e <__stack+0x72f>
     f72:	a2 16       	cp	r10, r18
     f74:	b3 06       	cpc	r11, r19
     f76:	c4 06       	cpc	r12, r20
     f78:	d5 06       	cpc	r13, r21
     f7a:	48 f4       	brcc	.+18     	; 0xf8e <__stack+0x72f>
     f7c:	08 94       	sec
     f7e:	21 08       	sbc	r2, r1
     f80:	31 08       	sbc	r3, r1
     f82:	41 08       	sbc	r4, r1
     f84:	51 08       	sbc	r5, r1
     f86:	ae 0c       	add	r10, r14
     f88:	bf 1c       	adc	r11, r15
     f8a:	c0 1e       	adc	r12, r16
     f8c:	d1 1e       	adc	r13, r17
     f8e:	a2 1a       	sub	r10, r18
     f90:	b3 0a       	sbc	r11, r19
     f92:	c4 0a       	sbc	r12, r20
     f94:	d5 0a       	sbc	r13, r21
     f96:	c6 01       	movw	r24, r12
     f98:	b5 01       	movw	r22, r10
     f9a:	a4 01       	movw	r20, r8
     f9c:	93 01       	movw	r18, r6
     f9e:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     fa2:	7b 01       	movw	r14, r22
     fa4:	8c 01       	movw	r16, r24
     fa6:	c6 01       	movw	r24, r12
     fa8:	b5 01       	movw	r22, r10
     faa:	a4 01       	movw	r20, r8
     fac:	93 01       	movw	r18, r6
     fae:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__udivmodsi4>
     fb2:	c9 01       	movw	r24, r18
     fb4:	da 01       	movw	r26, r20
     fb6:	3c 01       	movw	r6, r24
     fb8:	4d 01       	movw	r8, r26
     fba:	c4 01       	movw	r24, r8
     fbc:	b3 01       	movw	r22, r6
     fbe:	a5 96       	adiw	r28, 0x25	; 37
     fc0:	2c ad       	ldd	r18, Y+60	; 0x3c
     fc2:	3d ad       	ldd	r19, Y+61	; 0x3d
     fc4:	4e ad       	ldd	r20, Y+62	; 0x3e
     fc6:	5f ad       	ldd	r21, Y+63	; 0x3f
     fc8:	a5 97       	sbiw	r28, 0x25	; 37
     fca:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
     fce:	9b 01       	movw	r18, r22
     fd0:	ac 01       	movw	r20, r24
     fd2:	87 01       	movw	r16, r14
     fd4:	ff 24       	eor	r15, r15
     fd6:	ee 24       	eor	r14, r14
     fd8:	8d a5       	ldd	r24, Y+45	; 0x2d
     fda:	9e a5       	ldd	r25, Y+46	; 0x2e
     fdc:	af a5       	ldd	r26, Y+47	; 0x2f
     fde:	b8 a9       	ldd	r27, Y+48	; 0x30
     fe0:	a0 70       	andi	r26, 0x00	; 0
     fe2:	b0 70       	andi	r27, 0x00	; 0
     fe4:	57 01       	movw	r10, r14
     fe6:	68 01       	movw	r12, r16
     fe8:	a8 2a       	or	r10, r24
     fea:	b9 2a       	or	r11, r25
     fec:	ca 2a       	or	r12, r26
     fee:	db 2a       	or	r13, r27
     ff0:	a2 16       	cp	r10, r18
     ff2:	b3 06       	cpc	r11, r19
     ff4:	c4 06       	cpc	r12, r20
     ff6:	d5 06       	cpc	r13, r21
     ff8:	00 f5       	brcc	.+64     	; 0x103a <__stack+0x7db>
     ffa:	08 94       	sec
     ffc:	61 08       	sbc	r6, r1
     ffe:	71 08       	sbc	r7, r1
    1000:	81 08       	sbc	r8, r1
    1002:	91 08       	sbc	r9, r1
    1004:	6d a9       	ldd	r22, Y+53	; 0x35
    1006:	7e a9       	ldd	r23, Y+54	; 0x36
    1008:	8f a9       	ldd	r24, Y+55	; 0x37
    100a:	98 ad       	ldd	r25, Y+56	; 0x38
    100c:	a6 0e       	add	r10, r22
    100e:	b7 1e       	adc	r11, r23
    1010:	c8 1e       	adc	r12, r24
    1012:	d9 1e       	adc	r13, r25
    1014:	a6 16       	cp	r10, r22
    1016:	b7 06       	cpc	r11, r23
    1018:	c8 06       	cpc	r12, r24
    101a:	d9 06       	cpc	r13, r25
    101c:	70 f0       	brcs	.+28     	; 0x103a <__stack+0x7db>
    101e:	a2 16       	cp	r10, r18
    1020:	b3 06       	cpc	r11, r19
    1022:	c4 06       	cpc	r12, r20
    1024:	d5 06       	cpc	r13, r21
    1026:	48 f4       	brcc	.+18     	; 0x103a <__stack+0x7db>
    1028:	08 94       	sec
    102a:	61 08       	sbc	r6, r1
    102c:	71 08       	sbc	r7, r1
    102e:	81 08       	sbc	r8, r1
    1030:	91 08       	sbc	r9, r1
    1032:	a6 0e       	add	r10, r22
    1034:	b7 1e       	adc	r11, r23
    1036:	c8 1e       	adc	r12, r24
    1038:	d9 1e       	adc	r13, r25
    103a:	d6 01       	movw	r26, r12
    103c:	c5 01       	movw	r24, r10
    103e:	82 1b       	sub	r24, r18
    1040:	93 0b       	sbc	r25, r19
    1042:	a4 0b       	sbc	r26, r20
    1044:	b5 0b       	sbc	r27, r21
    1046:	89 a7       	std	Y+41, r24	; 0x29
    1048:	9a a7       	std	Y+42, r25	; 0x2a
    104a:	ab a7       	std	Y+43, r26	; 0x2b
    104c:	bc a7       	std	Y+44, r27	; 0x2c
    104e:	d1 01       	movw	r26, r2
    1050:	99 27       	eor	r25, r25
    1052:	88 27       	eor	r24, r24
    1054:	64 01       	movw	r12, r8
    1056:	53 01       	movw	r10, r6
    1058:	a8 2a       	or	r10, r24
    105a:	b9 2a       	or	r11, r25
    105c:	ca 2a       	or	r12, r26
    105e:	db 2a       	or	r13, r27
    1060:	25 96       	adiw	r28, 0x05	; 5
    1062:	ac ae       	std	Y+60, r10	; 0x3c
    1064:	bd ae       	std	Y+61, r11	; 0x3d
    1066:	ce ae       	std	Y+62, r12	; 0x3e
    1068:	df ae       	std	Y+63, r13	; 0x3f
    106a:	25 97       	sbiw	r28, 0x05	; 5
    106c:	86 01       	movw	r16, r12
    106e:	75 01       	movw	r14, r10
    1070:	2f ef       	ldi	r18, 0xFF	; 255
    1072:	3f ef       	ldi	r19, 0xFF	; 255
    1074:	40 e0       	ldi	r20, 0x00	; 0
    1076:	50 e0       	ldi	r21, 0x00	; 0
    1078:	e2 22       	and	r14, r18
    107a:	f3 22       	and	r15, r19
    107c:	04 23       	and	r16, r20
    107e:	15 23       	and	r17, r21
    1080:	a6 01       	movw	r20, r12
    1082:	66 27       	eor	r22, r22
    1084:	77 27       	eor	r23, r23
    1086:	ad 96       	adiw	r28, 0x2d	; 45
    1088:	4c af       	std	Y+60, r20	; 0x3c
    108a:	5d af       	std	Y+61, r21	; 0x3d
    108c:	6e af       	std	Y+62, r22	; 0x3e
    108e:	7f af       	std	Y+63, r23	; 0x3f
    1090:	ad 97       	sbiw	r28, 0x2d	; 45
    1092:	a9 a8       	ldd	r10, Y+49	; 0x31
    1094:	ba a8       	ldd	r11, Y+50	; 0x32
    1096:	cb a8       	ldd	r12, Y+51	; 0x33
    1098:	dc a8       	ldd	r13, Y+52	; 0x34
    109a:	6f ef       	ldi	r22, 0xFF	; 255
    109c:	7f ef       	ldi	r23, 0xFF	; 255
    109e:	80 e0       	ldi	r24, 0x00	; 0
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	a6 22       	and	r10, r22
    10a4:	b7 22       	and	r11, r23
    10a6:	c8 22       	and	r12, r24
    10a8:	d9 22       	and	r13, r25
    10aa:	89 a9       	ldd	r24, Y+49	; 0x31
    10ac:	9a a9       	ldd	r25, Y+50	; 0x32
    10ae:	ab a9       	ldd	r26, Y+51	; 0x33
    10b0:	bc a9       	ldd	r27, Y+52	; 0x34
    10b2:	1d 01       	movw	r2, r26
    10b4:	44 24       	eor	r4, r4
    10b6:	55 24       	eor	r5, r5
    10b8:	c8 01       	movw	r24, r16
    10ba:	b7 01       	movw	r22, r14
    10bc:	a6 01       	movw	r20, r12
    10be:	95 01       	movw	r18, r10
    10c0:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
    10c4:	a9 96       	adiw	r28, 0x29	; 41
    10c6:	6c af       	std	Y+60, r22	; 0x3c
    10c8:	7d af       	std	Y+61, r23	; 0x3d
    10ca:	8e af       	std	Y+62, r24	; 0x3e
    10cc:	9f af       	std	Y+63, r25	; 0x3f
    10ce:	a9 97       	sbiw	r28, 0x29	; 41
    10d0:	c8 01       	movw	r24, r16
    10d2:	b7 01       	movw	r22, r14
    10d4:	a2 01       	movw	r20, r4
    10d6:	91 01       	movw	r18, r2
    10d8:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
    10dc:	3b 01       	movw	r6, r22
    10de:	4c 01       	movw	r8, r24
    10e0:	ad 96       	adiw	r28, 0x2d	; 45
    10e2:	6c ad       	ldd	r22, Y+60	; 0x3c
    10e4:	7d ad       	ldd	r23, Y+61	; 0x3d
    10e6:	8e ad       	ldd	r24, Y+62	; 0x3e
    10e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    10ea:	ad 97       	sbiw	r28, 0x2d	; 45
    10ec:	a6 01       	movw	r20, r12
    10ee:	95 01       	movw	r18, r10
    10f0:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
    10f4:	7b 01       	movw	r14, r22
    10f6:	8c 01       	movw	r16, r24
    10f8:	ad 96       	adiw	r28, 0x2d	; 45
    10fa:	6c ad       	ldd	r22, Y+60	; 0x3c
    10fc:	7d ad       	ldd	r23, Y+61	; 0x3d
    10fe:	8e ad       	ldd	r24, Y+62	; 0x3e
    1100:	9f ad       	ldd	r25, Y+63	; 0x3f
    1102:	ad 97       	sbiw	r28, 0x2d	; 45
    1104:	a2 01       	movw	r20, r4
    1106:	91 01       	movw	r18, r2
    1108:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
    110c:	5b 01       	movw	r10, r22
    110e:	6c 01       	movw	r12, r24
    1110:	a8 01       	movw	r20, r16
    1112:	97 01       	movw	r18, r14
    1114:	26 0d       	add	r18, r6
    1116:	37 1d       	adc	r19, r7
    1118:	48 1d       	adc	r20, r8
    111a:	59 1d       	adc	r21, r9
    111c:	a9 96       	adiw	r28, 0x29	; 41
    111e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1120:	7d ac       	ldd	r7, Y+61	; 0x3d
    1122:	8e ac       	ldd	r8, Y+62	; 0x3e
    1124:	9f ac       	ldd	r9, Y+63	; 0x3f
    1126:	a9 97       	sbiw	r28, 0x29	; 41
    1128:	c4 01       	movw	r24, r8
    112a:	aa 27       	eor	r26, r26
    112c:	bb 27       	eor	r27, r27
    112e:	28 0f       	add	r18, r24
    1130:	39 1f       	adc	r19, r25
    1132:	4a 1f       	adc	r20, r26
    1134:	5b 1f       	adc	r21, r27
    1136:	2e 15       	cp	r18, r14
    1138:	3f 05       	cpc	r19, r15
    113a:	40 07       	cpc	r20, r16
    113c:	51 07       	cpc	r21, r17
    113e:	48 f4       	brcc	.+18     	; 0x1152 <__stack+0x8f3>
    1140:	e1 2c       	mov	r14, r1
    1142:	f1 2c       	mov	r15, r1
    1144:	61 e0       	ldi	r22, 0x01	; 1
    1146:	06 2f       	mov	r16, r22
    1148:	11 2d       	mov	r17, r1
    114a:	ae 0c       	add	r10, r14
    114c:	bf 1c       	adc	r11, r15
    114e:	c0 1e       	adc	r12, r16
    1150:	d1 1e       	adc	r13, r17
    1152:	ca 01       	movw	r24, r20
    1154:	aa 27       	eor	r26, r26
    1156:	bb 27       	eor	r27, r27
    1158:	bc 01       	movw	r22, r24
    115a:	cd 01       	movw	r24, r26
    115c:	6a 0d       	add	r22, r10
    115e:	7b 1d       	adc	r23, r11
    1160:	8c 1d       	adc	r24, r12
    1162:	9d 1d       	adc	r25, r13
    1164:	69 a4       	ldd	r6, Y+41	; 0x29
    1166:	7a a4       	ldd	r7, Y+42	; 0x2a
    1168:	8b a4       	ldd	r8, Y+43	; 0x2b
    116a:	9c a4       	ldd	r9, Y+44	; 0x2c
    116c:	66 16       	cp	r6, r22
    116e:	77 06       	cpc	r7, r23
    1170:	88 06       	cpc	r8, r24
    1172:	99 06       	cpc	r9, r25
    1174:	50 f1       	brcs	.+84     	; 0x11ca <__stack+0x96b>
    1176:	66 15       	cp	r22, r6
    1178:	77 05       	cpc	r23, r7
    117a:	88 05       	cpc	r24, r8
    117c:	99 05       	cpc	r25, r9
    117e:	09 f0       	breq	.+2      	; 0x1182 <__stack+0x923>
    1180:	4d c0       	rjmp	.+154    	; 0x121c <__stack+0x9bd>
    1182:	d9 01       	movw	r26, r18
    1184:	99 27       	eor	r25, r25
    1186:	88 27       	eor	r24, r24
    1188:	a9 96       	adiw	r28, 0x29	; 41
    118a:	2c ad       	ldd	r18, Y+60	; 0x3c
    118c:	3d ad       	ldd	r19, Y+61	; 0x3d
    118e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1190:	5f ad       	ldd	r21, Y+63	; 0x3f
    1192:	a9 97       	sbiw	r28, 0x29	; 41
    1194:	40 70       	andi	r20, 0x00	; 0
    1196:	50 70       	andi	r21, 0x00	; 0
    1198:	82 0f       	add	r24, r18
    119a:	93 1f       	adc	r25, r19
    119c:	a4 1f       	adc	r26, r20
    119e:	b5 1f       	adc	r27, r21
    11a0:	21 96       	adiw	r28, 0x01	; 1
    11a2:	2c ad       	ldd	r18, Y+60	; 0x3c
    11a4:	3d ad       	ldd	r19, Y+61	; 0x3d
    11a6:	4e ad       	ldd	r20, Y+62	; 0x3e
    11a8:	5f ad       	ldd	r21, Y+63	; 0x3f
    11aa:	21 97       	sbiw	r28, 0x01	; 1
    11ac:	e2 96       	adiw	r28, 0x32	; 50
    11ae:	0f ac       	ldd	r0, Y+63	; 0x3f
    11b0:	e2 97       	sbiw	r28, 0x32	; 50
    11b2:	04 c0       	rjmp	.+8      	; 0x11bc <__stack+0x95d>
    11b4:	22 0f       	add	r18, r18
    11b6:	33 1f       	adc	r19, r19
    11b8:	44 1f       	adc	r20, r20
    11ba:	55 1f       	adc	r21, r21
    11bc:	0a 94       	dec	r0
    11be:	d2 f7       	brpl	.-12     	; 0x11b4 <__stack+0x955>
    11c0:	28 17       	cp	r18, r24
    11c2:	39 07       	cpc	r19, r25
    11c4:	4a 07       	cpc	r20, r26
    11c6:	5b 07       	cpc	r21, r27
    11c8:	48 f5       	brcc	.+82     	; 0x121c <__stack+0x9bd>
    11ca:	25 96       	adiw	r28, 0x05	; 5
    11cc:	0c ad       	ldd	r16, Y+60	; 0x3c
    11ce:	1d ad       	ldd	r17, Y+61	; 0x3d
    11d0:	2e ad       	ldd	r18, Y+62	; 0x3e
    11d2:	3f ad       	ldd	r19, Y+63	; 0x3f
    11d4:	25 97       	sbiw	r28, 0x05	; 5
    11d6:	01 50       	subi	r16, 0x01	; 1
    11d8:	10 40       	sbci	r17, 0x00	; 0
    11da:	20 40       	sbci	r18, 0x00	; 0
    11dc:	30 40       	sbci	r19, 0x00	; 0
    11de:	25 96       	adiw	r28, 0x05	; 5
    11e0:	0c af       	std	Y+60, r16	; 0x3c
    11e2:	1d af       	std	Y+61, r17	; 0x3d
    11e4:	2e af       	std	Y+62, r18	; 0x3e
    11e6:	3f af       	std	Y+63, r19	; 0x3f
    11e8:	25 97       	sbiw	r28, 0x05	; 5
    11ea:	18 c0       	rjmp	.+48     	; 0x121c <__stack+0x9bd>
    11ec:	66 24       	eor	r6, r6
    11ee:	77 24       	eor	r7, r7
    11f0:	43 01       	movw	r8, r6
    11f2:	21 e0       	ldi	r18, 0x01	; 1
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	25 96       	adiw	r28, 0x05	; 5
    11fc:	2c af       	std	Y+60, r18	; 0x3c
    11fe:	3d af       	std	Y+61, r19	; 0x3d
    1200:	4e af       	std	Y+62, r20	; 0x3e
    1202:	5f af       	std	Y+63, r21	; 0x3f
    1204:	25 97       	sbiw	r28, 0x05	; 5
    1206:	0d c0       	rjmp	.+26     	; 0x1222 <__stack+0x9c3>
    1208:	66 24       	eor	r6, r6
    120a:	77 24       	eor	r7, r7
    120c:	43 01       	movw	r8, r6
    120e:	25 96       	adiw	r28, 0x05	; 5
    1210:	1c ae       	std	Y+60, r1	; 0x3c
    1212:	1d ae       	std	Y+61, r1	; 0x3d
    1214:	1e ae       	std	Y+62, r1	; 0x3e
    1216:	1f ae       	std	Y+63, r1	; 0x3f
    1218:	25 97       	sbiw	r28, 0x05	; 5
    121a:	03 c0       	rjmp	.+6      	; 0x1222 <__stack+0x9c3>
    121c:	66 24       	eor	r6, r6
    121e:	77 24       	eor	r7, r7
    1220:	43 01       	movw	r8, r6
    1222:	fe 01       	movw	r30, r28
    1224:	b1 96       	adiw	r30, 0x21	; 33
    1226:	88 e0       	ldi	r24, 0x08	; 8
    1228:	df 01       	movw	r26, r30
    122a:	1d 92       	st	X+, r1
    122c:	8a 95       	dec	r24
    122e:	e9 f7       	brne	.-6      	; 0x122a <__stack+0x9cb>
    1230:	25 96       	adiw	r28, 0x05	; 5
    1232:	ac ac       	ldd	r10, Y+60	; 0x3c
    1234:	bd ac       	ldd	r11, Y+61	; 0x3d
    1236:	ce ac       	ldd	r12, Y+62	; 0x3e
    1238:	df ac       	ldd	r13, Y+63	; 0x3f
    123a:	25 97       	sbiw	r28, 0x05	; 5
    123c:	a9 a2       	std	Y+33, r10	; 0x21
    123e:	ba a2       	std	Y+34, r11	; 0x22
    1240:	cb a2       	std	Y+35, r12	; 0x23
    1242:	dc a2       	std	Y+36, r13	; 0x24
    1244:	6d a2       	std	Y+37, r6	; 0x25
    1246:	7e a2       	std	Y+38, r7	; 0x26
    1248:	8f a2       	std	Y+39, r8	; 0x27
    124a:	98 a6       	std	Y+40, r9	; 0x28
    124c:	22 96       	adiw	r28, 0x02	; 2
    124e:	2f ad       	ldd	r18, Y+63	; 0x3f
    1250:	22 97       	sbiw	r28, 0x02	; 2
    1252:	3a a1       	ldd	r19, Y+34	; 0x22
    1254:	4b a1       	ldd	r20, Y+35	; 0x23
    1256:	5c a1       	ldd	r21, Y+36	; 0x24
    1258:	66 2d       	mov	r22, r6
    125a:	7e a1       	ldd	r23, Y+38	; 0x26
    125c:	df a0       	ldd	r13, Y+39	; 0x27
    125e:	98 a5       	ldd	r25, Y+40	; 0x28
    1260:	e1 96       	adiw	r28, 0x31	; 49
    1262:	ec ac       	ldd	r14, Y+60	; 0x3c
    1264:	fd ac       	ldd	r15, Y+61	; 0x3d
    1266:	0e ad       	ldd	r16, Y+62	; 0x3e
    1268:	1f ad       	ldd	r17, Y+63	; 0x3f
    126a:	e1 97       	sbiw	r28, 0x31	; 49
    126c:	e1 14       	cp	r14, r1
    126e:	f1 04       	cpc	r15, r1
    1270:	01 05       	cpc	r16, r1
    1272:	11 05       	cpc	r17, r1
    1274:	09 f4       	brne	.+2      	; 0x1278 <__stack+0xa19>
    1276:	56 c0       	rjmp	.+172    	; 0x1324 <__stack+0xac5>
    1278:	21 95       	neg	r18
    127a:	81 e0       	ldi	r24, 0x01	; 1
    127c:	12 16       	cp	r1, r18
    127e:	08 f0       	brcs	.+2      	; 0x1282 <__stack+0xa23>
    1280:	80 e0       	ldi	r24, 0x00	; 0
    1282:	31 95       	neg	r19
    1284:	e1 e0       	ldi	r30, 0x01	; 1
    1286:	13 16       	cp	r1, r19
    1288:	08 f0       	brcs	.+2      	; 0x128c <__stack+0xa2d>
    128a:	e0 e0       	ldi	r30, 0x00	; 0
    128c:	93 2e       	mov	r9, r19
    128e:	98 1a       	sub	r9, r24
    1290:	81 e0       	ldi	r24, 0x01	; 1
    1292:	39 15       	cp	r19, r9
    1294:	08 f0       	brcs	.+2      	; 0x1298 <__stack+0xa39>
    1296:	80 e0       	ldi	r24, 0x00	; 0
    1298:	e8 2b       	or	r30, r24
    129a:	41 95       	neg	r20
    129c:	f1 e0       	ldi	r31, 0x01	; 1
    129e:	14 16       	cp	r1, r20
    12a0:	08 f0       	brcs	.+2      	; 0x12a4 <__stack+0xa45>
    12a2:	f0 e0       	ldi	r31, 0x00	; 0
    12a4:	a4 2e       	mov	r10, r20
    12a6:	ae 1a       	sub	r10, r30
    12a8:	81 e0       	ldi	r24, 0x01	; 1
    12aa:	4a 15       	cp	r20, r10
    12ac:	08 f0       	brcs	.+2      	; 0x12b0 <__stack+0xa51>
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	f8 2b       	or	r31, r24
    12b2:	51 95       	neg	r21
    12b4:	e1 e0       	ldi	r30, 0x01	; 1
    12b6:	15 16       	cp	r1, r21
    12b8:	08 f0       	brcs	.+2      	; 0x12bc <__stack+0xa5d>
    12ba:	e0 e0       	ldi	r30, 0x00	; 0
    12bc:	b5 2e       	mov	r11, r21
    12be:	bf 1a       	sub	r11, r31
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	5b 15       	cp	r21, r11
    12c4:	08 f0       	brcs	.+2      	; 0x12c8 <__stack+0xa69>
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	e8 2b       	or	r30, r24
    12ca:	61 95       	neg	r22
    12cc:	f1 e0       	ldi	r31, 0x01	; 1
    12ce:	16 16       	cp	r1, r22
    12d0:	08 f0       	brcs	.+2      	; 0x12d4 <__stack+0xa75>
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	a6 2f       	mov	r26, r22
    12d6:	ae 1b       	sub	r26, r30
    12d8:	81 e0       	ldi	r24, 0x01	; 1
    12da:	6a 17       	cp	r22, r26
    12dc:	08 f0       	brcs	.+2      	; 0x12e0 <__stack+0xa81>
    12de:	80 e0       	ldi	r24, 0x00	; 0
    12e0:	f8 2b       	or	r31, r24
    12e2:	71 95       	neg	r23
    12e4:	e1 e0       	ldi	r30, 0x01	; 1
    12e6:	17 16       	cp	r1, r23
    12e8:	08 f0       	brcs	.+2      	; 0x12ec <__stack+0xa8d>
    12ea:	e0 e0       	ldi	r30, 0x00	; 0
    12ec:	c7 2e       	mov	r12, r23
    12ee:	cf 1a       	sub	r12, r31
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	7c 15       	cp	r23, r12
    12f4:	08 f0       	brcs	.+2      	; 0x12f8 <__stack+0xa99>
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	e8 2b       	or	r30, r24
    12fa:	8d 2d       	mov	r24, r13
    12fc:	81 95       	neg	r24
    12fe:	f1 e0       	ldi	r31, 0x01	; 1
    1300:	18 16       	cp	r1, r24
    1302:	08 f0       	brcs	.+2      	; 0x1306 <__stack+0xaa7>
    1304:	f0 e0       	ldi	r31, 0x00	; 0
    1306:	d8 2e       	mov	r13, r24
    1308:	de 1a       	sub	r13, r30
    130a:	e1 e0       	ldi	r30, 0x01	; 1
    130c:	8d 15       	cp	r24, r13
    130e:	08 f0       	brcs	.+2      	; 0x1312 <__stack+0xab3>
    1310:	e0 e0       	ldi	r30, 0x00	; 0
    1312:	fe 2b       	or	r31, r30
    1314:	89 2f       	mov	r24, r25
    1316:	81 95       	neg	r24
    1318:	39 2d       	mov	r19, r9
    131a:	a5 01       	movw	r20, r10
    131c:	6a 2f       	mov	r22, r26
    131e:	7c 2d       	mov	r23, r12
    1320:	98 2f       	mov	r25, r24
    1322:	9f 1b       	sub	r25, r31
    1324:	8d 2d       	mov	r24, r13
    1326:	ce 58       	subi	r28, 0x8E	; 142
    1328:	df 4f       	sbci	r29, 0xFF	; 255
    132a:	e2 e1       	ldi	r30, 0x12	; 18
    132c:	0c 94 ea 27 	jmp	0x4fd4	; 0x4fd4 <__epilogue_restores__>

00001330 <_fpadd_parts>:
    1330:	a0 e0       	ldi	r26, 0x00	; 0
    1332:	b0 e0       	ldi	r27, 0x00	; 0
    1334:	ee e9       	ldi	r30, 0x9E	; 158
    1336:	f9 e0       	ldi	r31, 0x09	; 9
    1338:	0c 94 ce 27 	jmp	0x4f9c	; 0x4f9c <__prologue_saves__>
    133c:	dc 01       	movw	r26, r24
    133e:	2b 01       	movw	r4, r22
    1340:	fa 01       	movw	r30, r20
    1342:	9c 91       	ld	r25, X
    1344:	92 30       	cpi	r25, 0x02	; 2
    1346:	08 f4       	brcc	.+2      	; 0x134a <_fpadd_parts+0x1a>
    1348:	39 c1       	rjmp	.+626    	; 0x15bc <_fpadd_parts+0x28c>
    134a:	eb 01       	movw	r28, r22
    134c:	88 81       	ld	r24, Y
    134e:	82 30       	cpi	r24, 0x02	; 2
    1350:	08 f4       	brcc	.+2      	; 0x1354 <_fpadd_parts+0x24>
    1352:	33 c1       	rjmp	.+614    	; 0x15ba <_fpadd_parts+0x28a>
    1354:	94 30       	cpi	r25, 0x04	; 4
    1356:	69 f4       	brne	.+26     	; 0x1372 <_fpadd_parts+0x42>
    1358:	84 30       	cpi	r24, 0x04	; 4
    135a:	09 f0       	breq	.+2      	; 0x135e <_fpadd_parts+0x2e>
    135c:	2f c1       	rjmp	.+606    	; 0x15bc <_fpadd_parts+0x28c>
    135e:	11 96       	adiw	r26, 0x01	; 1
    1360:	9c 91       	ld	r25, X
    1362:	11 97       	sbiw	r26, 0x01	; 1
    1364:	89 81       	ldd	r24, Y+1	; 0x01
    1366:	98 17       	cp	r25, r24
    1368:	09 f4       	brne	.+2      	; 0x136c <_fpadd_parts+0x3c>
    136a:	28 c1       	rjmp	.+592    	; 0x15bc <_fpadd_parts+0x28c>
    136c:	ae e7       	ldi	r26, 0x7E	; 126
    136e:	b0 e0       	ldi	r27, 0x00	; 0
    1370:	25 c1       	rjmp	.+586    	; 0x15bc <_fpadd_parts+0x28c>
    1372:	84 30       	cpi	r24, 0x04	; 4
    1374:	09 f4       	brne	.+2      	; 0x1378 <_fpadd_parts+0x48>
    1376:	21 c1       	rjmp	.+578    	; 0x15ba <_fpadd_parts+0x28a>
    1378:	82 30       	cpi	r24, 0x02	; 2
    137a:	a9 f4       	brne	.+42     	; 0x13a6 <_fpadd_parts+0x76>
    137c:	92 30       	cpi	r25, 0x02	; 2
    137e:	09 f0       	breq	.+2      	; 0x1382 <_fpadd_parts+0x52>
    1380:	1d c1       	rjmp	.+570    	; 0x15bc <_fpadd_parts+0x28c>
    1382:	9a 01       	movw	r18, r20
    1384:	ad 01       	movw	r20, r26
    1386:	88 e0       	ldi	r24, 0x08	; 8
    1388:	ea 01       	movw	r28, r20
    138a:	09 90       	ld	r0, Y+
    138c:	ae 01       	movw	r20, r28
    138e:	e9 01       	movw	r28, r18
    1390:	09 92       	st	Y+, r0
    1392:	9e 01       	movw	r18, r28
    1394:	81 50       	subi	r24, 0x01	; 1
    1396:	c1 f7       	brne	.-16     	; 0x1388 <_fpadd_parts+0x58>
    1398:	e2 01       	movw	r28, r4
    139a:	89 81       	ldd	r24, Y+1	; 0x01
    139c:	11 96       	adiw	r26, 0x01	; 1
    139e:	9c 91       	ld	r25, X
    13a0:	89 23       	and	r24, r25
    13a2:	81 83       	std	Z+1, r24	; 0x01
    13a4:	08 c1       	rjmp	.+528    	; 0x15b6 <_fpadd_parts+0x286>
    13a6:	92 30       	cpi	r25, 0x02	; 2
    13a8:	09 f4       	brne	.+2      	; 0x13ac <_fpadd_parts+0x7c>
    13aa:	07 c1       	rjmp	.+526    	; 0x15ba <_fpadd_parts+0x28a>
    13ac:	12 96       	adiw	r26, 0x02	; 2
    13ae:	2d 90       	ld	r2, X+
    13b0:	3c 90       	ld	r3, X
    13b2:	13 97       	sbiw	r26, 0x03	; 3
    13b4:	eb 01       	movw	r28, r22
    13b6:	8a 81       	ldd	r24, Y+2	; 0x02
    13b8:	9b 81       	ldd	r25, Y+3	; 0x03
    13ba:	14 96       	adiw	r26, 0x04	; 4
    13bc:	ad 90       	ld	r10, X+
    13be:	bd 90       	ld	r11, X+
    13c0:	cd 90       	ld	r12, X+
    13c2:	dc 90       	ld	r13, X
    13c4:	17 97       	sbiw	r26, 0x07	; 7
    13c6:	ec 80       	ldd	r14, Y+4	; 0x04
    13c8:	fd 80       	ldd	r15, Y+5	; 0x05
    13ca:	0e 81       	ldd	r16, Y+6	; 0x06
    13cc:	1f 81       	ldd	r17, Y+7	; 0x07
    13ce:	91 01       	movw	r18, r2
    13d0:	28 1b       	sub	r18, r24
    13d2:	39 0b       	sbc	r19, r25
    13d4:	b9 01       	movw	r22, r18
    13d6:	37 ff       	sbrs	r19, 7
    13d8:	04 c0       	rjmp	.+8      	; 0x13e2 <_fpadd_parts+0xb2>
    13da:	66 27       	eor	r22, r22
    13dc:	77 27       	eor	r23, r23
    13de:	62 1b       	sub	r22, r18
    13e0:	73 0b       	sbc	r23, r19
    13e2:	60 32       	cpi	r22, 0x20	; 32
    13e4:	71 05       	cpc	r23, r1
    13e6:	0c f0       	brlt	.+2      	; 0x13ea <_fpadd_parts+0xba>
    13e8:	61 c0       	rjmp	.+194    	; 0x14ac <_fpadd_parts+0x17c>
    13ea:	12 16       	cp	r1, r18
    13ec:	13 06       	cpc	r1, r19
    13ee:	6c f5       	brge	.+90     	; 0x144a <_fpadd_parts+0x11a>
    13f0:	37 01       	movw	r6, r14
    13f2:	48 01       	movw	r8, r16
    13f4:	06 2e       	mov	r0, r22
    13f6:	04 c0       	rjmp	.+8      	; 0x1400 <_fpadd_parts+0xd0>
    13f8:	96 94       	lsr	r9
    13fa:	87 94       	ror	r8
    13fc:	77 94       	ror	r7
    13fe:	67 94       	ror	r6
    1400:	0a 94       	dec	r0
    1402:	d2 f7       	brpl	.-12     	; 0x13f8 <_fpadd_parts+0xc8>
    1404:	21 e0       	ldi	r18, 0x01	; 1
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	40 e0       	ldi	r20, 0x00	; 0
    140a:	50 e0       	ldi	r21, 0x00	; 0
    140c:	04 c0       	rjmp	.+8      	; 0x1416 <_fpadd_parts+0xe6>
    140e:	22 0f       	add	r18, r18
    1410:	33 1f       	adc	r19, r19
    1412:	44 1f       	adc	r20, r20
    1414:	55 1f       	adc	r21, r21
    1416:	6a 95       	dec	r22
    1418:	d2 f7       	brpl	.-12     	; 0x140e <_fpadd_parts+0xde>
    141a:	21 50       	subi	r18, 0x01	; 1
    141c:	30 40       	sbci	r19, 0x00	; 0
    141e:	40 40       	sbci	r20, 0x00	; 0
    1420:	50 40       	sbci	r21, 0x00	; 0
    1422:	2e 21       	and	r18, r14
    1424:	3f 21       	and	r19, r15
    1426:	40 23       	and	r20, r16
    1428:	51 23       	and	r21, r17
    142a:	21 15       	cp	r18, r1
    142c:	31 05       	cpc	r19, r1
    142e:	41 05       	cpc	r20, r1
    1430:	51 05       	cpc	r21, r1
    1432:	21 f0       	breq	.+8      	; 0x143c <_fpadd_parts+0x10c>
    1434:	21 e0       	ldi	r18, 0x01	; 1
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	40 e0       	ldi	r20, 0x00	; 0
    143a:	50 e0       	ldi	r21, 0x00	; 0
    143c:	79 01       	movw	r14, r18
    143e:	8a 01       	movw	r16, r20
    1440:	e6 28       	or	r14, r6
    1442:	f7 28       	or	r15, r7
    1444:	08 29       	or	r16, r8
    1446:	19 29       	or	r17, r9
    1448:	3c c0       	rjmp	.+120    	; 0x14c2 <_fpadd_parts+0x192>
    144a:	23 2b       	or	r18, r19
    144c:	d1 f1       	breq	.+116    	; 0x14c2 <_fpadd_parts+0x192>
    144e:	26 0e       	add	r2, r22
    1450:	37 1e       	adc	r3, r23
    1452:	35 01       	movw	r6, r10
    1454:	46 01       	movw	r8, r12
    1456:	06 2e       	mov	r0, r22
    1458:	04 c0       	rjmp	.+8      	; 0x1462 <_fpadd_parts+0x132>
    145a:	96 94       	lsr	r9
    145c:	87 94       	ror	r8
    145e:	77 94       	ror	r7
    1460:	67 94       	ror	r6
    1462:	0a 94       	dec	r0
    1464:	d2 f7       	brpl	.-12     	; 0x145a <_fpadd_parts+0x12a>
    1466:	21 e0       	ldi	r18, 0x01	; 1
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	40 e0       	ldi	r20, 0x00	; 0
    146c:	50 e0       	ldi	r21, 0x00	; 0
    146e:	04 c0       	rjmp	.+8      	; 0x1478 <_fpadd_parts+0x148>
    1470:	22 0f       	add	r18, r18
    1472:	33 1f       	adc	r19, r19
    1474:	44 1f       	adc	r20, r20
    1476:	55 1f       	adc	r21, r21
    1478:	6a 95       	dec	r22
    147a:	d2 f7       	brpl	.-12     	; 0x1470 <_fpadd_parts+0x140>
    147c:	21 50       	subi	r18, 0x01	; 1
    147e:	30 40       	sbci	r19, 0x00	; 0
    1480:	40 40       	sbci	r20, 0x00	; 0
    1482:	50 40       	sbci	r21, 0x00	; 0
    1484:	2a 21       	and	r18, r10
    1486:	3b 21       	and	r19, r11
    1488:	4c 21       	and	r20, r12
    148a:	5d 21       	and	r21, r13
    148c:	21 15       	cp	r18, r1
    148e:	31 05       	cpc	r19, r1
    1490:	41 05       	cpc	r20, r1
    1492:	51 05       	cpc	r21, r1
    1494:	21 f0       	breq	.+8      	; 0x149e <_fpadd_parts+0x16e>
    1496:	21 e0       	ldi	r18, 0x01	; 1
    1498:	30 e0       	ldi	r19, 0x00	; 0
    149a:	40 e0       	ldi	r20, 0x00	; 0
    149c:	50 e0       	ldi	r21, 0x00	; 0
    149e:	59 01       	movw	r10, r18
    14a0:	6a 01       	movw	r12, r20
    14a2:	a6 28       	or	r10, r6
    14a4:	b7 28       	or	r11, r7
    14a6:	c8 28       	or	r12, r8
    14a8:	d9 28       	or	r13, r9
    14aa:	0b c0       	rjmp	.+22     	; 0x14c2 <_fpadd_parts+0x192>
    14ac:	82 15       	cp	r24, r2
    14ae:	93 05       	cpc	r25, r3
    14b0:	2c f0       	brlt	.+10     	; 0x14bc <_fpadd_parts+0x18c>
    14b2:	1c 01       	movw	r2, r24
    14b4:	aa 24       	eor	r10, r10
    14b6:	bb 24       	eor	r11, r11
    14b8:	65 01       	movw	r12, r10
    14ba:	03 c0       	rjmp	.+6      	; 0x14c2 <_fpadd_parts+0x192>
    14bc:	ee 24       	eor	r14, r14
    14be:	ff 24       	eor	r15, r15
    14c0:	87 01       	movw	r16, r14
    14c2:	11 96       	adiw	r26, 0x01	; 1
    14c4:	9c 91       	ld	r25, X
    14c6:	d2 01       	movw	r26, r4
    14c8:	11 96       	adiw	r26, 0x01	; 1
    14ca:	8c 91       	ld	r24, X
    14cc:	98 17       	cp	r25, r24
    14ce:	09 f4       	brne	.+2      	; 0x14d2 <_fpadd_parts+0x1a2>
    14d0:	45 c0       	rjmp	.+138    	; 0x155c <_fpadd_parts+0x22c>
    14d2:	99 23       	and	r25, r25
    14d4:	39 f0       	breq	.+14     	; 0x14e4 <_fpadd_parts+0x1b4>
    14d6:	a8 01       	movw	r20, r16
    14d8:	97 01       	movw	r18, r14
    14da:	2a 19       	sub	r18, r10
    14dc:	3b 09       	sbc	r19, r11
    14de:	4c 09       	sbc	r20, r12
    14e0:	5d 09       	sbc	r21, r13
    14e2:	06 c0       	rjmp	.+12     	; 0x14f0 <_fpadd_parts+0x1c0>
    14e4:	a6 01       	movw	r20, r12
    14e6:	95 01       	movw	r18, r10
    14e8:	2e 19       	sub	r18, r14
    14ea:	3f 09       	sbc	r19, r15
    14ec:	40 0b       	sbc	r20, r16
    14ee:	51 0b       	sbc	r21, r17
    14f0:	57 fd       	sbrc	r21, 7
    14f2:	08 c0       	rjmp	.+16     	; 0x1504 <_fpadd_parts+0x1d4>
    14f4:	11 82       	std	Z+1, r1	; 0x01
    14f6:	33 82       	std	Z+3, r3	; 0x03
    14f8:	22 82       	std	Z+2, r2	; 0x02
    14fa:	24 83       	std	Z+4, r18	; 0x04
    14fc:	35 83       	std	Z+5, r19	; 0x05
    14fe:	46 83       	std	Z+6, r20	; 0x06
    1500:	57 83       	std	Z+7, r21	; 0x07
    1502:	1d c0       	rjmp	.+58     	; 0x153e <_fpadd_parts+0x20e>
    1504:	81 e0       	ldi	r24, 0x01	; 1
    1506:	81 83       	std	Z+1, r24	; 0x01
    1508:	33 82       	std	Z+3, r3	; 0x03
    150a:	22 82       	std	Z+2, r2	; 0x02
    150c:	88 27       	eor	r24, r24
    150e:	99 27       	eor	r25, r25
    1510:	dc 01       	movw	r26, r24
    1512:	82 1b       	sub	r24, r18
    1514:	93 0b       	sbc	r25, r19
    1516:	a4 0b       	sbc	r26, r20
    1518:	b5 0b       	sbc	r27, r21
    151a:	84 83       	std	Z+4, r24	; 0x04
    151c:	95 83       	std	Z+5, r25	; 0x05
    151e:	a6 83       	std	Z+6, r26	; 0x06
    1520:	b7 83       	std	Z+7, r27	; 0x07
    1522:	0d c0       	rjmp	.+26     	; 0x153e <_fpadd_parts+0x20e>
    1524:	22 0f       	add	r18, r18
    1526:	33 1f       	adc	r19, r19
    1528:	44 1f       	adc	r20, r20
    152a:	55 1f       	adc	r21, r21
    152c:	24 83       	std	Z+4, r18	; 0x04
    152e:	35 83       	std	Z+5, r19	; 0x05
    1530:	46 83       	std	Z+6, r20	; 0x06
    1532:	57 83       	std	Z+7, r21	; 0x07
    1534:	82 81       	ldd	r24, Z+2	; 0x02
    1536:	93 81       	ldd	r25, Z+3	; 0x03
    1538:	01 97       	sbiw	r24, 0x01	; 1
    153a:	93 83       	std	Z+3, r25	; 0x03
    153c:	82 83       	std	Z+2, r24	; 0x02
    153e:	24 81       	ldd	r18, Z+4	; 0x04
    1540:	35 81       	ldd	r19, Z+5	; 0x05
    1542:	46 81       	ldd	r20, Z+6	; 0x06
    1544:	57 81       	ldd	r21, Z+7	; 0x07
    1546:	da 01       	movw	r26, r20
    1548:	c9 01       	movw	r24, r18
    154a:	01 97       	sbiw	r24, 0x01	; 1
    154c:	a1 09       	sbc	r26, r1
    154e:	b1 09       	sbc	r27, r1
    1550:	8f 5f       	subi	r24, 0xFF	; 255
    1552:	9f 4f       	sbci	r25, 0xFF	; 255
    1554:	af 4f       	sbci	r26, 0xFF	; 255
    1556:	bf 43       	sbci	r27, 0x3F	; 63
    1558:	28 f3       	brcs	.-54     	; 0x1524 <_fpadd_parts+0x1f4>
    155a:	0b c0       	rjmp	.+22     	; 0x1572 <_fpadd_parts+0x242>
    155c:	91 83       	std	Z+1, r25	; 0x01
    155e:	33 82       	std	Z+3, r3	; 0x03
    1560:	22 82       	std	Z+2, r2	; 0x02
    1562:	ea 0c       	add	r14, r10
    1564:	fb 1c       	adc	r15, r11
    1566:	0c 1d       	adc	r16, r12
    1568:	1d 1d       	adc	r17, r13
    156a:	e4 82       	std	Z+4, r14	; 0x04
    156c:	f5 82       	std	Z+5, r15	; 0x05
    156e:	06 83       	std	Z+6, r16	; 0x06
    1570:	17 83       	std	Z+7, r17	; 0x07
    1572:	83 e0       	ldi	r24, 0x03	; 3
    1574:	80 83       	st	Z, r24
    1576:	24 81       	ldd	r18, Z+4	; 0x04
    1578:	35 81       	ldd	r19, Z+5	; 0x05
    157a:	46 81       	ldd	r20, Z+6	; 0x06
    157c:	57 81       	ldd	r21, Z+7	; 0x07
    157e:	57 ff       	sbrs	r21, 7
    1580:	1a c0       	rjmp	.+52     	; 0x15b6 <_fpadd_parts+0x286>
    1582:	c9 01       	movw	r24, r18
    1584:	aa 27       	eor	r26, r26
    1586:	97 fd       	sbrc	r25, 7
    1588:	a0 95       	com	r26
    158a:	ba 2f       	mov	r27, r26
    158c:	81 70       	andi	r24, 0x01	; 1
    158e:	90 70       	andi	r25, 0x00	; 0
    1590:	a0 70       	andi	r26, 0x00	; 0
    1592:	b0 70       	andi	r27, 0x00	; 0
    1594:	56 95       	lsr	r21
    1596:	47 95       	ror	r20
    1598:	37 95       	ror	r19
    159a:	27 95       	ror	r18
    159c:	82 2b       	or	r24, r18
    159e:	93 2b       	or	r25, r19
    15a0:	a4 2b       	or	r26, r20
    15a2:	b5 2b       	or	r27, r21
    15a4:	84 83       	std	Z+4, r24	; 0x04
    15a6:	95 83       	std	Z+5, r25	; 0x05
    15a8:	a6 83       	std	Z+6, r26	; 0x06
    15aa:	b7 83       	std	Z+7, r27	; 0x07
    15ac:	82 81       	ldd	r24, Z+2	; 0x02
    15ae:	93 81       	ldd	r25, Z+3	; 0x03
    15b0:	01 96       	adiw	r24, 0x01	; 1
    15b2:	93 83       	std	Z+3, r25	; 0x03
    15b4:	82 83       	std	Z+2, r24	; 0x02
    15b6:	df 01       	movw	r26, r30
    15b8:	01 c0       	rjmp	.+2      	; 0x15bc <_fpadd_parts+0x28c>
    15ba:	d2 01       	movw	r26, r4
    15bc:	cd 01       	movw	r24, r26
    15be:	cd b7       	in	r28, 0x3d	; 61
    15c0:	de b7       	in	r29, 0x3e	; 62
    15c2:	e2 e1       	ldi	r30, 0x12	; 18
    15c4:	0c 94 ea 27 	jmp	0x4fd4	; 0x4fd4 <__epilogue_restores__>

000015c8 <__subsf3>:
    15c8:	a0 e2       	ldi	r26, 0x20	; 32
    15ca:	b0 e0       	ldi	r27, 0x00	; 0
    15cc:	ea ee       	ldi	r30, 0xEA	; 234
    15ce:	fa e0       	ldi	r31, 0x0A	; 10
    15d0:	0c 94 da 27 	jmp	0x4fb4	; 0x4fb4 <__prologue_saves__+0x18>
    15d4:	69 83       	std	Y+1, r22	; 0x01
    15d6:	7a 83       	std	Y+2, r23	; 0x02
    15d8:	8b 83       	std	Y+3, r24	; 0x03
    15da:	9c 83       	std	Y+4, r25	; 0x04
    15dc:	2d 83       	std	Y+5, r18	; 0x05
    15de:	3e 83       	std	Y+6, r19	; 0x06
    15e0:	4f 83       	std	Y+7, r20	; 0x07
    15e2:	58 87       	std	Y+8, r21	; 0x08
    15e4:	e9 e0       	ldi	r30, 0x09	; 9
    15e6:	ee 2e       	mov	r14, r30
    15e8:	f1 2c       	mov	r15, r1
    15ea:	ec 0e       	add	r14, r28
    15ec:	fd 1e       	adc	r15, r29
    15ee:	ce 01       	movw	r24, r28
    15f0:	01 96       	adiw	r24, 0x01	; 1
    15f2:	b7 01       	movw	r22, r14
    15f4:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    15f8:	8e 01       	movw	r16, r28
    15fa:	0f 5e       	subi	r16, 0xEF	; 239
    15fc:	1f 4f       	sbci	r17, 0xFF	; 255
    15fe:	ce 01       	movw	r24, r28
    1600:	05 96       	adiw	r24, 0x05	; 5
    1602:	b8 01       	movw	r22, r16
    1604:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    1608:	8a 89       	ldd	r24, Y+18	; 0x12
    160a:	91 e0       	ldi	r25, 0x01	; 1
    160c:	89 27       	eor	r24, r25
    160e:	8a 8b       	std	Y+18, r24	; 0x12
    1610:	c7 01       	movw	r24, r14
    1612:	b8 01       	movw	r22, r16
    1614:	ae 01       	movw	r20, r28
    1616:	47 5e       	subi	r20, 0xE7	; 231
    1618:	5f 4f       	sbci	r21, 0xFF	; 255
    161a:	0e 94 98 09 	call	0x1330	; 0x1330 <_fpadd_parts>
    161e:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <__pack_f>
    1622:	a0 96       	adiw	r28, 0x20	; 32
    1624:	e6 e0       	ldi	r30, 0x06	; 6
    1626:	0c 94 f6 27 	jmp	0x4fec	; 0x4fec <__epilogue_restores__+0x18>

0000162a <__addsf3>:
    162a:	a0 e2       	ldi	r26, 0x20	; 32
    162c:	b0 e0       	ldi	r27, 0x00	; 0
    162e:	eb e1       	ldi	r30, 0x1B	; 27
    1630:	fb e0       	ldi	r31, 0x0B	; 11
    1632:	0c 94 da 27 	jmp	0x4fb4	; 0x4fb4 <__prologue_saves__+0x18>
    1636:	69 83       	std	Y+1, r22	; 0x01
    1638:	7a 83       	std	Y+2, r23	; 0x02
    163a:	8b 83       	std	Y+3, r24	; 0x03
    163c:	9c 83       	std	Y+4, r25	; 0x04
    163e:	2d 83       	std	Y+5, r18	; 0x05
    1640:	3e 83       	std	Y+6, r19	; 0x06
    1642:	4f 83       	std	Y+7, r20	; 0x07
    1644:	58 87       	std	Y+8, r21	; 0x08
    1646:	f9 e0       	ldi	r31, 0x09	; 9
    1648:	ef 2e       	mov	r14, r31
    164a:	f1 2c       	mov	r15, r1
    164c:	ec 0e       	add	r14, r28
    164e:	fd 1e       	adc	r15, r29
    1650:	ce 01       	movw	r24, r28
    1652:	01 96       	adiw	r24, 0x01	; 1
    1654:	b7 01       	movw	r22, r14
    1656:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    165a:	8e 01       	movw	r16, r28
    165c:	0f 5e       	subi	r16, 0xEF	; 239
    165e:	1f 4f       	sbci	r17, 0xFF	; 255
    1660:	ce 01       	movw	r24, r28
    1662:	05 96       	adiw	r24, 0x05	; 5
    1664:	b8 01       	movw	r22, r16
    1666:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    166a:	c7 01       	movw	r24, r14
    166c:	b8 01       	movw	r22, r16
    166e:	ae 01       	movw	r20, r28
    1670:	47 5e       	subi	r20, 0xE7	; 231
    1672:	5f 4f       	sbci	r21, 0xFF	; 255
    1674:	0e 94 98 09 	call	0x1330	; 0x1330 <_fpadd_parts>
    1678:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <__pack_f>
    167c:	a0 96       	adiw	r28, 0x20	; 32
    167e:	e6 e0       	ldi	r30, 0x06	; 6
    1680:	0c 94 f6 27 	jmp	0x4fec	; 0x4fec <__epilogue_restores__+0x18>

00001684 <__mulsf3>:
    1684:	a0 e2       	ldi	r26, 0x20	; 32
    1686:	b0 e0       	ldi	r27, 0x00	; 0
    1688:	e8 e4       	ldi	r30, 0x48	; 72
    168a:	fb e0       	ldi	r31, 0x0B	; 11
    168c:	0c 94 ce 27 	jmp	0x4f9c	; 0x4f9c <__prologue_saves__>
    1690:	69 83       	std	Y+1, r22	; 0x01
    1692:	7a 83       	std	Y+2, r23	; 0x02
    1694:	8b 83       	std	Y+3, r24	; 0x03
    1696:	9c 83       	std	Y+4, r25	; 0x04
    1698:	2d 83       	std	Y+5, r18	; 0x05
    169a:	3e 83       	std	Y+6, r19	; 0x06
    169c:	4f 83       	std	Y+7, r20	; 0x07
    169e:	58 87       	std	Y+8, r21	; 0x08
    16a0:	ce 01       	movw	r24, r28
    16a2:	01 96       	adiw	r24, 0x01	; 1
    16a4:	be 01       	movw	r22, r28
    16a6:	67 5f       	subi	r22, 0xF7	; 247
    16a8:	7f 4f       	sbci	r23, 0xFF	; 255
    16aa:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    16ae:	ce 01       	movw	r24, r28
    16b0:	05 96       	adiw	r24, 0x05	; 5
    16b2:	be 01       	movw	r22, r28
    16b4:	6f 5e       	subi	r22, 0xEF	; 239
    16b6:	7f 4f       	sbci	r23, 0xFF	; 255
    16b8:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    16bc:	99 85       	ldd	r25, Y+9	; 0x09
    16be:	92 30       	cpi	r25, 0x02	; 2
    16c0:	88 f0       	brcs	.+34     	; 0x16e4 <__mulsf3+0x60>
    16c2:	89 89       	ldd	r24, Y+17	; 0x11
    16c4:	82 30       	cpi	r24, 0x02	; 2
    16c6:	c8 f0       	brcs	.+50     	; 0x16fa <__mulsf3+0x76>
    16c8:	94 30       	cpi	r25, 0x04	; 4
    16ca:	19 f4       	brne	.+6      	; 0x16d2 <__mulsf3+0x4e>
    16cc:	82 30       	cpi	r24, 0x02	; 2
    16ce:	51 f4       	brne	.+20     	; 0x16e4 <__mulsf3+0x60>
    16d0:	04 c0       	rjmp	.+8      	; 0x16da <__mulsf3+0x56>
    16d2:	84 30       	cpi	r24, 0x04	; 4
    16d4:	29 f4       	brne	.+10     	; 0x16e0 <__mulsf3+0x5c>
    16d6:	92 30       	cpi	r25, 0x02	; 2
    16d8:	81 f4       	brne	.+32     	; 0x16fa <__mulsf3+0x76>
    16da:	8e e7       	ldi	r24, 0x7E	; 126
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	c6 c0       	rjmp	.+396    	; 0x186c <__mulsf3+0x1e8>
    16e0:	92 30       	cpi	r25, 0x02	; 2
    16e2:	49 f4       	brne	.+18     	; 0x16f6 <__mulsf3+0x72>
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    16e8:	8a 89       	ldd	r24, Y+18	; 0x12
    16ea:	98 13       	cpse	r25, r24
    16ec:	21 e0       	ldi	r18, 0x01	; 1
    16ee:	2a 87       	std	Y+10, r18	; 0x0a
    16f0:	ce 01       	movw	r24, r28
    16f2:	09 96       	adiw	r24, 0x09	; 9
    16f4:	bb c0       	rjmp	.+374    	; 0x186c <__mulsf3+0x1e8>
    16f6:	82 30       	cpi	r24, 0x02	; 2
    16f8:	49 f4       	brne	.+18     	; 0x170c <__mulsf3+0x88>
    16fa:	20 e0       	ldi	r18, 0x00	; 0
    16fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    16fe:	8a 89       	ldd	r24, Y+18	; 0x12
    1700:	98 13       	cpse	r25, r24
    1702:	21 e0       	ldi	r18, 0x01	; 1
    1704:	2a 8b       	std	Y+18, r18	; 0x12
    1706:	ce 01       	movw	r24, r28
    1708:	41 96       	adiw	r24, 0x11	; 17
    170a:	b0 c0       	rjmp	.+352    	; 0x186c <__mulsf3+0x1e8>
    170c:	2d 84       	ldd	r2, Y+13	; 0x0d
    170e:	3e 84       	ldd	r3, Y+14	; 0x0e
    1710:	4f 84       	ldd	r4, Y+15	; 0x0f
    1712:	58 88       	ldd	r5, Y+16	; 0x10
    1714:	6d 88       	ldd	r6, Y+21	; 0x15
    1716:	7e 88       	ldd	r7, Y+22	; 0x16
    1718:	8f 88       	ldd	r8, Y+23	; 0x17
    171a:	98 8c       	ldd	r9, Y+24	; 0x18
    171c:	ee 24       	eor	r14, r14
    171e:	ff 24       	eor	r15, r15
    1720:	87 01       	movw	r16, r14
    1722:	aa 24       	eor	r10, r10
    1724:	bb 24       	eor	r11, r11
    1726:	65 01       	movw	r12, r10
    1728:	40 e0       	ldi	r20, 0x00	; 0
    172a:	50 e0       	ldi	r21, 0x00	; 0
    172c:	60 e0       	ldi	r22, 0x00	; 0
    172e:	70 e0       	ldi	r23, 0x00	; 0
    1730:	e0 e0       	ldi	r30, 0x00	; 0
    1732:	f0 e0       	ldi	r31, 0x00	; 0
    1734:	c1 01       	movw	r24, r2
    1736:	81 70       	andi	r24, 0x01	; 1
    1738:	90 70       	andi	r25, 0x00	; 0
    173a:	89 2b       	or	r24, r25
    173c:	e9 f0       	breq	.+58     	; 0x1778 <__mulsf3+0xf4>
    173e:	e6 0c       	add	r14, r6
    1740:	f7 1c       	adc	r15, r7
    1742:	08 1d       	adc	r16, r8
    1744:	19 1d       	adc	r17, r9
    1746:	9a 01       	movw	r18, r20
    1748:	ab 01       	movw	r20, r22
    174a:	2a 0d       	add	r18, r10
    174c:	3b 1d       	adc	r19, r11
    174e:	4c 1d       	adc	r20, r12
    1750:	5d 1d       	adc	r21, r13
    1752:	80 e0       	ldi	r24, 0x00	; 0
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	a0 e0       	ldi	r26, 0x00	; 0
    1758:	b0 e0       	ldi	r27, 0x00	; 0
    175a:	e6 14       	cp	r14, r6
    175c:	f7 04       	cpc	r15, r7
    175e:	08 05       	cpc	r16, r8
    1760:	19 05       	cpc	r17, r9
    1762:	20 f4       	brcc	.+8      	; 0x176c <__mulsf3+0xe8>
    1764:	81 e0       	ldi	r24, 0x01	; 1
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	a0 e0       	ldi	r26, 0x00	; 0
    176a:	b0 e0       	ldi	r27, 0x00	; 0
    176c:	ba 01       	movw	r22, r20
    176e:	a9 01       	movw	r20, r18
    1770:	48 0f       	add	r20, r24
    1772:	59 1f       	adc	r21, r25
    1774:	6a 1f       	adc	r22, r26
    1776:	7b 1f       	adc	r23, r27
    1778:	aa 0c       	add	r10, r10
    177a:	bb 1c       	adc	r11, r11
    177c:	cc 1c       	adc	r12, r12
    177e:	dd 1c       	adc	r13, r13
    1780:	97 fe       	sbrs	r9, 7
    1782:	08 c0       	rjmp	.+16     	; 0x1794 <__mulsf3+0x110>
    1784:	81 e0       	ldi	r24, 0x01	; 1
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	a0 e0       	ldi	r26, 0x00	; 0
    178a:	b0 e0       	ldi	r27, 0x00	; 0
    178c:	a8 2a       	or	r10, r24
    178e:	b9 2a       	or	r11, r25
    1790:	ca 2a       	or	r12, r26
    1792:	db 2a       	or	r13, r27
    1794:	31 96       	adiw	r30, 0x01	; 1
    1796:	e0 32       	cpi	r30, 0x20	; 32
    1798:	f1 05       	cpc	r31, r1
    179a:	49 f0       	breq	.+18     	; 0x17ae <__mulsf3+0x12a>
    179c:	66 0c       	add	r6, r6
    179e:	77 1c       	adc	r7, r7
    17a0:	88 1c       	adc	r8, r8
    17a2:	99 1c       	adc	r9, r9
    17a4:	56 94       	lsr	r5
    17a6:	47 94       	ror	r4
    17a8:	37 94       	ror	r3
    17aa:	27 94       	ror	r2
    17ac:	c3 cf       	rjmp	.-122    	; 0x1734 <__mulsf3+0xb0>
    17ae:	fa 85       	ldd	r31, Y+10	; 0x0a
    17b0:	ea 89       	ldd	r30, Y+18	; 0x12
    17b2:	2b 89       	ldd	r18, Y+19	; 0x13
    17b4:	3c 89       	ldd	r19, Y+20	; 0x14
    17b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    17b8:	9c 85       	ldd	r25, Y+12	; 0x0c
    17ba:	28 0f       	add	r18, r24
    17bc:	39 1f       	adc	r19, r25
    17be:	2e 5f       	subi	r18, 0xFE	; 254
    17c0:	3f 4f       	sbci	r19, 0xFF	; 255
    17c2:	17 c0       	rjmp	.+46     	; 0x17f2 <__mulsf3+0x16e>
    17c4:	ca 01       	movw	r24, r20
    17c6:	81 70       	andi	r24, 0x01	; 1
    17c8:	90 70       	andi	r25, 0x00	; 0
    17ca:	89 2b       	or	r24, r25
    17cc:	61 f0       	breq	.+24     	; 0x17e6 <__mulsf3+0x162>
    17ce:	16 95       	lsr	r17
    17d0:	07 95       	ror	r16
    17d2:	f7 94       	ror	r15
    17d4:	e7 94       	ror	r14
    17d6:	80 e0       	ldi	r24, 0x00	; 0
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	a0 e0       	ldi	r26, 0x00	; 0
    17dc:	b0 e8       	ldi	r27, 0x80	; 128
    17de:	e8 2a       	or	r14, r24
    17e0:	f9 2a       	or	r15, r25
    17e2:	0a 2b       	or	r16, r26
    17e4:	1b 2b       	or	r17, r27
    17e6:	76 95       	lsr	r23
    17e8:	67 95       	ror	r22
    17ea:	57 95       	ror	r21
    17ec:	47 95       	ror	r20
    17ee:	2f 5f       	subi	r18, 0xFF	; 255
    17f0:	3f 4f       	sbci	r19, 0xFF	; 255
    17f2:	77 fd       	sbrc	r23, 7
    17f4:	e7 cf       	rjmp	.-50     	; 0x17c4 <__mulsf3+0x140>
    17f6:	0c c0       	rjmp	.+24     	; 0x1810 <__mulsf3+0x18c>
    17f8:	44 0f       	add	r20, r20
    17fa:	55 1f       	adc	r21, r21
    17fc:	66 1f       	adc	r22, r22
    17fe:	77 1f       	adc	r23, r23
    1800:	17 fd       	sbrc	r17, 7
    1802:	41 60       	ori	r20, 0x01	; 1
    1804:	ee 0c       	add	r14, r14
    1806:	ff 1c       	adc	r15, r15
    1808:	00 1f       	adc	r16, r16
    180a:	11 1f       	adc	r17, r17
    180c:	21 50       	subi	r18, 0x01	; 1
    180e:	30 40       	sbci	r19, 0x00	; 0
    1810:	40 30       	cpi	r20, 0x00	; 0
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	59 07       	cpc	r21, r25
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	69 07       	cpc	r22, r25
    181a:	90 e4       	ldi	r25, 0x40	; 64
    181c:	79 07       	cpc	r23, r25
    181e:	60 f3       	brcs	.-40     	; 0x17f8 <__mulsf3+0x174>
    1820:	2b 8f       	std	Y+27, r18	; 0x1b
    1822:	3c 8f       	std	Y+28, r19	; 0x1c
    1824:	db 01       	movw	r26, r22
    1826:	ca 01       	movw	r24, r20
    1828:	8f 77       	andi	r24, 0x7F	; 127
    182a:	90 70       	andi	r25, 0x00	; 0
    182c:	a0 70       	andi	r26, 0x00	; 0
    182e:	b0 70       	andi	r27, 0x00	; 0
    1830:	80 34       	cpi	r24, 0x40	; 64
    1832:	91 05       	cpc	r25, r1
    1834:	a1 05       	cpc	r26, r1
    1836:	b1 05       	cpc	r27, r1
    1838:	61 f4       	brne	.+24     	; 0x1852 <__mulsf3+0x1ce>
    183a:	47 fd       	sbrc	r20, 7
    183c:	0a c0       	rjmp	.+20     	; 0x1852 <__mulsf3+0x1ce>
    183e:	e1 14       	cp	r14, r1
    1840:	f1 04       	cpc	r15, r1
    1842:	01 05       	cpc	r16, r1
    1844:	11 05       	cpc	r17, r1
    1846:	29 f0       	breq	.+10     	; 0x1852 <__mulsf3+0x1ce>
    1848:	40 5c       	subi	r20, 0xC0	; 192
    184a:	5f 4f       	sbci	r21, 0xFF	; 255
    184c:	6f 4f       	sbci	r22, 0xFF	; 255
    184e:	7f 4f       	sbci	r23, 0xFF	; 255
    1850:	40 78       	andi	r20, 0x80	; 128
    1852:	1a 8e       	std	Y+26, r1	; 0x1a
    1854:	fe 17       	cp	r31, r30
    1856:	11 f0       	breq	.+4      	; 0x185c <__mulsf3+0x1d8>
    1858:	81 e0       	ldi	r24, 0x01	; 1
    185a:	8a 8f       	std	Y+26, r24	; 0x1a
    185c:	4d 8f       	std	Y+29, r20	; 0x1d
    185e:	5e 8f       	std	Y+30, r21	; 0x1e
    1860:	6f 8f       	std	Y+31, r22	; 0x1f
    1862:	78 a3       	std	Y+32, r23	; 0x20
    1864:	83 e0       	ldi	r24, 0x03	; 3
    1866:	89 8f       	std	Y+25, r24	; 0x19
    1868:	ce 01       	movw	r24, r28
    186a:	49 96       	adiw	r24, 0x19	; 25
    186c:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <__pack_f>
    1870:	a0 96       	adiw	r28, 0x20	; 32
    1872:	e2 e1       	ldi	r30, 0x12	; 18
    1874:	0c 94 ea 27 	jmp	0x4fd4	; 0x4fd4 <__epilogue_restores__>

00001878 <__gtsf2>:
    1878:	a8 e1       	ldi	r26, 0x18	; 24
    187a:	b0 e0       	ldi	r27, 0x00	; 0
    187c:	e2 e4       	ldi	r30, 0x42	; 66
    187e:	fc e0       	ldi	r31, 0x0C	; 12
    1880:	0c 94 da 27 	jmp	0x4fb4	; 0x4fb4 <__prologue_saves__+0x18>
    1884:	69 83       	std	Y+1, r22	; 0x01
    1886:	7a 83       	std	Y+2, r23	; 0x02
    1888:	8b 83       	std	Y+3, r24	; 0x03
    188a:	9c 83       	std	Y+4, r25	; 0x04
    188c:	2d 83       	std	Y+5, r18	; 0x05
    188e:	3e 83       	std	Y+6, r19	; 0x06
    1890:	4f 83       	std	Y+7, r20	; 0x07
    1892:	58 87       	std	Y+8, r21	; 0x08
    1894:	89 e0       	ldi	r24, 0x09	; 9
    1896:	e8 2e       	mov	r14, r24
    1898:	f1 2c       	mov	r15, r1
    189a:	ec 0e       	add	r14, r28
    189c:	fd 1e       	adc	r15, r29
    189e:	ce 01       	movw	r24, r28
    18a0:	01 96       	adiw	r24, 0x01	; 1
    18a2:	b7 01       	movw	r22, r14
    18a4:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    18a8:	8e 01       	movw	r16, r28
    18aa:	0f 5e       	subi	r16, 0xEF	; 239
    18ac:	1f 4f       	sbci	r17, 0xFF	; 255
    18ae:	ce 01       	movw	r24, r28
    18b0:	05 96       	adiw	r24, 0x05	; 5
    18b2:	b8 01       	movw	r22, r16
    18b4:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    18b8:	89 85       	ldd	r24, Y+9	; 0x09
    18ba:	82 30       	cpi	r24, 0x02	; 2
    18bc:	40 f0       	brcs	.+16     	; 0x18ce <__gtsf2+0x56>
    18be:	89 89       	ldd	r24, Y+17	; 0x11
    18c0:	82 30       	cpi	r24, 0x02	; 2
    18c2:	28 f0       	brcs	.+10     	; 0x18ce <__gtsf2+0x56>
    18c4:	c7 01       	movw	r24, r14
    18c6:	b8 01       	movw	r22, r16
    18c8:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <__fpcmp_parts_f>
    18cc:	01 c0       	rjmp	.+2      	; 0x18d0 <__gtsf2+0x58>
    18ce:	8f ef       	ldi	r24, 0xFF	; 255
    18d0:	68 96       	adiw	r28, 0x18	; 24
    18d2:	e6 e0       	ldi	r30, 0x06	; 6
    18d4:	0c 94 f6 27 	jmp	0x4fec	; 0x4fec <__epilogue_restores__+0x18>

000018d8 <__gesf2>:
    18d8:	a8 e1       	ldi	r26, 0x18	; 24
    18da:	b0 e0       	ldi	r27, 0x00	; 0
    18dc:	e2 e7       	ldi	r30, 0x72	; 114
    18de:	fc e0       	ldi	r31, 0x0C	; 12
    18e0:	0c 94 da 27 	jmp	0x4fb4	; 0x4fb4 <__prologue_saves__+0x18>
    18e4:	69 83       	std	Y+1, r22	; 0x01
    18e6:	7a 83       	std	Y+2, r23	; 0x02
    18e8:	8b 83       	std	Y+3, r24	; 0x03
    18ea:	9c 83       	std	Y+4, r25	; 0x04
    18ec:	2d 83       	std	Y+5, r18	; 0x05
    18ee:	3e 83       	std	Y+6, r19	; 0x06
    18f0:	4f 83       	std	Y+7, r20	; 0x07
    18f2:	58 87       	std	Y+8, r21	; 0x08
    18f4:	89 e0       	ldi	r24, 0x09	; 9
    18f6:	e8 2e       	mov	r14, r24
    18f8:	f1 2c       	mov	r15, r1
    18fa:	ec 0e       	add	r14, r28
    18fc:	fd 1e       	adc	r15, r29
    18fe:	ce 01       	movw	r24, r28
    1900:	01 96       	adiw	r24, 0x01	; 1
    1902:	b7 01       	movw	r22, r14
    1904:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    1908:	8e 01       	movw	r16, r28
    190a:	0f 5e       	subi	r16, 0xEF	; 239
    190c:	1f 4f       	sbci	r17, 0xFF	; 255
    190e:	ce 01       	movw	r24, r28
    1910:	05 96       	adiw	r24, 0x05	; 5
    1912:	b8 01       	movw	r22, r16
    1914:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    1918:	89 85       	ldd	r24, Y+9	; 0x09
    191a:	82 30       	cpi	r24, 0x02	; 2
    191c:	40 f0       	brcs	.+16     	; 0x192e <__gesf2+0x56>
    191e:	89 89       	ldd	r24, Y+17	; 0x11
    1920:	82 30       	cpi	r24, 0x02	; 2
    1922:	28 f0       	brcs	.+10     	; 0x192e <__gesf2+0x56>
    1924:	c7 01       	movw	r24, r14
    1926:	b8 01       	movw	r22, r16
    1928:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <__fpcmp_parts_f>
    192c:	01 c0       	rjmp	.+2      	; 0x1930 <__gesf2+0x58>
    192e:	8f ef       	ldi	r24, 0xFF	; 255
    1930:	68 96       	adiw	r28, 0x18	; 24
    1932:	e6 e0       	ldi	r30, 0x06	; 6
    1934:	0c 94 f6 27 	jmp	0x4fec	; 0x4fec <__epilogue_restores__+0x18>

00001938 <__ltsf2>:
    1938:	a8 e1       	ldi	r26, 0x18	; 24
    193a:	b0 e0       	ldi	r27, 0x00	; 0
    193c:	e2 ea       	ldi	r30, 0xA2	; 162
    193e:	fc e0       	ldi	r31, 0x0C	; 12
    1940:	0c 94 da 27 	jmp	0x4fb4	; 0x4fb4 <__prologue_saves__+0x18>
    1944:	69 83       	std	Y+1, r22	; 0x01
    1946:	7a 83       	std	Y+2, r23	; 0x02
    1948:	8b 83       	std	Y+3, r24	; 0x03
    194a:	9c 83       	std	Y+4, r25	; 0x04
    194c:	2d 83       	std	Y+5, r18	; 0x05
    194e:	3e 83       	std	Y+6, r19	; 0x06
    1950:	4f 83       	std	Y+7, r20	; 0x07
    1952:	58 87       	std	Y+8, r21	; 0x08
    1954:	89 e0       	ldi	r24, 0x09	; 9
    1956:	e8 2e       	mov	r14, r24
    1958:	f1 2c       	mov	r15, r1
    195a:	ec 0e       	add	r14, r28
    195c:	fd 1e       	adc	r15, r29
    195e:	ce 01       	movw	r24, r28
    1960:	01 96       	adiw	r24, 0x01	; 1
    1962:	b7 01       	movw	r22, r14
    1964:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    1968:	8e 01       	movw	r16, r28
    196a:	0f 5e       	subi	r16, 0xEF	; 239
    196c:	1f 4f       	sbci	r17, 0xFF	; 255
    196e:	ce 01       	movw	r24, r28
    1970:	05 96       	adiw	r24, 0x05	; 5
    1972:	b8 01       	movw	r22, r16
    1974:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    1978:	89 85       	ldd	r24, Y+9	; 0x09
    197a:	82 30       	cpi	r24, 0x02	; 2
    197c:	40 f0       	brcs	.+16     	; 0x198e <__ltsf2+0x56>
    197e:	89 89       	ldd	r24, Y+17	; 0x11
    1980:	82 30       	cpi	r24, 0x02	; 2
    1982:	28 f0       	brcs	.+10     	; 0x198e <__ltsf2+0x56>
    1984:	c7 01       	movw	r24, r14
    1986:	b8 01       	movw	r22, r16
    1988:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <__fpcmp_parts_f>
    198c:	01 c0       	rjmp	.+2      	; 0x1990 <__ltsf2+0x58>
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	68 96       	adiw	r28, 0x18	; 24
    1992:	e6 e0       	ldi	r30, 0x06	; 6
    1994:	0c 94 f6 27 	jmp	0x4fec	; 0x4fec <__epilogue_restores__+0x18>

00001998 <__floatsisf>:
    1998:	a8 e0       	ldi	r26, 0x08	; 8
    199a:	b0 e0       	ldi	r27, 0x00	; 0
    199c:	e2 ed       	ldi	r30, 0xD2	; 210
    199e:	fc e0       	ldi	r31, 0x0C	; 12
    19a0:	0c 94 d7 27 	jmp	0x4fae	; 0x4fae <__prologue_saves__+0x12>
    19a4:	9b 01       	movw	r18, r22
    19a6:	ac 01       	movw	r20, r24
    19a8:	83 e0       	ldi	r24, 0x03	; 3
    19aa:	89 83       	std	Y+1, r24	; 0x01
    19ac:	da 01       	movw	r26, r20
    19ae:	c9 01       	movw	r24, r18
    19b0:	88 27       	eor	r24, r24
    19b2:	b7 fd       	sbrc	r27, 7
    19b4:	83 95       	inc	r24
    19b6:	99 27       	eor	r25, r25
    19b8:	aa 27       	eor	r26, r26
    19ba:	bb 27       	eor	r27, r27
    19bc:	b8 2e       	mov	r11, r24
    19be:	21 15       	cp	r18, r1
    19c0:	31 05       	cpc	r19, r1
    19c2:	41 05       	cpc	r20, r1
    19c4:	51 05       	cpc	r21, r1
    19c6:	19 f4       	brne	.+6      	; 0x19ce <__floatsisf+0x36>
    19c8:	82 e0       	ldi	r24, 0x02	; 2
    19ca:	89 83       	std	Y+1, r24	; 0x01
    19cc:	3a c0       	rjmp	.+116    	; 0x1a42 <__floatsisf+0xaa>
    19ce:	88 23       	and	r24, r24
    19d0:	a9 f0       	breq	.+42     	; 0x19fc <__floatsisf+0x64>
    19d2:	20 30       	cpi	r18, 0x00	; 0
    19d4:	80 e0       	ldi	r24, 0x00	; 0
    19d6:	38 07       	cpc	r19, r24
    19d8:	80 e0       	ldi	r24, 0x00	; 0
    19da:	48 07       	cpc	r20, r24
    19dc:	80 e8       	ldi	r24, 0x80	; 128
    19de:	58 07       	cpc	r21, r24
    19e0:	29 f4       	brne	.+10     	; 0x19ec <__floatsisf+0x54>
    19e2:	60 e0       	ldi	r22, 0x00	; 0
    19e4:	70 e0       	ldi	r23, 0x00	; 0
    19e6:	80 e0       	ldi	r24, 0x00	; 0
    19e8:	9f ec       	ldi	r25, 0xCF	; 207
    19ea:	30 c0       	rjmp	.+96     	; 0x1a4c <__floatsisf+0xb4>
    19ec:	ee 24       	eor	r14, r14
    19ee:	ff 24       	eor	r15, r15
    19f0:	87 01       	movw	r16, r14
    19f2:	e2 1a       	sub	r14, r18
    19f4:	f3 0a       	sbc	r15, r19
    19f6:	04 0b       	sbc	r16, r20
    19f8:	15 0b       	sbc	r17, r21
    19fa:	02 c0       	rjmp	.+4      	; 0x1a00 <__floatsisf+0x68>
    19fc:	79 01       	movw	r14, r18
    19fe:	8a 01       	movw	r16, r20
    1a00:	8e e1       	ldi	r24, 0x1E	; 30
    1a02:	c8 2e       	mov	r12, r24
    1a04:	d1 2c       	mov	r13, r1
    1a06:	dc 82       	std	Y+4, r13	; 0x04
    1a08:	cb 82       	std	Y+3, r12	; 0x03
    1a0a:	ed 82       	std	Y+5, r14	; 0x05
    1a0c:	fe 82       	std	Y+6, r15	; 0x06
    1a0e:	0f 83       	std	Y+7, r16	; 0x07
    1a10:	18 87       	std	Y+8, r17	; 0x08
    1a12:	c8 01       	movw	r24, r16
    1a14:	b7 01       	movw	r22, r14
    1a16:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <__clzsi2>
    1a1a:	01 97       	sbiw	r24, 0x01	; 1
    1a1c:	18 16       	cp	r1, r24
    1a1e:	19 06       	cpc	r1, r25
    1a20:	84 f4       	brge	.+32     	; 0x1a42 <__floatsisf+0xaa>
    1a22:	08 2e       	mov	r0, r24
    1a24:	04 c0       	rjmp	.+8      	; 0x1a2e <__floatsisf+0x96>
    1a26:	ee 0c       	add	r14, r14
    1a28:	ff 1c       	adc	r15, r15
    1a2a:	00 1f       	adc	r16, r16
    1a2c:	11 1f       	adc	r17, r17
    1a2e:	0a 94       	dec	r0
    1a30:	d2 f7       	brpl	.-12     	; 0x1a26 <__floatsisf+0x8e>
    1a32:	ed 82       	std	Y+5, r14	; 0x05
    1a34:	fe 82       	std	Y+6, r15	; 0x06
    1a36:	0f 83       	std	Y+7, r16	; 0x07
    1a38:	18 87       	std	Y+8, r17	; 0x08
    1a3a:	c8 1a       	sub	r12, r24
    1a3c:	d9 0a       	sbc	r13, r25
    1a3e:	dc 82       	std	Y+4, r13	; 0x04
    1a40:	cb 82       	std	Y+3, r12	; 0x03
    1a42:	ba 82       	std	Y+2, r11	; 0x02
    1a44:	ce 01       	movw	r24, r28
    1a46:	01 96       	adiw	r24, 0x01	; 1
    1a48:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <__pack_f>
    1a4c:	28 96       	adiw	r28, 0x08	; 8
    1a4e:	e9 e0       	ldi	r30, 0x09	; 9
    1a50:	0c 94 f3 27 	jmp	0x4fe6	; 0x4fe6 <__epilogue_restores__+0x12>

00001a54 <__fixsfsi>:
    1a54:	ac e0       	ldi	r26, 0x0C	; 12
    1a56:	b0 e0       	ldi	r27, 0x00	; 0
    1a58:	e0 e3       	ldi	r30, 0x30	; 48
    1a5a:	fd e0       	ldi	r31, 0x0D	; 13
    1a5c:	0c 94 de 27 	jmp	0x4fbc	; 0x4fbc <__prologue_saves__+0x20>
    1a60:	69 83       	std	Y+1, r22	; 0x01
    1a62:	7a 83       	std	Y+2, r23	; 0x02
    1a64:	8b 83       	std	Y+3, r24	; 0x03
    1a66:	9c 83       	std	Y+4, r25	; 0x04
    1a68:	ce 01       	movw	r24, r28
    1a6a:	01 96       	adiw	r24, 0x01	; 1
    1a6c:	be 01       	movw	r22, r28
    1a6e:	6b 5f       	subi	r22, 0xFB	; 251
    1a70:	7f 4f       	sbci	r23, 0xFF	; 255
    1a72:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__unpack_f>
    1a76:	8d 81       	ldd	r24, Y+5	; 0x05
    1a78:	82 30       	cpi	r24, 0x02	; 2
    1a7a:	61 f1       	breq	.+88     	; 0x1ad4 <__fixsfsi+0x80>
    1a7c:	82 30       	cpi	r24, 0x02	; 2
    1a7e:	50 f1       	brcs	.+84     	; 0x1ad4 <__fixsfsi+0x80>
    1a80:	84 30       	cpi	r24, 0x04	; 4
    1a82:	21 f4       	brne	.+8      	; 0x1a8c <__fixsfsi+0x38>
    1a84:	8e 81       	ldd	r24, Y+6	; 0x06
    1a86:	88 23       	and	r24, r24
    1a88:	51 f1       	breq	.+84     	; 0x1ade <__fixsfsi+0x8a>
    1a8a:	2e c0       	rjmp	.+92     	; 0x1ae8 <__fixsfsi+0x94>
    1a8c:	2f 81       	ldd	r18, Y+7	; 0x07
    1a8e:	38 85       	ldd	r19, Y+8	; 0x08
    1a90:	37 fd       	sbrc	r19, 7
    1a92:	20 c0       	rjmp	.+64     	; 0x1ad4 <__fixsfsi+0x80>
    1a94:	6e 81       	ldd	r22, Y+6	; 0x06
    1a96:	2f 31       	cpi	r18, 0x1F	; 31
    1a98:	31 05       	cpc	r19, r1
    1a9a:	1c f0       	brlt	.+6      	; 0x1aa2 <__fixsfsi+0x4e>
    1a9c:	66 23       	and	r22, r22
    1a9e:	f9 f0       	breq	.+62     	; 0x1ade <__fixsfsi+0x8a>
    1aa0:	23 c0       	rjmp	.+70     	; 0x1ae8 <__fixsfsi+0x94>
    1aa2:	8e e1       	ldi	r24, 0x1E	; 30
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	82 1b       	sub	r24, r18
    1aa8:	93 0b       	sbc	r25, r19
    1aaa:	29 85       	ldd	r18, Y+9	; 0x09
    1aac:	3a 85       	ldd	r19, Y+10	; 0x0a
    1aae:	4b 85       	ldd	r20, Y+11	; 0x0b
    1ab0:	5c 85       	ldd	r21, Y+12	; 0x0c
    1ab2:	04 c0       	rjmp	.+8      	; 0x1abc <__fixsfsi+0x68>
    1ab4:	56 95       	lsr	r21
    1ab6:	47 95       	ror	r20
    1ab8:	37 95       	ror	r19
    1aba:	27 95       	ror	r18
    1abc:	8a 95       	dec	r24
    1abe:	d2 f7       	brpl	.-12     	; 0x1ab4 <__fixsfsi+0x60>
    1ac0:	66 23       	and	r22, r22
    1ac2:	b1 f0       	breq	.+44     	; 0x1af0 <__fixsfsi+0x9c>
    1ac4:	50 95       	com	r21
    1ac6:	40 95       	com	r20
    1ac8:	30 95       	com	r19
    1aca:	21 95       	neg	r18
    1acc:	3f 4f       	sbci	r19, 0xFF	; 255
    1ace:	4f 4f       	sbci	r20, 0xFF	; 255
    1ad0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ad2:	0e c0       	rjmp	.+28     	; 0x1af0 <__fixsfsi+0x9c>
    1ad4:	20 e0       	ldi	r18, 0x00	; 0
    1ad6:	30 e0       	ldi	r19, 0x00	; 0
    1ad8:	40 e0       	ldi	r20, 0x00	; 0
    1ada:	50 e0       	ldi	r21, 0x00	; 0
    1adc:	09 c0       	rjmp	.+18     	; 0x1af0 <__fixsfsi+0x9c>
    1ade:	2f ef       	ldi	r18, 0xFF	; 255
    1ae0:	3f ef       	ldi	r19, 0xFF	; 255
    1ae2:	4f ef       	ldi	r20, 0xFF	; 255
    1ae4:	5f e7       	ldi	r21, 0x7F	; 127
    1ae6:	04 c0       	rjmp	.+8      	; 0x1af0 <__fixsfsi+0x9c>
    1ae8:	20 e0       	ldi	r18, 0x00	; 0
    1aea:	30 e0       	ldi	r19, 0x00	; 0
    1aec:	40 e0       	ldi	r20, 0x00	; 0
    1aee:	50 e8       	ldi	r21, 0x80	; 128
    1af0:	b9 01       	movw	r22, r18
    1af2:	ca 01       	movw	r24, r20
    1af4:	2c 96       	adiw	r28, 0x0c	; 12
    1af6:	e2 e0       	ldi	r30, 0x02	; 2
    1af8:	0c 94 fa 27 	jmp	0x4ff4	; 0x4ff4 <__epilogue_restores__+0x20>

00001afc <__clzsi2>:
    1afc:	ef 92       	push	r14
    1afe:	ff 92       	push	r15
    1b00:	0f 93       	push	r16
    1b02:	1f 93       	push	r17
    1b04:	7b 01       	movw	r14, r22
    1b06:	8c 01       	movw	r16, r24
    1b08:	80 e0       	ldi	r24, 0x00	; 0
    1b0a:	e8 16       	cp	r14, r24
    1b0c:	80 e0       	ldi	r24, 0x00	; 0
    1b0e:	f8 06       	cpc	r15, r24
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	08 07       	cpc	r16, r24
    1b14:	80 e0       	ldi	r24, 0x00	; 0
    1b16:	18 07       	cpc	r17, r24
    1b18:	88 f4       	brcc	.+34     	; 0x1b3c <__clzsi2+0x40>
    1b1a:	8f ef       	ldi	r24, 0xFF	; 255
    1b1c:	e8 16       	cp	r14, r24
    1b1e:	f1 04       	cpc	r15, r1
    1b20:	01 05       	cpc	r16, r1
    1b22:	11 05       	cpc	r17, r1
    1b24:	31 f0       	breq	.+12     	; 0x1b32 <__clzsi2+0x36>
    1b26:	28 f0       	brcs	.+10     	; 0x1b32 <__clzsi2+0x36>
    1b28:	88 e0       	ldi	r24, 0x08	; 8
    1b2a:	90 e0       	ldi	r25, 0x00	; 0
    1b2c:	a0 e0       	ldi	r26, 0x00	; 0
    1b2e:	b0 e0       	ldi	r27, 0x00	; 0
    1b30:	17 c0       	rjmp	.+46     	; 0x1b60 <__clzsi2+0x64>
    1b32:	80 e0       	ldi	r24, 0x00	; 0
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	a0 e0       	ldi	r26, 0x00	; 0
    1b38:	b0 e0       	ldi	r27, 0x00	; 0
    1b3a:	12 c0       	rjmp	.+36     	; 0x1b60 <__clzsi2+0x64>
    1b3c:	80 e0       	ldi	r24, 0x00	; 0
    1b3e:	e8 16       	cp	r14, r24
    1b40:	80 e0       	ldi	r24, 0x00	; 0
    1b42:	f8 06       	cpc	r15, r24
    1b44:	80 e0       	ldi	r24, 0x00	; 0
    1b46:	08 07       	cpc	r16, r24
    1b48:	81 e0       	ldi	r24, 0x01	; 1
    1b4a:	18 07       	cpc	r17, r24
    1b4c:	28 f0       	brcs	.+10     	; 0x1b58 <__clzsi2+0x5c>
    1b4e:	88 e1       	ldi	r24, 0x18	; 24
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	a0 e0       	ldi	r26, 0x00	; 0
    1b54:	b0 e0       	ldi	r27, 0x00	; 0
    1b56:	04 c0       	rjmp	.+8      	; 0x1b60 <__clzsi2+0x64>
    1b58:	80 e1       	ldi	r24, 0x10	; 16
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	a0 e0       	ldi	r26, 0x00	; 0
    1b5e:	b0 e0       	ldi	r27, 0x00	; 0
    1b60:	20 e2       	ldi	r18, 0x20	; 32
    1b62:	30 e0       	ldi	r19, 0x00	; 0
    1b64:	40 e0       	ldi	r20, 0x00	; 0
    1b66:	50 e0       	ldi	r21, 0x00	; 0
    1b68:	28 1b       	sub	r18, r24
    1b6a:	39 0b       	sbc	r19, r25
    1b6c:	4a 0b       	sbc	r20, r26
    1b6e:	5b 0b       	sbc	r21, r27
    1b70:	04 c0       	rjmp	.+8      	; 0x1b7a <__clzsi2+0x7e>
    1b72:	16 95       	lsr	r17
    1b74:	07 95       	ror	r16
    1b76:	f7 94       	ror	r15
    1b78:	e7 94       	ror	r14
    1b7a:	8a 95       	dec	r24
    1b7c:	d2 f7       	brpl	.-12     	; 0x1b72 <__clzsi2+0x76>
    1b7e:	f7 01       	movw	r30, r14
    1b80:	ea 57       	subi	r30, 0x7A	; 122
    1b82:	ff 4f       	sbci	r31, 0xFF	; 255
    1b84:	80 81       	ld	r24, Z
    1b86:	28 1b       	sub	r18, r24
    1b88:	31 09       	sbc	r19, r1
    1b8a:	41 09       	sbc	r20, r1
    1b8c:	51 09       	sbc	r21, r1
    1b8e:	c9 01       	movw	r24, r18
    1b90:	1f 91       	pop	r17
    1b92:	0f 91       	pop	r16
    1b94:	ff 90       	pop	r15
    1b96:	ef 90       	pop	r14
    1b98:	08 95       	ret

00001b9a <__pack_f>:
    1b9a:	df 92       	push	r13
    1b9c:	ef 92       	push	r14
    1b9e:	ff 92       	push	r15
    1ba0:	0f 93       	push	r16
    1ba2:	1f 93       	push	r17
    1ba4:	fc 01       	movw	r30, r24
    1ba6:	e4 80       	ldd	r14, Z+4	; 0x04
    1ba8:	f5 80       	ldd	r15, Z+5	; 0x05
    1baa:	06 81       	ldd	r16, Z+6	; 0x06
    1bac:	17 81       	ldd	r17, Z+7	; 0x07
    1bae:	d1 80       	ldd	r13, Z+1	; 0x01
    1bb0:	80 81       	ld	r24, Z
    1bb2:	82 30       	cpi	r24, 0x02	; 2
    1bb4:	48 f4       	brcc	.+18     	; 0x1bc8 <__pack_f+0x2e>
    1bb6:	80 e0       	ldi	r24, 0x00	; 0
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	a0 e1       	ldi	r26, 0x10	; 16
    1bbc:	b0 e0       	ldi	r27, 0x00	; 0
    1bbe:	e8 2a       	or	r14, r24
    1bc0:	f9 2a       	or	r15, r25
    1bc2:	0a 2b       	or	r16, r26
    1bc4:	1b 2b       	or	r17, r27
    1bc6:	a5 c0       	rjmp	.+330    	; 0x1d12 <__pack_f+0x178>
    1bc8:	84 30       	cpi	r24, 0x04	; 4
    1bca:	09 f4       	brne	.+2      	; 0x1bce <__pack_f+0x34>
    1bcc:	9f c0       	rjmp	.+318    	; 0x1d0c <__pack_f+0x172>
    1bce:	82 30       	cpi	r24, 0x02	; 2
    1bd0:	21 f4       	brne	.+8      	; 0x1bda <__pack_f+0x40>
    1bd2:	ee 24       	eor	r14, r14
    1bd4:	ff 24       	eor	r15, r15
    1bd6:	87 01       	movw	r16, r14
    1bd8:	05 c0       	rjmp	.+10     	; 0x1be4 <__pack_f+0x4a>
    1bda:	e1 14       	cp	r14, r1
    1bdc:	f1 04       	cpc	r15, r1
    1bde:	01 05       	cpc	r16, r1
    1be0:	11 05       	cpc	r17, r1
    1be2:	19 f4       	brne	.+6      	; 0x1bea <__pack_f+0x50>
    1be4:	e0 e0       	ldi	r30, 0x00	; 0
    1be6:	f0 e0       	ldi	r31, 0x00	; 0
    1be8:	96 c0       	rjmp	.+300    	; 0x1d16 <__pack_f+0x17c>
    1bea:	62 81       	ldd	r22, Z+2	; 0x02
    1bec:	73 81       	ldd	r23, Z+3	; 0x03
    1bee:	9f ef       	ldi	r25, 0xFF	; 255
    1bf0:	62 38       	cpi	r22, 0x82	; 130
    1bf2:	79 07       	cpc	r23, r25
    1bf4:	0c f0       	brlt	.+2      	; 0x1bf8 <__pack_f+0x5e>
    1bf6:	5b c0       	rjmp	.+182    	; 0x1cae <__pack_f+0x114>
    1bf8:	22 e8       	ldi	r18, 0x82	; 130
    1bfa:	3f ef       	ldi	r19, 0xFF	; 255
    1bfc:	26 1b       	sub	r18, r22
    1bfe:	37 0b       	sbc	r19, r23
    1c00:	2a 31       	cpi	r18, 0x1A	; 26
    1c02:	31 05       	cpc	r19, r1
    1c04:	2c f0       	brlt	.+10     	; 0x1c10 <__pack_f+0x76>
    1c06:	20 e0       	ldi	r18, 0x00	; 0
    1c08:	30 e0       	ldi	r19, 0x00	; 0
    1c0a:	40 e0       	ldi	r20, 0x00	; 0
    1c0c:	50 e0       	ldi	r21, 0x00	; 0
    1c0e:	2a c0       	rjmp	.+84     	; 0x1c64 <__pack_f+0xca>
    1c10:	b8 01       	movw	r22, r16
    1c12:	a7 01       	movw	r20, r14
    1c14:	02 2e       	mov	r0, r18
    1c16:	04 c0       	rjmp	.+8      	; 0x1c20 <__pack_f+0x86>
    1c18:	76 95       	lsr	r23
    1c1a:	67 95       	ror	r22
    1c1c:	57 95       	ror	r21
    1c1e:	47 95       	ror	r20
    1c20:	0a 94       	dec	r0
    1c22:	d2 f7       	brpl	.-12     	; 0x1c18 <__pack_f+0x7e>
    1c24:	81 e0       	ldi	r24, 0x01	; 1
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	a0 e0       	ldi	r26, 0x00	; 0
    1c2a:	b0 e0       	ldi	r27, 0x00	; 0
    1c2c:	04 c0       	rjmp	.+8      	; 0x1c36 <__pack_f+0x9c>
    1c2e:	88 0f       	add	r24, r24
    1c30:	99 1f       	adc	r25, r25
    1c32:	aa 1f       	adc	r26, r26
    1c34:	bb 1f       	adc	r27, r27
    1c36:	2a 95       	dec	r18
    1c38:	d2 f7       	brpl	.-12     	; 0x1c2e <__pack_f+0x94>
    1c3a:	01 97       	sbiw	r24, 0x01	; 1
    1c3c:	a1 09       	sbc	r26, r1
    1c3e:	b1 09       	sbc	r27, r1
    1c40:	8e 21       	and	r24, r14
    1c42:	9f 21       	and	r25, r15
    1c44:	a0 23       	and	r26, r16
    1c46:	b1 23       	and	r27, r17
    1c48:	00 97       	sbiw	r24, 0x00	; 0
    1c4a:	a1 05       	cpc	r26, r1
    1c4c:	b1 05       	cpc	r27, r1
    1c4e:	21 f0       	breq	.+8      	; 0x1c58 <__pack_f+0xbe>
    1c50:	81 e0       	ldi	r24, 0x01	; 1
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	a0 e0       	ldi	r26, 0x00	; 0
    1c56:	b0 e0       	ldi	r27, 0x00	; 0
    1c58:	9a 01       	movw	r18, r20
    1c5a:	ab 01       	movw	r20, r22
    1c5c:	28 2b       	or	r18, r24
    1c5e:	39 2b       	or	r19, r25
    1c60:	4a 2b       	or	r20, r26
    1c62:	5b 2b       	or	r21, r27
    1c64:	da 01       	movw	r26, r20
    1c66:	c9 01       	movw	r24, r18
    1c68:	8f 77       	andi	r24, 0x7F	; 127
    1c6a:	90 70       	andi	r25, 0x00	; 0
    1c6c:	a0 70       	andi	r26, 0x00	; 0
    1c6e:	b0 70       	andi	r27, 0x00	; 0
    1c70:	80 34       	cpi	r24, 0x40	; 64
    1c72:	91 05       	cpc	r25, r1
    1c74:	a1 05       	cpc	r26, r1
    1c76:	b1 05       	cpc	r27, r1
    1c78:	39 f4       	brne	.+14     	; 0x1c88 <__pack_f+0xee>
    1c7a:	27 ff       	sbrs	r18, 7
    1c7c:	09 c0       	rjmp	.+18     	; 0x1c90 <__pack_f+0xf6>
    1c7e:	20 5c       	subi	r18, 0xC0	; 192
    1c80:	3f 4f       	sbci	r19, 0xFF	; 255
    1c82:	4f 4f       	sbci	r20, 0xFF	; 255
    1c84:	5f 4f       	sbci	r21, 0xFF	; 255
    1c86:	04 c0       	rjmp	.+8      	; 0x1c90 <__pack_f+0xf6>
    1c88:	21 5c       	subi	r18, 0xC1	; 193
    1c8a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c8c:	4f 4f       	sbci	r20, 0xFF	; 255
    1c8e:	5f 4f       	sbci	r21, 0xFF	; 255
    1c90:	e0 e0       	ldi	r30, 0x00	; 0
    1c92:	f0 e0       	ldi	r31, 0x00	; 0
    1c94:	20 30       	cpi	r18, 0x00	; 0
    1c96:	a0 e0       	ldi	r26, 0x00	; 0
    1c98:	3a 07       	cpc	r19, r26
    1c9a:	a0 e0       	ldi	r26, 0x00	; 0
    1c9c:	4a 07       	cpc	r20, r26
    1c9e:	a0 e4       	ldi	r26, 0x40	; 64
    1ca0:	5a 07       	cpc	r21, r26
    1ca2:	10 f0       	brcs	.+4      	; 0x1ca8 <__pack_f+0x10e>
    1ca4:	e1 e0       	ldi	r30, 0x01	; 1
    1ca6:	f0 e0       	ldi	r31, 0x00	; 0
    1ca8:	79 01       	movw	r14, r18
    1caa:	8a 01       	movw	r16, r20
    1cac:	27 c0       	rjmp	.+78     	; 0x1cfc <__pack_f+0x162>
    1cae:	60 38       	cpi	r22, 0x80	; 128
    1cb0:	71 05       	cpc	r23, r1
    1cb2:	64 f5       	brge	.+88     	; 0x1d0c <__pack_f+0x172>
    1cb4:	fb 01       	movw	r30, r22
    1cb6:	e1 58       	subi	r30, 0x81	; 129
    1cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cba:	d8 01       	movw	r26, r16
    1cbc:	c7 01       	movw	r24, r14
    1cbe:	8f 77       	andi	r24, 0x7F	; 127
    1cc0:	90 70       	andi	r25, 0x00	; 0
    1cc2:	a0 70       	andi	r26, 0x00	; 0
    1cc4:	b0 70       	andi	r27, 0x00	; 0
    1cc6:	80 34       	cpi	r24, 0x40	; 64
    1cc8:	91 05       	cpc	r25, r1
    1cca:	a1 05       	cpc	r26, r1
    1ccc:	b1 05       	cpc	r27, r1
    1cce:	39 f4       	brne	.+14     	; 0x1cde <__pack_f+0x144>
    1cd0:	e7 fe       	sbrs	r14, 7
    1cd2:	0d c0       	rjmp	.+26     	; 0x1cee <__pack_f+0x154>
    1cd4:	80 e4       	ldi	r24, 0x40	; 64
    1cd6:	90 e0       	ldi	r25, 0x00	; 0
    1cd8:	a0 e0       	ldi	r26, 0x00	; 0
    1cda:	b0 e0       	ldi	r27, 0x00	; 0
    1cdc:	04 c0       	rjmp	.+8      	; 0x1ce6 <__pack_f+0x14c>
    1cde:	8f e3       	ldi	r24, 0x3F	; 63
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	a0 e0       	ldi	r26, 0x00	; 0
    1ce4:	b0 e0       	ldi	r27, 0x00	; 0
    1ce6:	e8 0e       	add	r14, r24
    1ce8:	f9 1e       	adc	r15, r25
    1cea:	0a 1f       	adc	r16, r26
    1cec:	1b 1f       	adc	r17, r27
    1cee:	17 ff       	sbrs	r17, 7
    1cf0:	05 c0       	rjmp	.+10     	; 0x1cfc <__pack_f+0x162>
    1cf2:	16 95       	lsr	r17
    1cf4:	07 95       	ror	r16
    1cf6:	f7 94       	ror	r15
    1cf8:	e7 94       	ror	r14
    1cfa:	31 96       	adiw	r30, 0x01	; 1
    1cfc:	87 e0       	ldi	r24, 0x07	; 7
    1cfe:	16 95       	lsr	r17
    1d00:	07 95       	ror	r16
    1d02:	f7 94       	ror	r15
    1d04:	e7 94       	ror	r14
    1d06:	8a 95       	dec	r24
    1d08:	d1 f7       	brne	.-12     	; 0x1cfe <__pack_f+0x164>
    1d0a:	05 c0       	rjmp	.+10     	; 0x1d16 <__pack_f+0x17c>
    1d0c:	ee 24       	eor	r14, r14
    1d0e:	ff 24       	eor	r15, r15
    1d10:	87 01       	movw	r16, r14
    1d12:	ef ef       	ldi	r30, 0xFF	; 255
    1d14:	f0 e0       	ldi	r31, 0x00	; 0
    1d16:	6e 2f       	mov	r22, r30
    1d18:	67 95       	ror	r22
    1d1a:	66 27       	eor	r22, r22
    1d1c:	67 95       	ror	r22
    1d1e:	90 2f       	mov	r25, r16
    1d20:	9f 77       	andi	r25, 0x7F	; 127
    1d22:	d7 94       	ror	r13
    1d24:	dd 24       	eor	r13, r13
    1d26:	d7 94       	ror	r13
    1d28:	8e 2f       	mov	r24, r30
    1d2a:	86 95       	lsr	r24
    1d2c:	49 2f       	mov	r20, r25
    1d2e:	46 2b       	or	r20, r22
    1d30:	58 2f       	mov	r21, r24
    1d32:	5d 29       	or	r21, r13
    1d34:	b7 01       	movw	r22, r14
    1d36:	ca 01       	movw	r24, r20
    1d38:	1f 91       	pop	r17
    1d3a:	0f 91       	pop	r16
    1d3c:	ff 90       	pop	r15
    1d3e:	ef 90       	pop	r14
    1d40:	df 90       	pop	r13
    1d42:	08 95       	ret

00001d44 <__unpack_f>:
    1d44:	fc 01       	movw	r30, r24
    1d46:	db 01       	movw	r26, r22
    1d48:	40 81       	ld	r20, Z
    1d4a:	51 81       	ldd	r21, Z+1	; 0x01
    1d4c:	22 81       	ldd	r18, Z+2	; 0x02
    1d4e:	62 2f       	mov	r22, r18
    1d50:	6f 77       	andi	r22, 0x7F	; 127
    1d52:	70 e0       	ldi	r23, 0x00	; 0
    1d54:	22 1f       	adc	r18, r18
    1d56:	22 27       	eor	r18, r18
    1d58:	22 1f       	adc	r18, r18
    1d5a:	93 81       	ldd	r25, Z+3	; 0x03
    1d5c:	89 2f       	mov	r24, r25
    1d5e:	88 0f       	add	r24, r24
    1d60:	82 2b       	or	r24, r18
    1d62:	28 2f       	mov	r18, r24
    1d64:	30 e0       	ldi	r19, 0x00	; 0
    1d66:	99 1f       	adc	r25, r25
    1d68:	99 27       	eor	r25, r25
    1d6a:	99 1f       	adc	r25, r25
    1d6c:	11 96       	adiw	r26, 0x01	; 1
    1d6e:	9c 93       	st	X, r25
    1d70:	11 97       	sbiw	r26, 0x01	; 1
    1d72:	21 15       	cp	r18, r1
    1d74:	31 05       	cpc	r19, r1
    1d76:	a9 f5       	brne	.+106    	; 0x1de2 <__unpack_f+0x9e>
    1d78:	41 15       	cp	r20, r1
    1d7a:	51 05       	cpc	r21, r1
    1d7c:	61 05       	cpc	r22, r1
    1d7e:	71 05       	cpc	r23, r1
    1d80:	11 f4       	brne	.+4      	; 0x1d86 <__unpack_f+0x42>
    1d82:	82 e0       	ldi	r24, 0x02	; 2
    1d84:	37 c0       	rjmp	.+110    	; 0x1df4 <__unpack_f+0xb0>
    1d86:	82 e8       	ldi	r24, 0x82	; 130
    1d88:	9f ef       	ldi	r25, 0xFF	; 255
    1d8a:	13 96       	adiw	r26, 0x03	; 3
    1d8c:	9c 93       	st	X, r25
    1d8e:	8e 93       	st	-X, r24
    1d90:	12 97       	sbiw	r26, 0x02	; 2
    1d92:	9a 01       	movw	r18, r20
    1d94:	ab 01       	movw	r20, r22
    1d96:	67 e0       	ldi	r22, 0x07	; 7
    1d98:	22 0f       	add	r18, r18
    1d9a:	33 1f       	adc	r19, r19
    1d9c:	44 1f       	adc	r20, r20
    1d9e:	55 1f       	adc	r21, r21
    1da0:	6a 95       	dec	r22
    1da2:	d1 f7       	brne	.-12     	; 0x1d98 <__unpack_f+0x54>
    1da4:	83 e0       	ldi	r24, 0x03	; 3
    1da6:	8c 93       	st	X, r24
    1da8:	0d c0       	rjmp	.+26     	; 0x1dc4 <__unpack_f+0x80>
    1daa:	22 0f       	add	r18, r18
    1dac:	33 1f       	adc	r19, r19
    1dae:	44 1f       	adc	r20, r20
    1db0:	55 1f       	adc	r21, r21
    1db2:	12 96       	adiw	r26, 0x02	; 2
    1db4:	8d 91       	ld	r24, X+
    1db6:	9c 91       	ld	r25, X
    1db8:	13 97       	sbiw	r26, 0x03	; 3
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	13 96       	adiw	r26, 0x03	; 3
    1dbe:	9c 93       	st	X, r25
    1dc0:	8e 93       	st	-X, r24
    1dc2:	12 97       	sbiw	r26, 0x02	; 2
    1dc4:	20 30       	cpi	r18, 0x00	; 0
    1dc6:	80 e0       	ldi	r24, 0x00	; 0
    1dc8:	38 07       	cpc	r19, r24
    1dca:	80 e0       	ldi	r24, 0x00	; 0
    1dcc:	48 07       	cpc	r20, r24
    1dce:	80 e4       	ldi	r24, 0x40	; 64
    1dd0:	58 07       	cpc	r21, r24
    1dd2:	58 f3       	brcs	.-42     	; 0x1daa <__unpack_f+0x66>
    1dd4:	14 96       	adiw	r26, 0x04	; 4
    1dd6:	2d 93       	st	X+, r18
    1dd8:	3d 93       	st	X+, r19
    1dda:	4d 93       	st	X+, r20
    1ddc:	5c 93       	st	X, r21
    1dde:	17 97       	sbiw	r26, 0x07	; 7
    1de0:	08 95       	ret
    1de2:	2f 3f       	cpi	r18, 0xFF	; 255
    1de4:	31 05       	cpc	r19, r1
    1de6:	79 f4       	brne	.+30     	; 0x1e06 <__unpack_f+0xc2>
    1de8:	41 15       	cp	r20, r1
    1dea:	51 05       	cpc	r21, r1
    1dec:	61 05       	cpc	r22, r1
    1dee:	71 05       	cpc	r23, r1
    1df0:	19 f4       	brne	.+6      	; 0x1df8 <__unpack_f+0xb4>
    1df2:	84 e0       	ldi	r24, 0x04	; 4
    1df4:	8c 93       	st	X, r24
    1df6:	08 95       	ret
    1df8:	64 ff       	sbrs	r22, 4
    1dfa:	03 c0       	rjmp	.+6      	; 0x1e02 <__unpack_f+0xbe>
    1dfc:	81 e0       	ldi	r24, 0x01	; 1
    1dfe:	8c 93       	st	X, r24
    1e00:	12 c0       	rjmp	.+36     	; 0x1e26 <__unpack_f+0xe2>
    1e02:	1c 92       	st	X, r1
    1e04:	10 c0       	rjmp	.+32     	; 0x1e26 <__unpack_f+0xe2>
    1e06:	2f 57       	subi	r18, 0x7F	; 127
    1e08:	30 40       	sbci	r19, 0x00	; 0
    1e0a:	13 96       	adiw	r26, 0x03	; 3
    1e0c:	3c 93       	st	X, r19
    1e0e:	2e 93       	st	-X, r18
    1e10:	12 97       	sbiw	r26, 0x02	; 2
    1e12:	83 e0       	ldi	r24, 0x03	; 3
    1e14:	8c 93       	st	X, r24
    1e16:	87 e0       	ldi	r24, 0x07	; 7
    1e18:	44 0f       	add	r20, r20
    1e1a:	55 1f       	adc	r21, r21
    1e1c:	66 1f       	adc	r22, r22
    1e1e:	77 1f       	adc	r23, r23
    1e20:	8a 95       	dec	r24
    1e22:	d1 f7       	brne	.-12     	; 0x1e18 <__unpack_f+0xd4>
    1e24:	70 64       	ori	r23, 0x40	; 64
    1e26:	14 96       	adiw	r26, 0x04	; 4
    1e28:	4d 93       	st	X+, r20
    1e2a:	5d 93       	st	X+, r21
    1e2c:	6d 93       	st	X+, r22
    1e2e:	7c 93       	st	X, r23
    1e30:	17 97       	sbiw	r26, 0x07	; 7
    1e32:	08 95       	ret

00001e34 <__fpcmp_parts_f>:
    1e34:	1f 93       	push	r17
    1e36:	dc 01       	movw	r26, r24
    1e38:	fb 01       	movw	r30, r22
    1e3a:	9c 91       	ld	r25, X
    1e3c:	92 30       	cpi	r25, 0x02	; 2
    1e3e:	08 f4       	brcc	.+2      	; 0x1e42 <__fpcmp_parts_f+0xe>
    1e40:	47 c0       	rjmp	.+142    	; 0x1ed0 <__fpcmp_parts_f+0x9c>
    1e42:	80 81       	ld	r24, Z
    1e44:	82 30       	cpi	r24, 0x02	; 2
    1e46:	08 f4       	brcc	.+2      	; 0x1e4a <__fpcmp_parts_f+0x16>
    1e48:	43 c0       	rjmp	.+134    	; 0x1ed0 <__fpcmp_parts_f+0x9c>
    1e4a:	94 30       	cpi	r25, 0x04	; 4
    1e4c:	51 f4       	brne	.+20     	; 0x1e62 <__fpcmp_parts_f+0x2e>
    1e4e:	11 96       	adiw	r26, 0x01	; 1
    1e50:	1c 91       	ld	r17, X
    1e52:	84 30       	cpi	r24, 0x04	; 4
    1e54:	99 f5       	brne	.+102    	; 0x1ebc <__fpcmp_parts_f+0x88>
    1e56:	81 81       	ldd	r24, Z+1	; 0x01
    1e58:	68 2f       	mov	r22, r24
    1e5a:	70 e0       	ldi	r23, 0x00	; 0
    1e5c:	61 1b       	sub	r22, r17
    1e5e:	71 09       	sbc	r23, r1
    1e60:	3f c0       	rjmp	.+126    	; 0x1ee0 <__fpcmp_parts_f+0xac>
    1e62:	84 30       	cpi	r24, 0x04	; 4
    1e64:	21 f0       	breq	.+8      	; 0x1e6e <__fpcmp_parts_f+0x3a>
    1e66:	92 30       	cpi	r25, 0x02	; 2
    1e68:	31 f4       	brne	.+12     	; 0x1e76 <__fpcmp_parts_f+0x42>
    1e6a:	82 30       	cpi	r24, 0x02	; 2
    1e6c:	b9 f1       	breq	.+110    	; 0x1edc <__fpcmp_parts_f+0xa8>
    1e6e:	81 81       	ldd	r24, Z+1	; 0x01
    1e70:	88 23       	and	r24, r24
    1e72:	89 f1       	breq	.+98     	; 0x1ed6 <__fpcmp_parts_f+0xa2>
    1e74:	2d c0       	rjmp	.+90     	; 0x1ed0 <__fpcmp_parts_f+0x9c>
    1e76:	11 96       	adiw	r26, 0x01	; 1
    1e78:	1c 91       	ld	r17, X
    1e7a:	11 97       	sbiw	r26, 0x01	; 1
    1e7c:	82 30       	cpi	r24, 0x02	; 2
    1e7e:	f1 f0       	breq	.+60     	; 0x1ebc <__fpcmp_parts_f+0x88>
    1e80:	81 81       	ldd	r24, Z+1	; 0x01
    1e82:	18 17       	cp	r17, r24
    1e84:	d9 f4       	brne	.+54     	; 0x1ebc <__fpcmp_parts_f+0x88>
    1e86:	12 96       	adiw	r26, 0x02	; 2
    1e88:	2d 91       	ld	r18, X+
    1e8a:	3c 91       	ld	r19, X
    1e8c:	13 97       	sbiw	r26, 0x03	; 3
    1e8e:	82 81       	ldd	r24, Z+2	; 0x02
    1e90:	93 81       	ldd	r25, Z+3	; 0x03
    1e92:	82 17       	cp	r24, r18
    1e94:	93 07       	cpc	r25, r19
    1e96:	94 f0       	brlt	.+36     	; 0x1ebc <__fpcmp_parts_f+0x88>
    1e98:	28 17       	cp	r18, r24
    1e9a:	39 07       	cpc	r19, r25
    1e9c:	bc f0       	brlt	.+46     	; 0x1ecc <__fpcmp_parts_f+0x98>
    1e9e:	14 96       	adiw	r26, 0x04	; 4
    1ea0:	8d 91       	ld	r24, X+
    1ea2:	9d 91       	ld	r25, X+
    1ea4:	0d 90       	ld	r0, X+
    1ea6:	bc 91       	ld	r27, X
    1ea8:	a0 2d       	mov	r26, r0
    1eaa:	24 81       	ldd	r18, Z+4	; 0x04
    1eac:	35 81       	ldd	r19, Z+5	; 0x05
    1eae:	46 81       	ldd	r20, Z+6	; 0x06
    1eb0:	57 81       	ldd	r21, Z+7	; 0x07
    1eb2:	28 17       	cp	r18, r24
    1eb4:	39 07       	cpc	r19, r25
    1eb6:	4a 07       	cpc	r20, r26
    1eb8:	5b 07       	cpc	r21, r27
    1eba:	18 f4       	brcc	.+6      	; 0x1ec2 <__fpcmp_parts_f+0x8e>
    1ebc:	11 23       	and	r17, r17
    1ebe:	41 f0       	breq	.+16     	; 0x1ed0 <__fpcmp_parts_f+0x9c>
    1ec0:	0a c0       	rjmp	.+20     	; 0x1ed6 <__fpcmp_parts_f+0xa2>
    1ec2:	82 17       	cp	r24, r18
    1ec4:	93 07       	cpc	r25, r19
    1ec6:	a4 07       	cpc	r26, r20
    1ec8:	b5 07       	cpc	r27, r21
    1eca:	40 f4       	brcc	.+16     	; 0x1edc <__fpcmp_parts_f+0xa8>
    1ecc:	11 23       	and	r17, r17
    1ece:	19 f0       	breq	.+6      	; 0x1ed6 <__fpcmp_parts_f+0xa2>
    1ed0:	61 e0       	ldi	r22, 0x01	; 1
    1ed2:	70 e0       	ldi	r23, 0x00	; 0
    1ed4:	05 c0       	rjmp	.+10     	; 0x1ee0 <__fpcmp_parts_f+0xac>
    1ed6:	6f ef       	ldi	r22, 0xFF	; 255
    1ed8:	7f ef       	ldi	r23, 0xFF	; 255
    1eda:	02 c0       	rjmp	.+4      	; 0x1ee0 <__fpcmp_parts_f+0xac>
    1edc:	60 e0       	ldi	r22, 0x00	; 0
    1ede:	70 e0       	ldi	r23, 0x00	; 0
    1ee0:	cb 01       	movw	r24, r22
    1ee2:	1f 91       	pop	r17
    1ee4:	08 95       	ret

00001ee6 <DIO_u8SetPortDir>:
#include "../../SERV/STD_TYPES.h"
#include "../../SERV/BIT_MATH.h"
#include "Dio_reg.h"
#include "Dio_int.h"

uint8 DIO_u8SetPortDir (uint8 u8PortIdCopy ,uint8 u8DirCopy){
    1ee6:	df 93       	push	r29
    1ee8:	cf 93       	push	r28
    1eea:	00 d0       	rcall	.+0      	; 0x1eec <DIO_u8SetPortDir+0x6>
    1eec:	00 d0       	rcall	.+0      	; 0x1eee <DIO_u8SetPortDir+0x8>
    1eee:	0f 92       	push	r0
    1ef0:	cd b7       	in	r28, 0x3d	; 61
    1ef2:	de b7       	in	r29, 0x3e	; 62
    1ef4:	8a 83       	std	Y+2, r24	; 0x02
    1ef6:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    1ef8:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    1efa:	8a 81       	ldd	r24, Y+2	; 0x02
    1efc:	28 2f       	mov	r18, r24
    1efe:	30 e0       	ldi	r19, 0x00	; 0
    1f00:	3d 83       	std	Y+5, r19	; 0x05
    1f02:	2c 83       	std	Y+4, r18	; 0x04
    1f04:	8c 81       	ldd	r24, Y+4	; 0x04
    1f06:	9d 81       	ldd	r25, Y+5	; 0x05
    1f08:	81 30       	cpi	r24, 0x01	; 1
    1f0a:	91 05       	cpc	r25, r1
    1f0c:	d1 f0       	breq	.+52     	; 0x1f42 <DIO_u8SetPortDir+0x5c>
    1f0e:	2c 81       	ldd	r18, Y+4	; 0x04
    1f10:	3d 81       	ldd	r19, Y+5	; 0x05
    1f12:	22 30       	cpi	r18, 0x02	; 2
    1f14:	31 05       	cpc	r19, r1
    1f16:	2c f4       	brge	.+10     	; 0x1f22 <DIO_u8SetPortDir+0x3c>
    1f18:	8c 81       	ldd	r24, Y+4	; 0x04
    1f1a:	9d 81       	ldd	r25, Y+5	; 0x05
    1f1c:	00 97       	sbiw	r24, 0x00	; 0
    1f1e:	61 f0       	breq	.+24     	; 0x1f38 <DIO_u8SetPortDir+0x52>
    1f20:	1f c0       	rjmp	.+62     	; 0x1f60 <DIO_u8SetPortDir+0x7a>
    1f22:	2c 81       	ldd	r18, Y+4	; 0x04
    1f24:	3d 81       	ldd	r19, Y+5	; 0x05
    1f26:	22 30       	cpi	r18, 0x02	; 2
    1f28:	31 05       	cpc	r19, r1
    1f2a:	81 f0       	breq	.+32     	; 0x1f4c <DIO_u8SetPortDir+0x66>
    1f2c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f2e:	9d 81       	ldd	r25, Y+5	; 0x05
    1f30:	83 30       	cpi	r24, 0x03	; 3
    1f32:	91 05       	cpc	r25, r1
    1f34:	81 f0       	breq	.+32     	; 0x1f56 <DIO_u8SetPortDir+0x70>
    1f36:	14 c0       	rjmp	.+40     	; 0x1f60 <DIO_u8SetPortDir+0x7a>
		case PORT_A :DDRA_REG =u8DirCopy ; break;
    1f38:	ea e3       	ldi	r30, 0x3A	; 58
    1f3a:	f0 e0       	ldi	r31, 0x00	; 0
    1f3c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f3e:	80 83       	st	Z, r24
    1f40:	11 c0       	rjmp	.+34     	; 0x1f64 <DIO_u8SetPortDir+0x7e>
		case PORT_B :DDRB_REG =u8DirCopy ; break;
    1f42:	e7 e3       	ldi	r30, 0x37	; 55
    1f44:	f0 e0       	ldi	r31, 0x00	; 0
    1f46:	8b 81       	ldd	r24, Y+3	; 0x03
    1f48:	80 83       	st	Z, r24
    1f4a:	0c c0       	rjmp	.+24     	; 0x1f64 <DIO_u8SetPortDir+0x7e>
		case PORT_C :DDRC_REG =u8DirCopy ; break;
    1f4c:	e4 e3       	ldi	r30, 0x34	; 52
    1f4e:	f0 e0       	ldi	r31, 0x00	; 0
    1f50:	8b 81       	ldd	r24, Y+3	; 0x03
    1f52:	80 83       	st	Z, r24
    1f54:	07 c0       	rjmp	.+14     	; 0x1f64 <DIO_u8SetPortDir+0x7e>
		case PORT_D :DDRD_REG =u8DirCopy ; break;
    1f56:	e1 e3       	ldi	r30, 0x31	; 49
    1f58:	f0 e0       	ldi	r31, 0x00	; 0
    1f5a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f5c:	80 83       	st	Z, r24
    1f5e:	02 c0       	rjmp	.+4      	; 0x1f64 <DIO_u8SetPortDir+0x7e>
		default     : errStatus =E_NOK   ; break;  	
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    1f64:	89 81       	ldd	r24, Y+1	; 0x01
}
    1f66:	0f 90       	pop	r0
    1f68:	0f 90       	pop	r0
    1f6a:	0f 90       	pop	r0
    1f6c:	0f 90       	pop	r0
    1f6e:	0f 90       	pop	r0
    1f70:	cf 91       	pop	r28
    1f72:	df 91       	pop	r29
    1f74:	08 95       	ret

00001f76 <DIO_u8SetPortVal>:
uint8 DIO_u8SetPortVal (uint8 u8PortIdCopy ,uint8 u8ValCopy){
    1f76:	df 93       	push	r29
    1f78:	cf 93       	push	r28
    1f7a:	00 d0       	rcall	.+0      	; 0x1f7c <DIO_u8SetPortVal+0x6>
    1f7c:	00 d0       	rcall	.+0      	; 0x1f7e <DIO_u8SetPortVal+0x8>
    1f7e:	0f 92       	push	r0
    1f80:	cd b7       	in	r28, 0x3d	; 61
    1f82:	de b7       	in	r29, 0x3e	; 62
    1f84:	8a 83       	std	Y+2, r24	; 0x02
    1f86:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    1f88:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    1f8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f8c:	28 2f       	mov	r18, r24
    1f8e:	30 e0       	ldi	r19, 0x00	; 0
    1f90:	3d 83       	std	Y+5, r19	; 0x05
    1f92:	2c 83       	std	Y+4, r18	; 0x04
    1f94:	8c 81       	ldd	r24, Y+4	; 0x04
    1f96:	9d 81       	ldd	r25, Y+5	; 0x05
    1f98:	81 30       	cpi	r24, 0x01	; 1
    1f9a:	91 05       	cpc	r25, r1
    1f9c:	d1 f0       	breq	.+52     	; 0x1fd2 <DIO_u8SetPortVal+0x5c>
    1f9e:	2c 81       	ldd	r18, Y+4	; 0x04
    1fa0:	3d 81       	ldd	r19, Y+5	; 0x05
    1fa2:	22 30       	cpi	r18, 0x02	; 2
    1fa4:	31 05       	cpc	r19, r1
    1fa6:	2c f4       	brge	.+10     	; 0x1fb2 <DIO_u8SetPortVal+0x3c>
    1fa8:	8c 81       	ldd	r24, Y+4	; 0x04
    1faa:	9d 81       	ldd	r25, Y+5	; 0x05
    1fac:	00 97       	sbiw	r24, 0x00	; 0
    1fae:	61 f0       	breq	.+24     	; 0x1fc8 <DIO_u8SetPortVal+0x52>
    1fb0:	1f c0       	rjmp	.+62     	; 0x1ff0 <DIO_u8SetPortVal+0x7a>
    1fb2:	2c 81       	ldd	r18, Y+4	; 0x04
    1fb4:	3d 81       	ldd	r19, Y+5	; 0x05
    1fb6:	22 30       	cpi	r18, 0x02	; 2
    1fb8:	31 05       	cpc	r19, r1
    1fba:	81 f0       	breq	.+32     	; 0x1fdc <DIO_u8SetPortVal+0x66>
    1fbc:	8c 81       	ldd	r24, Y+4	; 0x04
    1fbe:	9d 81       	ldd	r25, Y+5	; 0x05
    1fc0:	83 30       	cpi	r24, 0x03	; 3
    1fc2:	91 05       	cpc	r25, r1
    1fc4:	81 f0       	breq	.+32     	; 0x1fe6 <DIO_u8SetPortVal+0x70>
    1fc6:	14 c0       	rjmp	.+40     	; 0x1ff0 <DIO_u8SetPortVal+0x7a>
		case PORT_A :PORTA_REG =u8ValCopy ; break;
    1fc8:	eb e3       	ldi	r30, 0x3B	; 59
    1fca:	f0 e0       	ldi	r31, 0x00	; 0
    1fcc:	8b 81       	ldd	r24, Y+3	; 0x03
    1fce:	80 83       	st	Z, r24
    1fd0:	11 c0       	rjmp	.+34     	; 0x1ff4 <DIO_u8SetPortVal+0x7e>
		case PORT_B :PORTB_REG =u8ValCopy ; break;
    1fd2:	e8 e3       	ldi	r30, 0x38	; 56
    1fd4:	f0 e0       	ldi	r31, 0x00	; 0
    1fd6:	8b 81       	ldd	r24, Y+3	; 0x03
    1fd8:	80 83       	st	Z, r24
    1fda:	0c c0       	rjmp	.+24     	; 0x1ff4 <DIO_u8SetPortVal+0x7e>
		case PORT_C :PORTC_REG =u8ValCopy ; break;
    1fdc:	e5 e3       	ldi	r30, 0x35	; 53
    1fde:	f0 e0       	ldi	r31, 0x00	; 0
    1fe0:	8b 81       	ldd	r24, Y+3	; 0x03
    1fe2:	80 83       	st	Z, r24
    1fe4:	07 c0       	rjmp	.+14     	; 0x1ff4 <DIO_u8SetPortVal+0x7e>
		case PORT_D :PORTD_REG =u8ValCopy ; break;
    1fe6:	e2 e3       	ldi	r30, 0x32	; 50
    1fe8:	f0 e0       	ldi	r31, 0x00	; 0
    1fea:	8b 81       	ldd	r24, Y+3	; 0x03
    1fec:	80 83       	st	Z, r24
    1fee:	02 c0       	rjmp	.+4      	; 0x1ff4 <DIO_u8SetPortVal+0x7e>
		default     : errStatus =E_NOK    ; break;  	
    1ff0:	81 e0       	ldi	r24, 0x01	; 1
    1ff2:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    1ff4:	89 81       	ldd	r24, Y+1	; 0x01
}
    1ff6:	0f 90       	pop	r0
    1ff8:	0f 90       	pop	r0
    1ffa:	0f 90       	pop	r0
    1ffc:	0f 90       	pop	r0
    1ffe:	0f 90       	pop	r0
    2000:	cf 91       	pop	r28
    2002:	df 91       	pop	r29
    2004:	08 95       	ret

00002006 <DIO_u8GetPortVal>:
uint8 DIO_u8GetPortVal (uint8 u8PortIdCopy ,uint8 * u8pValCopy){
    2006:	df 93       	push	r29
    2008:	cf 93       	push	r28
    200a:	00 d0       	rcall	.+0      	; 0x200c <DIO_u8GetPortVal+0x6>
    200c:	00 d0       	rcall	.+0      	; 0x200e <DIO_u8GetPortVal+0x8>
    200e:	00 d0       	rcall	.+0      	; 0x2010 <DIO_u8GetPortVal+0xa>
    2010:	cd b7       	in	r28, 0x3d	; 61
    2012:	de b7       	in	r29, 0x3e	; 62
    2014:	8a 83       	std	Y+2, r24	; 0x02
    2016:	7c 83       	std	Y+4, r23	; 0x04
    2018:	6b 83       	std	Y+3, r22	; 0x03
	uint8 errStatus =E_OK;
    201a:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    201c:	8a 81       	ldd	r24, Y+2	; 0x02
    201e:	28 2f       	mov	r18, r24
    2020:	30 e0       	ldi	r19, 0x00	; 0
    2022:	3e 83       	std	Y+6, r19	; 0x06
    2024:	2d 83       	std	Y+5, r18	; 0x05
    2026:	8d 81       	ldd	r24, Y+5	; 0x05
    2028:	9e 81       	ldd	r25, Y+6	; 0x06
    202a:	81 30       	cpi	r24, 0x01	; 1
    202c:	91 05       	cpc	r25, r1
    202e:	e1 f0       	breq	.+56     	; 0x2068 <DIO_u8GetPortVal+0x62>
    2030:	2d 81       	ldd	r18, Y+5	; 0x05
    2032:	3e 81       	ldd	r19, Y+6	; 0x06
    2034:	22 30       	cpi	r18, 0x02	; 2
    2036:	31 05       	cpc	r19, r1
    2038:	2c f4       	brge	.+10     	; 0x2044 <DIO_u8GetPortVal+0x3e>
    203a:	8d 81       	ldd	r24, Y+5	; 0x05
    203c:	9e 81       	ldd	r25, Y+6	; 0x06
    203e:	00 97       	sbiw	r24, 0x00	; 0
    2040:	61 f0       	breq	.+24     	; 0x205a <DIO_u8GetPortVal+0x54>
    2042:	27 c0       	rjmp	.+78     	; 0x2092 <DIO_u8GetPortVal+0x8c>
    2044:	2d 81       	ldd	r18, Y+5	; 0x05
    2046:	3e 81       	ldd	r19, Y+6	; 0x06
    2048:	22 30       	cpi	r18, 0x02	; 2
    204a:	31 05       	cpc	r19, r1
    204c:	a1 f0       	breq	.+40     	; 0x2076 <DIO_u8GetPortVal+0x70>
    204e:	8d 81       	ldd	r24, Y+5	; 0x05
    2050:	9e 81       	ldd	r25, Y+6	; 0x06
    2052:	83 30       	cpi	r24, 0x03	; 3
    2054:	91 05       	cpc	r25, r1
    2056:	b1 f0       	breq	.+44     	; 0x2084 <DIO_u8GetPortVal+0x7e>
    2058:	1c c0       	rjmp	.+56     	; 0x2092 <DIO_u8GetPortVal+0x8c>
		case PORT_A :* u8pValCopy=PINA_REG  ; break;
    205a:	e9 e3       	ldi	r30, 0x39	; 57
    205c:	f0 e0       	ldi	r31, 0x00	; 0
    205e:	80 81       	ld	r24, Z
    2060:	eb 81       	ldd	r30, Y+3	; 0x03
    2062:	fc 81       	ldd	r31, Y+4	; 0x04
    2064:	80 83       	st	Z, r24
    2066:	17 c0       	rjmp	.+46     	; 0x2096 <DIO_u8GetPortVal+0x90>
		case PORT_B :* u8pValCopy=PINB_REG  ; break;
    2068:	e6 e3       	ldi	r30, 0x36	; 54
    206a:	f0 e0       	ldi	r31, 0x00	; 0
    206c:	80 81       	ld	r24, Z
    206e:	eb 81       	ldd	r30, Y+3	; 0x03
    2070:	fc 81       	ldd	r31, Y+4	; 0x04
    2072:	80 83       	st	Z, r24
    2074:	10 c0       	rjmp	.+32     	; 0x2096 <DIO_u8GetPortVal+0x90>
		case PORT_C :* u8pValCopy=PINC_REG  ; break;
    2076:	e3 e3       	ldi	r30, 0x33	; 51
    2078:	f0 e0       	ldi	r31, 0x00	; 0
    207a:	80 81       	ld	r24, Z
    207c:	eb 81       	ldd	r30, Y+3	; 0x03
    207e:	fc 81       	ldd	r31, Y+4	; 0x04
    2080:	80 83       	st	Z, r24
    2082:	09 c0       	rjmp	.+18     	; 0x2096 <DIO_u8GetPortVal+0x90>
		case PORT_D :* u8pValCopy=PIND_REG  ; break;
    2084:	e0 e3       	ldi	r30, 0x30	; 48
    2086:	f0 e0       	ldi	r31, 0x00	; 0
    2088:	80 81       	ld	r24, Z
    208a:	eb 81       	ldd	r30, Y+3	; 0x03
    208c:	fc 81       	ldd	r31, Y+4	; 0x04
    208e:	80 83       	st	Z, r24
    2090:	02 c0       	rjmp	.+4      	; 0x2096 <DIO_u8GetPortVal+0x90>
		default     : errStatus =E_NOK      ; break;  	
    2092:	81 e0       	ldi	r24, 0x01	; 1
    2094:	89 83       	std	Y+1, r24	; 0x01
	}
	return errStatus;
    2096:	89 81       	ldd	r24, Y+1	; 0x01
}
    2098:	26 96       	adiw	r28, 0x06	; 6
    209a:	0f b6       	in	r0, 0x3f	; 63
    209c:	f8 94       	cli
    209e:	de bf       	out	0x3e, r29	; 62
    20a0:	0f be       	out	0x3f, r0	; 63
    20a2:	cd bf       	out	0x3d, r28	; 61
    20a4:	cf 91       	pop	r28
    20a6:	df 91       	pop	r29
    20a8:	08 95       	ret

000020aa <DIO_u8SetPinDir>:

uint8 DIO_u8SetPinDir (uint8 u8PortIdCopy ,uint8 u8PinIdCopy,uint8 u8DirCopy ){
    20aa:	df 93       	push	r29
    20ac:	cf 93       	push	r28
    20ae:	cd b7       	in	r28, 0x3d	; 61
    20b0:	de b7       	in	r29, 0x3e	; 62
    20b2:	28 97       	sbiw	r28, 0x08	; 8
    20b4:	0f b6       	in	r0, 0x3f	; 63
    20b6:	f8 94       	cli
    20b8:	de bf       	out	0x3e, r29	; 62
    20ba:	0f be       	out	0x3f, r0	; 63
    20bc:	cd bf       	out	0x3d, r28	; 61
    20be:	8a 83       	std	Y+2, r24	; 0x02
    20c0:	6b 83       	std	Y+3, r22	; 0x03
    20c2:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    20c4:	19 82       	std	Y+1, r1	; 0x01
	if (u8PinIdCopy>=PIN_0&&u8PinIdCopy<=PIN_7){
    20c6:	8b 81       	ldd	r24, Y+3	; 0x03
    20c8:	88 30       	cpi	r24, 0x08	; 8
    20ca:	08 f0       	brcs	.+2      	; 0x20ce <DIO_u8SetPinDir+0x24>
    20cc:	f3 c0       	rjmp	.+486    	; 0x22b4 <DIO_u8SetPinDir+0x20a>
		if(u8DirCopy==INPUT){
    20ce:	8c 81       	ldd	r24, Y+4	; 0x04
    20d0:	88 23       	and	r24, r24
    20d2:	09 f0       	breq	.+2      	; 0x20d6 <DIO_u8SetPinDir+0x2c>
    20d4:	77 c0       	rjmp	.+238    	; 0x21c4 <DIO_u8SetPinDir+0x11a>
			switch(u8PortIdCopy){
    20d6:	8a 81       	ldd	r24, Y+2	; 0x02
    20d8:	28 2f       	mov	r18, r24
    20da:	30 e0       	ldi	r19, 0x00	; 0
    20dc:	38 87       	std	Y+8, r19	; 0x08
    20de:	2f 83       	std	Y+7, r18	; 0x07
    20e0:	8f 81       	ldd	r24, Y+7	; 0x07
    20e2:	98 85       	ldd	r25, Y+8	; 0x08
    20e4:	81 30       	cpi	r24, 0x01	; 1
    20e6:	91 05       	cpc	r25, r1
    20e8:	59 f1       	breq	.+86     	; 0x2140 <DIO_u8SetPinDir+0x96>
    20ea:	2f 81       	ldd	r18, Y+7	; 0x07
    20ec:	38 85       	ldd	r19, Y+8	; 0x08
    20ee:	22 30       	cpi	r18, 0x02	; 2
    20f0:	31 05       	cpc	r19, r1
    20f2:	2c f4       	brge	.+10     	; 0x20fe <DIO_u8SetPinDir+0x54>
    20f4:	8f 81       	ldd	r24, Y+7	; 0x07
    20f6:	98 85       	ldd	r25, Y+8	; 0x08
    20f8:	00 97       	sbiw	r24, 0x00	; 0
    20fa:	69 f0       	breq	.+26     	; 0x2116 <DIO_u8SetPinDir+0x6c>
    20fc:	60 c0       	rjmp	.+192    	; 0x21be <DIO_u8SetPinDir+0x114>
    20fe:	2f 81       	ldd	r18, Y+7	; 0x07
    2100:	38 85       	ldd	r19, Y+8	; 0x08
    2102:	22 30       	cpi	r18, 0x02	; 2
    2104:	31 05       	cpc	r19, r1
    2106:	89 f1       	breq	.+98     	; 0x216a <DIO_u8SetPinDir+0xc0>
    2108:	8f 81       	ldd	r24, Y+7	; 0x07
    210a:	98 85       	ldd	r25, Y+8	; 0x08
    210c:	83 30       	cpi	r24, 0x03	; 3
    210e:	91 05       	cpc	r25, r1
    2110:	09 f4       	brne	.+2      	; 0x2114 <DIO_u8SetPinDir+0x6a>
    2112:	40 c0       	rjmp	.+128    	; 0x2194 <DIO_u8SetPinDir+0xea>
    2114:	54 c0       	rjmp	.+168    	; 0x21be <DIO_u8SetPinDir+0x114>
				case PORT_A :CLR_BIT(DDRA_REG,u8PinIdCopy); break;
    2116:	aa e3       	ldi	r26, 0x3A	; 58
    2118:	b0 e0       	ldi	r27, 0x00	; 0
    211a:	ea e3       	ldi	r30, 0x3A	; 58
    211c:	f0 e0       	ldi	r31, 0x00	; 0
    211e:	80 81       	ld	r24, Z
    2120:	48 2f       	mov	r20, r24
    2122:	8b 81       	ldd	r24, Y+3	; 0x03
    2124:	28 2f       	mov	r18, r24
    2126:	30 e0       	ldi	r19, 0x00	; 0
    2128:	81 e0       	ldi	r24, 0x01	; 1
    212a:	90 e0       	ldi	r25, 0x00	; 0
    212c:	02 2e       	mov	r0, r18
    212e:	02 c0       	rjmp	.+4      	; 0x2134 <DIO_u8SetPinDir+0x8a>
    2130:	88 0f       	add	r24, r24
    2132:	99 1f       	adc	r25, r25
    2134:	0a 94       	dec	r0
    2136:	e2 f7       	brpl	.-8      	; 0x2130 <DIO_u8SetPinDir+0x86>
    2138:	80 95       	com	r24
    213a:	84 23       	and	r24, r20
    213c:	8c 93       	st	X, r24
    213e:	ba c0       	rjmp	.+372    	; 0x22b4 <DIO_u8SetPinDir+0x20a>
				case PORT_B :CLR_BIT(DDRB_REG,u8PinIdCopy); break;
    2140:	a7 e3       	ldi	r26, 0x37	; 55
    2142:	b0 e0       	ldi	r27, 0x00	; 0
    2144:	e7 e3       	ldi	r30, 0x37	; 55
    2146:	f0 e0       	ldi	r31, 0x00	; 0
    2148:	80 81       	ld	r24, Z
    214a:	48 2f       	mov	r20, r24
    214c:	8b 81       	ldd	r24, Y+3	; 0x03
    214e:	28 2f       	mov	r18, r24
    2150:	30 e0       	ldi	r19, 0x00	; 0
    2152:	81 e0       	ldi	r24, 0x01	; 1
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	02 2e       	mov	r0, r18
    2158:	02 c0       	rjmp	.+4      	; 0x215e <DIO_u8SetPinDir+0xb4>
    215a:	88 0f       	add	r24, r24
    215c:	99 1f       	adc	r25, r25
    215e:	0a 94       	dec	r0
    2160:	e2 f7       	brpl	.-8      	; 0x215a <DIO_u8SetPinDir+0xb0>
    2162:	80 95       	com	r24
    2164:	84 23       	and	r24, r20
    2166:	8c 93       	st	X, r24
    2168:	a5 c0       	rjmp	.+330    	; 0x22b4 <DIO_u8SetPinDir+0x20a>
				case PORT_C :CLR_BIT(DDRC_REG,u8PinIdCopy); break;
    216a:	a4 e3       	ldi	r26, 0x34	; 52
    216c:	b0 e0       	ldi	r27, 0x00	; 0
    216e:	e4 e3       	ldi	r30, 0x34	; 52
    2170:	f0 e0       	ldi	r31, 0x00	; 0
    2172:	80 81       	ld	r24, Z
    2174:	48 2f       	mov	r20, r24
    2176:	8b 81       	ldd	r24, Y+3	; 0x03
    2178:	28 2f       	mov	r18, r24
    217a:	30 e0       	ldi	r19, 0x00	; 0
    217c:	81 e0       	ldi	r24, 0x01	; 1
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	02 2e       	mov	r0, r18
    2182:	02 c0       	rjmp	.+4      	; 0x2188 <DIO_u8SetPinDir+0xde>
    2184:	88 0f       	add	r24, r24
    2186:	99 1f       	adc	r25, r25
    2188:	0a 94       	dec	r0
    218a:	e2 f7       	brpl	.-8      	; 0x2184 <DIO_u8SetPinDir+0xda>
    218c:	80 95       	com	r24
    218e:	84 23       	and	r24, r20
    2190:	8c 93       	st	X, r24
    2192:	90 c0       	rjmp	.+288    	; 0x22b4 <DIO_u8SetPinDir+0x20a>
				case PORT_D :CLR_BIT(DDRD_REG,u8PinIdCopy); break;
    2194:	a1 e3       	ldi	r26, 0x31	; 49
    2196:	b0 e0       	ldi	r27, 0x00	; 0
    2198:	e1 e3       	ldi	r30, 0x31	; 49
    219a:	f0 e0       	ldi	r31, 0x00	; 0
    219c:	80 81       	ld	r24, Z
    219e:	48 2f       	mov	r20, r24
    21a0:	8b 81       	ldd	r24, Y+3	; 0x03
    21a2:	28 2f       	mov	r18, r24
    21a4:	30 e0       	ldi	r19, 0x00	; 0
    21a6:	81 e0       	ldi	r24, 0x01	; 1
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	02 2e       	mov	r0, r18
    21ac:	02 c0       	rjmp	.+4      	; 0x21b2 <DIO_u8SetPinDir+0x108>
    21ae:	88 0f       	add	r24, r24
    21b0:	99 1f       	adc	r25, r25
    21b2:	0a 94       	dec	r0
    21b4:	e2 f7       	brpl	.-8      	; 0x21ae <DIO_u8SetPinDir+0x104>
    21b6:	80 95       	com	r24
    21b8:	84 23       	and	r24, r20
    21ba:	8c 93       	st	X, r24
    21bc:	7b c0       	rjmp	.+246    	; 0x22b4 <DIO_u8SetPinDir+0x20a>
				default     :errStatus =E_NOK             ; break;
    21be:	81 e0       	ldi	r24, 0x01	; 1
    21c0:	89 83       	std	Y+1, r24	; 0x01
    21c2:	78 c0       	rjmp	.+240    	; 0x22b4 <DIO_u8SetPinDir+0x20a>
			}
		}
		else if (u8DirCopy==OUTPUT){
    21c4:	8c 81       	ldd	r24, Y+4	; 0x04
    21c6:	81 30       	cpi	r24, 0x01	; 1
    21c8:	09 f0       	breq	.+2      	; 0x21cc <DIO_u8SetPinDir+0x122>
    21ca:	72 c0       	rjmp	.+228    	; 0x22b0 <DIO_u8SetPinDir+0x206>
			switch(u8PortIdCopy){
    21cc:	8a 81       	ldd	r24, Y+2	; 0x02
    21ce:	28 2f       	mov	r18, r24
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	3e 83       	std	Y+6, r19	; 0x06
    21d4:	2d 83       	std	Y+5, r18	; 0x05
    21d6:	8d 81       	ldd	r24, Y+5	; 0x05
    21d8:	9e 81       	ldd	r25, Y+6	; 0x06
    21da:	81 30       	cpi	r24, 0x01	; 1
    21dc:	91 05       	cpc	r25, r1
    21de:	49 f1       	breq	.+82     	; 0x2232 <DIO_u8SetPinDir+0x188>
    21e0:	2d 81       	ldd	r18, Y+5	; 0x05
    21e2:	3e 81       	ldd	r19, Y+6	; 0x06
    21e4:	22 30       	cpi	r18, 0x02	; 2
    21e6:	31 05       	cpc	r19, r1
    21e8:	2c f4       	brge	.+10     	; 0x21f4 <DIO_u8SetPinDir+0x14a>
    21ea:	8d 81       	ldd	r24, Y+5	; 0x05
    21ec:	9e 81       	ldd	r25, Y+6	; 0x06
    21ee:	00 97       	sbiw	r24, 0x00	; 0
    21f0:	61 f0       	breq	.+24     	; 0x220a <DIO_u8SetPinDir+0x160>
    21f2:	5b c0       	rjmp	.+182    	; 0x22aa <DIO_u8SetPinDir+0x200>
    21f4:	2d 81       	ldd	r18, Y+5	; 0x05
    21f6:	3e 81       	ldd	r19, Y+6	; 0x06
    21f8:	22 30       	cpi	r18, 0x02	; 2
    21fa:	31 05       	cpc	r19, r1
    21fc:	71 f1       	breq	.+92     	; 0x225a <DIO_u8SetPinDir+0x1b0>
    21fe:	8d 81       	ldd	r24, Y+5	; 0x05
    2200:	9e 81       	ldd	r25, Y+6	; 0x06
    2202:	83 30       	cpi	r24, 0x03	; 3
    2204:	91 05       	cpc	r25, r1
    2206:	e9 f1       	breq	.+122    	; 0x2282 <DIO_u8SetPinDir+0x1d8>
    2208:	50 c0       	rjmp	.+160    	; 0x22aa <DIO_u8SetPinDir+0x200>
				case PORT_A :SET_BIT(DDRA_REG,u8PinIdCopy); break;
    220a:	aa e3       	ldi	r26, 0x3A	; 58
    220c:	b0 e0       	ldi	r27, 0x00	; 0
    220e:	ea e3       	ldi	r30, 0x3A	; 58
    2210:	f0 e0       	ldi	r31, 0x00	; 0
    2212:	80 81       	ld	r24, Z
    2214:	48 2f       	mov	r20, r24
    2216:	8b 81       	ldd	r24, Y+3	; 0x03
    2218:	28 2f       	mov	r18, r24
    221a:	30 e0       	ldi	r19, 0x00	; 0
    221c:	81 e0       	ldi	r24, 0x01	; 1
    221e:	90 e0       	ldi	r25, 0x00	; 0
    2220:	02 2e       	mov	r0, r18
    2222:	02 c0       	rjmp	.+4      	; 0x2228 <DIO_u8SetPinDir+0x17e>
    2224:	88 0f       	add	r24, r24
    2226:	99 1f       	adc	r25, r25
    2228:	0a 94       	dec	r0
    222a:	e2 f7       	brpl	.-8      	; 0x2224 <DIO_u8SetPinDir+0x17a>
    222c:	84 2b       	or	r24, r20
    222e:	8c 93       	st	X, r24
    2230:	41 c0       	rjmp	.+130    	; 0x22b4 <DIO_u8SetPinDir+0x20a>
				case PORT_B :SET_BIT(DDRB_REG,u8PinIdCopy); break;
    2232:	a7 e3       	ldi	r26, 0x37	; 55
    2234:	b0 e0       	ldi	r27, 0x00	; 0
    2236:	e7 e3       	ldi	r30, 0x37	; 55
    2238:	f0 e0       	ldi	r31, 0x00	; 0
    223a:	80 81       	ld	r24, Z
    223c:	48 2f       	mov	r20, r24
    223e:	8b 81       	ldd	r24, Y+3	; 0x03
    2240:	28 2f       	mov	r18, r24
    2242:	30 e0       	ldi	r19, 0x00	; 0
    2244:	81 e0       	ldi	r24, 0x01	; 1
    2246:	90 e0       	ldi	r25, 0x00	; 0
    2248:	02 2e       	mov	r0, r18
    224a:	02 c0       	rjmp	.+4      	; 0x2250 <DIO_u8SetPinDir+0x1a6>
    224c:	88 0f       	add	r24, r24
    224e:	99 1f       	adc	r25, r25
    2250:	0a 94       	dec	r0
    2252:	e2 f7       	brpl	.-8      	; 0x224c <DIO_u8SetPinDir+0x1a2>
    2254:	84 2b       	or	r24, r20
    2256:	8c 93       	st	X, r24
    2258:	2d c0       	rjmp	.+90     	; 0x22b4 <DIO_u8SetPinDir+0x20a>
				case PORT_C :SET_BIT(DDRC_REG,u8PinIdCopy); break;
    225a:	a4 e3       	ldi	r26, 0x34	; 52
    225c:	b0 e0       	ldi	r27, 0x00	; 0
    225e:	e4 e3       	ldi	r30, 0x34	; 52
    2260:	f0 e0       	ldi	r31, 0x00	; 0
    2262:	80 81       	ld	r24, Z
    2264:	48 2f       	mov	r20, r24
    2266:	8b 81       	ldd	r24, Y+3	; 0x03
    2268:	28 2f       	mov	r18, r24
    226a:	30 e0       	ldi	r19, 0x00	; 0
    226c:	81 e0       	ldi	r24, 0x01	; 1
    226e:	90 e0       	ldi	r25, 0x00	; 0
    2270:	02 2e       	mov	r0, r18
    2272:	02 c0       	rjmp	.+4      	; 0x2278 <DIO_u8SetPinDir+0x1ce>
    2274:	88 0f       	add	r24, r24
    2276:	99 1f       	adc	r25, r25
    2278:	0a 94       	dec	r0
    227a:	e2 f7       	brpl	.-8      	; 0x2274 <DIO_u8SetPinDir+0x1ca>
    227c:	84 2b       	or	r24, r20
    227e:	8c 93       	st	X, r24
    2280:	19 c0       	rjmp	.+50     	; 0x22b4 <DIO_u8SetPinDir+0x20a>
				case PORT_D :SET_BIT(DDRD_REG,u8PinIdCopy); break;
    2282:	a1 e3       	ldi	r26, 0x31	; 49
    2284:	b0 e0       	ldi	r27, 0x00	; 0
    2286:	e1 e3       	ldi	r30, 0x31	; 49
    2288:	f0 e0       	ldi	r31, 0x00	; 0
    228a:	80 81       	ld	r24, Z
    228c:	48 2f       	mov	r20, r24
    228e:	8b 81       	ldd	r24, Y+3	; 0x03
    2290:	28 2f       	mov	r18, r24
    2292:	30 e0       	ldi	r19, 0x00	; 0
    2294:	81 e0       	ldi	r24, 0x01	; 1
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	02 2e       	mov	r0, r18
    229a:	02 c0       	rjmp	.+4      	; 0x22a0 <DIO_u8SetPinDir+0x1f6>
    229c:	88 0f       	add	r24, r24
    229e:	99 1f       	adc	r25, r25
    22a0:	0a 94       	dec	r0
    22a2:	e2 f7       	brpl	.-8      	; 0x229c <DIO_u8SetPinDir+0x1f2>
    22a4:	84 2b       	or	r24, r20
    22a6:	8c 93       	st	X, r24
    22a8:	05 c0       	rjmp	.+10     	; 0x22b4 <DIO_u8SetPinDir+0x20a>
				default     :errStatus =E_NOK             ; break;
    22aa:	81 e0       	ldi	r24, 0x01	; 1
    22ac:	89 83       	std	Y+1, r24	; 0x01
    22ae:	02 c0       	rjmp	.+4      	; 0x22b4 <DIO_u8SetPinDir+0x20a>
			}
		}
		else {
			errStatus =E_NOK;
    22b0:	81 e0       	ldi	r24, 0x01	; 1
    22b2:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return errStatus;
    22b4:	89 81       	ldd	r24, Y+1	; 0x01
}
    22b6:	28 96       	adiw	r28, 0x08	; 8
    22b8:	0f b6       	in	r0, 0x3f	; 63
    22ba:	f8 94       	cli
    22bc:	de bf       	out	0x3e, r29	; 62
    22be:	0f be       	out	0x3f, r0	; 63
    22c0:	cd bf       	out	0x3d, r28	; 61
    22c2:	cf 91       	pop	r28
    22c4:	df 91       	pop	r29
    22c6:	08 95       	ret

000022c8 <DIO_u8SetPinVal>:

uint8 DIO_u8SetPinVal (uint8 u8PortIdCopy ,uint8 u8PinIdCopy,uint8 u8ValCopy ){
    22c8:	df 93       	push	r29
    22ca:	cf 93       	push	r28
    22cc:	cd b7       	in	r28, 0x3d	; 61
    22ce:	de b7       	in	r29, 0x3e	; 62
    22d0:	28 97       	sbiw	r28, 0x08	; 8
    22d2:	0f b6       	in	r0, 0x3f	; 63
    22d4:	f8 94       	cli
    22d6:	de bf       	out	0x3e, r29	; 62
    22d8:	0f be       	out	0x3f, r0	; 63
    22da:	cd bf       	out	0x3d, r28	; 61
    22dc:	8a 83       	std	Y+2, r24	; 0x02
    22de:	6b 83       	std	Y+3, r22	; 0x03
    22e0:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    22e2:	19 82       	std	Y+1, r1	; 0x01
		if (u8PinIdCopy>=PIN_0&&u8PinIdCopy<=PIN_7){
    22e4:	8b 81       	ldd	r24, Y+3	; 0x03
    22e6:	88 30       	cpi	r24, 0x08	; 8
    22e8:	08 f0       	brcs	.+2      	; 0x22ec <DIO_u8SetPinVal+0x24>
    22ea:	f3 c0       	rjmp	.+486    	; 0x24d2 <DIO_u8SetPinVal+0x20a>
		if(u8ValCopy ==LOW){
    22ec:	8c 81       	ldd	r24, Y+4	; 0x04
    22ee:	88 23       	and	r24, r24
    22f0:	09 f0       	breq	.+2      	; 0x22f4 <DIO_u8SetPinVal+0x2c>
    22f2:	77 c0       	rjmp	.+238    	; 0x23e2 <DIO_u8SetPinVal+0x11a>
			switch(u8PortIdCopy){
    22f4:	8a 81       	ldd	r24, Y+2	; 0x02
    22f6:	28 2f       	mov	r18, r24
    22f8:	30 e0       	ldi	r19, 0x00	; 0
    22fa:	38 87       	std	Y+8, r19	; 0x08
    22fc:	2f 83       	std	Y+7, r18	; 0x07
    22fe:	8f 81       	ldd	r24, Y+7	; 0x07
    2300:	98 85       	ldd	r25, Y+8	; 0x08
    2302:	81 30       	cpi	r24, 0x01	; 1
    2304:	91 05       	cpc	r25, r1
    2306:	59 f1       	breq	.+86     	; 0x235e <DIO_u8SetPinVal+0x96>
    2308:	2f 81       	ldd	r18, Y+7	; 0x07
    230a:	38 85       	ldd	r19, Y+8	; 0x08
    230c:	22 30       	cpi	r18, 0x02	; 2
    230e:	31 05       	cpc	r19, r1
    2310:	2c f4       	brge	.+10     	; 0x231c <DIO_u8SetPinVal+0x54>
    2312:	8f 81       	ldd	r24, Y+7	; 0x07
    2314:	98 85       	ldd	r25, Y+8	; 0x08
    2316:	00 97       	sbiw	r24, 0x00	; 0
    2318:	69 f0       	breq	.+26     	; 0x2334 <DIO_u8SetPinVal+0x6c>
    231a:	60 c0       	rjmp	.+192    	; 0x23dc <DIO_u8SetPinVal+0x114>
    231c:	2f 81       	ldd	r18, Y+7	; 0x07
    231e:	38 85       	ldd	r19, Y+8	; 0x08
    2320:	22 30       	cpi	r18, 0x02	; 2
    2322:	31 05       	cpc	r19, r1
    2324:	89 f1       	breq	.+98     	; 0x2388 <DIO_u8SetPinVal+0xc0>
    2326:	8f 81       	ldd	r24, Y+7	; 0x07
    2328:	98 85       	ldd	r25, Y+8	; 0x08
    232a:	83 30       	cpi	r24, 0x03	; 3
    232c:	91 05       	cpc	r25, r1
    232e:	09 f4       	brne	.+2      	; 0x2332 <DIO_u8SetPinVal+0x6a>
    2330:	40 c0       	rjmp	.+128    	; 0x23b2 <DIO_u8SetPinVal+0xea>
    2332:	54 c0       	rjmp	.+168    	; 0x23dc <DIO_u8SetPinVal+0x114>
				case PORT_A :CLR_BIT(PORTA_REG,u8PinIdCopy); break;
    2334:	ab e3       	ldi	r26, 0x3B	; 59
    2336:	b0 e0       	ldi	r27, 0x00	; 0
    2338:	eb e3       	ldi	r30, 0x3B	; 59
    233a:	f0 e0       	ldi	r31, 0x00	; 0
    233c:	80 81       	ld	r24, Z
    233e:	48 2f       	mov	r20, r24
    2340:	8b 81       	ldd	r24, Y+3	; 0x03
    2342:	28 2f       	mov	r18, r24
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	81 e0       	ldi	r24, 0x01	; 1
    2348:	90 e0       	ldi	r25, 0x00	; 0
    234a:	02 2e       	mov	r0, r18
    234c:	02 c0       	rjmp	.+4      	; 0x2352 <DIO_u8SetPinVal+0x8a>
    234e:	88 0f       	add	r24, r24
    2350:	99 1f       	adc	r25, r25
    2352:	0a 94       	dec	r0
    2354:	e2 f7       	brpl	.-8      	; 0x234e <DIO_u8SetPinVal+0x86>
    2356:	80 95       	com	r24
    2358:	84 23       	and	r24, r20
    235a:	8c 93       	st	X, r24
    235c:	ba c0       	rjmp	.+372    	; 0x24d2 <DIO_u8SetPinVal+0x20a>
				case PORT_B :CLR_BIT(PORTB_REG,u8PinIdCopy); break;
    235e:	a8 e3       	ldi	r26, 0x38	; 56
    2360:	b0 e0       	ldi	r27, 0x00	; 0
    2362:	e8 e3       	ldi	r30, 0x38	; 56
    2364:	f0 e0       	ldi	r31, 0x00	; 0
    2366:	80 81       	ld	r24, Z
    2368:	48 2f       	mov	r20, r24
    236a:	8b 81       	ldd	r24, Y+3	; 0x03
    236c:	28 2f       	mov	r18, r24
    236e:	30 e0       	ldi	r19, 0x00	; 0
    2370:	81 e0       	ldi	r24, 0x01	; 1
    2372:	90 e0       	ldi	r25, 0x00	; 0
    2374:	02 2e       	mov	r0, r18
    2376:	02 c0       	rjmp	.+4      	; 0x237c <DIO_u8SetPinVal+0xb4>
    2378:	88 0f       	add	r24, r24
    237a:	99 1f       	adc	r25, r25
    237c:	0a 94       	dec	r0
    237e:	e2 f7       	brpl	.-8      	; 0x2378 <DIO_u8SetPinVal+0xb0>
    2380:	80 95       	com	r24
    2382:	84 23       	and	r24, r20
    2384:	8c 93       	st	X, r24
    2386:	a5 c0       	rjmp	.+330    	; 0x24d2 <DIO_u8SetPinVal+0x20a>
				case PORT_C :CLR_BIT(PORTC_REG,u8PinIdCopy); break;
    2388:	a5 e3       	ldi	r26, 0x35	; 53
    238a:	b0 e0       	ldi	r27, 0x00	; 0
    238c:	e5 e3       	ldi	r30, 0x35	; 53
    238e:	f0 e0       	ldi	r31, 0x00	; 0
    2390:	80 81       	ld	r24, Z
    2392:	48 2f       	mov	r20, r24
    2394:	8b 81       	ldd	r24, Y+3	; 0x03
    2396:	28 2f       	mov	r18, r24
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	81 e0       	ldi	r24, 0x01	; 1
    239c:	90 e0       	ldi	r25, 0x00	; 0
    239e:	02 2e       	mov	r0, r18
    23a0:	02 c0       	rjmp	.+4      	; 0x23a6 <DIO_u8SetPinVal+0xde>
    23a2:	88 0f       	add	r24, r24
    23a4:	99 1f       	adc	r25, r25
    23a6:	0a 94       	dec	r0
    23a8:	e2 f7       	brpl	.-8      	; 0x23a2 <DIO_u8SetPinVal+0xda>
    23aa:	80 95       	com	r24
    23ac:	84 23       	and	r24, r20
    23ae:	8c 93       	st	X, r24
    23b0:	90 c0       	rjmp	.+288    	; 0x24d2 <DIO_u8SetPinVal+0x20a>
				case PORT_D :CLR_BIT(PORTD_REG,u8PinIdCopy); break;
    23b2:	a2 e3       	ldi	r26, 0x32	; 50
    23b4:	b0 e0       	ldi	r27, 0x00	; 0
    23b6:	e2 e3       	ldi	r30, 0x32	; 50
    23b8:	f0 e0       	ldi	r31, 0x00	; 0
    23ba:	80 81       	ld	r24, Z
    23bc:	48 2f       	mov	r20, r24
    23be:	8b 81       	ldd	r24, Y+3	; 0x03
    23c0:	28 2f       	mov	r18, r24
    23c2:	30 e0       	ldi	r19, 0x00	; 0
    23c4:	81 e0       	ldi	r24, 0x01	; 1
    23c6:	90 e0       	ldi	r25, 0x00	; 0
    23c8:	02 2e       	mov	r0, r18
    23ca:	02 c0       	rjmp	.+4      	; 0x23d0 <DIO_u8SetPinVal+0x108>
    23cc:	88 0f       	add	r24, r24
    23ce:	99 1f       	adc	r25, r25
    23d0:	0a 94       	dec	r0
    23d2:	e2 f7       	brpl	.-8      	; 0x23cc <DIO_u8SetPinVal+0x104>
    23d4:	80 95       	com	r24
    23d6:	84 23       	and	r24, r20
    23d8:	8c 93       	st	X, r24
    23da:	7b c0       	rjmp	.+246    	; 0x24d2 <DIO_u8SetPinVal+0x20a>
				default     :errStatus =E_NOK              ;  break;
    23dc:	81 e0       	ldi	r24, 0x01	; 1
    23de:	89 83       	std	Y+1, r24	; 0x01
    23e0:	78 c0       	rjmp	.+240    	; 0x24d2 <DIO_u8SetPinVal+0x20a>
			}
		}
		else if (u8ValCopy ==HIGH){
    23e2:	8c 81       	ldd	r24, Y+4	; 0x04
    23e4:	81 30       	cpi	r24, 0x01	; 1
    23e6:	09 f0       	breq	.+2      	; 0x23ea <DIO_u8SetPinVal+0x122>
    23e8:	72 c0       	rjmp	.+228    	; 0x24ce <DIO_u8SetPinVal+0x206>
			switch(u8PortIdCopy){
    23ea:	8a 81       	ldd	r24, Y+2	; 0x02
    23ec:	28 2f       	mov	r18, r24
    23ee:	30 e0       	ldi	r19, 0x00	; 0
    23f0:	3e 83       	std	Y+6, r19	; 0x06
    23f2:	2d 83       	std	Y+5, r18	; 0x05
    23f4:	8d 81       	ldd	r24, Y+5	; 0x05
    23f6:	9e 81       	ldd	r25, Y+6	; 0x06
    23f8:	81 30       	cpi	r24, 0x01	; 1
    23fa:	91 05       	cpc	r25, r1
    23fc:	49 f1       	breq	.+82     	; 0x2450 <DIO_u8SetPinVal+0x188>
    23fe:	2d 81       	ldd	r18, Y+5	; 0x05
    2400:	3e 81       	ldd	r19, Y+6	; 0x06
    2402:	22 30       	cpi	r18, 0x02	; 2
    2404:	31 05       	cpc	r19, r1
    2406:	2c f4       	brge	.+10     	; 0x2412 <DIO_u8SetPinVal+0x14a>
    2408:	8d 81       	ldd	r24, Y+5	; 0x05
    240a:	9e 81       	ldd	r25, Y+6	; 0x06
    240c:	00 97       	sbiw	r24, 0x00	; 0
    240e:	61 f0       	breq	.+24     	; 0x2428 <DIO_u8SetPinVal+0x160>
    2410:	5b c0       	rjmp	.+182    	; 0x24c8 <DIO_u8SetPinVal+0x200>
    2412:	2d 81       	ldd	r18, Y+5	; 0x05
    2414:	3e 81       	ldd	r19, Y+6	; 0x06
    2416:	22 30       	cpi	r18, 0x02	; 2
    2418:	31 05       	cpc	r19, r1
    241a:	71 f1       	breq	.+92     	; 0x2478 <DIO_u8SetPinVal+0x1b0>
    241c:	8d 81       	ldd	r24, Y+5	; 0x05
    241e:	9e 81       	ldd	r25, Y+6	; 0x06
    2420:	83 30       	cpi	r24, 0x03	; 3
    2422:	91 05       	cpc	r25, r1
    2424:	e9 f1       	breq	.+122    	; 0x24a0 <DIO_u8SetPinVal+0x1d8>
    2426:	50 c0       	rjmp	.+160    	; 0x24c8 <DIO_u8SetPinVal+0x200>
				case PORT_A :SET_BIT(PORTA_REG,u8PinIdCopy); break;
    2428:	ab e3       	ldi	r26, 0x3B	; 59
    242a:	b0 e0       	ldi	r27, 0x00	; 0
    242c:	eb e3       	ldi	r30, 0x3B	; 59
    242e:	f0 e0       	ldi	r31, 0x00	; 0
    2430:	80 81       	ld	r24, Z
    2432:	48 2f       	mov	r20, r24
    2434:	8b 81       	ldd	r24, Y+3	; 0x03
    2436:	28 2f       	mov	r18, r24
    2438:	30 e0       	ldi	r19, 0x00	; 0
    243a:	81 e0       	ldi	r24, 0x01	; 1
    243c:	90 e0       	ldi	r25, 0x00	; 0
    243e:	02 2e       	mov	r0, r18
    2440:	02 c0       	rjmp	.+4      	; 0x2446 <DIO_u8SetPinVal+0x17e>
    2442:	88 0f       	add	r24, r24
    2444:	99 1f       	adc	r25, r25
    2446:	0a 94       	dec	r0
    2448:	e2 f7       	brpl	.-8      	; 0x2442 <DIO_u8SetPinVal+0x17a>
    244a:	84 2b       	or	r24, r20
    244c:	8c 93       	st	X, r24
    244e:	41 c0       	rjmp	.+130    	; 0x24d2 <DIO_u8SetPinVal+0x20a>
				case PORT_B :SET_BIT(PORTB_REG,u8PinIdCopy); break;
    2450:	a8 e3       	ldi	r26, 0x38	; 56
    2452:	b0 e0       	ldi	r27, 0x00	; 0
    2454:	e8 e3       	ldi	r30, 0x38	; 56
    2456:	f0 e0       	ldi	r31, 0x00	; 0
    2458:	80 81       	ld	r24, Z
    245a:	48 2f       	mov	r20, r24
    245c:	8b 81       	ldd	r24, Y+3	; 0x03
    245e:	28 2f       	mov	r18, r24
    2460:	30 e0       	ldi	r19, 0x00	; 0
    2462:	81 e0       	ldi	r24, 0x01	; 1
    2464:	90 e0       	ldi	r25, 0x00	; 0
    2466:	02 2e       	mov	r0, r18
    2468:	02 c0       	rjmp	.+4      	; 0x246e <DIO_u8SetPinVal+0x1a6>
    246a:	88 0f       	add	r24, r24
    246c:	99 1f       	adc	r25, r25
    246e:	0a 94       	dec	r0
    2470:	e2 f7       	brpl	.-8      	; 0x246a <DIO_u8SetPinVal+0x1a2>
    2472:	84 2b       	or	r24, r20
    2474:	8c 93       	st	X, r24
    2476:	2d c0       	rjmp	.+90     	; 0x24d2 <DIO_u8SetPinVal+0x20a>
				case PORT_C :SET_BIT(PORTC_REG,u8PinIdCopy); break;
    2478:	a5 e3       	ldi	r26, 0x35	; 53
    247a:	b0 e0       	ldi	r27, 0x00	; 0
    247c:	e5 e3       	ldi	r30, 0x35	; 53
    247e:	f0 e0       	ldi	r31, 0x00	; 0
    2480:	80 81       	ld	r24, Z
    2482:	48 2f       	mov	r20, r24
    2484:	8b 81       	ldd	r24, Y+3	; 0x03
    2486:	28 2f       	mov	r18, r24
    2488:	30 e0       	ldi	r19, 0x00	; 0
    248a:	81 e0       	ldi	r24, 0x01	; 1
    248c:	90 e0       	ldi	r25, 0x00	; 0
    248e:	02 2e       	mov	r0, r18
    2490:	02 c0       	rjmp	.+4      	; 0x2496 <DIO_u8SetPinVal+0x1ce>
    2492:	88 0f       	add	r24, r24
    2494:	99 1f       	adc	r25, r25
    2496:	0a 94       	dec	r0
    2498:	e2 f7       	brpl	.-8      	; 0x2492 <DIO_u8SetPinVal+0x1ca>
    249a:	84 2b       	or	r24, r20
    249c:	8c 93       	st	X, r24
    249e:	19 c0       	rjmp	.+50     	; 0x24d2 <DIO_u8SetPinVal+0x20a>
				case PORT_D :SET_BIT(PORTD_REG,u8PinIdCopy); break;
    24a0:	a2 e3       	ldi	r26, 0x32	; 50
    24a2:	b0 e0       	ldi	r27, 0x00	; 0
    24a4:	e2 e3       	ldi	r30, 0x32	; 50
    24a6:	f0 e0       	ldi	r31, 0x00	; 0
    24a8:	80 81       	ld	r24, Z
    24aa:	48 2f       	mov	r20, r24
    24ac:	8b 81       	ldd	r24, Y+3	; 0x03
    24ae:	28 2f       	mov	r18, r24
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	81 e0       	ldi	r24, 0x01	; 1
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	02 2e       	mov	r0, r18
    24b8:	02 c0       	rjmp	.+4      	; 0x24be <DIO_u8SetPinVal+0x1f6>
    24ba:	88 0f       	add	r24, r24
    24bc:	99 1f       	adc	r25, r25
    24be:	0a 94       	dec	r0
    24c0:	e2 f7       	brpl	.-8      	; 0x24ba <DIO_u8SetPinVal+0x1f2>
    24c2:	84 2b       	or	r24, r20
    24c4:	8c 93       	st	X, r24
    24c6:	05 c0       	rjmp	.+10     	; 0x24d2 <DIO_u8SetPinVal+0x20a>
				default     :errStatus =E_NOK              ; break;
    24c8:	81 e0       	ldi	r24, 0x01	; 1
    24ca:	89 83       	std	Y+1, r24	; 0x01
    24cc:	02 c0       	rjmp	.+4      	; 0x24d2 <DIO_u8SetPinVal+0x20a>
			}
		}
		else {
			errStatus =E_NOK;
    24ce:	81 e0       	ldi	r24, 0x01	; 1
    24d0:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return errStatus;
    24d2:	89 81       	ldd	r24, Y+1	; 0x01

}
    24d4:	28 96       	adiw	r28, 0x08	; 8
    24d6:	0f b6       	in	r0, 0x3f	; 63
    24d8:	f8 94       	cli
    24da:	de bf       	out	0x3e, r29	; 62
    24dc:	0f be       	out	0x3f, r0	; 63
    24de:	cd bf       	out	0x3d, r28	; 61
    24e0:	cf 91       	pop	r28
    24e2:	df 91       	pop	r29
    24e4:	08 95       	ret

000024e6 <DIO_u8GetPinVal>:
uint8 DIO_u8GetPinVal (uint8 u8PortIdCopy ,uint8 u8PinIdCopy ,uint8 * u8pValCopy){
    24e6:	df 93       	push	r29
    24e8:	cf 93       	push	r28
    24ea:	cd b7       	in	r28, 0x3d	; 61
    24ec:	de b7       	in	r29, 0x3e	; 62
    24ee:	27 97       	sbiw	r28, 0x07	; 7
    24f0:	0f b6       	in	r0, 0x3f	; 63
    24f2:	f8 94       	cli
    24f4:	de bf       	out	0x3e, r29	; 62
    24f6:	0f be       	out	0x3f, r0	; 63
    24f8:	cd bf       	out	0x3d, r28	; 61
    24fa:	8a 83       	std	Y+2, r24	; 0x02
    24fc:	6b 83       	std	Y+3, r22	; 0x03
    24fe:	5d 83       	std	Y+5, r21	; 0x05
    2500:	4c 83       	std	Y+4, r20	; 0x04
	uint8 errStatus =E_OK;
    2502:	19 82       	std	Y+1, r1	; 0x01
	switch(u8PortIdCopy){
    2504:	8a 81       	ldd	r24, Y+2	; 0x02
    2506:	28 2f       	mov	r18, r24
    2508:	30 e0       	ldi	r19, 0x00	; 0
    250a:	3f 83       	std	Y+7, r19	; 0x07
    250c:	2e 83       	std	Y+6, r18	; 0x06
    250e:	4e 81       	ldd	r20, Y+6	; 0x06
    2510:	5f 81       	ldd	r21, Y+7	; 0x07
    2512:	41 30       	cpi	r20, 0x01	; 1
    2514:	51 05       	cpc	r21, r1
    2516:	59 f1       	breq	.+86     	; 0x256e <DIO_u8GetPinVal+0x88>
    2518:	8e 81       	ldd	r24, Y+6	; 0x06
    251a:	9f 81       	ldd	r25, Y+7	; 0x07
    251c:	82 30       	cpi	r24, 0x02	; 2
    251e:	91 05       	cpc	r25, r1
    2520:	34 f4       	brge	.+12     	; 0x252e <DIO_u8GetPinVal+0x48>
    2522:	2e 81       	ldd	r18, Y+6	; 0x06
    2524:	3f 81       	ldd	r19, Y+7	; 0x07
    2526:	21 15       	cp	r18, r1
    2528:	31 05       	cpc	r19, r1
    252a:	69 f0       	breq	.+26     	; 0x2546 <DIO_u8GetPinVal+0x60>
    252c:	5c c0       	rjmp	.+184    	; 0x25e6 <DIO_u8GetPinVal+0x100>
    252e:	4e 81       	ldd	r20, Y+6	; 0x06
    2530:	5f 81       	ldd	r21, Y+7	; 0x07
    2532:	42 30       	cpi	r20, 0x02	; 2
    2534:	51 05       	cpc	r21, r1
    2536:	79 f1       	breq	.+94     	; 0x2596 <DIO_u8GetPinVal+0xb0>
    2538:	8e 81       	ldd	r24, Y+6	; 0x06
    253a:	9f 81       	ldd	r25, Y+7	; 0x07
    253c:	83 30       	cpi	r24, 0x03	; 3
    253e:	91 05       	cpc	r25, r1
    2540:	09 f4       	brne	.+2      	; 0x2544 <DIO_u8GetPinVal+0x5e>
    2542:	3d c0       	rjmp	.+122    	; 0x25be <DIO_u8GetPinVal+0xd8>
    2544:	50 c0       	rjmp	.+160    	; 0x25e6 <DIO_u8GetPinVal+0x100>
		case PORT_A :* u8pValCopy=GET_BIT(PINA_REG,u8PinIdCopy); break;
    2546:	e9 e3       	ldi	r30, 0x39	; 57
    2548:	f0 e0       	ldi	r31, 0x00	; 0
    254a:	80 81       	ld	r24, Z
    254c:	28 2f       	mov	r18, r24
    254e:	30 e0       	ldi	r19, 0x00	; 0
    2550:	8b 81       	ldd	r24, Y+3	; 0x03
    2552:	88 2f       	mov	r24, r24
    2554:	90 e0       	ldi	r25, 0x00	; 0
    2556:	a9 01       	movw	r20, r18
    2558:	02 c0       	rjmp	.+4      	; 0x255e <DIO_u8GetPinVal+0x78>
    255a:	55 95       	asr	r21
    255c:	47 95       	ror	r20
    255e:	8a 95       	dec	r24
    2560:	e2 f7       	brpl	.-8      	; 0x255a <DIO_u8GetPinVal+0x74>
    2562:	ca 01       	movw	r24, r20
    2564:	81 70       	andi	r24, 0x01	; 1
    2566:	ec 81       	ldd	r30, Y+4	; 0x04
    2568:	fd 81       	ldd	r31, Y+5	; 0x05
    256a:	80 83       	st	Z, r24
    256c:	3e c0       	rjmp	.+124    	; 0x25ea <DIO_u8GetPinVal+0x104>
	    case PORT_B :* u8pValCopy=GET_BIT(PINB_REG,u8PinIdCopy); break;
    256e:	e6 e3       	ldi	r30, 0x36	; 54
    2570:	f0 e0       	ldi	r31, 0x00	; 0
    2572:	80 81       	ld	r24, Z
    2574:	28 2f       	mov	r18, r24
    2576:	30 e0       	ldi	r19, 0x00	; 0
    2578:	8b 81       	ldd	r24, Y+3	; 0x03
    257a:	88 2f       	mov	r24, r24
    257c:	90 e0       	ldi	r25, 0x00	; 0
    257e:	a9 01       	movw	r20, r18
    2580:	02 c0       	rjmp	.+4      	; 0x2586 <DIO_u8GetPinVal+0xa0>
    2582:	55 95       	asr	r21
    2584:	47 95       	ror	r20
    2586:	8a 95       	dec	r24
    2588:	e2 f7       	brpl	.-8      	; 0x2582 <DIO_u8GetPinVal+0x9c>
    258a:	ca 01       	movw	r24, r20
    258c:	81 70       	andi	r24, 0x01	; 1
    258e:	ec 81       	ldd	r30, Y+4	; 0x04
    2590:	fd 81       	ldd	r31, Y+5	; 0x05
    2592:	80 83       	st	Z, r24
    2594:	2a c0       	rjmp	.+84     	; 0x25ea <DIO_u8GetPinVal+0x104>
        case PORT_C :* u8pValCopy=GET_BIT(PINC_REG,u8PinIdCopy); break;
    2596:	e3 e3       	ldi	r30, 0x33	; 51
    2598:	f0 e0       	ldi	r31, 0x00	; 0
    259a:	80 81       	ld	r24, Z
    259c:	28 2f       	mov	r18, r24
    259e:	30 e0       	ldi	r19, 0x00	; 0
    25a0:	8b 81       	ldd	r24, Y+3	; 0x03
    25a2:	88 2f       	mov	r24, r24
    25a4:	90 e0       	ldi	r25, 0x00	; 0
    25a6:	a9 01       	movw	r20, r18
    25a8:	02 c0       	rjmp	.+4      	; 0x25ae <DIO_u8GetPinVal+0xc8>
    25aa:	55 95       	asr	r21
    25ac:	47 95       	ror	r20
    25ae:	8a 95       	dec	r24
    25b0:	e2 f7       	brpl	.-8      	; 0x25aa <DIO_u8GetPinVal+0xc4>
    25b2:	ca 01       	movw	r24, r20
    25b4:	81 70       	andi	r24, 0x01	; 1
    25b6:	ec 81       	ldd	r30, Y+4	; 0x04
    25b8:	fd 81       	ldd	r31, Y+5	; 0x05
    25ba:	80 83       	st	Z, r24
    25bc:	16 c0       	rjmp	.+44     	; 0x25ea <DIO_u8GetPinVal+0x104>
		case PORT_D :* u8pValCopy=GET_BIT(PIND_REG,u8PinIdCopy); break;
    25be:	e0 e3       	ldi	r30, 0x30	; 48
    25c0:	f0 e0       	ldi	r31, 0x00	; 0
    25c2:	80 81       	ld	r24, Z
    25c4:	28 2f       	mov	r18, r24
    25c6:	30 e0       	ldi	r19, 0x00	; 0
    25c8:	8b 81       	ldd	r24, Y+3	; 0x03
    25ca:	88 2f       	mov	r24, r24
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	a9 01       	movw	r20, r18
    25d0:	02 c0       	rjmp	.+4      	; 0x25d6 <DIO_u8GetPinVal+0xf0>
    25d2:	55 95       	asr	r21
    25d4:	47 95       	ror	r20
    25d6:	8a 95       	dec	r24
    25d8:	e2 f7       	brpl	.-8      	; 0x25d2 <DIO_u8GetPinVal+0xec>
    25da:	ca 01       	movw	r24, r20
    25dc:	81 70       	andi	r24, 0x01	; 1
    25de:	ec 81       	ldd	r30, Y+4	; 0x04
    25e0:	fd 81       	ldd	r31, Y+5	; 0x05
    25e2:	80 83       	st	Z, r24
    25e4:	02 c0       	rjmp	.+4      	; 0x25ea <DIO_u8GetPinVal+0x104>
		default     :errStatus =E_NOK                          ; break;
    25e6:	81 e0       	ldi	r24, 0x01	; 1
    25e8:	89 83       	std	Y+1, r24	; 0x01
	}	
	return errStatus;
    25ea:	89 81       	ldd	r24, Y+1	; 0x01
}
    25ec:	27 96       	adiw	r28, 0x07	; 7
    25ee:	0f b6       	in	r0, 0x3f	; 63
    25f0:	f8 94       	cli
    25f2:	de bf       	out	0x3e, r29	; 62
    25f4:	0f be       	out	0x3f, r0	; 63
    25f6:	cd bf       	out	0x3d, r28	; 61
    25f8:	cf 91       	pop	r28
    25fa:	df 91       	pop	r29
    25fc:	08 95       	ret

000025fe <DIO_u8TogglePin>:

void  DIO_u8TogglePin(uint8 u8PortIdCopy	,uint8 u8PinIdCopy ){
    25fe:	df 93       	push	r29
    2600:	cf 93       	push	r28
    2602:	00 d0       	rcall	.+0      	; 0x2604 <DIO_u8TogglePin+0x6>
    2604:	00 d0       	rcall	.+0      	; 0x2606 <DIO_u8TogglePin+0x8>
    2606:	cd b7       	in	r28, 0x3d	; 61
    2608:	de b7       	in	r29, 0x3e	; 62
    260a:	89 83       	std	Y+1, r24	; 0x01
    260c:	6a 83       	std	Y+2, r22	; 0x02
	switch(u8PortIdCopy){
    260e:	89 81       	ldd	r24, Y+1	; 0x01
    2610:	28 2f       	mov	r18, r24
    2612:	30 e0       	ldi	r19, 0x00	; 0
    2614:	3c 83       	std	Y+4, r19	; 0x04
    2616:	2b 83       	std	Y+3, r18	; 0x03
    2618:	8b 81       	ldd	r24, Y+3	; 0x03
    261a:	9c 81       	ldd	r25, Y+4	; 0x04
    261c:	81 30       	cpi	r24, 0x01	; 1
    261e:	91 05       	cpc	r25, r1
    2620:	49 f1       	breq	.+82     	; 0x2674 <DIO_u8TogglePin+0x76>
    2622:	2b 81       	ldd	r18, Y+3	; 0x03
    2624:	3c 81       	ldd	r19, Y+4	; 0x04
    2626:	22 30       	cpi	r18, 0x02	; 2
    2628:	31 05       	cpc	r19, r1
    262a:	2c f4       	brge	.+10     	; 0x2636 <DIO_u8TogglePin+0x38>
    262c:	8b 81       	ldd	r24, Y+3	; 0x03
    262e:	9c 81       	ldd	r25, Y+4	; 0x04
    2630:	00 97       	sbiw	r24, 0x00	; 0
    2632:	61 f0       	breq	.+24     	; 0x264c <DIO_u8TogglePin+0x4e>
    2634:	5a c0       	rjmp	.+180    	; 0x26ea <DIO_u8TogglePin+0xec>
    2636:	2b 81       	ldd	r18, Y+3	; 0x03
    2638:	3c 81       	ldd	r19, Y+4	; 0x04
    263a:	22 30       	cpi	r18, 0x02	; 2
    263c:	31 05       	cpc	r19, r1
    263e:	71 f1       	breq	.+92     	; 0x269c <DIO_u8TogglePin+0x9e>
    2640:	8b 81       	ldd	r24, Y+3	; 0x03
    2642:	9c 81       	ldd	r25, Y+4	; 0x04
    2644:	83 30       	cpi	r24, 0x03	; 3
    2646:	91 05       	cpc	r25, r1
    2648:	e9 f1       	breq	.+122    	; 0x26c4 <DIO_u8TogglePin+0xc6>
    264a:	4f c0       	rjmp	.+158    	; 0x26ea <DIO_u8TogglePin+0xec>

		case PORT_A:
            TOG_BIT(PORTA_REG,u8PinIdCopy);
    264c:	ab e3       	ldi	r26, 0x3B	; 59
    264e:	b0 e0       	ldi	r27, 0x00	; 0
    2650:	eb e3       	ldi	r30, 0x3B	; 59
    2652:	f0 e0       	ldi	r31, 0x00	; 0
    2654:	80 81       	ld	r24, Z
    2656:	48 2f       	mov	r20, r24
    2658:	8a 81       	ldd	r24, Y+2	; 0x02
    265a:	28 2f       	mov	r18, r24
    265c:	30 e0       	ldi	r19, 0x00	; 0
    265e:	81 e0       	ldi	r24, 0x01	; 1
    2660:	90 e0       	ldi	r25, 0x00	; 0
    2662:	02 2e       	mov	r0, r18
    2664:	02 c0       	rjmp	.+4      	; 0x266a <DIO_u8TogglePin+0x6c>
    2666:	88 0f       	add	r24, r24
    2668:	99 1f       	adc	r25, r25
    266a:	0a 94       	dec	r0
    266c:	e2 f7       	brpl	.-8      	; 0x2666 <DIO_u8TogglePin+0x68>
    266e:	84 27       	eor	r24, r20
    2670:	8c 93       	st	X, r24
    2672:	3b c0       	rjmp	.+118    	; 0x26ea <DIO_u8TogglePin+0xec>
			break;

	    case PORT_B:
            TOG_BIT(PORTB_REG,u8PinIdCopy);
    2674:	a8 e3       	ldi	r26, 0x38	; 56
    2676:	b0 e0       	ldi	r27, 0x00	; 0
    2678:	e8 e3       	ldi	r30, 0x38	; 56
    267a:	f0 e0       	ldi	r31, 0x00	; 0
    267c:	80 81       	ld	r24, Z
    267e:	48 2f       	mov	r20, r24
    2680:	8a 81       	ldd	r24, Y+2	; 0x02
    2682:	28 2f       	mov	r18, r24
    2684:	30 e0       	ldi	r19, 0x00	; 0
    2686:	81 e0       	ldi	r24, 0x01	; 1
    2688:	90 e0       	ldi	r25, 0x00	; 0
    268a:	02 2e       	mov	r0, r18
    268c:	02 c0       	rjmp	.+4      	; 0x2692 <DIO_u8TogglePin+0x94>
    268e:	88 0f       	add	r24, r24
    2690:	99 1f       	adc	r25, r25
    2692:	0a 94       	dec	r0
    2694:	e2 f7       	brpl	.-8      	; 0x268e <DIO_u8TogglePin+0x90>
    2696:	84 27       	eor	r24, r20
    2698:	8c 93       	st	X, r24
    269a:	27 c0       	rjmp	.+78     	; 0x26ea <DIO_u8TogglePin+0xec>
			break;

	    case PORT_C:
            TOG_BIT(PORTC_REG,u8PinIdCopy);
    269c:	a5 e3       	ldi	r26, 0x35	; 53
    269e:	b0 e0       	ldi	r27, 0x00	; 0
    26a0:	e5 e3       	ldi	r30, 0x35	; 53
    26a2:	f0 e0       	ldi	r31, 0x00	; 0
    26a4:	80 81       	ld	r24, Z
    26a6:	48 2f       	mov	r20, r24
    26a8:	8a 81       	ldd	r24, Y+2	; 0x02
    26aa:	28 2f       	mov	r18, r24
    26ac:	30 e0       	ldi	r19, 0x00	; 0
    26ae:	81 e0       	ldi	r24, 0x01	; 1
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	02 2e       	mov	r0, r18
    26b4:	02 c0       	rjmp	.+4      	; 0x26ba <DIO_u8TogglePin+0xbc>
    26b6:	88 0f       	add	r24, r24
    26b8:	99 1f       	adc	r25, r25
    26ba:	0a 94       	dec	r0
    26bc:	e2 f7       	brpl	.-8      	; 0x26b6 <DIO_u8TogglePin+0xb8>
    26be:	84 27       	eor	r24, r20
    26c0:	8c 93       	st	X, r24
    26c2:	13 c0       	rjmp	.+38     	; 0x26ea <DIO_u8TogglePin+0xec>
			break;

		case PORT_D:
            TOG_BIT(PORTD_REG,u8PinIdCopy);
    26c4:	a2 e3       	ldi	r26, 0x32	; 50
    26c6:	b0 e0       	ldi	r27, 0x00	; 0
    26c8:	e2 e3       	ldi	r30, 0x32	; 50
    26ca:	f0 e0       	ldi	r31, 0x00	; 0
    26cc:	80 81       	ld	r24, Z
    26ce:	48 2f       	mov	r20, r24
    26d0:	8a 81       	ldd	r24, Y+2	; 0x02
    26d2:	28 2f       	mov	r18, r24
    26d4:	30 e0       	ldi	r19, 0x00	; 0
    26d6:	81 e0       	ldi	r24, 0x01	; 1
    26d8:	90 e0       	ldi	r25, 0x00	; 0
    26da:	02 2e       	mov	r0, r18
    26dc:	02 c0       	rjmp	.+4      	; 0x26e2 <DIO_u8TogglePin+0xe4>
    26de:	88 0f       	add	r24, r24
    26e0:	99 1f       	adc	r25, r25
    26e2:	0a 94       	dec	r0
    26e4:	e2 f7       	brpl	.-8      	; 0x26de <DIO_u8TogglePin+0xe0>
    26e6:	84 27       	eor	r24, r20
    26e8:	8c 93       	st	X, r24
			break;
 }
}
    26ea:	0f 90       	pop	r0
    26ec:	0f 90       	pop	r0
    26ee:	0f 90       	pop	r0
    26f0:	0f 90       	pop	r0
    26f2:	cf 91       	pop	r28
    26f4:	df 91       	pop	r29
    26f6:	08 95       	ret

000026f8 <DIO_voidSetLowNibbleDir>:

void DIO_voidSetLowNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
    26f8:	df 93       	push	r29
    26fa:	cf 93       	push	r28
    26fc:	00 d0       	rcall	.+0      	; 0x26fe <DIO_voidSetLowNibbleDir+0x6>
    26fe:	0f 92       	push	r0
    2700:	cd b7       	in	r28, 0x3d	; 61
    2702:	de b7       	in	r29, 0x3e	; 62
    2704:	8a 83       	std	Y+2, r24	; 0x02
    2706:	6b 83       	std	Y+3, r22	; 0x03
	for (uint8 i=0;i<=3 ;i++){
    2708:	19 82       	std	Y+1, r1	; 0x01
    270a:	08 c0       	rjmp	.+16     	; 0x271c <DIO_voidSetLowNibbleDir+0x24>
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
    270c:	8a 81       	ldd	r24, Y+2	; 0x02
    270e:	69 81       	ldd	r22, Y+1	; 0x01
    2710:	4b 81       	ldd	r20, Y+3	; 0x03
    2712:	0e 94 55 10 	call	0x20aa	; 0x20aa <DIO_u8SetPinDir>
			break;
 }
}

void DIO_voidSetLowNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
	for (uint8 i=0;i<=3 ;i++){
    2716:	89 81       	ldd	r24, Y+1	; 0x01
    2718:	8f 5f       	subi	r24, 0xFF	; 255
    271a:	89 83       	std	Y+1, r24	; 0x01
    271c:	89 81       	ldd	r24, Y+1	; 0x01
    271e:	84 30       	cpi	r24, 0x04	; 4
    2720:	a8 f3       	brcs	.-22     	; 0x270c <DIO_voidSetLowNibbleDir+0x14>
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
		}
}
    2722:	0f 90       	pop	r0
    2724:	0f 90       	pop	r0
    2726:	0f 90       	pop	r0
    2728:	cf 91       	pop	r28
    272a:	df 91       	pop	r29
    272c:	08 95       	ret

0000272e <DIO_voidSetHighNibbleDir>:
void DIO_voidSetHighNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
    272e:	df 93       	push	r29
    2730:	cf 93       	push	r28
    2732:	00 d0       	rcall	.+0      	; 0x2734 <DIO_voidSetHighNibbleDir+0x6>
    2734:	0f 92       	push	r0
    2736:	cd b7       	in	r28, 0x3d	; 61
    2738:	de b7       	in	r29, 0x3e	; 62
    273a:	8a 83       	std	Y+2, r24	; 0x02
    273c:	6b 83       	std	Y+3, r22	; 0x03
	for (uint8 i=4;i<=7 ;i++){
    273e:	84 e0       	ldi	r24, 0x04	; 4
    2740:	89 83       	std	Y+1, r24	; 0x01
    2742:	08 c0       	rjmp	.+16     	; 0x2754 <DIO_voidSetHighNibbleDir+0x26>
			DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
    2744:	8a 81       	ldd	r24, Y+2	; 0x02
    2746:	69 81       	ldd	r22, Y+1	; 0x01
    2748:	4b 81       	ldd	r20, Y+3	; 0x03
    274a:	0e 94 55 10 	call	0x20aa	; 0x20aa <DIO_u8SetPinDir>
	for (uint8 i=0;i<=3 ;i++){
		DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
		}
}
void DIO_voidSetHighNibbleDir (uint8 u8PortIdCopy, uint8 u8DirCopy){
	for (uint8 i=4;i<=7 ;i++){
    274e:	89 81       	ldd	r24, Y+1	; 0x01
    2750:	8f 5f       	subi	r24, 0xFF	; 255
    2752:	89 83       	std	Y+1, r24	; 0x01
    2754:	89 81       	ldd	r24, Y+1	; 0x01
    2756:	88 30       	cpi	r24, 0x08	; 8
    2758:	a8 f3       	brcs	.-22     	; 0x2744 <DIO_voidSetHighNibbleDir+0x16>
			DIO_u8SetPinDir ( u8PortIdCopy , i ,u8DirCopy );
			}
}
    275a:	0f 90       	pop	r0
    275c:	0f 90       	pop	r0
    275e:	0f 90       	pop	r0
    2760:	cf 91       	pop	r28
    2762:	df 91       	pop	r29
    2764:	08 95       	ret

00002766 <DIO_voidWriteLowNibble>:
void DIO_voidWriteLowNibble(uint8 u8PortIdCopy ,uint8 u8ValCopy){
    2766:	df 93       	push	r29
    2768:	cf 93       	push	r28
    276a:	00 d0       	rcall	.+0      	; 0x276c <DIO_voidWriteLowNibble+0x6>
    276c:	00 d0       	rcall	.+0      	; 0x276e <DIO_voidWriteLowNibble+0x8>
    276e:	cd b7       	in	r28, 0x3d	; 61
    2770:	de b7       	in	r29, 0x3e	; 62
    2772:	89 83       	std	Y+1, r24	; 0x01
    2774:	6a 83       	std	Y+2, r22	; 0x02
	u8ValCopy&=0x0f; ////to save four low bites make most =0
    2776:	8a 81       	ldd	r24, Y+2	; 0x02
    2778:	8f 70       	andi	r24, 0x0F	; 15
    277a:	8a 83       	std	Y+2, r24	; 0x02
	switch (u8PortIdCopy)
    277c:	89 81       	ldd	r24, Y+1	; 0x01
    277e:	28 2f       	mov	r18, r24
    2780:	30 e0       	ldi	r19, 0x00	; 0
    2782:	3c 83       	std	Y+4, r19	; 0x04
    2784:	2b 83       	std	Y+3, r18	; 0x03
    2786:	8b 81       	ldd	r24, Y+3	; 0x03
    2788:	9c 81       	ldd	r25, Y+4	; 0x04
    278a:	81 30       	cpi	r24, 0x01	; 1
    278c:	91 05       	cpc	r25, r1
    278e:	29 f1       	breq	.+74     	; 0x27da <DIO_voidWriteLowNibble+0x74>
    2790:	2b 81       	ldd	r18, Y+3	; 0x03
    2792:	3c 81       	ldd	r19, Y+4	; 0x04
    2794:	22 30       	cpi	r18, 0x02	; 2
    2796:	31 05       	cpc	r19, r1
    2798:	2c f4       	brge	.+10     	; 0x27a4 <DIO_voidWriteLowNibble+0x3e>
    279a:	8b 81       	ldd	r24, Y+3	; 0x03
    279c:	9c 81       	ldd	r25, Y+4	; 0x04
    279e:	00 97       	sbiw	r24, 0x00	; 0
    27a0:	61 f0       	breq	.+24     	; 0x27ba <DIO_voidWriteLowNibble+0x54>
    27a2:	4a c0       	rjmp	.+148    	; 0x2838 <DIO_voidWriteLowNibble+0xd2>
    27a4:	2b 81       	ldd	r18, Y+3	; 0x03
    27a6:	3c 81       	ldd	r19, Y+4	; 0x04
    27a8:	22 30       	cpi	r18, 0x02	; 2
    27aa:	31 05       	cpc	r19, r1
    27ac:	31 f1       	breq	.+76     	; 0x27fa <DIO_voidWriteLowNibble+0x94>
    27ae:	8b 81       	ldd	r24, Y+3	; 0x03
    27b0:	9c 81       	ldd	r25, Y+4	; 0x04
    27b2:	83 30       	cpi	r24, 0x03	; 3
    27b4:	91 05       	cpc	r25, r1
    27b6:	89 f1       	breq	.+98     	; 0x281a <DIO_voidWriteLowNibble+0xb4>
    27b8:	3f c0       	rjmp	.+126    	; 0x2838 <DIO_voidWriteLowNibble+0xd2>
	{
		case PORT_A :
			PORTA_REG &=0xf0;
    27ba:	ab e3       	ldi	r26, 0x3B	; 59
    27bc:	b0 e0       	ldi	r27, 0x00	; 0
    27be:	eb e3       	ldi	r30, 0x3B	; 59
    27c0:	f0 e0       	ldi	r31, 0x00	; 0
    27c2:	80 81       	ld	r24, Z
    27c4:	80 7f       	andi	r24, 0xF0	; 240
    27c6:	8c 93       	st	X, r24
			PORTA_REG|=u8ValCopy;
    27c8:	ab e3       	ldi	r26, 0x3B	; 59
    27ca:	b0 e0       	ldi	r27, 0x00	; 0
    27cc:	eb e3       	ldi	r30, 0x3B	; 59
    27ce:	f0 e0       	ldi	r31, 0x00	; 0
    27d0:	90 81       	ld	r25, Z
    27d2:	8a 81       	ldd	r24, Y+2	; 0x02
    27d4:	89 2b       	or	r24, r25
    27d6:	8c 93       	st	X, r24
    27d8:	2f c0       	rjmp	.+94     	; 0x2838 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_B :
			PORTB_REG &=0xf0;
    27da:	a8 e3       	ldi	r26, 0x38	; 56
    27dc:	b0 e0       	ldi	r27, 0x00	; 0
    27de:	e8 e3       	ldi	r30, 0x38	; 56
    27e0:	f0 e0       	ldi	r31, 0x00	; 0
    27e2:	80 81       	ld	r24, Z
    27e4:	80 7f       	andi	r24, 0xF0	; 240
    27e6:	8c 93       	st	X, r24
			PORTB_REG |=u8ValCopy;
    27e8:	a8 e3       	ldi	r26, 0x38	; 56
    27ea:	b0 e0       	ldi	r27, 0x00	; 0
    27ec:	e8 e3       	ldi	r30, 0x38	; 56
    27ee:	f0 e0       	ldi	r31, 0x00	; 0
    27f0:	90 81       	ld	r25, Z
    27f2:	8a 81       	ldd	r24, Y+2	; 0x02
    27f4:	89 2b       	or	r24, r25
    27f6:	8c 93       	st	X, r24
    27f8:	1f c0       	rjmp	.+62     	; 0x2838 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_C:
			PORTC_REG &=0xf0;
    27fa:	a5 e3       	ldi	r26, 0x35	; 53
    27fc:	b0 e0       	ldi	r27, 0x00	; 0
    27fe:	e5 e3       	ldi	r30, 0x35	; 53
    2800:	f0 e0       	ldi	r31, 0x00	; 0
    2802:	80 81       	ld	r24, Z
    2804:	80 7f       	andi	r24, 0xF0	; 240
    2806:	8c 93       	st	X, r24
			PORTC_REG |=u8ValCopy;
    2808:	a5 e3       	ldi	r26, 0x35	; 53
    280a:	b0 e0       	ldi	r27, 0x00	; 0
    280c:	e5 e3       	ldi	r30, 0x35	; 53
    280e:	f0 e0       	ldi	r31, 0x00	; 0
    2810:	90 81       	ld	r25, Z
    2812:	8a 81       	ldd	r24, Y+2	; 0x02
    2814:	89 2b       	or	r24, r25
    2816:	8c 93       	st	X, r24
    2818:	0f c0       	rjmp	.+30     	; 0x2838 <DIO_voidWriteLowNibble+0xd2>
			break;
		case PORT_D :
			PORTD_REG &=0xf0;
    281a:	a2 e3       	ldi	r26, 0x32	; 50
    281c:	b0 e0       	ldi	r27, 0x00	; 0
    281e:	e2 e3       	ldi	r30, 0x32	; 50
    2820:	f0 e0       	ldi	r31, 0x00	; 0
    2822:	80 81       	ld	r24, Z
    2824:	80 7f       	andi	r24, 0xF0	; 240
    2826:	8c 93       	st	X, r24
			PORTD_REG |=u8ValCopy;
    2828:	a2 e3       	ldi	r26, 0x32	; 50
    282a:	b0 e0       	ldi	r27, 0x00	; 0
    282c:	e2 e3       	ldi	r30, 0x32	; 50
    282e:	f0 e0       	ldi	r31, 0x00	; 0
    2830:	90 81       	ld	r25, Z
    2832:	8a 81       	ldd	r24, Y+2	; 0x02
    2834:	89 2b       	or	r24, r25
    2836:	8c 93       	st	X, r24
			break;
		default :
		   break;
	}
}
    2838:	0f 90       	pop	r0
    283a:	0f 90       	pop	r0
    283c:	0f 90       	pop	r0
    283e:	0f 90       	pop	r0
    2840:	cf 91       	pop	r28
    2842:	df 91       	pop	r29
    2844:	08 95       	ret

00002846 <DIO_voidWritHighNibble>:
void DIO_voidWritHighNibble(uint8 u8PortIdCopy ,uint8 u8ValCopy){
    2846:	df 93       	push	r29
    2848:	cf 93       	push	r28
    284a:	00 d0       	rcall	.+0      	; 0x284c <DIO_voidWritHighNibble+0x6>
    284c:	00 d0       	rcall	.+0      	; 0x284e <DIO_voidWritHighNibble+0x8>
    284e:	cd b7       	in	r28, 0x3d	; 61
    2850:	de b7       	in	r29, 0x3e	; 62
    2852:	89 83       	std	Y+1, r24	; 0x01
    2854:	6a 83       	std	Y+2, r22	; 0x02
	u8ValCopy&=0xf0; ////to save four most bites make low =0
    2856:	8a 81       	ldd	r24, Y+2	; 0x02
    2858:	80 7f       	andi	r24, 0xF0	; 240
    285a:	8a 83       	std	Y+2, r24	; 0x02
	switch (u8PortIdCopy)
    285c:	89 81       	ldd	r24, Y+1	; 0x01
    285e:	28 2f       	mov	r18, r24
    2860:	30 e0       	ldi	r19, 0x00	; 0
    2862:	3c 83       	std	Y+4, r19	; 0x04
    2864:	2b 83       	std	Y+3, r18	; 0x03
    2866:	8b 81       	ldd	r24, Y+3	; 0x03
    2868:	9c 81       	ldd	r25, Y+4	; 0x04
    286a:	81 30       	cpi	r24, 0x01	; 1
    286c:	91 05       	cpc	r25, r1
    286e:	29 f1       	breq	.+74     	; 0x28ba <DIO_voidWritHighNibble+0x74>
    2870:	2b 81       	ldd	r18, Y+3	; 0x03
    2872:	3c 81       	ldd	r19, Y+4	; 0x04
    2874:	22 30       	cpi	r18, 0x02	; 2
    2876:	31 05       	cpc	r19, r1
    2878:	2c f4       	brge	.+10     	; 0x2884 <DIO_voidWritHighNibble+0x3e>
    287a:	8b 81       	ldd	r24, Y+3	; 0x03
    287c:	9c 81       	ldd	r25, Y+4	; 0x04
    287e:	00 97       	sbiw	r24, 0x00	; 0
    2880:	61 f0       	breq	.+24     	; 0x289a <DIO_voidWritHighNibble+0x54>
    2882:	4a c0       	rjmp	.+148    	; 0x2918 <DIO_voidWritHighNibble+0xd2>
    2884:	2b 81       	ldd	r18, Y+3	; 0x03
    2886:	3c 81       	ldd	r19, Y+4	; 0x04
    2888:	22 30       	cpi	r18, 0x02	; 2
    288a:	31 05       	cpc	r19, r1
    288c:	31 f1       	breq	.+76     	; 0x28da <DIO_voidWritHighNibble+0x94>
    288e:	8b 81       	ldd	r24, Y+3	; 0x03
    2890:	9c 81       	ldd	r25, Y+4	; 0x04
    2892:	83 30       	cpi	r24, 0x03	; 3
    2894:	91 05       	cpc	r25, r1
    2896:	89 f1       	breq	.+98     	; 0x28fa <DIO_voidWritHighNibble+0xb4>
    2898:	3f c0       	rjmp	.+126    	; 0x2918 <DIO_voidWritHighNibble+0xd2>
	{
		case PORT_A :
			PORTA_REG &=0x0f;
    289a:	ab e3       	ldi	r26, 0x3B	; 59
    289c:	b0 e0       	ldi	r27, 0x00	; 0
    289e:	eb e3       	ldi	r30, 0x3B	; 59
    28a0:	f0 e0       	ldi	r31, 0x00	; 0
    28a2:	80 81       	ld	r24, Z
    28a4:	8f 70       	andi	r24, 0x0F	; 15
    28a6:	8c 93       	st	X, r24
			PORTA_REG|=u8ValCopy;
    28a8:	ab e3       	ldi	r26, 0x3B	; 59
    28aa:	b0 e0       	ldi	r27, 0x00	; 0
    28ac:	eb e3       	ldi	r30, 0x3B	; 59
    28ae:	f0 e0       	ldi	r31, 0x00	; 0
    28b0:	90 81       	ld	r25, Z
    28b2:	8a 81       	ldd	r24, Y+2	; 0x02
    28b4:	89 2b       	or	r24, r25
    28b6:	8c 93       	st	X, r24
    28b8:	2f c0       	rjmp	.+94     	; 0x2918 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_B :
			PORTB_REG &=0x0f;
    28ba:	a8 e3       	ldi	r26, 0x38	; 56
    28bc:	b0 e0       	ldi	r27, 0x00	; 0
    28be:	e8 e3       	ldi	r30, 0x38	; 56
    28c0:	f0 e0       	ldi	r31, 0x00	; 0
    28c2:	80 81       	ld	r24, Z
    28c4:	8f 70       	andi	r24, 0x0F	; 15
    28c6:	8c 93       	st	X, r24
			PORTB_REG |=u8ValCopy;
    28c8:	a8 e3       	ldi	r26, 0x38	; 56
    28ca:	b0 e0       	ldi	r27, 0x00	; 0
    28cc:	e8 e3       	ldi	r30, 0x38	; 56
    28ce:	f0 e0       	ldi	r31, 0x00	; 0
    28d0:	90 81       	ld	r25, Z
    28d2:	8a 81       	ldd	r24, Y+2	; 0x02
    28d4:	89 2b       	or	r24, r25
    28d6:	8c 93       	st	X, r24
    28d8:	1f c0       	rjmp	.+62     	; 0x2918 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_C:
			PORTC_REG &=0x0f;
    28da:	a5 e3       	ldi	r26, 0x35	; 53
    28dc:	b0 e0       	ldi	r27, 0x00	; 0
    28de:	e5 e3       	ldi	r30, 0x35	; 53
    28e0:	f0 e0       	ldi	r31, 0x00	; 0
    28e2:	80 81       	ld	r24, Z
    28e4:	8f 70       	andi	r24, 0x0F	; 15
    28e6:	8c 93       	st	X, r24
			PORTC_REG |=u8ValCopy;
    28e8:	a5 e3       	ldi	r26, 0x35	; 53
    28ea:	b0 e0       	ldi	r27, 0x00	; 0
    28ec:	e5 e3       	ldi	r30, 0x35	; 53
    28ee:	f0 e0       	ldi	r31, 0x00	; 0
    28f0:	90 81       	ld	r25, Z
    28f2:	8a 81       	ldd	r24, Y+2	; 0x02
    28f4:	89 2b       	or	r24, r25
    28f6:	8c 93       	st	X, r24
    28f8:	0f c0       	rjmp	.+30     	; 0x2918 <DIO_voidWritHighNibble+0xd2>
			break;
		case PORT_D :
			PORTD_REG &=0x0f;
    28fa:	a2 e3       	ldi	r26, 0x32	; 50
    28fc:	b0 e0       	ldi	r27, 0x00	; 0
    28fe:	e2 e3       	ldi	r30, 0x32	; 50
    2900:	f0 e0       	ldi	r31, 0x00	; 0
    2902:	80 81       	ld	r24, Z
    2904:	8f 70       	andi	r24, 0x0F	; 15
    2906:	8c 93       	st	X, r24
			PORTD_REG |=u8ValCopy;
    2908:	a2 e3       	ldi	r26, 0x32	; 50
    290a:	b0 e0       	ldi	r27, 0x00	; 0
    290c:	e2 e3       	ldi	r30, 0x32	; 50
    290e:	f0 e0       	ldi	r31, 0x00	; 0
    2910:	90 81       	ld	r25, Z
    2912:	8a 81       	ldd	r24, Y+2	; 0x02
    2914:	89 2b       	or	r24, r25
    2916:	8c 93       	st	X, r24
			break;
		default :
		   break;
	}
}
    2918:	0f 90       	pop	r0
    291a:	0f 90       	pop	r0
    291c:	0f 90       	pop	r0
    291e:	0f 90       	pop	r0
    2920:	cf 91       	pop	r28
    2922:	df 91       	pop	r29
    2924:	08 95       	ret

00002926 <LCD_voidInit>:
#include "../../MCAL/DIO/Dio_int.h"
#include "util/delay.h"
#include "lcd_cfg.h"
#include "lcd_prv.h"

void LCD_voidInit(void){
    2926:	0f 93       	push	r16
    2928:	1f 93       	push	r17
    292a:	df 93       	push	r29
    292c:	cf 93       	push	r28
    292e:	cd b7       	in	r28, 0x3d	; 61
    2930:	de b7       	in	r29, 0x3e	; 62
    2932:	c6 54       	subi	r28, 0x46	; 70
    2934:	d0 40       	sbci	r29, 0x00	; 0
    2936:	0f b6       	in	r0, 0x3f	; 63
    2938:	f8 94       	cli
    293a:	de bf       	out	0x3e, r29	; 62
    293c:	0f be       	out	0x3f, r0	; 63
    293e:	cd bf       	out	0x3d, r28	; 61
    2940:	fe 01       	movw	r30, r28
    2942:	ed 5b       	subi	r30, 0xBD	; 189
    2944:	ff 4f       	sbci	r31, 0xFF	; 255
    2946:	80 e0       	ldi	r24, 0x00	; 0
    2948:	90 e0       	ldi	r25, 0x00	; 0
    294a:	a6 e9       	ldi	r26, 0x96	; 150
    294c:	b3 e4       	ldi	r27, 0x43	; 67
    294e:	80 83       	st	Z, r24
    2950:	91 83       	std	Z+1, r25	; 0x01
    2952:	a2 83       	std	Z+2, r26	; 0x02
    2954:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2956:	8e 01       	movw	r16, r28
    2958:	01 5c       	subi	r16, 0xC1	; 193
    295a:	1f 4f       	sbci	r17, 0xFF	; 255
    295c:	fe 01       	movw	r30, r28
    295e:	ed 5b       	subi	r30, 0xBD	; 189
    2960:	ff 4f       	sbci	r31, 0xFF	; 255
    2962:	60 81       	ld	r22, Z
    2964:	71 81       	ldd	r23, Z+1	; 0x01
    2966:	82 81       	ldd	r24, Z+2	; 0x02
    2968:	93 81       	ldd	r25, Z+3	; 0x03
    296a:	20 e0       	ldi	r18, 0x00	; 0
    296c:	30 e0       	ldi	r19, 0x00	; 0
    296e:	4a ef       	ldi	r20, 0xFA	; 250
    2970:	54 e4       	ldi	r21, 0x44	; 68
    2972:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2976:	dc 01       	movw	r26, r24
    2978:	cb 01       	movw	r24, r22
    297a:	f8 01       	movw	r30, r16
    297c:	80 83       	st	Z, r24
    297e:	91 83       	std	Z+1, r25	; 0x01
    2980:	a2 83       	std	Z+2, r26	; 0x02
    2982:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2984:	fe 01       	movw	r30, r28
    2986:	ff 96       	adiw	r30, 0x3f	; 63
    2988:	60 81       	ld	r22, Z
    298a:	71 81       	ldd	r23, Z+1	; 0x01
    298c:	82 81       	ldd	r24, Z+2	; 0x02
    298e:	93 81       	ldd	r25, Z+3	; 0x03
    2990:	20 e0       	ldi	r18, 0x00	; 0
    2992:	30 e0       	ldi	r19, 0x00	; 0
    2994:	40 e8       	ldi	r20, 0x80	; 128
    2996:	5f e3       	ldi	r21, 0x3F	; 63
    2998:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    299c:	88 23       	and	r24, r24
    299e:	2c f4       	brge	.+10     	; 0x29aa <LCD_voidInit+0x84>
		__ticks = 1;
    29a0:	81 e0       	ldi	r24, 0x01	; 1
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	9e af       	std	Y+62, r25	; 0x3e
    29a6:	8d af       	std	Y+61, r24	; 0x3d
    29a8:	46 c0       	rjmp	.+140    	; 0x2a36 <LCD_voidInit+0x110>
	else if (__tmp > 65535)
    29aa:	fe 01       	movw	r30, r28
    29ac:	ff 96       	adiw	r30, 0x3f	; 63
    29ae:	60 81       	ld	r22, Z
    29b0:	71 81       	ldd	r23, Z+1	; 0x01
    29b2:	82 81       	ldd	r24, Z+2	; 0x02
    29b4:	93 81       	ldd	r25, Z+3	; 0x03
    29b6:	20 e0       	ldi	r18, 0x00	; 0
    29b8:	3f ef       	ldi	r19, 0xFF	; 255
    29ba:	4f e7       	ldi	r20, 0x7F	; 127
    29bc:	57 e4       	ldi	r21, 0x47	; 71
    29be:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    29c2:	18 16       	cp	r1, r24
    29c4:	64 f5       	brge	.+88     	; 0x2a1e <LCD_voidInit+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29c6:	fe 01       	movw	r30, r28
    29c8:	ed 5b       	subi	r30, 0xBD	; 189
    29ca:	ff 4f       	sbci	r31, 0xFF	; 255
    29cc:	60 81       	ld	r22, Z
    29ce:	71 81       	ldd	r23, Z+1	; 0x01
    29d0:	82 81       	ldd	r24, Z+2	; 0x02
    29d2:	93 81       	ldd	r25, Z+3	; 0x03
    29d4:	20 e0       	ldi	r18, 0x00	; 0
    29d6:	30 e0       	ldi	r19, 0x00	; 0
    29d8:	40 e2       	ldi	r20, 0x20	; 32
    29da:	51 e4       	ldi	r21, 0x41	; 65
    29dc:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    29e0:	dc 01       	movw	r26, r24
    29e2:	cb 01       	movw	r24, r22
    29e4:	bc 01       	movw	r22, r24
    29e6:	cd 01       	movw	r24, r26
    29e8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    29ec:	dc 01       	movw	r26, r24
    29ee:	cb 01       	movw	r24, r22
    29f0:	9e af       	std	Y+62, r25	; 0x3e
    29f2:	8d af       	std	Y+61, r24	; 0x3d
    29f4:	0f c0       	rjmp	.+30     	; 0x2a14 <LCD_voidInit+0xee>
    29f6:	88 ec       	ldi	r24, 0xC8	; 200
    29f8:	90 e0       	ldi	r25, 0x00	; 0
    29fa:	9c af       	std	Y+60, r25	; 0x3c
    29fc:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    29fe:	8b ad       	ldd	r24, Y+59	; 0x3b
    2a00:	9c ad       	ldd	r25, Y+60	; 0x3c
    2a02:	01 97       	sbiw	r24, 0x01	; 1
    2a04:	f1 f7       	brne	.-4      	; 0x2a02 <LCD_voidInit+0xdc>
    2a06:	9c af       	std	Y+60, r25	; 0x3c
    2a08:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a0a:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a0c:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a0e:	01 97       	sbiw	r24, 0x01	; 1
    2a10:	9e af       	std	Y+62, r25	; 0x3e
    2a12:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a14:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a16:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a18:	00 97       	sbiw	r24, 0x00	; 0
    2a1a:	69 f7       	brne	.-38     	; 0x29f6 <LCD_voidInit+0xd0>
    2a1c:	16 c0       	rjmp	.+44     	; 0x2a4a <LCD_voidInit+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a1e:	fe 01       	movw	r30, r28
    2a20:	ff 96       	adiw	r30, 0x3f	; 63
    2a22:	60 81       	ld	r22, Z
    2a24:	71 81       	ldd	r23, Z+1	; 0x01
    2a26:	82 81       	ldd	r24, Z+2	; 0x02
    2a28:	93 81       	ldd	r25, Z+3	; 0x03
    2a2a:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2a2e:	dc 01       	movw	r26, r24
    2a30:	cb 01       	movw	r24, r22
    2a32:	9e af       	std	Y+62, r25	; 0x3e
    2a34:	8d af       	std	Y+61, r24	; 0x3d
    2a36:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a38:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a3a:	9a af       	std	Y+58, r25	; 0x3a
    2a3c:	89 af       	std	Y+57, r24	; 0x39
    2a3e:	89 ad       	ldd	r24, Y+57	; 0x39
    2a40:	9a ad       	ldd	r25, Y+58	; 0x3a
    2a42:	01 97       	sbiw	r24, 0x01	; 1
    2a44:	f1 f7       	brne	.-4      	; 0x2a42 <LCD_voidInit+0x11c>
    2a46:	9a af       	std	Y+58, r25	; 0x3a
    2a48:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(300);
	DIO_u8SetPinDir(LCD_RS_PORT , LCD_RS_PIN , OUTPUT);
    2a4a:	81 e0       	ldi	r24, 0x01	; 1
    2a4c:	60 e0       	ldi	r22, 0x00	; 0
    2a4e:	41 e0       	ldi	r20, 0x01	; 1
    2a50:	0e 94 55 10 	call	0x20aa	; 0x20aa <DIO_u8SetPinDir>
	DIO_u8SetPinDir(LCD_RW_PORT , LCD_RW_PIN , OUTPUT);
    2a54:	81 e0       	ldi	r24, 0x01	; 1
    2a56:	61 e0       	ldi	r22, 0x01	; 1
    2a58:	41 e0       	ldi	r20, 0x01	; 1
    2a5a:	0e 94 55 10 	call	0x20aa	; 0x20aa <DIO_u8SetPinDir>
	DIO_u8SetPinDir(LCD_EN_PORT , LCD_EN_PIN , OUTPUT);
    2a5e:	81 e0       	ldi	r24, 0x01	; 1
    2a60:	62 e0       	ldi	r22, 0x02	; 2
    2a62:	41 e0       	ldi	r20, 0x01	; 1
    2a64:	0e 94 55 10 	call	0x20aa	; 0x20aa <DIO_u8SetPinDir>
	#if LCD_MODE == 0
		DIO_u8SetPortDir(LCD_PORT , FULL_OUTPUT);
    2a68:	80 e0       	ldi	r24, 0x00	; 0
    2a6a:	6f ef       	ldi	r22, 0xFF	; 255
    2a6c:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <DIO_u8SetPortDir>
		LCD_voidWriteCmd(LCD_Function_8BIT_2Lines);
    2a70:	88 e3       	ldi	r24, 0x38	; 56
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    2a78:	80 e0       	ldi	r24, 0x00	; 0
    2a7a:	90 e0       	ldi	r25, 0x00	; 0
    2a7c:	a0 e8       	ldi	r26, 0x80	; 128
    2a7e:	bf e3       	ldi	r27, 0x3F	; 63
    2a80:	8d ab       	std	Y+53, r24	; 0x35
    2a82:	9e ab       	std	Y+54, r25	; 0x36
    2a84:	af ab       	std	Y+55, r26	; 0x37
    2a86:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a88:	6d a9       	ldd	r22, Y+53	; 0x35
    2a8a:	7e a9       	ldd	r23, Y+54	; 0x36
    2a8c:	8f a9       	ldd	r24, Y+55	; 0x37
    2a8e:	98 ad       	ldd	r25, Y+56	; 0x38
    2a90:	20 e0       	ldi	r18, 0x00	; 0
    2a92:	30 e0       	ldi	r19, 0x00	; 0
    2a94:	4a ef       	ldi	r20, 0xFA	; 250
    2a96:	54 e4       	ldi	r21, 0x44	; 68
    2a98:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2a9c:	dc 01       	movw	r26, r24
    2a9e:	cb 01       	movw	r24, r22
    2aa0:	89 ab       	std	Y+49, r24	; 0x31
    2aa2:	9a ab       	std	Y+50, r25	; 0x32
    2aa4:	ab ab       	std	Y+51, r26	; 0x33
    2aa6:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2aa8:	69 a9       	ldd	r22, Y+49	; 0x31
    2aaa:	7a a9       	ldd	r23, Y+50	; 0x32
    2aac:	8b a9       	ldd	r24, Y+51	; 0x33
    2aae:	9c a9       	ldd	r25, Y+52	; 0x34
    2ab0:	20 e0       	ldi	r18, 0x00	; 0
    2ab2:	30 e0       	ldi	r19, 0x00	; 0
    2ab4:	40 e8       	ldi	r20, 0x80	; 128
    2ab6:	5f e3       	ldi	r21, 0x3F	; 63
    2ab8:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    2abc:	88 23       	and	r24, r24
    2abe:	2c f4       	brge	.+10     	; 0x2aca <LCD_voidInit+0x1a4>
		__ticks = 1;
    2ac0:	81 e0       	ldi	r24, 0x01	; 1
    2ac2:	90 e0       	ldi	r25, 0x00	; 0
    2ac4:	98 ab       	std	Y+48, r25	; 0x30
    2ac6:	8f a7       	std	Y+47, r24	; 0x2f
    2ac8:	3f c0       	rjmp	.+126    	; 0x2b48 <LCD_voidInit+0x222>
	else if (__tmp > 65535)
    2aca:	69 a9       	ldd	r22, Y+49	; 0x31
    2acc:	7a a9       	ldd	r23, Y+50	; 0x32
    2ace:	8b a9       	ldd	r24, Y+51	; 0x33
    2ad0:	9c a9       	ldd	r25, Y+52	; 0x34
    2ad2:	20 e0       	ldi	r18, 0x00	; 0
    2ad4:	3f ef       	ldi	r19, 0xFF	; 255
    2ad6:	4f e7       	ldi	r20, 0x7F	; 127
    2ad8:	57 e4       	ldi	r21, 0x47	; 71
    2ada:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    2ade:	18 16       	cp	r1, r24
    2ae0:	4c f5       	brge	.+82     	; 0x2b34 <LCD_voidInit+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ae2:	6d a9       	ldd	r22, Y+53	; 0x35
    2ae4:	7e a9       	ldd	r23, Y+54	; 0x36
    2ae6:	8f a9       	ldd	r24, Y+55	; 0x37
    2ae8:	98 ad       	ldd	r25, Y+56	; 0x38
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	30 e0       	ldi	r19, 0x00	; 0
    2aee:	40 e2       	ldi	r20, 0x20	; 32
    2af0:	51 e4       	ldi	r21, 0x41	; 65
    2af2:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2af6:	dc 01       	movw	r26, r24
    2af8:	cb 01       	movw	r24, r22
    2afa:	bc 01       	movw	r22, r24
    2afc:	cd 01       	movw	r24, r26
    2afe:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2b02:	dc 01       	movw	r26, r24
    2b04:	cb 01       	movw	r24, r22
    2b06:	98 ab       	std	Y+48, r25	; 0x30
    2b08:	8f a7       	std	Y+47, r24	; 0x2f
    2b0a:	0f c0       	rjmp	.+30     	; 0x2b2a <LCD_voidInit+0x204>
    2b0c:	88 ec       	ldi	r24, 0xC8	; 200
    2b0e:	90 e0       	ldi	r25, 0x00	; 0
    2b10:	9e a7       	std	Y+46, r25	; 0x2e
    2b12:	8d a7       	std	Y+45, r24	; 0x2d
    2b14:	8d a5       	ldd	r24, Y+45	; 0x2d
    2b16:	9e a5       	ldd	r25, Y+46	; 0x2e
    2b18:	01 97       	sbiw	r24, 0x01	; 1
    2b1a:	f1 f7       	brne	.-4      	; 0x2b18 <LCD_voidInit+0x1f2>
    2b1c:	9e a7       	std	Y+46, r25	; 0x2e
    2b1e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b20:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b22:	98 a9       	ldd	r25, Y+48	; 0x30
    2b24:	01 97       	sbiw	r24, 0x01	; 1
    2b26:	98 ab       	std	Y+48, r25	; 0x30
    2b28:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b2a:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b2c:	98 a9       	ldd	r25, Y+48	; 0x30
    2b2e:	00 97       	sbiw	r24, 0x00	; 0
    2b30:	69 f7       	brne	.-38     	; 0x2b0c <LCD_voidInit+0x1e6>
    2b32:	14 c0       	rjmp	.+40     	; 0x2b5c <LCD_voidInit+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b34:	69 a9       	ldd	r22, Y+49	; 0x31
    2b36:	7a a9       	ldd	r23, Y+50	; 0x32
    2b38:	8b a9       	ldd	r24, Y+51	; 0x33
    2b3a:	9c a9       	ldd	r25, Y+52	; 0x34
    2b3c:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2b40:	dc 01       	movw	r26, r24
    2b42:	cb 01       	movw	r24, r22
    2b44:	98 ab       	std	Y+48, r25	; 0x30
    2b46:	8f a7       	std	Y+47, r24	; 0x2f
    2b48:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b4a:	98 a9       	ldd	r25, Y+48	; 0x30
    2b4c:	9c a7       	std	Y+44, r25	; 0x2c
    2b4e:	8b a7       	std	Y+43, r24	; 0x2b
    2b50:	8b a5       	ldd	r24, Y+43	; 0x2b
    2b52:	9c a5       	ldd	r25, Y+44	; 0x2c
    2b54:	01 97       	sbiw	r24, 0x01	; 1
    2b56:	f1 f7       	brne	.-4      	; 0x2b54 <LCD_voidInit+0x22e>
    2b58:	9c a7       	std	Y+44, r25	; 0x2c
    2b5a:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);
		LCD_voidWriteCmd(LCD_DISP_ON_CURSOR_ON);
    2b5c:	8e e0       	ldi	r24, 0x0E	; 14
    2b5e:	90 e0       	ldi	r25, 0x00	; 0
    2b60:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    2b64:	80 e0       	ldi	r24, 0x00	; 0
    2b66:	90 e0       	ldi	r25, 0x00	; 0
    2b68:	a0 e8       	ldi	r26, 0x80	; 128
    2b6a:	bf e3       	ldi	r27, 0x3F	; 63
    2b6c:	8f a3       	std	Y+39, r24	; 0x27
    2b6e:	98 a7       	std	Y+40, r25	; 0x28
    2b70:	a9 a7       	std	Y+41, r26	; 0x29
    2b72:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b74:	6f a1       	ldd	r22, Y+39	; 0x27
    2b76:	78 a5       	ldd	r23, Y+40	; 0x28
    2b78:	89 a5       	ldd	r24, Y+41	; 0x29
    2b7a:	9a a5       	ldd	r25, Y+42	; 0x2a
    2b7c:	20 e0       	ldi	r18, 0x00	; 0
    2b7e:	30 e0       	ldi	r19, 0x00	; 0
    2b80:	4a ef       	ldi	r20, 0xFA	; 250
    2b82:	54 e4       	ldi	r21, 0x44	; 68
    2b84:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2b88:	dc 01       	movw	r26, r24
    2b8a:	cb 01       	movw	r24, r22
    2b8c:	8b a3       	std	Y+35, r24	; 0x23
    2b8e:	9c a3       	std	Y+36, r25	; 0x24
    2b90:	ad a3       	std	Y+37, r26	; 0x25
    2b92:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2b94:	6b a1       	ldd	r22, Y+35	; 0x23
    2b96:	7c a1       	ldd	r23, Y+36	; 0x24
    2b98:	8d a1       	ldd	r24, Y+37	; 0x25
    2b9a:	9e a1       	ldd	r25, Y+38	; 0x26
    2b9c:	20 e0       	ldi	r18, 0x00	; 0
    2b9e:	30 e0       	ldi	r19, 0x00	; 0
    2ba0:	40 e8       	ldi	r20, 0x80	; 128
    2ba2:	5f e3       	ldi	r21, 0x3F	; 63
    2ba4:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    2ba8:	88 23       	and	r24, r24
    2baa:	2c f4       	brge	.+10     	; 0x2bb6 <LCD_voidInit+0x290>
		__ticks = 1;
    2bac:	81 e0       	ldi	r24, 0x01	; 1
    2bae:	90 e0       	ldi	r25, 0x00	; 0
    2bb0:	9a a3       	std	Y+34, r25	; 0x22
    2bb2:	89 a3       	std	Y+33, r24	; 0x21
    2bb4:	3f c0       	rjmp	.+126    	; 0x2c34 <LCD_voidInit+0x30e>
	else if (__tmp > 65535)
    2bb6:	6b a1       	ldd	r22, Y+35	; 0x23
    2bb8:	7c a1       	ldd	r23, Y+36	; 0x24
    2bba:	8d a1       	ldd	r24, Y+37	; 0x25
    2bbc:	9e a1       	ldd	r25, Y+38	; 0x26
    2bbe:	20 e0       	ldi	r18, 0x00	; 0
    2bc0:	3f ef       	ldi	r19, 0xFF	; 255
    2bc2:	4f e7       	ldi	r20, 0x7F	; 127
    2bc4:	57 e4       	ldi	r21, 0x47	; 71
    2bc6:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    2bca:	18 16       	cp	r1, r24
    2bcc:	4c f5       	brge	.+82     	; 0x2c20 <LCD_voidInit+0x2fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bce:	6f a1       	ldd	r22, Y+39	; 0x27
    2bd0:	78 a5       	ldd	r23, Y+40	; 0x28
    2bd2:	89 a5       	ldd	r24, Y+41	; 0x29
    2bd4:	9a a5       	ldd	r25, Y+42	; 0x2a
    2bd6:	20 e0       	ldi	r18, 0x00	; 0
    2bd8:	30 e0       	ldi	r19, 0x00	; 0
    2bda:	40 e2       	ldi	r20, 0x20	; 32
    2bdc:	51 e4       	ldi	r21, 0x41	; 65
    2bde:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2be2:	dc 01       	movw	r26, r24
    2be4:	cb 01       	movw	r24, r22
    2be6:	bc 01       	movw	r22, r24
    2be8:	cd 01       	movw	r24, r26
    2bea:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2bee:	dc 01       	movw	r26, r24
    2bf0:	cb 01       	movw	r24, r22
    2bf2:	9a a3       	std	Y+34, r25	; 0x22
    2bf4:	89 a3       	std	Y+33, r24	; 0x21
    2bf6:	0f c0       	rjmp	.+30     	; 0x2c16 <LCD_voidInit+0x2f0>
    2bf8:	88 ec       	ldi	r24, 0xC8	; 200
    2bfa:	90 e0       	ldi	r25, 0x00	; 0
    2bfc:	98 a3       	std	Y+32, r25	; 0x20
    2bfe:	8f 8f       	std	Y+31, r24	; 0x1f
    2c00:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2c02:	98 a1       	ldd	r25, Y+32	; 0x20
    2c04:	01 97       	sbiw	r24, 0x01	; 1
    2c06:	f1 f7       	brne	.-4      	; 0x2c04 <LCD_voidInit+0x2de>
    2c08:	98 a3       	std	Y+32, r25	; 0x20
    2c0a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c0c:	89 a1       	ldd	r24, Y+33	; 0x21
    2c0e:	9a a1       	ldd	r25, Y+34	; 0x22
    2c10:	01 97       	sbiw	r24, 0x01	; 1
    2c12:	9a a3       	std	Y+34, r25	; 0x22
    2c14:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c16:	89 a1       	ldd	r24, Y+33	; 0x21
    2c18:	9a a1       	ldd	r25, Y+34	; 0x22
    2c1a:	00 97       	sbiw	r24, 0x00	; 0
    2c1c:	69 f7       	brne	.-38     	; 0x2bf8 <LCD_voidInit+0x2d2>
    2c1e:	14 c0       	rjmp	.+40     	; 0x2c48 <LCD_voidInit+0x322>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c20:	6b a1       	ldd	r22, Y+35	; 0x23
    2c22:	7c a1       	ldd	r23, Y+36	; 0x24
    2c24:	8d a1       	ldd	r24, Y+37	; 0x25
    2c26:	9e a1       	ldd	r25, Y+38	; 0x26
    2c28:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2c2c:	dc 01       	movw	r26, r24
    2c2e:	cb 01       	movw	r24, r22
    2c30:	9a a3       	std	Y+34, r25	; 0x22
    2c32:	89 a3       	std	Y+33, r24	; 0x21
    2c34:	89 a1       	ldd	r24, Y+33	; 0x21
    2c36:	9a a1       	ldd	r25, Y+34	; 0x22
    2c38:	9e 8f       	std	Y+30, r25	; 0x1e
    2c3a:	8d 8f       	std	Y+29, r24	; 0x1d
    2c3c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2c3e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2c40:	01 97       	sbiw	r24, 0x01	; 1
    2c42:	f1 f7       	brne	.-4      	; 0x2c40 <LCD_voidInit+0x31a>
    2c44:	9e 8f       	std	Y+30, r25	; 0x1e
    2c46:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);
		LCD_voidWriteCmd(LCD_CLEAR_SCREEN);
    2c48:	81 e0       	ldi	r24, 0x01	; 1
    2c4a:	90 e0       	ldi	r25, 0x00	; 0
    2c4c:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    2c50:	80 e0       	ldi	r24, 0x00	; 0
    2c52:	90 e0       	ldi	r25, 0x00	; 0
    2c54:	a0 e2       	ldi	r26, 0x20	; 32
    2c56:	b1 e4       	ldi	r27, 0x41	; 65
    2c58:	89 8f       	std	Y+25, r24	; 0x19
    2c5a:	9a 8f       	std	Y+26, r25	; 0x1a
    2c5c:	ab 8f       	std	Y+27, r26	; 0x1b
    2c5e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c60:	69 8d       	ldd	r22, Y+25	; 0x19
    2c62:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2c64:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2c66:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2c68:	20 e0       	ldi	r18, 0x00	; 0
    2c6a:	30 e0       	ldi	r19, 0x00	; 0
    2c6c:	4a ef       	ldi	r20, 0xFA	; 250
    2c6e:	54 e4       	ldi	r21, 0x44	; 68
    2c70:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2c74:	dc 01       	movw	r26, r24
    2c76:	cb 01       	movw	r24, r22
    2c78:	8d 8b       	std	Y+21, r24	; 0x15
    2c7a:	9e 8b       	std	Y+22, r25	; 0x16
    2c7c:	af 8b       	std	Y+23, r26	; 0x17
    2c7e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2c80:	6d 89       	ldd	r22, Y+21	; 0x15
    2c82:	7e 89       	ldd	r23, Y+22	; 0x16
    2c84:	8f 89       	ldd	r24, Y+23	; 0x17
    2c86:	98 8d       	ldd	r25, Y+24	; 0x18
    2c88:	20 e0       	ldi	r18, 0x00	; 0
    2c8a:	30 e0       	ldi	r19, 0x00	; 0
    2c8c:	40 e8       	ldi	r20, 0x80	; 128
    2c8e:	5f e3       	ldi	r21, 0x3F	; 63
    2c90:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    2c94:	88 23       	and	r24, r24
    2c96:	2c f4       	brge	.+10     	; 0x2ca2 <LCD_voidInit+0x37c>
		__ticks = 1;
    2c98:	81 e0       	ldi	r24, 0x01	; 1
    2c9a:	90 e0       	ldi	r25, 0x00	; 0
    2c9c:	9c 8b       	std	Y+20, r25	; 0x14
    2c9e:	8b 8b       	std	Y+19, r24	; 0x13
    2ca0:	3f c0       	rjmp	.+126    	; 0x2d20 <LCD_voidInit+0x3fa>
	else if (__tmp > 65535)
    2ca2:	6d 89       	ldd	r22, Y+21	; 0x15
    2ca4:	7e 89       	ldd	r23, Y+22	; 0x16
    2ca6:	8f 89       	ldd	r24, Y+23	; 0x17
    2ca8:	98 8d       	ldd	r25, Y+24	; 0x18
    2caa:	20 e0       	ldi	r18, 0x00	; 0
    2cac:	3f ef       	ldi	r19, 0xFF	; 255
    2cae:	4f e7       	ldi	r20, 0x7F	; 127
    2cb0:	57 e4       	ldi	r21, 0x47	; 71
    2cb2:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    2cb6:	18 16       	cp	r1, r24
    2cb8:	4c f5       	brge	.+82     	; 0x2d0c <LCD_voidInit+0x3e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cba:	69 8d       	ldd	r22, Y+25	; 0x19
    2cbc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2cbe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2cc0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2cc2:	20 e0       	ldi	r18, 0x00	; 0
    2cc4:	30 e0       	ldi	r19, 0x00	; 0
    2cc6:	40 e2       	ldi	r20, 0x20	; 32
    2cc8:	51 e4       	ldi	r21, 0x41	; 65
    2cca:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2cce:	dc 01       	movw	r26, r24
    2cd0:	cb 01       	movw	r24, r22
    2cd2:	bc 01       	movw	r22, r24
    2cd4:	cd 01       	movw	r24, r26
    2cd6:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2cda:	dc 01       	movw	r26, r24
    2cdc:	cb 01       	movw	r24, r22
    2cde:	9c 8b       	std	Y+20, r25	; 0x14
    2ce0:	8b 8b       	std	Y+19, r24	; 0x13
    2ce2:	0f c0       	rjmp	.+30     	; 0x2d02 <LCD_voidInit+0x3dc>
    2ce4:	88 ec       	ldi	r24, 0xC8	; 200
    2ce6:	90 e0       	ldi	r25, 0x00	; 0
    2ce8:	9a 8b       	std	Y+18, r25	; 0x12
    2cea:	89 8b       	std	Y+17, r24	; 0x11
    2cec:	89 89       	ldd	r24, Y+17	; 0x11
    2cee:	9a 89       	ldd	r25, Y+18	; 0x12
    2cf0:	01 97       	sbiw	r24, 0x01	; 1
    2cf2:	f1 f7       	brne	.-4      	; 0x2cf0 <LCD_voidInit+0x3ca>
    2cf4:	9a 8b       	std	Y+18, r25	; 0x12
    2cf6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cf8:	8b 89       	ldd	r24, Y+19	; 0x13
    2cfa:	9c 89       	ldd	r25, Y+20	; 0x14
    2cfc:	01 97       	sbiw	r24, 0x01	; 1
    2cfe:	9c 8b       	std	Y+20, r25	; 0x14
    2d00:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d02:	8b 89       	ldd	r24, Y+19	; 0x13
    2d04:	9c 89       	ldd	r25, Y+20	; 0x14
    2d06:	00 97       	sbiw	r24, 0x00	; 0
    2d08:	69 f7       	brne	.-38     	; 0x2ce4 <LCD_voidInit+0x3be>
    2d0a:	14 c0       	rjmp	.+40     	; 0x2d34 <LCD_voidInit+0x40e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d0c:	6d 89       	ldd	r22, Y+21	; 0x15
    2d0e:	7e 89       	ldd	r23, Y+22	; 0x16
    2d10:	8f 89       	ldd	r24, Y+23	; 0x17
    2d12:	98 8d       	ldd	r25, Y+24	; 0x18
    2d14:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2d18:	dc 01       	movw	r26, r24
    2d1a:	cb 01       	movw	r24, r22
    2d1c:	9c 8b       	std	Y+20, r25	; 0x14
    2d1e:	8b 8b       	std	Y+19, r24	; 0x13
    2d20:	8b 89       	ldd	r24, Y+19	; 0x13
    2d22:	9c 89       	ldd	r25, Y+20	; 0x14
    2d24:	98 8b       	std	Y+16, r25	; 0x10
    2d26:	8f 87       	std	Y+15, r24	; 0x0f
    2d28:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d2a:	98 89       	ldd	r25, Y+16	; 0x10
    2d2c:	01 97       	sbiw	r24, 0x01	; 1
    2d2e:	f1 f7       	brne	.-4      	; 0x2d2c <LCD_voidInit+0x406>
    2d30:	98 8b       	std	Y+16, r25	; 0x10
    2d32:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(10);
		LCD_voidWriteCmd(LCD_ENTRY_MODE);
    2d34:	86 e0       	ldi	r24, 0x06	; 6
    2d36:	90 e0       	ldi	r25, 0x00	; 0
    2d38:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    2d3c:	80 e0       	ldi	r24, 0x00	; 0
    2d3e:	90 e0       	ldi	r25, 0x00	; 0
    2d40:	a0 e8       	ldi	r26, 0x80	; 128
    2d42:	bf e3       	ldi	r27, 0x3F	; 63
    2d44:	8b 87       	std	Y+11, r24	; 0x0b
    2d46:	9c 87       	std	Y+12, r25	; 0x0c
    2d48:	ad 87       	std	Y+13, r26	; 0x0d
    2d4a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d4c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d4e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d50:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d52:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d54:	20 e0       	ldi	r18, 0x00	; 0
    2d56:	30 e0       	ldi	r19, 0x00	; 0
    2d58:	4a ef       	ldi	r20, 0xFA	; 250
    2d5a:	54 e4       	ldi	r21, 0x44	; 68
    2d5c:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2d60:	dc 01       	movw	r26, r24
    2d62:	cb 01       	movw	r24, r22
    2d64:	8f 83       	std	Y+7, r24	; 0x07
    2d66:	98 87       	std	Y+8, r25	; 0x08
    2d68:	a9 87       	std	Y+9, r26	; 0x09
    2d6a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2d6c:	6f 81       	ldd	r22, Y+7	; 0x07
    2d6e:	78 85       	ldd	r23, Y+8	; 0x08
    2d70:	89 85       	ldd	r24, Y+9	; 0x09
    2d72:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d74:	20 e0       	ldi	r18, 0x00	; 0
    2d76:	30 e0       	ldi	r19, 0x00	; 0
    2d78:	40 e8       	ldi	r20, 0x80	; 128
    2d7a:	5f e3       	ldi	r21, 0x3F	; 63
    2d7c:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    2d80:	88 23       	and	r24, r24
    2d82:	2c f4       	brge	.+10     	; 0x2d8e <LCD_voidInit+0x468>
		__ticks = 1;
    2d84:	81 e0       	ldi	r24, 0x01	; 1
    2d86:	90 e0       	ldi	r25, 0x00	; 0
    2d88:	9e 83       	std	Y+6, r25	; 0x06
    2d8a:	8d 83       	std	Y+5, r24	; 0x05
    2d8c:	3f c0       	rjmp	.+126    	; 0x2e0c <LCD_voidInit+0x4e6>
	else if (__tmp > 65535)
    2d8e:	6f 81       	ldd	r22, Y+7	; 0x07
    2d90:	78 85       	ldd	r23, Y+8	; 0x08
    2d92:	89 85       	ldd	r24, Y+9	; 0x09
    2d94:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d96:	20 e0       	ldi	r18, 0x00	; 0
    2d98:	3f ef       	ldi	r19, 0xFF	; 255
    2d9a:	4f e7       	ldi	r20, 0x7F	; 127
    2d9c:	57 e4       	ldi	r21, 0x47	; 71
    2d9e:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    2da2:	18 16       	cp	r1, r24
    2da4:	4c f5       	brge	.+82     	; 0x2df8 <LCD_voidInit+0x4d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2da6:	6b 85       	ldd	r22, Y+11	; 0x0b
    2da8:	7c 85       	ldd	r23, Y+12	; 0x0c
    2daa:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dac:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dae:	20 e0       	ldi	r18, 0x00	; 0
    2db0:	30 e0       	ldi	r19, 0x00	; 0
    2db2:	40 e2       	ldi	r20, 0x20	; 32
    2db4:	51 e4       	ldi	r21, 0x41	; 65
    2db6:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2dba:	dc 01       	movw	r26, r24
    2dbc:	cb 01       	movw	r24, r22
    2dbe:	bc 01       	movw	r22, r24
    2dc0:	cd 01       	movw	r24, r26
    2dc2:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2dc6:	dc 01       	movw	r26, r24
    2dc8:	cb 01       	movw	r24, r22
    2dca:	9e 83       	std	Y+6, r25	; 0x06
    2dcc:	8d 83       	std	Y+5, r24	; 0x05
    2dce:	0f c0       	rjmp	.+30     	; 0x2dee <LCD_voidInit+0x4c8>
    2dd0:	88 ec       	ldi	r24, 0xC8	; 200
    2dd2:	90 e0       	ldi	r25, 0x00	; 0
    2dd4:	9c 83       	std	Y+4, r25	; 0x04
    2dd6:	8b 83       	std	Y+3, r24	; 0x03
    2dd8:	8b 81       	ldd	r24, Y+3	; 0x03
    2dda:	9c 81       	ldd	r25, Y+4	; 0x04
    2ddc:	01 97       	sbiw	r24, 0x01	; 1
    2dde:	f1 f7       	brne	.-4      	; 0x2ddc <LCD_voidInit+0x4b6>
    2de0:	9c 83       	std	Y+4, r25	; 0x04
    2de2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2de4:	8d 81       	ldd	r24, Y+5	; 0x05
    2de6:	9e 81       	ldd	r25, Y+6	; 0x06
    2de8:	01 97       	sbiw	r24, 0x01	; 1
    2dea:	9e 83       	std	Y+6, r25	; 0x06
    2dec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dee:	8d 81       	ldd	r24, Y+5	; 0x05
    2df0:	9e 81       	ldd	r25, Y+6	; 0x06
    2df2:	00 97       	sbiw	r24, 0x00	; 0
    2df4:	69 f7       	brne	.-38     	; 0x2dd0 <LCD_voidInit+0x4aa>
    2df6:	14 c0       	rjmp	.+40     	; 0x2e20 <LCD_voidInit+0x4fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2df8:	6f 81       	ldd	r22, Y+7	; 0x07
    2dfa:	78 85       	ldd	r23, Y+8	; 0x08
    2dfc:	89 85       	ldd	r24, Y+9	; 0x09
    2dfe:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e00:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2e04:	dc 01       	movw	r26, r24
    2e06:	cb 01       	movw	r24, r22
    2e08:	9e 83       	std	Y+6, r25	; 0x06
    2e0a:	8d 83       	std	Y+5, r24	; 0x05
    2e0c:	8d 81       	ldd	r24, Y+5	; 0x05
    2e0e:	9e 81       	ldd	r25, Y+6	; 0x06
    2e10:	9a 83       	std	Y+2, r25	; 0x02
    2e12:	89 83       	std	Y+1, r24	; 0x01
    2e14:	89 81       	ldd	r24, Y+1	; 0x01
    2e16:	9a 81       	ldd	r25, Y+2	; 0x02
    2e18:	01 97       	sbiw	r24, 0x01	; 1
    2e1a:	f1 f7       	brne	.-4      	; 0x2e18 <LCD_voidInit+0x4f2>
    2e1c:	9a 83       	std	Y+2, r25	; 0x02
    2e1e:	89 83       	std	Y+1, r24	; 0x01
			LCD_voidWriteCmd(LCD_ENTRY_MODE);
			_delay_ms(1);
	#endif

#endif
}
    2e20:	ca 5b       	subi	r28, 0xBA	; 186
    2e22:	df 4f       	sbci	r29, 0xFF	; 255
    2e24:	0f b6       	in	r0, 0x3f	; 63
    2e26:	f8 94       	cli
    2e28:	de bf       	out	0x3e, r29	; 62
    2e2a:	0f be       	out	0x3f, r0	; 63
    2e2c:	cd bf       	out	0x3d, r28	; 61
    2e2e:	cf 91       	pop	r28
    2e30:	df 91       	pop	r29
    2e32:	1f 91       	pop	r17
    2e34:	0f 91       	pop	r16
    2e36:	08 95       	ret

00002e38 <LCD_voidWriteCmd>:

void LCD_voidWriteCmd(uint8 u8CommandCopy){
    2e38:	df 93       	push	r29
    2e3a:	cf 93       	push	r28
    2e3c:	0f 92       	push	r0
    2e3e:	cd b7       	in	r28, 0x3d	; 61
    2e40:	de b7       	in	r29, 0x3e	; 62
    2e42:	89 83       	std	Y+1, r24	; 0x01
	#if LCD_MODE==0
		DIO_u8SetPortVal(LCD_PORT ,u8CommandCopy) ;
    2e44:	80 e0       	ldi	r24, 0x00	; 0
    2e46:	69 81       	ldd	r22, Y+1	; 0x01
    2e48:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <DIO_u8SetPortVal>
		DIO_u8SetPinVal(LCD_RW_PORT , LCD_RW_PIN , LOW);   //write
    2e4c:	81 e0       	ldi	r24, 0x01	; 1
    2e4e:	61 e0       	ldi	r22, 0x01	; 1
    2e50:	40 e0       	ldi	r20, 0x00	; 0
    2e52:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>
		DIO_u8SetPinVal(LCD_RS_PORT , LCD_RS_PIN , LOW);   //CMD
    2e56:	81 e0       	ldi	r24, 0x01	; 1
    2e58:	60 e0       	ldi	r22, 0x00	; 0
    2e5a:	40 e0       	ldi	r20, 0x00	; 0
    2e5c:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>
		LCD_voidSendEnPulse();
    2e60:	0e 94 ae 1a 	call	0x355c	; 0x355c <LCD_voidSendEnPulse>
			_delay_ms(2);

		#endif

	#endif
}
    2e64:	0f 90       	pop	r0
    2e66:	cf 91       	pop	r28
    2e68:	df 91       	pop	r29
    2e6a:	08 95       	ret

00002e6c <LCD_voidWriteChar>:

void LCD_voidWriteChar(uint8 u8CharacterCopy){
    2e6c:	df 93       	push	r29
    2e6e:	cf 93       	push	r28
    2e70:	0f 92       	push	r0
    2e72:	cd b7       	in	r28, 0x3d	; 61
    2e74:	de b7       	in	r29, 0x3e	; 62
    2e76:	89 83       	std	Y+1, r24	; 0x01
#if LCD_MODE==0
	DIO_u8SetPortVal(LCD_PORT ,u8CharacterCopy) ;
    2e78:	80 e0       	ldi	r24, 0x00	; 0
    2e7a:	69 81       	ldd	r22, Y+1	; 0x01
    2e7c:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <DIO_u8SetPortVal>
	DIO_u8SetPinVal(LCD_RW_PORT , LCD_RS_PIN , HIGH);   //char
    2e80:	81 e0       	ldi	r24, 0x01	; 1
    2e82:	60 e0       	ldi	r22, 0x00	; 0
    2e84:	41 e0       	ldi	r20, 0x01	; 1
    2e86:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>
	DIO_u8SetPinVal(LCD_RS_PORT , LCD_RW_PIN , LOW );   //read
    2e8a:	81 e0       	ldi	r24, 0x01	; 1
    2e8c:	61 e0       	ldi	r22, 0x01	; 1
    2e8e:	40 e0       	ldi	r20, 0x00	; 0
    2e90:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>
	LCD_voidSendEnPulse();
    2e94:	0e 94 ae 1a 	call	0x355c	; 0x355c <LCD_voidSendEnPulse>
		_delay_ms(2);

	#endif

#endif
}
    2e98:	0f 90       	pop	r0
    2e9a:	cf 91       	pop	r28
    2e9c:	df 91       	pop	r29
    2e9e:	08 95       	ret

00002ea0 <LCD_voidClearScreen>:

void LCD_voidClearScreen (void){
    2ea0:	df 93       	push	r29
    2ea2:	cf 93       	push	r28
    2ea4:	cd b7       	in	r28, 0x3d	; 61
    2ea6:	de b7       	in	r29, 0x3e	; 62
    2ea8:	2e 97       	sbiw	r28, 0x0e	; 14
    2eaa:	0f b6       	in	r0, 0x3f	; 63
    2eac:	f8 94       	cli
    2eae:	de bf       	out	0x3e, r29	; 62
    2eb0:	0f be       	out	0x3f, r0	; 63
    2eb2:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_CLEAR_SCREEN);
    2eb4:	81 e0       	ldi	r24, 0x01	; 1
    2eb6:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    2eba:	80 e0       	ldi	r24, 0x00	; 0
    2ebc:	90 e0       	ldi	r25, 0x00	; 0
    2ebe:	a0 e2       	ldi	r26, 0x20	; 32
    2ec0:	b1 e4       	ldi	r27, 0x41	; 65
    2ec2:	8b 87       	std	Y+11, r24	; 0x0b
    2ec4:	9c 87       	std	Y+12, r25	; 0x0c
    2ec6:	ad 87       	std	Y+13, r26	; 0x0d
    2ec8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2eca:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ecc:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ece:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ed0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ed2:	20 e0       	ldi	r18, 0x00	; 0
    2ed4:	30 e0       	ldi	r19, 0x00	; 0
    2ed6:	4a ef       	ldi	r20, 0xFA	; 250
    2ed8:	54 e4       	ldi	r21, 0x44	; 68
    2eda:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2ede:	dc 01       	movw	r26, r24
    2ee0:	cb 01       	movw	r24, r22
    2ee2:	8f 83       	std	Y+7, r24	; 0x07
    2ee4:	98 87       	std	Y+8, r25	; 0x08
    2ee6:	a9 87       	std	Y+9, r26	; 0x09
    2ee8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2eea:	6f 81       	ldd	r22, Y+7	; 0x07
    2eec:	78 85       	ldd	r23, Y+8	; 0x08
    2eee:	89 85       	ldd	r24, Y+9	; 0x09
    2ef0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ef2:	20 e0       	ldi	r18, 0x00	; 0
    2ef4:	30 e0       	ldi	r19, 0x00	; 0
    2ef6:	40 e8       	ldi	r20, 0x80	; 128
    2ef8:	5f e3       	ldi	r21, 0x3F	; 63
    2efa:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    2efe:	88 23       	and	r24, r24
    2f00:	2c f4       	brge	.+10     	; 0x2f0c <LCD_voidClearScreen+0x6c>
		__ticks = 1;
    2f02:	81 e0       	ldi	r24, 0x01	; 1
    2f04:	90 e0       	ldi	r25, 0x00	; 0
    2f06:	9e 83       	std	Y+6, r25	; 0x06
    2f08:	8d 83       	std	Y+5, r24	; 0x05
    2f0a:	3f c0       	rjmp	.+126    	; 0x2f8a <LCD_voidClearScreen+0xea>
	else if (__tmp > 65535)
    2f0c:	6f 81       	ldd	r22, Y+7	; 0x07
    2f0e:	78 85       	ldd	r23, Y+8	; 0x08
    2f10:	89 85       	ldd	r24, Y+9	; 0x09
    2f12:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f14:	20 e0       	ldi	r18, 0x00	; 0
    2f16:	3f ef       	ldi	r19, 0xFF	; 255
    2f18:	4f e7       	ldi	r20, 0x7F	; 127
    2f1a:	57 e4       	ldi	r21, 0x47	; 71
    2f1c:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    2f20:	18 16       	cp	r1, r24
    2f22:	4c f5       	brge	.+82     	; 0x2f76 <LCD_voidClearScreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f24:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f26:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f28:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f2c:	20 e0       	ldi	r18, 0x00	; 0
    2f2e:	30 e0       	ldi	r19, 0x00	; 0
    2f30:	40 e2       	ldi	r20, 0x20	; 32
    2f32:	51 e4       	ldi	r21, 0x41	; 65
    2f34:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2f38:	dc 01       	movw	r26, r24
    2f3a:	cb 01       	movw	r24, r22
    2f3c:	bc 01       	movw	r22, r24
    2f3e:	cd 01       	movw	r24, r26
    2f40:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2f44:	dc 01       	movw	r26, r24
    2f46:	cb 01       	movw	r24, r22
    2f48:	9e 83       	std	Y+6, r25	; 0x06
    2f4a:	8d 83       	std	Y+5, r24	; 0x05
    2f4c:	0f c0       	rjmp	.+30     	; 0x2f6c <LCD_voidClearScreen+0xcc>
    2f4e:	88 ec       	ldi	r24, 0xC8	; 200
    2f50:	90 e0       	ldi	r25, 0x00	; 0
    2f52:	9c 83       	std	Y+4, r25	; 0x04
    2f54:	8b 83       	std	Y+3, r24	; 0x03
    2f56:	8b 81       	ldd	r24, Y+3	; 0x03
    2f58:	9c 81       	ldd	r25, Y+4	; 0x04
    2f5a:	01 97       	sbiw	r24, 0x01	; 1
    2f5c:	f1 f7       	brne	.-4      	; 0x2f5a <LCD_voidClearScreen+0xba>
    2f5e:	9c 83       	std	Y+4, r25	; 0x04
    2f60:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f62:	8d 81       	ldd	r24, Y+5	; 0x05
    2f64:	9e 81       	ldd	r25, Y+6	; 0x06
    2f66:	01 97       	sbiw	r24, 0x01	; 1
    2f68:	9e 83       	std	Y+6, r25	; 0x06
    2f6a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f6c:	8d 81       	ldd	r24, Y+5	; 0x05
    2f6e:	9e 81       	ldd	r25, Y+6	; 0x06
    2f70:	00 97       	sbiw	r24, 0x00	; 0
    2f72:	69 f7       	brne	.-38     	; 0x2f4e <LCD_voidClearScreen+0xae>
    2f74:	14 c0       	rjmp	.+40     	; 0x2f9e <LCD_voidClearScreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f76:	6f 81       	ldd	r22, Y+7	; 0x07
    2f78:	78 85       	ldd	r23, Y+8	; 0x08
    2f7a:	89 85       	ldd	r24, Y+9	; 0x09
    2f7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f7e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    2f82:	dc 01       	movw	r26, r24
    2f84:	cb 01       	movw	r24, r22
    2f86:	9e 83       	std	Y+6, r25	; 0x06
    2f88:	8d 83       	std	Y+5, r24	; 0x05
    2f8a:	8d 81       	ldd	r24, Y+5	; 0x05
    2f8c:	9e 81       	ldd	r25, Y+6	; 0x06
    2f8e:	9a 83       	std	Y+2, r25	; 0x02
    2f90:	89 83       	std	Y+1, r24	; 0x01
    2f92:	89 81       	ldd	r24, Y+1	; 0x01
    2f94:	9a 81       	ldd	r25, Y+2	; 0x02
    2f96:	01 97       	sbiw	r24, 0x01	; 1
    2f98:	f1 f7       	brne	.-4      	; 0x2f96 <LCD_voidClearScreen+0xf6>
    2f9a:	9a 83       	std	Y+2, r25	; 0x02
    2f9c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    2f9e:	2e 96       	adiw	r28, 0x0e	; 14
    2fa0:	0f b6       	in	r0, 0x3f	; 63
    2fa2:	f8 94       	cli
    2fa4:	de bf       	out	0x3e, r29	; 62
    2fa6:	0f be       	out	0x3f, r0	; 63
    2fa8:	cd bf       	out	0x3d, r28	; 61
    2faa:	cf 91       	pop	r28
    2fac:	df 91       	pop	r29
    2fae:	08 95       	ret

00002fb0 <LCD_voidShiftLeft>:

void LCD_voidShiftLeft (void){
    2fb0:	df 93       	push	r29
    2fb2:	cf 93       	push	r28
    2fb4:	cd b7       	in	r28, 0x3d	; 61
    2fb6:	de b7       	in	r29, 0x3e	; 62
    2fb8:	2e 97       	sbiw	r28, 0x0e	; 14
    2fba:	0f b6       	in	r0, 0x3f	; 63
    2fbc:	f8 94       	cli
    2fbe:	de bf       	out	0x3e, r29	; 62
    2fc0:	0f be       	out	0x3f, r0	; 63
    2fc2:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_MOVE_CURSOR_LIFT);
    2fc4:	80 e1       	ldi	r24, 0x10	; 16
    2fc6:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    2fca:	80 e0       	ldi	r24, 0x00	; 0
    2fcc:	90 e0       	ldi	r25, 0x00	; 0
    2fce:	a0 e2       	ldi	r26, 0x20	; 32
    2fd0:	b1 e4       	ldi	r27, 0x41	; 65
    2fd2:	8b 87       	std	Y+11, r24	; 0x0b
    2fd4:	9c 87       	std	Y+12, r25	; 0x0c
    2fd6:	ad 87       	std	Y+13, r26	; 0x0d
    2fd8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fda:	6b 85       	ldd	r22, Y+11	; 0x0b
    2fdc:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fde:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fe0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fe2:	20 e0       	ldi	r18, 0x00	; 0
    2fe4:	30 e0       	ldi	r19, 0x00	; 0
    2fe6:	4a ef       	ldi	r20, 0xFA	; 250
    2fe8:	54 e4       	ldi	r21, 0x44	; 68
    2fea:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    2fee:	dc 01       	movw	r26, r24
    2ff0:	cb 01       	movw	r24, r22
    2ff2:	8f 83       	std	Y+7, r24	; 0x07
    2ff4:	98 87       	std	Y+8, r25	; 0x08
    2ff6:	a9 87       	std	Y+9, r26	; 0x09
    2ff8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2ffa:	6f 81       	ldd	r22, Y+7	; 0x07
    2ffc:	78 85       	ldd	r23, Y+8	; 0x08
    2ffe:	89 85       	ldd	r24, Y+9	; 0x09
    3000:	9a 85       	ldd	r25, Y+10	; 0x0a
    3002:	20 e0       	ldi	r18, 0x00	; 0
    3004:	30 e0       	ldi	r19, 0x00	; 0
    3006:	40 e8       	ldi	r20, 0x80	; 128
    3008:	5f e3       	ldi	r21, 0x3F	; 63
    300a:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    300e:	88 23       	and	r24, r24
    3010:	2c f4       	brge	.+10     	; 0x301c <LCD_voidShiftLeft+0x6c>
		__ticks = 1;
    3012:	81 e0       	ldi	r24, 0x01	; 1
    3014:	90 e0       	ldi	r25, 0x00	; 0
    3016:	9e 83       	std	Y+6, r25	; 0x06
    3018:	8d 83       	std	Y+5, r24	; 0x05
    301a:	3f c0       	rjmp	.+126    	; 0x309a <LCD_voidShiftLeft+0xea>
	else if (__tmp > 65535)
    301c:	6f 81       	ldd	r22, Y+7	; 0x07
    301e:	78 85       	ldd	r23, Y+8	; 0x08
    3020:	89 85       	ldd	r24, Y+9	; 0x09
    3022:	9a 85       	ldd	r25, Y+10	; 0x0a
    3024:	20 e0       	ldi	r18, 0x00	; 0
    3026:	3f ef       	ldi	r19, 0xFF	; 255
    3028:	4f e7       	ldi	r20, 0x7F	; 127
    302a:	57 e4       	ldi	r21, 0x47	; 71
    302c:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    3030:	18 16       	cp	r1, r24
    3032:	4c f5       	brge	.+82     	; 0x3086 <LCD_voidShiftLeft+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3034:	6b 85       	ldd	r22, Y+11	; 0x0b
    3036:	7c 85       	ldd	r23, Y+12	; 0x0c
    3038:	8d 85       	ldd	r24, Y+13	; 0x0d
    303a:	9e 85       	ldd	r25, Y+14	; 0x0e
    303c:	20 e0       	ldi	r18, 0x00	; 0
    303e:	30 e0       	ldi	r19, 0x00	; 0
    3040:	40 e2       	ldi	r20, 0x20	; 32
    3042:	51 e4       	ldi	r21, 0x41	; 65
    3044:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    3048:	dc 01       	movw	r26, r24
    304a:	cb 01       	movw	r24, r22
    304c:	bc 01       	movw	r22, r24
    304e:	cd 01       	movw	r24, r26
    3050:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3054:	dc 01       	movw	r26, r24
    3056:	cb 01       	movw	r24, r22
    3058:	9e 83       	std	Y+6, r25	; 0x06
    305a:	8d 83       	std	Y+5, r24	; 0x05
    305c:	0f c0       	rjmp	.+30     	; 0x307c <LCD_voidShiftLeft+0xcc>
    305e:	88 ec       	ldi	r24, 0xC8	; 200
    3060:	90 e0       	ldi	r25, 0x00	; 0
    3062:	9c 83       	std	Y+4, r25	; 0x04
    3064:	8b 83       	std	Y+3, r24	; 0x03
    3066:	8b 81       	ldd	r24, Y+3	; 0x03
    3068:	9c 81       	ldd	r25, Y+4	; 0x04
    306a:	01 97       	sbiw	r24, 0x01	; 1
    306c:	f1 f7       	brne	.-4      	; 0x306a <LCD_voidShiftLeft+0xba>
    306e:	9c 83       	std	Y+4, r25	; 0x04
    3070:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3072:	8d 81       	ldd	r24, Y+5	; 0x05
    3074:	9e 81       	ldd	r25, Y+6	; 0x06
    3076:	01 97       	sbiw	r24, 0x01	; 1
    3078:	9e 83       	std	Y+6, r25	; 0x06
    307a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    307c:	8d 81       	ldd	r24, Y+5	; 0x05
    307e:	9e 81       	ldd	r25, Y+6	; 0x06
    3080:	00 97       	sbiw	r24, 0x00	; 0
    3082:	69 f7       	brne	.-38     	; 0x305e <LCD_voidShiftLeft+0xae>
    3084:	14 c0       	rjmp	.+40     	; 0x30ae <LCD_voidShiftLeft+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3086:	6f 81       	ldd	r22, Y+7	; 0x07
    3088:	78 85       	ldd	r23, Y+8	; 0x08
    308a:	89 85       	ldd	r24, Y+9	; 0x09
    308c:	9a 85       	ldd	r25, Y+10	; 0x0a
    308e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3092:	dc 01       	movw	r26, r24
    3094:	cb 01       	movw	r24, r22
    3096:	9e 83       	std	Y+6, r25	; 0x06
    3098:	8d 83       	std	Y+5, r24	; 0x05
    309a:	8d 81       	ldd	r24, Y+5	; 0x05
    309c:	9e 81       	ldd	r25, Y+6	; 0x06
    309e:	9a 83       	std	Y+2, r25	; 0x02
    30a0:	89 83       	std	Y+1, r24	; 0x01
    30a2:	89 81       	ldd	r24, Y+1	; 0x01
    30a4:	9a 81       	ldd	r25, Y+2	; 0x02
    30a6:	01 97       	sbiw	r24, 0x01	; 1
    30a8:	f1 f7       	brne	.-4      	; 0x30a6 <LCD_voidShiftLeft+0xf6>
    30aa:	9a 83       	std	Y+2, r25	; 0x02
    30ac:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    30ae:	2e 96       	adiw	r28, 0x0e	; 14
    30b0:	0f b6       	in	r0, 0x3f	; 63
    30b2:	f8 94       	cli
    30b4:	de bf       	out	0x3e, r29	; 62
    30b6:	0f be       	out	0x3f, r0	; 63
    30b8:	cd bf       	out	0x3d, r28	; 61
    30ba:	cf 91       	pop	r28
    30bc:	df 91       	pop	r29
    30be:	08 95       	ret

000030c0 <LCD_voidShiftRight>:

void LCD_voidShiftRight (void){
    30c0:	df 93       	push	r29
    30c2:	cf 93       	push	r28
    30c4:	cd b7       	in	r28, 0x3d	; 61
    30c6:	de b7       	in	r29, 0x3e	; 62
    30c8:	2e 97       	sbiw	r28, 0x0e	; 14
    30ca:	0f b6       	in	r0, 0x3f	; 63
    30cc:	f8 94       	cli
    30ce:	de bf       	out	0x3e, r29	; 62
    30d0:	0f be       	out	0x3f, r0	; 63
    30d2:	cd bf       	out	0x3d, r28	; 61
	LCD_voidWriteCmd (LCD_MOVE_CURSOR_RIGHT);
    30d4:	84 e1       	ldi	r24, 0x14	; 20
    30d6:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    30da:	80 e0       	ldi	r24, 0x00	; 0
    30dc:	90 e0       	ldi	r25, 0x00	; 0
    30de:	a0 e2       	ldi	r26, 0x20	; 32
    30e0:	b1 e4       	ldi	r27, 0x41	; 65
    30e2:	8b 87       	std	Y+11, r24	; 0x0b
    30e4:	9c 87       	std	Y+12, r25	; 0x0c
    30e6:	ad 87       	std	Y+13, r26	; 0x0d
    30e8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    30ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    30ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    30f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    30f2:	20 e0       	ldi	r18, 0x00	; 0
    30f4:	30 e0       	ldi	r19, 0x00	; 0
    30f6:	4a ef       	ldi	r20, 0xFA	; 250
    30f8:	54 e4       	ldi	r21, 0x44	; 68
    30fa:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    30fe:	dc 01       	movw	r26, r24
    3100:	cb 01       	movw	r24, r22
    3102:	8f 83       	std	Y+7, r24	; 0x07
    3104:	98 87       	std	Y+8, r25	; 0x08
    3106:	a9 87       	std	Y+9, r26	; 0x09
    3108:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    310a:	6f 81       	ldd	r22, Y+7	; 0x07
    310c:	78 85       	ldd	r23, Y+8	; 0x08
    310e:	89 85       	ldd	r24, Y+9	; 0x09
    3110:	9a 85       	ldd	r25, Y+10	; 0x0a
    3112:	20 e0       	ldi	r18, 0x00	; 0
    3114:	30 e0       	ldi	r19, 0x00	; 0
    3116:	40 e8       	ldi	r20, 0x80	; 128
    3118:	5f e3       	ldi	r21, 0x3F	; 63
    311a:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    311e:	88 23       	and	r24, r24
    3120:	2c f4       	brge	.+10     	; 0x312c <LCD_voidShiftRight+0x6c>
		__ticks = 1;
    3122:	81 e0       	ldi	r24, 0x01	; 1
    3124:	90 e0       	ldi	r25, 0x00	; 0
    3126:	9e 83       	std	Y+6, r25	; 0x06
    3128:	8d 83       	std	Y+5, r24	; 0x05
    312a:	3f c0       	rjmp	.+126    	; 0x31aa <LCD_voidShiftRight+0xea>
	else if (__tmp > 65535)
    312c:	6f 81       	ldd	r22, Y+7	; 0x07
    312e:	78 85       	ldd	r23, Y+8	; 0x08
    3130:	89 85       	ldd	r24, Y+9	; 0x09
    3132:	9a 85       	ldd	r25, Y+10	; 0x0a
    3134:	20 e0       	ldi	r18, 0x00	; 0
    3136:	3f ef       	ldi	r19, 0xFF	; 255
    3138:	4f e7       	ldi	r20, 0x7F	; 127
    313a:	57 e4       	ldi	r21, 0x47	; 71
    313c:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    3140:	18 16       	cp	r1, r24
    3142:	4c f5       	brge	.+82     	; 0x3196 <LCD_voidShiftRight+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3144:	6b 85       	ldd	r22, Y+11	; 0x0b
    3146:	7c 85       	ldd	r23, Y+12	; 0x0c
    3148:	8d 85       	ldd	r24, Y+13	; 0x0d
    314a:	9e 85       	ldd	r25, Y+14	; 0x0e
    314c:	20 e0       	ldi	r18, 0x00	; 0
    314e:	30 e0       	ldi	r19, 0x00	; 0
    3150:	40 e2       	ldi	r20, 0x20	; 32
    3152:	51 e4       	ldi	r21, 0x41	; 65
    3154:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    3158:	dc 01       	movw	r26, r24
    315a:	cb 01       	movw	r24, r22
    315c:	bc 01       	movw	r22, r24
    315e:	cd 01       	movw	r24, r26
    3160:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3164:	dc 01       	movw	r26, r24
    3166:	cb 01       	movw	r24, r22
    3168:	9e 83       	std	Y+6, r25	; 0x06
    316a:	8d 83       	std	Y+5, r24	; 0x05
    316c:	0f c0       	rjmp	.+30     	; 0x318c <LCD_voidShiftRight+0xcc>
    316e:	88 ec       	ldi	r24, 0xC8	; 200
    3170:	90 e0       	ldi	r25, 0x00	; 0
    3172:	9c 83       	std	Y+4, r25	; 0x04
    3174:	8b 83       	std	Y+3, r24	; 0x03
    3176:	8b 81       	ldd	r24, Y+3	; 0x03
    3178:	9c 81       	ldd	r25, Y+4	; 0x04
    317a:	01 97       	sbiw	r24, 0x01	; 1
    317c:	f1 f7       	brne	.-4      	; 0x317a <LCD_voidShiftRight+0xba>
    317e:	9c 83       	std	Y+4, r25	; 0x04
    3180:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3182:	8d 81       	ldd	r24, Y+5	; 0x05
    3184:	9e 81       	ldd	r25, Y+6	; 0x06
    3186:	01 97       	sbiw	r24, 0x01	; 1
    3188:	9e 83       	std	Y+6, r25	; 0x06
    318a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    318c:	8d 81       	ldd	r24, Y+5	; 0x05
    318e:	9e 81       	ldd	r25, Y+6	; 0x06
    3190:	00 97       	sbiw	r24, 0x00	; 0
    3192:	69 f7       	brne	.-38     	; 0x316e <LCD_voidShiftRight+0xae>
    3194:	14 c0       	rjmp	.+40     	; 0x31be <LCD_voidShiftRight+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3196:	6f 81       	ldd	r22, Y+7	; 0x07
    3198:	78 85       	ldd	r23, Y+8	; 0x08
    319a:	89 85       	ldd	r24, Y+9	; 0x09
    319c:	9a 85       	ldd	r25, Y+10	; 0x0a
    319e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    31a2:	dc 01       	movw	r26, r24
    31a4:	cb 01       	movw	r24, r22
    31a6:	9e 83       	std	Y+6, r25	; 0x06
    31a8:	8d 83       	std	Y+5, r24	; 0x05
    31aa:	8d 81       	ldd	r24, Y+5	; 0x05
    31ac:	9e 81       	ldd	r25, Y+6	; 0x06
    31ae:	9a 83       	std	Y+2, r25	; 0x02
    31b0:	89 83       	std	Y+1, r24	; 0x01
    31b2:	89 81       	ldd	r24, Y+1	; 0x01
    31b4:	9a 81       	ldd	r25, Y+2	; 0x02
    31b6:	01 97       	sbiw	r24, 0x01	; 1
    31b8:	f1 f7       	brne	.-4      	; 0x31b6 <LCD_voidShiftRight+0xf6>
    31ba:	9a 83       	std	Y+2, r25	; 0x02
    31bc:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    31be:	2e 96       	adiw	r28, 0x0e	; 14
    31c0:	0f b6       	in	r0, 0x3f	; 63
    31c2:	f8 94       	cli
    31c4:	de bf       	out	0x3e, r29	; 62
    31c6:	0f be       	out	0x3f, r0	; 63
    31c8:	cd bf       	out	0x3d, r28	; 61
    31ca:	cf 91       	pop	r28
    31cc:	df 91       	pop	r29
    31ce:	08 95       	ret

000031d0 <LCD_voidMoveCursor>:

void LCD_voidMoveCursor (uint8 u8RowCopy ,uint8 u8ColoumnCopy){
    31d0:	df 93       	push	r29
    31d2:	cf 93       	push	r28
    31d4:	cd b7       	in	r28, 0x3d	; 61
    31d6:	de b7       	in	r29, 0x3e	; 62
    31d8:	61 97       	sbiw	r28, 0x11	; 17
    31da:	0f b6       	in	r0, 0x3f	; 63
    31dc:	f8 94       	cli
    31de:	de bf       	out	0x3e, r29	; 62
    31e0:	0f be       	out	0x3f, r0	; 63
    31e2:	cd bf       	out	0x3d, r28	; 61
    31e4:	88 8b       	std	Y+16, r24	; 0x10
    31e6:	69 8b       	std	Y+17, r22	; 0x11
	uint8 copy_u8data;
	//cases un valied
	if(((u8RowCopy<1) ||(u8RowCopy>2)) || (u8ColoumnCopy<1) ||(u8ColoumnCopy>16))
    31e8:	88 89       	ldd	r24, Y+16	; 0x10
    31ea:	88 23       	and	r24, r24
    31ec:	49 f0       	breq	.+18     	; 0x3200 <LCD_voidMoveCursor+0x30>
    31ee:	88 89       	ldd	r24, Y+16	; 0x10
    31f0:	83 30       	cpi	r24, 0x03	; 3
    31f2:	30 f4       	brcc	.+12     	; 0x3200 <LCD_voidMoveCursor+0x30>
    31f4:	89 89       	ldd	r24, Y+17	; 0x11
    31f6:	88 23       	and	r24, r24
    31f8:	19 f0       	breq	.+6      	; 0x3200 <LCD_voidMoveCursor+0x30>
    31fa:	89 89       	ldd	r24, Y+17	; 0x11
    31fc:	81 31       	cpi	r24, 0x11	; 17
    31fe:	18 f0       	brcs	.+6      	; 0x3206 <LCD_voidMoveCursor+0x36>
	{
		//cursor in first position >>10000000 //load aderess counter with zero
		copy_u8data = 0x80;
    3200:	80 e8       	ldi	r24, 0x80	; 128
    3202:	8f 87       	std	Y+15, r24	; 0x0f
    3204:	0d c0       	rjmp	.+26     	; 0x3220 <LCD_voidMoveCursor+0x50>
	}
	else if(u8RowCopy ==1)
    3206:	88 89       	ldd	r24, Y+16	; 0x10
    3208:	81 30       	cpi	r24, 0x01	; 1
    320a:	21 f4       	brne	.+8      	; 0x3214 <LCD_voidMoveCursor+0x44>
	{
		//first row in any coloumn
		copy_u8data= 0x80 +(u8ColoumnCopy -1);
    320c:	89 89       	ldd	r24, Y+17	; 0x11
    320e:	81 58       	subi	r24, 0x81	; 129
    3210:	8f 87       	std	Y+15, r24	; 0x0f
    3212:	06 c0       	rjmp	.+12     	; 0x3220 <LCD_voidMoveCursor+0x50>
	}
	else if(u8RowCopy ==2)
    3214:	88 89       	ldd	r24, Y+16	; 0x10
    3216:	82 30       	cpi	r24, 0x02	; 2
    3218:	19 f4       	brne	.+6      	; 0x3220 <LCD_voidMoveCursor+0x50>
	{
		//first row in any coloumn
		copy_u8data= 0xc0 +(u8ColoumnCopy -1);
    321a:	89 89       	ldd	r24, Y+17	; 0x11
    321c:	81 54       	subi	r24, 0x41	; 65
    321e:	8f 87       	std	Y+15, r24	; 0x0f
	}
	LCD_voidWriteCmd(copy_u8data);
    3220:	8f 85       	ldd	r24, Y+15	; 0x0f
    3222:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    3226:	80 e0       	ldi	r24, 0x00	; 0
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	a0 e8       	ldi	r26, 0x80	; 128
    322c:	bf e3       	ldi	r27, 0x3F	; 63
    322e:	8b 87       	std	Y+11, r24	; 0x0b
    3230:	9c 87       	std	Y+12, r25	; 0x0c
    3232:	ad 87       	std	Y+13, r26	; 0x0d
    3234:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3236:	6b 85       	ldd	r22, Y+11	; 0x0b
    3238:	7c 85       	ldd	r23, Y+12	; 0x0c
    323a:	8d 85       	ldd	r24, Y+13	; 0x0d
    323c:	9e 85       	ldd	r25, Y+14	; 0x0e
    323e:	20 e0       	ldi	r18, 0x00	; 0
    3240:	30 e0       	ldi	r19, 0x00	; 0
    3242:	4a ef       	ldi	r20, 0xFA	; 250
    3244:	54 e4       	ldi	r21, 0x44	; 68
    3246:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    324a:	dc 01       	movw	r26, r24
    324c:	cb 01       	movw	r24, r22
    324e:	8f 83       	std	Y+7, r24	; 0x07
    3250:	98 87       	std	Y+8, r25	; 0x08
    3252:	a9 87       	std	Y+9, r26	; 0x09
    3254:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3256:	6f 81       	ldd	r22, Y+7	; 0x07
    3258:	78 85       	ldd	r23, Y+8	; 0x08
    325a:	89 85       	ldd	r24, Y+9	; 0x09
    325c:	9a 85       	ldd	r25, Y+10	; 0x0a
    325e:	20 e0       	ldi	r18, 0x00	; 0
    3260:	30 e0       	ldi	r19, 0x00	; 0
    3262:	40 e8       	ldi	r20, 0x80	; 128
    3264:	5f e3       	ldi	r21, 0x3F	; 63
    3266:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    326a:	88 23       	and	r24, r24
    326c:	2c f4       	brge	.+10     	; 0x3278 <LCD_voidMoveCursor+0xa8>
		__ticks = 1;
    326e:	81 e0       	ldi	r24, 0x01	; 1
    3270:	90 e0       	ldi	r25, 0x00	; 0
    3272:	9e 83       	std	Y+6, r25	; 0x06
    3274:	8d 83       	std	Y+5, r24	; 0x05
    3276:	3f c0       	rjmp	.+126    	; 0x32f6 <LCD_voidMoveCursor+0x126>
	else if (__tmp > 65535)
    3278:	6f 81       	ldd	r22, Y+7	; 0x07
    327a:	78 85       	ldd	r23, Y+8	; 0x08
    327c:	89 85       	ldd	r24, Y+9	; 0x09
    327e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3280:	20 e0       	ldi	r18, 0x00	; 0
    3282:	3f ef       	ldi	r19, 0xFF	; 255
    3284:	4f e7       	ldi	r20, 0x7F	; 127
    3286:	57 e4       	ldi	r21, 0x47	; 71
    3288:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    328c:	18 16       	cp	r1, r24
    328e:	4c f5       	brge	.+82     	; 0x32e2 <LCD_voidMoveCursor+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3290:	6b 85       	ldd	r22, Y+11	; 0x0b
    3292:	7c 85       	ldd	r23, Y+12	; 0x0c
    3294:	8d 85       	ldd	r24, Y+13	; 0x0d
    3296:	9e 85       	ldd	r25, Y+14	; 0x0e
    3298:	20 e0       	ldi	r18, 0x00	; 0
    329a:	30 e0       	ldi	r19, 0x00	; 0
    329c:	40 e2       	ldi	r20, 0x20	; 32
    329e:	51 e4       	ldi	r21, 0x41	; 65
    32a0:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    32a4:	dc 01       	movw	r26, r24
    32a6:	cb 01       	movw	r24, r22
    32a8:	bc 01       	movw	r22, r24
    32aa:	cd 01       	movw	r24, r26
    32ac:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    32b0:	dc 01       	movw	r26, r24
    32b2:	cb 01       	movw	r24, r22
    32b4:	9e 83       	std	Y+6, r25	; 0x06
    32b6:	8d 83       	std	Y+5, r24	; 0x05
    32b8:	0f c0       	rjmp	.+30     	; 0x32d8 <LCD_voidMoveCursor+0x108>
    32ba:	88 ec       	ldi	r24, 0xC8	; 200
    32bc:	90 e0       	ldi	r25, 0x00	; 0
    32be:	9c 83       	std	Y+4, r25	; 0x04
    32c0:	8b 83       	std	Y+3, r24	; 0x03
    32c2:	8b 81       	ldd	r24, Y+3	; 0x03
    32c4:	9c 81       	ldd	r25, Y+4	; 0x04
    32c6:	01 97       	sbiw	r24, 0x01	; 1
    32c8:	f1 f7       	brne	.-4      	; 0x32c6 <LCD_voidMoveCursor+0xf6>
    32ca:	9c 83       	std	Y+4, r25	; 0x04
    32cc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32ce:	8d 81       	ldd	r24, Y+5	; 0x05
    32d0:	9e 81       	ldd	r25, Y+6	; 0x06
    32d2:	01 97       	sbiw	r24, 0x01	; 1
    32d4:	9e 83       	std	Y+6, r25	; 0x06
    32d6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32d8:	8d 81       	ldd	r24, Y+5	; 0x05
    32da:	9e 81       	ldd	r25, Y+6	; 0x06
    32dc:	00 97       	sbiw	r24, 0x00	; 0
    32de:	69 f7       	brne	.-38     	; 0x32ba <LCD_voidMoveCursor+0xea>
    32e0:	14 c0       	rjmp	.+40     	; 0x330a <LCD_voidMoveCursor+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32e2:	6f 81       	ldd	r22, Y+7	; 0x07
    32e4:	78 85       	ldd	r23, Y+8	; 0x08
    32e6:	89 85       	ldd	r24, Y+9	; 0x09
    32e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    32ea:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    32ee:	dc 01       	movw	r26, r24
    32f0:	cb 01       	movw	r24, r22
    32f2:	9e 83       	std	Y+6, r25	; 0x06
    32f4:	8d 83       	std	Y+5, r24	; 0x05
    32f6:	8d 81       	ldd	r24, Y+5	; 0x05
    32f8:	9e 81       	ldd	r25, Y+6	; 0x06
    32fa:	9a 83       	std	Y+2, r25	; 0x02
    32fc:	89 83       	std	Y+1, r24	; 0x01
    32fe:	89 81       	ldd	r24, Y+1	; 0x01
    3300:	9a 81       	ldd	r25, Y+2	; 0x02
    3302:	01 97       	sbiw	r24, 0x01	; 1
    3304:	f1 f7       	brne	.-4      	; 0x3302 <LCD_voidMoveCursor+0x132>
    3306:	9a 83       	std	Y+2, r25	; 0x02
    3308:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    330a:	61 96       	adiw	r28, 0x11	; 17
    330c:	0f b6       	in	r0, 0x3f	; 63
    330e:	f8 94       	cli
    3310:	de bf       	out	0x3e, r29	; 62
    3312:	0f be       	out	0x3f, r0	; 63
    3314:	cd bf       	out	0x3d, r28	; 61
    3316:	cf 91       	pop	r28
    3318:	df 91       	pop	r29
    331a:	08 95       	ret

0000331c <LCD_voidWriteString>:

void LCD_voidWriteString(uint8 *u8stringCopy){
    331c:	df 93       	push	r29
    331e:	cf 93       	push	r28
    3320:	00 d0       	rcall	.+0      	; 0x3322 <LCD_voidWriteString+0x6>
    3322:	cd b7       	in	r28, 0x3d	; 61
    3324:	de b7       	in	r29, 0x3e	; 62
    3326:	9a 83       	std	Y+2, r25	; 0x02
    3328:	89 83       	std	Y+1, r24	; 0x01
    332a:	0a c0       	rjmp	.+20     	; 0x3340 <LCD_voidWriteString+0x24>

	while((*u8stringCopy)!= '\0'){
		LCD_voidWriteChar(*u8stringCopy);
    332c:	e9 81       	ldd	r30, Y+1	; 0x01
    332e:	fa 81       	ldd	r31, Y+2	; 0x02
    3330:	80 81       	ld	r24, Z
    3332:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <LCD_voidWriteChar>
			u8stringCopy++;
    3336:	89 81       	ldd	r24, Y+1	; 0x01
    3338:	9a 81       	ldd	r25, Y+2	; 0x02
    333a:	01 96       	adiw	r24, 0x01	; 1
    333c:	9a 83       	std	Y+2, r25	; 0x02
    333e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}

void LCD_voidWriteString(uint8 *u8stringCopy){

	while((*u8stringCopy)!= '\0'){
    3340:	e9 81       	ldd	r30, Y+1	; 0x01
    3342:	fa 81       	ldd	r31, Y+2	; 0x02
    3344:	80 81       	ld	r24, Z
    3346:	88 23       	and	r24, r24
    3348:	89 f7       	brne	.-30     	; 0x332c <LCD_voidWriteString+0x10>
		LCD_voidWriteChar(*u8stringCopy);
			u8stringCopy++;
		}
}
    334a:	0f 90       	pop	r0
    334c:	0f 90       	pop	r0
    334e:	cf 91       	pop	r28
    3350:	df 91       	pop	r29
    3352:	08 95       	ret

00003354 <LCD_voidWriteNumber>:

void LCD_voidWriteNumber(uint32 u32NumberCopy){
    3354:	df 93       	push	r29
    3356:	cf 93       	push	r28
    3358:	cd b7       	in	r28, 0x3d	; 61
    335a:	de b7       	in	r29, 0x3e	; 62
    335c:	2e 97       	sbiw	r28, 0x0e	; 14
    335e:	0f b6       	in	r0, 0x3f	; 63
    3360:	f8 94       	cli
    3362:	de bf       	out	0x3e, r29	; 62
    3364:	0f be       	out	0x3f, r0	; 63
    3366:	cd bf       	out	0x3d, r28	; 61
    3368:	6b 87       	std	Y+11, r22	; 0x0b
    336a:	7c 87       	std	Y+12, r23	; 0x0c
    336c:	8d 87       	std	Y+13, r24	; 0x0d
    336e:	9e 87       	std	Y+14, r25	; 0x0e
	uint8 str[10];
	//transfer the number into string then display
	sprintf(str ,"%lu" ,u32NumberCopy);
    3370:	8d b7       	in	r24, 0x3d	; 61
    3372:	9e b7       	in	r25, 0x3e	; 62
    3374:	08 97       	sbiw	r24, 0x08	; 8
    3376:	0f b6       	in	r0, 0x3f	; 63
    3378:	f8 94       	cli
    337a:	9e bf       	out	0x3e, r25	; 62
    337c:	0f be       	out	0x3f, r0	; 63
    337e:	8d bf       	out	0x3d, r24	; 61
    3380:	ed b7       	in	r30, 0x3d	; 61
    3382:	fe b7       	in	r31, 0x3e	; 62
    3384:	31 96       	adiw	r30, 0x01	; 1
    3386:	ce 01       	movw	r24, r28
    3388:	01 96       	adiw	r24, 0x01	; 1
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	80 83       	st	Z, r24
    338e:	80 e6       	ldi	r24, 0x60	; 96
    3390:	90 e0       	ldi	r25, 0x00	; 0
    3392:	93 83       	std	Z+3, r25	; 0x03
    3394:	82 83       	std	Z+2, r24	; 0x02
    3396:	8b 85       	ldd	r24, Y+11	; 0x0b
    3398:	9c 85       	ldd	r25, Y+12	; 0x0c
    339a:	ad 85       	ldd	r26, Y+13	; 0x0d
    339c:	be 85       	ldd	r27, Y+14	; 0x0e
    339e:	84 83       	std	Z+4, r24	; 0x04
    33a0:	95 83       	std	Z+5, r25	; 0x05
    33a2:	a6 83       	std	Z+6, r26	; 0x06
    33a4:	b7 83       	std	Z+7, r27	; 0x07
    33a6:	0e 94 05 28 	call	0x500a	; 0x500a <sprintf>
    33aa:	8d b7       	in	r24, 0x3d	; 61
    33ac:	9e b7       	in	r25, 0x3e	; 62
    33ae:	08 96       	adiw	r24, 0x08	; 8
    33b0:	0f b6       	in	r0, 0x3f	; 63
    33b2:	f8 94       	cli
    33b4:	9e bf       	out	0x3e, r25	; 62
    33b6:	0f be       	out	0x3f, r0	; 63
    33b8:	8d bf       	out	0x3d, r24	; 61
	LCD_voidWriteString(str);
    33ba:	ce 01       	movw	r24, r28
    33bc:	01 96       	adiw	r24, 0x01	; 1
    33be:	0e 94 8e 19 	call	0x331c	; 0x331c <LCD_voidWriteString>
}
    33c2:	2e 96       	adiw	r28, 0x0e	; 14
    33c4:	0f b6       	in	r0, 0x3f	; 63
    33c6:	f8 94       	cli
    33c8:	de bf       	out	0x3e, r29	; 62
    33ca:	0f be       	out	0x3f, r0	; 63
    33cc:	cd bf       	out	0x3d, r28	; 61
    33ce:	cf 91       	pop	r28
    33d0:	df 91       	pop	r29
    33d2:	08 95       	ret

000033d4 <LCD_voidWriteRealNumber>:

void LCD_voidWriteRealNumber(float32  f32NumberCopy){
    33d4:	df 93       	push	r29
    33d6:	cf 93       	push	r28
    33d8:	cd b7       	in	r28, 0x3d	; 61
    33da:	de b7       	in	r29, 0x3e	; 62
    33dc:	ac 97       	sbiw	r28, 0x2c	; 44
    33de:	0f b6       	in	r0, 0x3f	; 63
    33e0:	f8 94       	cli
    33e2:	de bf       	out	0x3e, r29	; 62
    33e4:	0f be       	out	0x3f, r0	; 63
    33e6:	cd bf       	out	0x3d, r28	; 61
    33e8:	6b a3       	std	Y+35, r22	; 0x23
    33ea:	7c a3       	std	Y+36, r23	; 0x24
    33ec:	8d a3       	std	Y+37, r24	; 0x25
    33ee:	9e a3       	std	Y+38, r25	; 0x26
	    uint8 str [16];
		uint8 *tmpsign=(f32NumberCopy < 0)? "-" :"" ;
    33f0:	6b a1       	ldd	r22, Y+35	; 0x23
    33f2:	7c a1       	ldd	r23, Y+36	; 0x24
    33f4:	8d a1       	ldd	r24, Y+37	; 0x25
    33f6:	9e a1       	ldd	r25, Y+38	; 0x26
    33f8:	20 e0       	ldi	r18, 0x00	; 0
    33fa:	30 e0       	ldi	r19, 0x00	; 0
    33fc:	40 e0       	ldi	r20, 0x00	; 0
    33fe:	50 e0       	ldi	r21, 0x00	; 0
    3400:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    3404:	88 23       	and	r24, r24
    3406:	2c f4       	brge	.+10     	; 0x3412 <LCD_voidWriteRealNumber+0x3e>
    3408:	24 e6       	ldi	r18, 0x64	; 100
    340a:	30 e0       	ldi	r19, 0x00	; 0
    340c:	3c a7       	std	Y+44, r19	; 0x2c
    340e:	2b a7       	std	Y+43, r18	; 0x2b
    3410:	04 c0       	rjmp	.+8      	; 0x341a <LCD_voidWriteRealNumber+0x46>
    3412:	46 e6       	ldi	r20, 0x66	; 102
    3414:	50 e0       	ldi	r21, 0x00	; 0
    3416:	5c a7       	std	Y+44, r21	; 0x2c
    3418:	4b a7       	std	Y+43, r20	; 0x2b
    341a:	8b a5       	ldd	r24, Y+43	; 0x2b
    341c:	9c a5       	ldd	r25, Y+44	; 0x2c
    341e:	9a 8b       	std	Y+18, r25	; 0x12
    3420:	89 8b       	std	Y+17, r24	; 0x11
		float32 tmpval =(f32NumberCopy < 0)? -f32NumberCopy : f32NumberCopy ;
    3422:	6b a1       	ldd	r22, Y+35	; 0x23
    3424:	7c a1       	ldd	r23, Y+36	; 0x24
    3426:	8d a1       	ldd	r24, Y+37	; 0x25
    3428:	9e a1       	ldd	r25, Y+38	; 0x26
    342a:	20 e0       	ldi	r18, 0x00	; 0
    342c:	30 e0       	ldi	r19, 0x00	; 0
    342e:	40 e0       	ldi	r20, 0x00	; 0
    3430:	50 e0       	ldi	r21, 0x00	; 0
    3432:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    3436:	88 23       	and	r24, r24
    3438:	64 f4       	brge	.+24     	; 0x3452 <LCD_voidWriteRealNumber+0x7e>
    343a:	8b a1       	ldd	r24, Y+35	; 0x23
    343c:	9c a1       	ldd	r25, Y+36	; 0x24
    343e:	ad a1       	ldd	r26, Y+37	; 0x25
    3440:	be a1       	ldd	r27, Y+38	; 0x26
    3442:	9c 01       	movw	r18, r24
    3444:	ad 01       	movw	r20, r26
    3446:	50 58       	subi	r21, 0x80	; 128
    3448:	2f a3       	std	Y+39, r18	; 0x27
    344a:	38 a7       	std	Y+40, r19	; 0x28
    344c:	49 a7       	std	Y+41, r20	; 0x29
    344e:	5a a7       	std	Y+42, r21	; 0x2a
    3450:	08 c0       	rjmp	.+16     	; 0x3462 <LCD_voidWriteRealNumber+0x8e>
    3452:	8b a1       	ldd	r24, Y+35	; 0x23
    3454:	9c a1       	ldd	r25, Y+36	; 0x24
    3456:	ad a1       	ldd	r26, Y+37	; 0x25
    3458:	be a1       	ldd	r27, Y+38	; 0x26
    345a:	8f a3       	std	Y+39, r24	; 0x27
    345c:	98 a7       	std	Y+40, r25	; 0x28
    345e:	a9 a7       	std	Y+41, r26	; 0x29
    3460:	ba a7       	std	Y+42, r27	; 0x2a
    3462:	2f a1       	ldd	r18, Y+39	; 0x27
    3464:	38 a5       	ldd	r19, Y+40	; 0x28
    3466:	49 a5       	ldd	r20, Y+41	; 0x29
    3468:	5a a5       	ldd	r21, Y+42	; 0x2a
    346a:	2d 87       	std	Y+13, r18	; 0x0d
    346c:	3e 87       	std	Y+14, r19	; 0x0e
    346e:	4f 87       	std	Y+15, r20	; 0x0f
    3470:	58 8b       	std	Y+16, r21	; 0x10
		sint32 tempint1 = tmpval;
    3472:	6d 85       	ldd	r22, Y+13	; 0x0d
    3474:	7e 85       	ldd	r23, Y+14	; 0x0e
    3476:	8f 85       	ldd	r24, Y+15	; 0x0f
    3478:	98 89       	ldd	r25, Y+16	; 0x10
    347a:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <__fixsfsi>
    347e:	dc 01       	movw	r26, r24
    3480:	cb 01       	movw	r24, r22
    3482:	89 87       	std	Y+9, r24	; 0x09
    3484:	9a 87       	std	Y+10, r25	; 0x0a
    3486:	ab 87       	std	Y+11, r26	; 0x0b
    3488:	bc 87       	std	Y+12, r27	; 0x0c
	    float32 tmpfrac = tmpval - tempint1;
    348a:	69 85       	ldd	r22, Y+9	; 0x09
    348c:	7a 85       	ldd	r23, Y+10	; 0x0a
    348e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3490:	9c 85       	ldd	r25, Y+12	; 0x0c
    3492:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__floatsisf>
    3496:	9b 01       	movw	r18, r22
    3498:	ac 01       	movw	r20, r24
    349a:	6d 85       	ldd	r22, Y+13	; 0x0d
    349c:	7e 85       	ldd	r23, Y+14	; 0x0e
    349e:	8f 85       	ldd	r24, Y+15	; 0x0f
    34a0:	98 89       	ldd	r25, Y+16	; 0x10
    34a2:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <__subsf3>
    34a6:	dc 01       	movw	r26, r24
    34a8:	cb 01       	movw	r24, r22
    34aa:	8d 83       	std	Y+5, r24	; 0x05
    34ac:	9e 83       	std	Y+6, r25	; 0x06
    34ae:	af 83       	std	Y+7, r26	; 0x07
    34b0:	b8 87       	std	Y+8, r27	; 0x08
	    sint32 tempint2 = tmpfrac*10000;
    34b2:	6d 81       	ldd	r22, Y+5	; 0x05
    34b4:	7e 81       	ldd	r23, Y+6	; 0x06
    34b6:	8f 81       	ldd	r24, Y+7	; 0x07
    34b8:	98 85       	ldd	r25, Y+8	; 0x08
    34ba:	20 e0       	ldi	r18, 0x00	; 0
    34bc:	30 e4       	ldi	r19, 0x40	; 64
    34be:	4c e1       	ldi	r20, 0x1C	; 28
    34c0:	56 e4       	ldi	r21, 0x46	; 70
    34c2:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    34c6:	dc 01       	movw	r26, r24
    34c8:	cb 01       	movw	r24, r22
    34ca:	bc 01       	movw	r22, r24
    34cc:	cd 01       	movw	r24, r26
    34ce:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <__fixsfsi>
    34d2:	dc 01       	movw	r26, r24
    34d4:	cb 01       	movw	r24, r22
    34d6:	89 83       	std	Y+1, r24	; 0x01
    34d8:	9a 83       	std	Y+2, r25	; 0x02
    34da:	ab 83       	std	Y+3, r26	; 0x03
    34dc:	bc 83       	std	Y+4, r27	; 0x04
		sprintf(str ,"%s%d.%04d",tmpsign ,tempint1 ,tempint2);
    34de:	4d b7       	in	r20, 0x3d	; 61
    34e0:	5e b7       	in	r21, 0x3e	; 62
    34e2:	4e 50       	subi	r20, 0x0E	; 14
    34e4:	50 40       	sbci	r21, 0x00	; 0
    34e6:	0f b6       	in	r0, 0x3f	; 63
    34e8:	f8 94       	cli
    34ea:	5e bf       	out	0x3e, r21	; 62
    34ec:	0f be       	out	0x3f, r0	; 63
    34ee:	4d bf       	out	0x3d, r20	; 61
    34f0:	ed b7       	in	r30, 0x3d	; 61
    34f2:	fe b7       	in	r31, 0x3e	; 62
    34f4:	31 96       	adiw	r30, 0x01	; 1
    34f6:	ce 01       	movw	r24, r28
    34f8:	43 96       	adiw	r24, 0x13	; 19
    34fa:	91 83       	std	Z+1, r25	; 0x01
    34fc:	80 83       	st	Z, r24
    34fe:	87 e6       	ldi	r24, 0x67	; 103
    3500:	90 e0       	ldi	r25, 0x00	; 0
    3502:	93 83       	std	Z+3, r25	; 0x03
    3504:	82 83       	std	Z+2, r24	; 0x02
    3506:	89 89       	ldd	r24, Y+17	; 0x11
    3508:	9a 89       	ldd	r25, Y+18	; 0x12
    350a:	95 83       	std	Z+5, r25	; 0x05
    350c:	84 83       	std	Z+4, r24	; 0x04
    350e:	89 85       	ldd	r24, Y+9	; 0x09
    3510:	9a 85       	ldd	r25, Y+10	; 0x0a
    3512:	ab 85       	ldd	r26, Y+11	; 0x0b
    3514:	bc 85       	ldd	r27, Y+12	; 0x0c
    3516:	86 83       	std	Z+6, r24	; 0x06
    3518:	97 83       	std	Z+7, r25	; 0x07
    351a:	a0 87       	std	Z+8, r26	; 0x08
    351c:	b1 87       	std	Z+9, r27	; 0x09
    351e:	89 81       	ldd	r24, Y+1	; 0x01
    3520:	9a 81       	ldd	r25, Y+2	; 0x02
    3522:	ab 81       	ldd	r26, Y+3	; 0x03
    3524:	bc 81       	ldd	r27, Y+4	; 0x04
    3526:	82 87       	std	Z+10, r24	; 0x0a
    3528:	93 87       	std	Z+11, r25	; 0x0b
    352a:	a4 87       	std	Z+12, r26	; 0x0c
    352c:	b5 87       	std	Z+13, r27	; 0x0d
    352e:	0e 94 05 28 	call	0x500a	; 0x500a <sprintf>
    3532:	8d b7       	in	r24, 0x3d	; 61
    3534:	9e b7       	in	r25, 0x3e	; 62
    3536:	0e 96       	adiw	r24, 0x0e	; 14
    3538:	0f b6       	in	r0, 0x3f	; 63
    353a:	f8 94       	cli
    353c:	9e bf       	out	0x3e, r25	; 62
    353e:	0f be       	out	0x3f, r0	; 63
    3540:	8d bf       	out	0x3d, r24	; 61
		LCD_voidWriteString(str);
    3542:	ce 01       	movw	r24, r28
    3544:	43 96       	adiw	r24, 0x13	; 19
    3546:	0e 94 8e 19 	call	0x331c	; 0x331c <LCD_voidWriteString>
}
    354a:	ac 96       	adiw	r28, 0x2c	; 44
    354c:	0f b6       	in	r0, 0x3f	; 63
    354e:	f8 94       	cli
    3550:	de bf       	out	0x3e, r29	; 62
    3552:	0f be       	out	0x3f, r0	; 63
    3554:	cd bf       	out	0x3d, r28	; 61
    3556:	cf 91       	pop	r28
    3558:	df 91       	pop	r29
    355a:	08 95       	ret

0000355c <LCD_voidSendEnPulse>:

static LCD_voidSendEnPulse(){
    355c:	df 93       	push	r29
    355e:	cf 93       	push	r28
    3560:	cd b7       	in	r28, 0x3d	; 61
    3562:	de b7       	in	r29, 0x3e	; 62
    3564:	60 97       	sbiw	r28, 0x10	; 16
    3566:	0f b6       	in	r0, 0x3f	; 63
    3568:	f8 94       	cli
    356a:	de bf       	out	0x3e, r29	; 62
    356c:	0f be       	out	0x3f, r0	; 63
    356e:	cd bf       	out	0x3d, r28	; 61

	DIO_u8SetPinVal(LCD_EN_PORT , LCD_EN_PIN , HIGH); //ENABLE high
    3570:	81 e0       	ldi	r24, 0x01	; 1
    3572:	62 e0       	ldi	r22, 0x02	; 2
    3574:	41 e0       	ldi	r20, 0x01	; 1
    3576:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>
    357a:	80 e0       	ldi	r24, 0x00	; 0
    357c:	90 e0       	ldi	r25, 0x00	; 0
    357e:	a0 e0       	ldi	r26, 0x00	; 0
    3580:	b0 e4       	ldi	r27, 0x40	; 64
    3582:	8b 87       	std	Y+11, r24	; 0x0b
    3584:	9c 87       	std	Y+12, r25	; 0x0c
    3586:	ad 87       	std	Y+13, r26	; 0x0d
    3588:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    358a:	6b 85       	ldd	r22, Y+11	; 0x0b
    358c:	7c 85       	ldd	r23, Y+12	; 0x0c
    358e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3590:	9e 85       	ldd	r25, Y+14	; 0x0e
    3592:	20 e0       	ldi	r18, 0x00	; 0
    3594:	30 e0       	ldi	r19, 0x00	; 0
    3596:	4a ef       	ldi	r20, 0xFA	; 250
    3598:	54 e4       	ldi	r21, 0x44	; 68
    359a:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    359e:	dc 01       	movw	r26, r24
    35a0:	cb 01       	movw	r24, r22
    35a2:	8f 83       	std	Y+7, r24	; 0x07
    35a4:	98 87       	std	Y+8, r25	; 0x08
    35a6:	a9 87       	std	Y+9, r26	; 0x09
    35a8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    35aa:	6f 81       	ldd	r22, Y+7	; 0x07
    35ac:	78 85       	ldd	r23, Y+8	; 0x08
    35ae:	89 85       	ldd	r24, Y+9	; 0x09
    35b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    35b2:	20 e0       	ldi	r18, 0x00	; 0
    35b4:	30 e0       	ldi	r19, 0x00	; 0
    35b6:	40 e8       	ldi	r20, 0x80	; 128
    35b8:	5f e3       	ldi	r21, 0x3F	; 63
    35ba:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    35be:	88 23       	and	r24, r24
    35c0:	2c f4       	brge	.+10     	; 0x35cc <LCD_voidSendEnPulse+0x70>
		__ticks = 1;
    35c2:	81 e0       	ldi	r24, 0x01	; 1
    35c4:	90 e0       	ldi	r25, 0x00	; 0
    35c6:	9e 83       	std	Y+6, r25	; 0x06
    35c8:	8d 83       	std	Y+5, r24	; 0x05
    35ca:	3f c0       	rjmp	.+126    	; 0x364a <LCD_voidSendEnPulse+0xee>
	else if (__tmp > 65535)
    35cc:	6f 81       	ldd	r22, Y+7	; 0x07
    35ce:	78 85       	ldd	r23, Y+8	; 0x08
    35d0:	89 85       	ldd	r24, Y+9	; 0x09
    35d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    35d4:	20 e0       	ldi	r18, 0x00	; 0
    35d6:	3f ef       	ldi	r19, 0xFF	; 255
    35d8:	4f e7       	ldi	r20, 0x7F	; 127
    35da:	57 e4       	ldi	r21, 0x47	; 71
    35dc:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    35e0:	18 16       	cp	r1, r24
    35e2:	4c f5       	brge	.+82     	; 0x3636 <LCD_voidSendEnPulse+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    35e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    35e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    35ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    35ec:	20 e0       	ldi	r18, 0x00	; 0
    35ee:	30 e0       	ldi	r19, 0x00	; 0
    35f0:	40 e2       	ldi	r20, 0x20	; 32
    35f2:	51 e4       	ldi	r21, 0x41	; 65
    35f4:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    35f8:	dc 01       	movw	r26, r24
    35fa:	cb 01       	movw	r24, r22
    35fc:	bc 01       	movw	r22, r24
    35fe:	cd 01       	movw	r24, r26
    3600:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3604:	dc 01       	movw	r26, r24
    3606:	cb 01       	movw	r24, r22
    3608:	9e 83       	std	Y+6, r25	; 0x06
    360a:	8d 83       	std	Y+5, r24	; 0x05
    360c:	0f c0       	rjmp	.+30     	; 0x362c <LCD_voidSendEnPulse+0xd0>
    360e:	88 ec       	ldi	r24, 0xC8	; 200
    3610:	90 e0       	ldi	r25, 0x00	; 0
    3612:	9c 83       	std	Y+4, r25	; 0x04
    3614:	8b 83       	std	Y+3, r24	; 0x03
    3616:	8b 81       	ldd	r24, Y+3	; 0x03
    3618:	9c 81       	ldd	r25, Y+4	; 0x04
    361a:	01 97       	sbiw	r24, 0x01	; 1
    361c:	f1 f7       	brne	.-4      	; 0x361a <LCD_voidSendEnPulse+0xbe>
    361e:	9c 83       	std	Y+4, r25	; 0x04
    3620:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3622:	8d 81       	ldd	r24, Y+5	; 0x05
    3624:	9e 81       	ldd	r25, Y+6	; 0x06
    3626:	01 97       	sbiw	r24, 0x01	; 1
    3628:	9e 83       	std	Y+6, r25	; 0x06
    362a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    362c:	8d 81       	ldd	r24, Y+5	; 0x05
    362e:	9e 81       	ldd	r25, Y+6	; 0x06
    3630:	00 97       	sbiw	r24, 0x00	; 0
    3632:	69 f7       	brne	.-38     	; 0x360e <LCD_voidSendEnPulse+0xb2>
    3634:	14 c0       	rjmp	.+40     	; 0x365e <LCD_voidSendEnPulse+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3636:	6f 81       	ldd	r22, Y+7	; 0x07
    3638:	78 85       	ldd	r23, Y+8	; 0x08
    363a:	89 85       	ldd	r24, Y+9	; 0x09
    363c:	9a 85       	ldd	r25, Y+10	; 0x0a
    363e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3642:	dc 01       	movw	r26, r24
    3644:	cb 01       	movw	r24, r22
    3646:	9e 83       	std	Y+6, r25	; 0x06
    3648:	8d 83       	std	Y+5, r24	; 0x05
    364a:	8d 81       	ldd	r24, Y+5	; 0x05
    364c:	9e 81       	ldd	r25, Y+6	; 0x06
    364e:	9a 83       	std	Y+2, r25	; 0x02
    3650:	89 83       	std	Y+1, r24	; 0x01
    3652:	89 81       	ldd	r24, Y+1	; 0x01
    3654:	9a 81       	ldd	r25, Y+2	; 0x02
    3656:	01 97       	sbiw	r24, 0x01	; 1
    3658:	f1 f7       	brne	.-4      	; 0x3656 <LCD_voidSendEnPulse+0xfa>
    365a:	9a 83       	std	Y+2, r25	; 0x02
    365c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinVal(LCD_EN_PORT , LCD_EN_PIN , LOW); //ENABLE high
    365e:	81 e0       	ldi	r24, 0x01	; 1
    3660:	62 e0       	ldi	r22, 0x02	; 2
    3662:	40 e0       	ldi	r20, 0x00	; 0
    3664:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>

}
    3668:	60 96       	adiw	r28, 0x10	; 16
    366a:	0f b6       	in	r0, 0x3f	; 63
    366c:	f8 94       	cli
    366e:	de bf       	out	0x3e, r29	; 62
    3670:	0f be       	out	0x3f, r0	; 63
    3672:	cd bf       	out	0x3d, r28	; 61
    3674:	cf 91       	pop	r28
    3676:	df 91       	pop	r29
    3678:	08 95       	ret

0000367a <Keypad_voidInit>:

#include "KEYPAD_cfg.h"
#include "KEYPAD_int.h"


void Keypad_voidInit (void){
    367a:	df 93       	push	r29
    367c:	cf 93       	push	r28
    367e:	00 d0       	rcall	.+0      	; 0x3680 <Keypad_voidInit+0x6>
    3680:	cd b7       	in	r28, 0x3d	; 61
    3682:	de b7       	in	r29, 0x3e	; 62

	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
    3684:	1a 82       	std	Y+2, r1	; 0x02
    3686:	31 c0       	rjmp	.+98     	; 0x36ea <Keypad_voidInit+0x70>
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
    3688:	8a 81       	ldd	r24, Y+2	; 0x02
    368a:	88 2f       	mov	r24, r24
    368c:	90 e0       	ldi	r25, 0x00	; 0
    368e:	88 0f       	add	r24, r24
    3690:	99 1f       	adc	r25, r25
    3692:	fc 01       	movw	r30, r24
    3694:	e2 56       	subi	r30, 0x62	; 98
    3696:	fe 4f       	sbci	r31, 0xFE	; 254
    3698:	20 81       	ld	r18, Z
    369a:	8a 81       	ldd	r24, Y+2	; 0x02
    369c:	88 2f       	mov	r24, r24
    369e:	90 e0       	ldi	r25, 0x00	; 0
    36a0:	88 0f       	add	r24, r24
    36a2:	99 1f       	adc	r25, r25
    36a4:	fc 01       	movw	r30, r24
    36a6:	e1 56       	subi	r30, 0x61	; 97
    36a8:	fe 4f       	sbci	r31, 0xFE	; 254
    36aa:	90 81       	ld	r25, Z
    36ac:	82 2f       	mov	r24, r18
    36ae:	69 2f       	mov	r22, r25
    36b0:	41 e0       	ldi	r20, 0x01	; 1
    36b2:	0e 94 55 10 	call	0x20aa	; 0x20aa <DIO_u8SetPinDir>
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
    36b6:	8a 81       	ldd	r24, Y+2	; 0x02
    36b8:	88 2f       	mov	r24, r24
    36ba:	90 e0       	ldi	r25, 0x00	; 0
    36bc:	88 0f       	add	r24, r24
    36be:	99 1f       	adc	r25, r25
    36c0:	fc 01       	movw	r30, r24
    36c2:	e2 56       	subi	r30, 0x62	; 98
    36c4:	fe 4f       	sbci	r31, 0xFE	; 254
    36c6:	20 81       	ld	r18, Z
    36c8:	8a 81       	ldd	r24, Y+2	; 0x02
    36ca:	88 2f       	mov	r24, r24
    36cc:	90 e0       	ldi	r25, 0x00	; 0
    36ce:	88 0f       	add	r24, r24
    36d0:	99 1f       	adc	r25, r25
    36d2:	fc 01       	movw	r30, r24
    36d4:	e1 56       	subi	r30, 0x61	; 97
    36d6:	fe 4f       	sbci	r31, 0xFE	; 254
    36d8:	90 81       	ld	r25, Z
    36da:	82 2f       	mov	r24, r18
    36dc:	69 2f       	mov	r22, r25
    36de:	41 e0       	ldi	r20, 0x01	; 1
    36e0:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>

void Keypad_voidInit (void){

	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
    36e4:	8a 81       	ldd	r24, Y+2	; 0x02
    36e6:	8f 5f       	subi	r24, 0xFF	; 255
    36e8:	8a 83       	std	Y+2, r24	; 0x02
    36ea:	8a 81       	ldd	r24, Y+2	; 0x02
    36ec:	84 30       	cpi	r24, 0x04	; 4
    36ee:	60 f2       	brcs	.-104    	; 0x3688 <Keypad_voidInit+0xe>
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
	}
	for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ ){
    36f0:	19 82       	std	Y+1, r1	; 0x01
    36f2:	31 c0       	rjmp	.+98     	; 0x3756 <Keypad_voidInit+0xdc>
		DIO_u8SetPinDir(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , INPUT );
    36f4:	89 81       	ldd	r24, Y+1	; 0x01
    36f6:	88 2f       	mov	r24, r24
    36f8:	90 e0       	ldi	r25, 0x00	; 0
    36fa:	88 0f       	add	r24, r24
    36fc:	99 1f       	adc	r25, r25
    36fe:	fc 01       	movw	r30, r24
    3700:	ea 56       	subi	r30, 0x6A	; 106
    3702:	fe 4f       	sbci	r31, 0xFE	; 254
    3704:	20 81       	ld	r18, Z
    3706:	89 81       	ldd	r24, Y+1	; 0x01
    3708:	88 2f       	mov	r24, r24
    370a:	90 e0       	ldi	r25, 0x00	; 0
    370c:	88 0f       	add	r24, r24
    370e:	99 1f       	adc	r25, r25
    3710:	fc 01       	movw	r30, r24
    3712:	e9 56       	subi	r30, 0x69	; 105
    3714:	fe 4f       	sbci	r31, 0xFE	; 254
    3716:	90 81       	ld	r25, Z
    3718:	82 2f       	mov	r24, r18
    371a:	69 2f       	mov	r22, r25
    371c:	40 e0       	ldi	r20, 0x00	; 0
    371e:	0e 94 55 10 	call	0x20aa	; 0x20aa <DIO_u8SetPinDir>
		//PULLUP
		DIO_u8SetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , HIGH );
    3722:	89 81       	ldd	r24, Y+1	; 0x01
    3724:	88 2f       	mov	r24, r24
    3726:	90 e0       	ldi	r25, 0x00	; 0
    3728:	88 0f       	add	r24, r24
    372a:	99 1f       	adc	r25, r25
    372c:	fc 01       	movw	r30, r24
    372e:	ea 56       	subi	r30, 0x6A	; 106
    3730:	fe 4f       	sbci	r31, 0xFE	; 254
    3732:	20 81       	ld	r18, Z
    3734:	89 81       	ldd	r24, Y+1	; 0x01
    3736:	88 2f       	mov	r24, r24
    3738:	90 e0       	ldi	r25, 0x00	; 0
    373a:	88 0f       	add	r24, r24
    373c:	99 1f       	adc	r25, r25
    373e:	fc 01       	movw	r30, r24
    3740:	e9 56       	subi	r30, 0x69	; 105
    3742:	fe 4f       	sbci	r31, 0xFE	; 254
    3744:	90 81       	ld	r25, Z
    3746:	82 2f       	mov	r24, r18
    3748:	69 2f       	mov	r22, r25
    374a:	41 e0       	ldi	r20, 0x01	; 1
    374c:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>
	for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++) {
		DIO_u8SetPinDir(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , OUTPUT);
		//INTIAL STATE
		DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
	}
	for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ ){
    3750:	89 81       	ldd	r24, Y+1	; 0x01
    3752:	8f 5f       	subi	r24, 0xFF	; 255
    3754:	89 83       	std	Y+1, r24	; 0x01
    3756:	89 81       	ldd	r24, Y+1	; 0x01
    3758:	84 30       	cpi	r24, 0x04	; 4
    375a:	60 f2       	brcs	.-104    	; 0x36f4 <Keypad_voidInit+0x7a>
		DIO_u8SetPinDir(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , INPUT );
		//PULLUP
		DIO_u8SetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , HIGH );
	}
}
    375c:	0f 90       	pop	r0
    375e:	0f 90       	pop	r0
    3760:	cf 91       	pop	r28
    3762:	df 91       	pop	r29
    3764:	08 95       	ret

00003766 <keypad_u8CheckPress>:

uint8 keypad_u8CheckPress(void){
    3766:	df 93       	push	r29
    3768:	cf 93       	push	r28
    376a:	cd b7       	in	r28, 0x3d	; 61
    376c:	de b7       	in	r29, 0x3e	; 62
    376e:	62 97       	sbiw	r28, 0x12	; 18
    3770:	0f b6       	in	r0, 0x3f	; 63
    3772:	f8 94       	cli
    3774:	de bf       	out	0x3e, r29	; 62
    3776:	0f be       	out	0x3f, r0	; 63
    3778:	cd bf       	out	0x3d, r28	; 61
	uint8 Local_u8KeyPressed  = NOTPRESSED;
    377a:	8f ef       	ldi	r24, 0xFF	; 255
    377c:	89 8b       	std	Y+17, r24	; 0x11
    377e:	ff c0       	rjmp	.+510    	; 0x397e <keypad_u8CheckPress+0x218>
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
    3780:	18 8a       	std	Y+16, r1	; 0x10
    3782:	f9 c0       	rjmp	.+498    	; 0x3976 <keypad_u8CheckPress+0x210>
			{
				//activate column
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , LOW );
    3784:	88 89       	ldd	r24, Y+16	; 0x10
    3786:	88 2f       	mov	r24, r24
    3788:	90 e0       	ldi	r25, 0x00	; 0
    378a:	88 0f       	add	r24, r24
    378c:	99 1f       	adc	r25, r25
    378e:	fc 01       	movw	r30, r24
    3790:	e2 56       	subi	r30, 0x62	; 98
    3792:	fe 4f       	sbci	r31, 0xFE	; 254
    3794:	20 81       	ld	r18, Z
    3796:	88 89       	ldd	r24, Y+16	; 0x10
    3798:	88 2f       	mov	r24, r24
    379a:	90 e0       	ldi	r25, 0x00	; 0
    379c:	88 0f       	add	r24, r24
    379e:	99 1f       	adc	r25, r25
    37a0:	fc 01       	movw	r30, r24
    37a2:	e1 56       	subi	r30, 0x61	; 97
    37a4:	fe 4f       	sbci	r31, 0xFE	; 254
    37a6:	90 81       	ld	r25, Z
    37a8:	82 2f       	mov	r24, r18
    37aa:	69 2f       	mov	r22, r25
    37ac:	40 e0       	ldi	r20, 0x00	; 0
    37ae:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>

				for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ )
    37b2:	1f 86       	std	Y+15, r1	; 0x0f
    37b4:	c2 c0       	rjmp	.+388    	; 0x393a <keypad_u8CheckPress+0x1d4>
				{
					//check status of current row
					DIO_u8GetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , &Local_u8RowStatus );
    37b6:	8f 85       	ldd	r24, Y+15	; 0x0f
    37b8:	88 2f       	mov	r24, r24
    37ba:	90 e0       	ldi	r25, 0x00	; 0
    37bc:	88 0f       	add	r24, r24
    37be:	99 1f       	adc	r25, r25
    37c0:	fc 01       	movw	r30, r24
    37c2:	ea 56       	subi	r30, 0x6A	; 106
    37c4:	fe 4f       	sbci	r31, 0xFE	; 254
    37c6:	40 81       	ld	r20, Z
    37c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    37ca:	88 2f       	mov	r24, r24
    37cc:	90 e0       	ldi	r25, 0x00	; 0
    37ce:	88 0f       	add	r24, r24
    37d0:	99 1f       	adc	r25, r25
    37d2:	fc 01       	movw	r30, r24
    37d4:	e9 56       	subi	r30, 0x69	; 105
    37d6:	fe 4f       	sbci	r31, 0xFE	; 254
    37d8:	90 81       	ld	r25, Z
    37da:	9e 01       	movw	r18, r28
    37dc:	2e 5e       	subi	r18, 0xEE	; 238
    37de:	3f 4f       	sbci	r19, 0xFF	; 255
    37e0:	84 2f       	mov	r24, r20
    37e2:	69 2f       	mov	r22, r25
    37e4:	a9 01       	movw	r20, r18
    37e6:	0e 94 73 12 	call	0x24e6	; 0x24e6 <DIO_u8GetPinVal>
					if (Local_u8RowStatus == 0 )
    37ea:	8a 89       	ldd	r24, Y+18	; 0x12
    37ec:	88 23       	and	r24, r24
    37ee:	09 f0       	breq	.+2      	; 0x37f2 <keypad_u8CheckPress+0x8c>
    37f0:	a1 c0       	rjmp	.+322    	; 0x3934 <keypad_u8CheckPress+0x1ce>
    37f2:	80 e0       	ldi	r24, 0x00	; 0
    37f4:	90 e0       	ldi	r25, 0x00	; 0
    37f6:	a8 e4       	ldi	r26, 0x48	; 72
    37f8:	b2 e4       	ldi	r27, 0x42	; 66
    37fa:	8b 87       	std	Y+11, r24	; 0x0b
    37fc:	9c 87       	std	Y+12, r25	; 0x0c
    37fe:	ad 87       	std	Y+13, r26	; 0x0d
    3800:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3802:	6b 85       	ldd	r22, Y+11	; 0x0b
    3804:	7c 85       	ldd	r23, Y+12	; 0x0c
    3806:	8d 85       	ldd	r24, Y+13	; 0x0d
    3808:	9e 85       	ldd	r25, Y+14	; 0x0e
    380a:	20 e0       	ldi	r18, 0x00	; 0
    380c:	30 e0       	ldi	r19, 0x00	; 0
    380e:	4a ef       	ldi	r20, 0xFA	; 250
    3810:	54 e4       	ldi	r21, 0x44	; 68
    3812:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    3816:	dc 01       	movw	r26, r24
    3818:	cb 01       	movw	r24, r22
    381a:	8f 83       	std	Y+7, r24	; 0x07
    381c:	98 87       	std	Y+8, r25	; 0x08
    381e:	a9 87       	std	Y+9, r26	; 0x09
    3820:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3822:	6f 81       	ldd	r22, Y+7	; 0x07
    3824:	78 85       	ldd	r23, Y+8	; 0x08
    3826:	89 85       	ldd	r24, Y+9	; 0x09
    3828:	9a 85       	ldd	r25, Y+10	; 0x0a
    382a:	20 e0       	ldi	r18, 0x00	; 0
    382c:	30 e0       	ldi	r19, 0x00	; 0
    382e:	40 e8       	ldi	r20, 0x80	; 128
    3830:	5f e3       	ldi	r21, 0x3F	; 63
    3832:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    3836:	88 23       	and	r24, r24
    3838:	2c f4       	brge	.+10     	; 0x3844 <keypad_u8CheckPress+0xde>
		__ticks = 1;
    383a:	81 e0       	ldi	r24, 0x01	; 1
    383c:	90 e0       	ldi	r25, 0x00	; 0
    383e:	9e 83       	std	Y+6, r25	; 0x06
    3840:	8d 83       	std	Y+5, r24	; 0x05
    3842:	3f c0       	rjmp	.+126    	; 0x38c2 <keypad_u8CheckPress+0x15c>
	else if (__tmp > 65535)
    3844:	6f 81       	ldd	r22, Y+7	; 0x07
    3846:	78 85       	ldd	r23, Y+8	; 0x08
    3848:	89 85       	ldd	r24, Y+9	; 0x09
    384a:	9a 85       	ldd	r25, Y+10	; 0x0a
    384c:	20 e0       	ldi	r18, 0x00	; 0
    384e:	3f ef       	ldi	r19, 0xFF	; 255
    3850:	4f e7       	ldi	r20, 0x7F	; 127
    3852:	57 e4       	ldi	r21, 0x47	; 71
    3854:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    3858:	18 16       	cp	r1, r24
    385a:	4c f5       	brge	.+82     	; 0x38ae <keypad_u8CheckPress+0x148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    385c:	6b 85       	ldd	r22, Y+11	; 0x0b
    385e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3860:	8d 85       	ldd	r24, Y+13	; 0x0d
    3862:	9e 85       	ldd	r25, Y+14	; 0x0e
    3864:	20 e0       	ldi	r18, 0x00	; 0
    3866:	30 e0       	ldi	r19, 0x00	; 0
    3868:	40 e2       	ldi	r20, 0x20	; 32
    386a:	51 e4       	ldi	r21, 0x41	; 65
    386c:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    3870:	dc 01       	movw	r26, r24
    3872:	cb 01       	movw	r24, r22
    3874:	bc 01       	movw	r22, r24
    3876:	cd 01       	movw	r24, r26
    3878:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    387c:	dc 01       	movw	r26, r24
    387e:	cb 01       	movw	r24, r22
    3880:	9e 83       	std	Y+6, r25	; 0x06
    3882:	8d 83       	std	Y+5, r24	; 0x05
    3884:	0f c0       	rjmp	.+30     	; 0x38a4 <keypad_u8CheckPress+0x13e>
    3886:	88 ec       	ldi	r24, 0xC8	; 200
    3888:	90 e0       	ldi	r25, 0x00	; 0
    388a:	9c 83       	std	Y+4, r25	; 0x04
    388c:	8b 83       	std	Y+3, r24	; 0x03
    388e:	8b 81       	ldd	r24, Y+3	; 0x03
    3890:	9c 81       	ldd	r25, Y+4	; 0x04
    3892:	01 97       	sbiw	r24, 0x01	; 1
    3894:	f1 f7       	brne	.-4      	; 0x3892 <keypad_u8CheckPress+0x12c>
    3896:	9c 83       	std	Y+4, r25	; 0x04
    3898:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    389a:	8d 81       	ldd	r24, Y+5	; 0x05
    389c:	9e 81       	ldd	r25, Y+6	; 0x06
    389e:	01 97       	sbiw	r24, 0x01	; 1
    38a0:	9e 83       	std	Y+6, r25	; 0x06
    38a2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38a4:	8d 81       	ldd	r24, Y+5	; 0x05
    38a6:	9e 81       	ldd	r25, Y+6	; 0x06
    38a8:	00 97       	sbiw	r24, 0x00	; 0
    38aa:	69 f7       	brne	.-38     	; 0x3886 <keypad_u8CheckPress+0x120>
    38ac:	14 c0       	rjmp	.+40     	; 0x38d6 <keypad_u8CheckPress+0x170>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38ae:	6f 81       	ldd	r22, Y+7	; 0x07
    38b0:	78 85       	ldd	r23, Y+8	; 0x08
    38b2:	89 85       	ldd	r24, Y+9	; 0x09
    38b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    38b6:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    38ba:	dc 01       	movw	r26, r24
    38bc:	cb 01       	movw	r24, r22
    38be:	9e 83       	std	Y+6, r25	; 0x06
    38c0:	8d 83       	std	Y+5, r24	; 0x05
    38c2:	8d 81       	ldd	r24, Y+5	; 0x05
    38c4:	9e 81       	ldd	r25, Y+6	; 0x06
    38c6:	9a 83       	std	Y+2, r25	; 0x02
    38c8:	89 83       	std	Y+1, r24	; 0x01
    38ca:	89 81       	ldd	r24, Y+1	; 0x01
    38cc:	9a 81       	ldd	r25, Y+2	; 0x02
    38ce:	01 97       	sbiw	r24, 0x01	; 1
    38d0:	f1 f7       	brne	.-4      	; 0x38ce <keypad_u8CheckPress+0x168>
    38d2:	9a 83       	std	Y+2, r25	; 0x02
    38d4:	89 83       	std	Y+1, r24	; 0x01
					{
						_delay_ms(50);
						DIO_u8GetPinVal(KEYPAD_au8RowPins[Local_u8Row].port ,KEYPAD_au8RowPins[Local_u8Row].pin , &Local_u8RowStatus );
    38d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    38d8:	88 2f       	mov	r24, r24
    38da:	90 e0       	ldi	r25, 0x00	; 0
    38dc:	88 0f       	add	r24, r24
    38de:	99 1f       	adc	r25, r25
    38e0:	fc 01       	movw	r30, r24
    38e2:	ea 56       	subi	r30, 0x6A	; 106
    38e4:	fe 4f       	sbci	r31, 0xFE	; 254
    38e6:	40 81       	ld	r20, Z
    38e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    38ea:	88 2f       	mov	r24, r24
    38ec:	90 e0       	ldi	r25, 0x00	; 0
    38ee:	88 0f       	add	r24, r24
    38f0:	99 1f       	adc	r25, r25
    38f2:	fc 01       	movw	r30, r24
    38f4:	e9 56       	subi	r30, 0x69	; 105
    38f6:	fe 4f       	sbci	r31, 0xFE	; 254
    38f8:	90 81       	ld	r25, Z
    38fa:	9e 01       	movw	r18, r28
    38fc:	2e 5e       	subi	r18, 0xEE	; 238
    38fe:	3f 4f       	sbci	r19, 0xFF	; 255
    3900:	84 2f       	mov	r24, r20
    3902:	69 2f       	mov	r22, r25
    3904:	a9 01       	movw	r20, r18
    3906:	0e 94 73 12 	call	0x24e6	; 0x24e6 <DIO_u8GetPinVal>
						if (Local_u8RowStatus == 0 )
    390a:	8a 89       	ldd	r24, Y+18	; 0x12
    390c:	88 23       	and	r24, r24
    390e:	91 f4       	brne	.+36     	; 0x3934 <keypad_u8CheckPress+0x1ce>
						{
							Local_u8KeyPressed = KEYPAD_au8KeyVal [Local_u8Row][Local_u8Col];
    3910:	8f 85       	ldd	r24, Y+15	; 0x0f
    3912:	48 2f       	mov	r20, r24
    3914:	50 e0       	ldi	r21, 0x00	; 0
    3916:	88 89       	ldd	r24, Y+16	; 0x10
    3918:	28 2f       	mov	r18, r24
    391a:	30 e0       	ldi	r19, 0x00	; 0
    391c:	ca 01       	movw	r24, r20
    391e:	88 0f       	add	r24, r24
    3920:	99 1f       	adc	r25, r25
    3922:	88 0f       	add	r24, r24
    3924:	99 1f       	adc	r25, r25
    3926:	82 0f       	add	r24, r18
    3928:	93 1f       	adc	r25, r19
    392a:	fc 01       	movw	r30, r24
    392c:	ea 57       	subi	r30, 0x7A	; 122
    392e:	fe 4f       	sbci	r31, 0xFE	; 254
    3930:	80 81       	ld	r24, Z
    3932:	89 8b       	std	Y+17, r24	; 0x11
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
			{
				//activate column
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , LOW );

				for (Local_u8Row = 0 ; Local_u8Row <KEYPAD_NO_ROW ; Local_u8Row++ )
    3934:	8f 85       	ldd	r24, Y+15	; 0x0f
    3936:	8f 5f       	subi	r24, 0xFF	; 255
    3938:	8f 87       	std	Y+15, r24	; 0x0f
    393a:	8f 85       	ldd	r24, Y+15	; 0x0f
    393c:	84 30       	cpi	r24, 0x04	; 4
    393e:	08 f4       	brcc	.+2      	; 0x3942 <keypad_u8CheckPress+0x1dc>
    3940:	3a cf       	rjmp	.-396    	; 0x37b6 <keypad_u8CheckPress+0x50>
					}

				}

				//Deactivate COl
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
    3942:	88 89       	ldd	r24, Y+16	; 0x10
    3944:	88 2f       	mov	r24, r24
    3946:	90 e0       	ldi	r25, 0x00	; 0
    3948:	88 0f       	add	r24, r24
    394a:	99 1f       	adc	r25, r25
    394c:	fc 01       	movw	r30, r24
    394e:	e2 56       	subi	r30, 0x62	; 98
    3950:	fe 4f       	sbci	r31, 0xFE	; 254
    3952:	20 81       	ld	r18, Z
    3954:	88 89       	ldd	r24, Y+16	; 0x10
    3956:	88 2f       	mov	r24, r24
    3958:	90 e0       	ldi	r25, 0x00	; 0
    395a:	88 0f       	add	r24, r24
    395c:	99 1f       	adc	r25, r25
    395e:	fc 01       	movw	r30, r24
    3960:	e1 56       	subi	r30, 0x61	; 97
    3962:	fe 4f       	sbci	r31, 0xFE	; 254
    3964:	90 81       	ld	r25, Z
    3966:	82 2f       	mov	r24, r18
    3968:	69 2f       	mov	r22, r25
    396a:	41 e0       	ldi	r20, 0x01	; 1
    396c:	0e 94 64 11 	call	0x22c8	; 0x22c8 <DIO_u8SetPinVal>
	uint8 Local_u8KeyPressed  = NOTPRESSED;
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
			for (Local_u8Col = 0 ; Local_u8Col < KEYPAD_NO_COL ; Local_u8Col++)
    3970:	88 89       	ldd	r24, Y+16	; 0x10
    3972:	8f 5f       	subi	r24, 0xFF	; 255
    3974:	88 8b       	std	Y+16, r24	; 0x10
    3976:	88 89       	ldd	r24, Y+16	; 0x10
    3978:	84 30       	cpi	r24, 0x04	; 4
    397a:	08 f4       	brcc	.+2      	; 0x397e <keypad_u8CheckPress+0x218>
    397c:	03 cf       	rjmp	.-506    	; 0x3784 <keypad_u8CheckPress+0x1e>
uint8 keypad_u8CheckPress(void){
	uint8 Local_u8KeyPressed  = NOTPRESSED;
	uint8 Local_u8RowStatus ;
	uint8 Local_u8Col ;
	uint8 Local_u8Row ;
     while(Local_u8KeyPressed ==NOTPRESSED){
    397e:	89 89       	ldd	r24, Y+17	; 0x11
    3980:	8f 3f       	cpi	r24, 0xFF	; 255
    3982:	09 f4       	brne	.+2      	; 0x3986 <keypad_u8CheckPress+0x220>
    3984:	fd ce       	rjmp	.-518    	; 0x3780 <keypad_u8CheckPress+0x1a>

				//Deactivate COl
				DIO_u8SetPinVal(KEYPAD_au8ColPins[Local_u8Col].port ,KEYPAD_au8ColPins[Local_u8Col].pin , HIGH );
			}
		   }
			return Local_u8KeyPressed ;
    3986:	89 89       	ldd	r24, Y+17	; 0x11

}
    3988:	62 96       	adiw	r28, 0x12	; 18
    398a:	0f b6       	in	r0, 0x3f	; 63
    398c:	f8 94       	cli
    398e:	de bf       	out	0x3e, r29	; 62
    3990:	0f be       	out	0x3f, r0	; 63
    3992:	cd bf       	out	0x3d, r28	; 61
    3994:	cf 91       	pop	r28
    3996:	df 91       	pop	r29
    3998:	08 95       	ret

0000399a <ScanData>:

sint8 Sign =1;
uint8 OtherNumberSign=false;

uint8 ScanData ()
{
    399a:	df 93       	push	r29
    399c:	cf 93       	push	r28
    399e:	cd b7       	in	r28, 0x3d	; 61
    39a0:	de b7       	in	r29, 0x3e	; 62
    39a2:	2f 97       	sbiw	r28, 0x0f	; 15
    39a4:	0f b6       	in	r0, 0x3f	; 63
    39a6:	f8 94       	cli
    39a8:	de bf       	out	0x3e, r29	; 62
    39aa:	0f be       	out	0x3f, r0	; 63
    39ac:	cd bf       	out	0x3d, r28	; 61
	uint8 temp=0;
    39ae:	1f 86       	std	Y+15, r1	; 0x0f
	temp = keypad_u8CheckPress();
    39b0:	0e 94 b3 1b 	call	0x3766	; 0x3766 <keypad_u8CheckPress>
    39b4:	8f 87       	std	Y+15, r24	; 0x0f
    39b6:	9d c0       	rjmp	.+314    	; 0x3af2 <ScanData+0x158>
	while(temp!= '=')
	{

		if (temp == 'A')
    39b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    39ba:	81 34       	cpi	r24, 0x41	; 65
    39bc:	29 f4       	brne	.+10     	; 0x39c8 <ScanData+0x2e>
		{
			Resetall();
    39be:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <Resetall>
			LCD_voidWriteCmd(0x01);
    39c2:	81 e0       	ldi	r24, 0x01	; 1
    39c4:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
		}

		//storing any thing the user input
		if((temp!=0) && (temp != 'A'))
    39c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    39ca:	88 23       	and	r24, r24
    39cc:	09 f4       	brne	.+2      	; 0x39d0 <ScanData+0x36>
    39ce:	8e c0       	rjmp	.+284    	; 0x3aec <ScanData+0x152>
    39d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    39d2:	81 34       	cpi	r24, 0x41	; 65
    39d4:	09 f4       	brne	.+2      	; 0x39d8 <ScanData+0x3e>
    39d6:	8a c0       	rjmp	.+276    	; 0x3aec <ScanData+0x152>
		{

			Digit[DigitCounter]=temp;
    39d8:	80 91 b2 01 	lds	r24, 0x01B2
    39dc:	88 2f       	mov	r24, r24
    39de:	90 e0       	ldi	r25, 0x00	; 0
    39e0:	fc 01       	movw	r30, r24
    39e2:	ec 54       	subi	r30, 0x4C	; 76
    39e4:	fe 4f       	sbci	r31, 0xFE	; 254
    39e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    39e8:	80 83       	st	Z, r24
			LCD_voidWriteChar(Digit[DigitCounter]);
    39ea:	80 91 b2 01 	lds	r24, 0x01B2
    39ee:	88 2f       	mov	r24, r24
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	fc 01       	movw	r30, r24
    39f4:	ec 54       	subi	r30, 0x4C	; 76
    39f6:	fe 4f       	sbci	r31, 0xFE	; 254
    39f8:	80 81       	ld	r24, Z
    39fa:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <LCD_voidWriteChar>
			DigitCounter++;
    39fe:	80 91 b2 01 	lds	r24, 0x01B2
    3a02:	8f 5f       	subi	r24, 0xFF	; 255
    3a04:	80 93 b2 01 	sts	0x01B2, r24
    3a08:	80 e0       	ldi	r24, 0x00	; 0
    3a0a:	90 e0       	ldi	r25, 0x00	; 0
    3a0c:	a8 e4       	ldi	r26, 0x48	; 72
    3a0e:	b2 e4       	ldi	r27, 0x42	; 66
    3a10:	8b 87       	std	Y+11, r24	; 0x0b
    3a12:	9c 87       	std	Y+12, r25	; 0x0c
    3a14:	ad 87       	std	Y+13, r26	; 0x0d
    3a16:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a18:	6b 85       	ldd	r22, Y+11	; 0x0b
    3a1a:	7c 85       	ldd	r23, Y+12	; 0x0c
    3a1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    3a1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3a20:	20 e0       	ldi	r18, 0x00	; 0
    3a22:	30 e0       	ldi	r19, 0x00	; 0
    3a24:	4a ef       	ldi	r20, 0xFA	; 250
    3a26:	54 e4       	ldi	r21, 0x44	; 68
    3a28:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    3a2c:	dc 01       	movw	r26, r24
    3a2e:	cb 01       	movw	r24, r22
    3a30:	8f 83       	std	Y+7, r24	; 0x07
    3a32:	98 87       	std	Y+8, r25	; 0x08
    3a34:	a9 87       	std	Y+9, r26	; 0x09
    3a36:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3a38:	6f 81       	ldd	r22, Y+7	; 0x07
    3a3a:	78 85       	ldd	r23, Y+8	; 0x08
    3a3c:	89 85       	ldd	r24, Y+9	; 0x09
    3a3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a40:	20 e0       	ldi	r18, 0x00	; 0
    3a42:	30 e0       	ldi	r19, 0x00	; 0
    3a44:	40 e8       	ldi	r20, 0x80	; 128
    3a46:	5f e3       	ldi	r21, 0x3F	; 63
    3a48:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    3a4c:	88 23       	and	r24, r24
    3a4e:	2c f4       	brge	.+10     	; 0x3a5a <ScanData+0xc0>
		__ticks = 1;
    3a50:	81 e0       	ldi	r24, 0x01	; 1
    3a52:	90 e0       	ldi	r25, 0x00	; 0
    3a54:	9e 83       	std	Y+6, r25	; 0x06
    3a56:	8d 83       	std	Y+5, r24	; 0x05
    3a58:	3f c0       	rjmp	.+126    	; 0x3ad8 <ScanData+0x13e>
	else if (__tmp > 65535)
    3a5a:	6f 81       	ldd	r22, Y+7	; 0x07
    3a5c:	78 85       	ldd	r23, Y+8	; 0x08
    3a5e:	89 85       	ldd	r24, Y+9	; 0x09
    3a60:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a62:	20 e0       	ldi	r18, 0x00	; 0
    3a64:	3f ef       	ldi	r19, 0xFF	; 255
    3a66:	4f e7       	ldi	r20, 0x7F	; 127
    3a68:	57 e4       	ldi	r21, 0x47	; 71
    3a6a:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    3a6e:	18 16       	cp	r1, r24
    3a70:	4c f5       	brge	.+82     	; 0x3ac4 <ScanData+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a72:	6b 85       	ldd	r22, Y+11	; 0x0b
    3a74:	7c 85       	ldd	r23, Y+12	; 0x0c
    3a76:	8d 85       	ldd	r24, Y+13	; 0x0d
    3a78:	9e 85       	ldd	r25, Y+14	; 0x0e
    3a7a:	20 e0       	ldi	r18, 0x00	; 0
    3a7c:	30 e0       	ldi	r19, 0x00	; 0
    3a7e:	40 e2       	ldi	r20, 0x20	; 32
    3a80:	51 e4       	ldi	r21, 0x41	; 65
    3a82:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    3a86:	dc 01       	movw	r26, r24
    3a88:	cb 01       	movw	r24, r22
    3a8a:	bc 01       	movw	r22, r24
    3a8c:	cd 01       	movw	r24, r26
    3a8e:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3a92:	dc 01       	movw	r26, r24
    3a94:	cb 01       	movw	r24, r22
    3a96:	9e 83       	std	Y+6, r25	; 0x06
    3a98:	8d 83       	std	Y+5, r24	; 0x05
    3a9a:	0f c0       	rjmp	.+30     	; 0x3aba <ScanData+0x120>
    3a9c:	88 ec       	ldi	r24, 0xC8	; 200
    3a9e:	90 e0       	ldi	r25, 0x00	; 0
    3aa0:	9c 83       	std	Y+4, r25	; 0x04
    3aa2:	8b 83       	std	Y+3, r24	; 0x03
    3aa4:	8b 81       	ldd	r24, Y+3	; 0x03
    3aa6:	9c 81       	ldd	r25, Y+4	; 0x04
    3aa8:	01 97       	sbiw	r24, 0x01	; 1
    3aaa:	f1 f7       	brne	.-4      	; 0x3aa8 <ScanData+0x10e>
    3aac:	9c 83       	std	Y+4, r25	; 0x04
    3aae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ab0:	8d 81       	ldd	r24, Y+5	; 0x05
    3ab2:	9e 81       	ldd	r25, Y+6	; 0x06
    3ab4:	01 97       	sbiw	r24, 0x01	; 1
    3ab6:	9e 83       	std	Y+6, r25	; 0x06
    3ab8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3aba:	8d 81       	ldd	r24, Y+5	; 0x05
    3abc:	9e 81       	ldd	r25, Y+6	; 0x06
    3abe:	00 97       	sbiw	r24, 0x00	; 0
    3ac0:	69 f7       	brne	.-38     	; 0x3a9c <ScanData+0x102>
    3ac2:	14 c0       	rjmp	.+40     	; 0x3aec <ScanData+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ac4:	6f 81       	ldd	r22, Y+7	; 0x07
    3ac6:	78 85       	ldd	r23, Y+8	; 0x08
    3ac8:	89 85       	ldd	r24, Y+9	; 0x09
    3aca:	9a 85       	ldd	r25, Y+10	; 0x0a
    3acc:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3ad0:	dc 01       	movw	r26, r24
    3ad2:	cb 01       	movw	r24, r22
    3ad4:	9e 83       	std	Y+6, r25	; 0x06
    3ad6:	8d 83       	std	Y+5, r24	; 0x05
    3ad8:	8d 81       	ldd	r24, Y+5	; 0x05
    3ada:	9e 81       	ldd	r25, Y+6	; 0x06
    3adc:	9a 83       	std	Y+2, r25	; 0x02
    3ade:	89 83       	std	Y+1, r24	; 0x01
    3ae0:	89 81       	ldd	r24, Y+1	; 0x01
    3ae2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ae4:	01 97       	sbiw	r24, 0x01	; 1
    3ae6:	f1 f7       	brne	.-4      	; 0x3ae4 <ScanData+0x14a>
    3ae8:	9a 83       	std	Y+2, r25	; 0x02
    3aea:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(50);

		}
		temp=keypad_u8CheckPress();
    3aec:	0e 94 b3 1b 	call	0x3766	; 0x3766 <keypad_u8CheckPress>
    3af0:	8f 87       	std	Y+15, r24	; 0x0f

uint8 ScanData ()
{
	uint8 temp=0;
	temp = keypad_u8CheckPress();
	while(temp!= '=')
    3af2:	8f 85       	ldd	r24, Y+15	; 0x0f
    3af4:	8d 33       	cpi	r24, 0x3D	; 61
    3af6:	09 f0       	breq	.+2      	; 0x3afa <ScanData+0x160>
    3af8:	5f cf       	rjmp	.-322    	; 0x39b8 <ScanData+0x1e>

		}
		temp=keypad_u8CheckPress();

	}
	Digit[DigitCounter]='=';
    3afa:	80 91 b2 01 	lds	r24, 0x01B2
    3afe:	88 2f       	mov	r24, r24
    3b00:	90 e0       	ldi	r25, 0x00	; 0
    3b02:	fc 01       	movw	r30, r24
    3b04:	ec 54       	subi	r30, 0x4C	; 76
    3b06:	fe 4f       	sbci	r31, 0xFE	; 254
    3b08:	8d e3       	ldi	r24, 0x3D	; 61
    3b0a:	80 83       	st	Z, r24
	LCD_voidWriteChar(Digit[DigitCounter]);
    3b0c:	80 91 b2 01 	lds	r24, 0x01B2
    3b10:	88 2f       	mov	r24, r24
    3b12:	90 e0       	ldi	r25, 0x00	; 0
    3b14:	fc 01       	movw	r30, r24
    3b16:	ec 54       	subi	r30, 0x4C	; 76
    3b18:	fe 4f       	sbci	r31, 0xFE	; 254
    3b1a:	80 81       	ld	r24, Z
    3b1c:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <LCD_voidWriteChar>
	DigitCounter++;
    3b20:	80 91 b2 01 	lds	r24, 0x01B2
    3b24:	8f 5f       	subi	r24, 0xFF	; 255
    3b26:	80 93 b2 01 	sts	0x01B2, r24
	Digit[DigitCounter]='\0'; // to close array
    3b2a:	80 91 b2 01 	lds	r24, 0x01B2
    3b2e:	88 2f       	mov	r24, r24
    3b30:	90 e0       	ldi	r25, 0x00	; 0
    3b32:	fc 01       	movw	r30, r24
    3b34:	ec 54       	subi	r30, 0x4C	; 76
    3b36:	fe 4f       	sbci	r31, 0xFE	; 254
    3b38:	10 82       	st	Z, r1

	return AnalyzePoint;
    3b3a:	82 e0       	ldi	r24, 0x02	; 2

}
    3b3c:	2f 96       	adiw	r28, 0x0f	; 15
    3b3e:	0f b6       	in	r0, 0x3f	; 63
    3b40:	f8 94       	cli
    3b42:	de bf       	out	0x3e, r29	; 62
    3b44:	0f be       	out	0x3f, r0	; 63
    3b46:	cd bf       	out	0x3d, r28	; 61
    3b48:	cf 91       	pop	r28
    3b4a:	df 91       	pop	r29
    3b4c:	08 95       	ret

00003b4e <ConvertToInt>:

sint32 ConvertToInt(uint8 array[]){
    3b4e:	df 93       	push	r29
    3b50:	cf 93       	push	r28
    3b52:	cd b7       	in	r28, 0x3d	; 61
    3b54:	de b7       	in	r29, 0x3e	; 62
    3b56:	2e 97       	sbiw	r28, 0x0e	; 14
    3b58:	0f b6       	in	r0, 0x3f	; 63
    3b5a:	f8 94       	cli
    3b5c:	de bf       	out	0x3e, r29	; 62
    3b5e:	0f be       	out	0x3f, r0	; 63
    3b60:	cd bf       	out	0x3d, r28	; 61
    3b62:	9e 87       	std	Y+14, r25	; 0x0e
    3b64:	8d 87       	std	Y+13, r24	; 0x0d
	sint32 num=0, sign=1, i=-1;
    3b66:	19 86       	std	Y+9, r1	; 0x09
    3b68:	1a 86       	std	Y+10, r1	; 0x0a
    3b6a:	1b 86       	std	Y+11, r1	; 0x0b
    3b6c:	1c 86       	std	Y+12, r1	; 0x0c
    3b6e:	81 e0       	ldi	r24, 0x01	; 1
    3b70:	90 e0       	ldi	r25, 0x00	; 0
    3b72:	a0 e0       	ldi	r26, 0x00	; 0
    3b74:	b0 e0       	ldi	r27, 0x00	; 0
    3b76:	8d 83       	std	Y+5, r24	; 0x05
    3b78:	9e 83       	std	Y+6, r25	; 0x06
    3b7a:	af 83       	std	Y+7, r26	; 0x07
    3b7c:	b8 87       	std	Y+8, r27	; 0x08
    3b7e:	8f ef       	ldi	r24, 0xFF	; 255
    3b80:	9f ef       	ldi	r25, 0xFF	; 255
    3b82:	af ef       	ldi	r26, 0xFF	; 255
    3b84:	bf ef       	ldi	r27, 0xFF	; 255
    3b86:	89 83       	std	Y+1, r24	; 0x01
    3b88:	9a 83       	std	Y+2, r25	; 0x02
    3b8a:	ab 83       	std	Y+3, r26	; 0x03
    3b8c:	bc 83       	std	Y+4, r27	; 0x04

	if(array[0] == '-')    //check if the string is -ve
    3b8e:	ed 85       	ldd	r30, Y+13	; 0x0d
    3b90:	fe 85       	ldd	r31, Y+14	; 0x0e
    3b92:	80 81       	ld	r24, Z
    3b94:	8d 32       	cpi	r24, 0x2D	; 45
    3b96:	91 f5       	brne	.+100    	; 0x3bfc <ConvertToInt+0xae>
	{
		sign = -1;
    3b98:	8f ef       	ldi	r24, 0xFF	; 255
    3b9a:	9f ef       	ldi	r25, 0xFF	; 255
    3b9c:	af ef       	ldi	r26, 0xFF	; 255
    3b9e:	bf ef       	ldi	r27, 0xFF	; 255
    3ba0:	8d 83       	std	Y+5, r24	; 0x05
    3ba2:	9e 83       	std	Y+6, r25	; 0x06
    3ba4:	af 83       	std	Y+7, r26	; 0x07
    3ba6:	b8 87       	std	Y+8, r27	; 0x08
		i = 0;           //skip the -ve sign to the number
    3ba8:	19 82       	std	Y+1, r1	; 0x01
    3baa:	1a 82       	std	Y+2, r1	; 0x02
    3bac:	1b 82       	std	Y+3, r1	; 0x03
    3bae:	1c 82       	std	Y+4, r1	; 0x04
    3bb0:	25 c0       	rjmp	.+74     	; 0x3bfc <ConvertToInt+0xae>
	}

	while(array[++i] != 0)
	{
		num = (num * 10) + (array[i] - '0');
    3bb2:	89 85       	ldd	r24, Y+9	; 0x09
    3bb4:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bb6:	ab 85       	ldd	r26, Y+11	; 0x0b
    3bb8:	bc 85       	ldd	r27, Y+12	; 0x0c
    3bba:	2a e0       	ldi	r18, 0x0A	; 10
    3bbc:	30 e0       	ldi	r19, 0x00	; 0
    3bbe:	40 e0       	ldi	r20, 0x00	; 0
    3bc0:	50 e0       	ldi	r21, 0x00	; 0
    3bc2:	bc 01       	movw	r22, r24
    3bc4:	cd 01       	movw	r24, r26
    3bc6:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
    3bca:	ab 01       	movw	r20, r22
    3bcc:	bc 01       	movw	r22, r24
    3bce:	29 81       	ldd	r18, Y+1	; 0x01
    3bd0:	3a 81       	ldd	r19, Y+2	; 0x02
    3bd2:	8d 85       	ldd	r24, Y+13	; 0x0d
    3bd4:	9e 85       	ldd	r25, Y+14	; 0x0e
    3bd6:	fc 01       	movw	r30, r24
    3bd8:	e2 0f       	add	r30, r18
    3bda:	f3 1f       	adc	r31, r19
    3bdc:	80 81       	ld	r24, Z
    3bde:	88 2f       	mov	r24, r24
    3be0:	90 e0       	ldi	r25, 0x00	; 0
    3be2:	c0 97       	sbiw	r24, 0x30	; 48
    3be4:	aa 27       	eor	r26, r26
    3be6:	97 fd       	sbrc	r25, 7
    3be8:	a0 95       	com	r26
    3bea:	ba 2f       	mov	r27, r26
    3bec:	84 0f       	add	r24, r20
    3bee:	95 1f       	adc	r25, r21
    3bf0:	a6 1f       	adc	r26, r22
    3bf2:	b7 1f       	adc	r27, r23
    3bf4:	89 87       	std	Y+9, r24	; 0x09
    3bf6:	9a 87       	std	Y+10, r25	; 0x0a
    3bf8:	ab 87       	std	Y+11, r26	; 0x0b
    3bfa:	bc 87       	std	Y+12, r27	; 0x0c
	{
		sign = -1;
		i = 0;           //skip the -ve sign to the number
	}

	while(array[++i] != 0)
    3bfc:	89 81       	ldd	r24, Y+1	; 0x01
    3bfe:	9a 81       	ldd	r25, Y+2	; 0x02
    3c00:	ab 81       	ldd	r26, Y+3	; 0x03
    3c02:	bc 81       	ldd	r27, Y+4	; 0x04
    3c04:	01 96       	adiw	r24, 0x01	; 1
    3c06:	a1 1d       	adc	r26, r1
    3c08:	b1 1d       	adc	r27, r1
    3c0a:	89 83       	std	Y+1, r24	; 0x01
    3c0c:	9a 83       	std	Y+2, r25	; 0x02
    3c0e:	ab 83       	std	Y+3, r26	; 0x03
    3c10:	bc 83       	std	Y+4, r27	; 0x04
    3c12:	29 81       	ldd	r18, Y+1	; 0x01
    3c14:	3a 81       	ldd	r19, Y+2	; 0x02
    3c16:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c18:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c1a:	fc 01       	movw	r30, r24
    3c1c:	e2 0f       	add	r30, r18
    3c1e:	f3 1f       	adc	r31, r19
    3c20:	80 81       	ld	r24, Z
    3c22:	88 23       	and	r24, r24
    3c24:	31 f6       	brne	.-116    	; 0x3bb2 <ConvertToInt+0x64>
	{
		num = (num * 10) + (array[i] - '0');
	}

	num *= sign;
    3c26:	89 85       	ldd	r24, Y+9	; 0x09
    3c28:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c2a:	ab 85       	ldd	r26, Y+11	; 0x0b
    3c2c:	bc 85       	ldd	r27, Y+12	; 0x0c
    3c2e:	2d 81       	ldd	r18, Y+5	; 0x05
    3c30:	3e 81       	ldd	r19, Y+6	; 0x06
    3c32:	4f 81       	ldd	r20, Y+7	; 0x07
    3c34:	58 85       	ldd	r21, Y+8	; 0x08
    3c36:	bc 01       	movw	r22, r24
    3c38:	cd 01       	movw	r24, r26
    3c3a:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__mulsi3>
    3c3e:	dc 01       	movw	r26, r24
    3c40:	cb 01       	movw	r24, r22
    3c42:	89 87       	std	Y+9, r24	; 0x09
    3c44:	9a 87       	std	Y+10, r25	; 0x0a
    3c46:	ab 87       	std	Y+11, r26	; 0x0b
    3c48:	bc 87       	std	Y+12, r27	; 0x0c
	return num;
    3c4a:	89 85       	ldd	r24, Y+9	; 0x09
    3c4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c4e:	ab 85       	ldd	r26, Y+11	; 0x0b
    3c50:	bc 85       	ldd	r27, Y+12	; 0x0c
}
    3c52:	bc 01       	movw	r22, r24
    3c54:	cd 01       	movw	r24, r26
    3c56:	2e 96       	adiw	r28, 0x0e	; 14
    3c58:	0f b6       	in	r0, 0x3f	; 63
    3c5a:	f8 94       	cli
    3c5c:	de bf       	out	0x3e, r29	; 62
    3c5e:	0f be       	out	0x3f, r0	; 63
    3c60:	cd bf       	out	0x3d, r28	; 61
    3c62:	cf 91       	pop	r28
    3c64:	df 91       	pop	r29
    3c66:	08 95       	ret

00003c68 <InitArray>:

void InitArray(uint8 array[]){
    3c68:	df 93       	push	r29
    3c6a:	cf 93       	push	r28
    3c6c:	00 d0       	rcall	.+0      	; 0x3c6e <InitArray+0x6>
    3c6e:	0f 92       	push	r0
    3c70:	cd b7       	in	r28, 0x3d	; 61
    3c72:	de b7       	in	r29, 0x3e	; 62
    3c74:	9b 83       	std	Y+3, r25	; 0x03
    3c76:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i =0;
    3c78:	19 82       	std	Y+1, r1	; 0x01
    3c7a:	0c c0       	rjmp	.+24     	; 0x3c94 <InitArray+0x2c>
	while(array[i] != '\0'){
		array[i]='\0';
    3c7c:	89 81       	ldd	r24, Y+1	; 0x01
    3c7e:	28 2f       	mov	r18, r24
    3c80:	30 e0       	ldi	r19, 0x00	; 0
    3c82:	8a 81       	ldd	r24, Y+2	; 0x02
    3c84:	9b 81       	ldd	r25, Y+3	; 0x03
    3c86:	fc 01       	movw	r30, r24
    3c88:	e2 0f       	add	r30, r18
    3c8a:	f3 1f       	adc	r31, r19
    3c8c:	10 82       	st	Z, r1
		i++;
    3c8e:	89 81       	ldd	r24, Y+1	; 0x01
    3c90:	8f 5f       	subi	r24, 0xFF	; 255
    3c92:	89 83       	std	Y+1, r24	; 0x01
	return num;
}

void InitArray(uint8 array[]){
	uint8 i =0;
	while(array[i] != '\0'){
    3c94:	89 81       	ldd	r24, Y+1	; 0x01
    3c96:	28 2f       	mov	r18, r24
    3c98:	30 e0       	ldi	r19, 0x00	; 0
    3c9a:	8a 81       	ldd	r24, Y+2	; 0x02
    3c9c:	9b 81       	ldd	r25, Y+3	; 0x03
    3c9e:	fc 01       	movw	r30, r24
    3ca0:	e2 0f       	add	r30, r18
    3ca2:	f3 1f       	adc	r31, r19
    3ca4:	80 81       	ld	r24, Z
    3ca6:	88 23       	and	r24, r24
    3ca8:	49 f7       	brne	.-46     	; 0x3c7c <InitArray+0x14>
		array[i]='\0';
		i++;
	}
}
    3caa:	0f 90       	pop	r0
    3cac:	0f 90       	pop	r0
    3cae:	0f 90       	pop	r0
    3cb0:	cf 91       	pop	r28
    3cb2:	df 91       	pop	r29
    3cb4:	08 95       	ret

00003cb6 <AnalyzeData>:


uint8 AnalyzeData()
{
    3cb6:	8f 92       	push	r8
    3cb8:	9f 92       	push	r9
    3cba:	af 92       	push	r10
    3cbc:	bf 92       	push	r11
    3cbe:	cf 92       	push	r12
    3cc0:	df 92       	push	r13
    3cc2:	ef 92       	push	r14
    3cc4:	ff 92       	push	r15
    3cc6:	0f 93       	push	r16
    3cc8:	1f 93       	push	r17
    3cca:	df 93       	push	r29
    3ccc:	cf 93       	push	r28
    3cce:	cd b7       	in	r28, 0x3d	; 61
    3cd0:	de b7       	in	r29, 0x3e	; 62
    3cd2:	a1 97       	sbiw	r28, 0x21	; 33
    3cd4:	0f b6       	in	r0, 0x3f	; 63
    3cd6:	f8 94       	cli
    3cd8:	de bf       	out	0x3e, r29	; 62
    3cda:	0f be       	out	0x3f, r0	; 63
    3cdc:	cd bf       	out	0x3d, r28	; 61
	sint8 TempArr[MaxNumberOfDigit]={0};
    3cde:	80 e1       	ldi	r24, 0x10	; 16
    3ce0:	fe 01       	movw	r30, r28
    3ce2:	71 96       	adiw	r30, 0x11	; 17
    3ce4:	df 01       	movw	r26, r30
    3ce6:	98 2f       	mov	r25, r24
    3ce8:	1d 92       	st	X+, r1
    3cea:	9a 95       	dec	r25
    3cec:	e9 f7       	brne	.-6      	; 0x3ce8 <AnalyzeData+0x32>
	uint8 TempIndex=0;
    3cee:	18 8a       	std	Y+16, r1	; 0x10
	uint8 index=0;
    3cf0:	1f 86       	std	Y+15, r1	; 0x0f

	Sign =1;
    3cf2:	81 e0       	ldi	r24, 0x01	; 1
    3cf4:	80 93 a6 01 	sts	0x01A6, r24
	OtherNumberSign =1;
    3cf8:	81 e0       	ldi	r24, 0x01	; 1
    3cfa:	80 93 b3 01 	sts	0x01B3, r24

	if (IsOperation(Digit[0]) && Digit[0]!= '-'&& Digit[0]!= '+') //input ex (*5)
    3cfe:	80 91 b4 01 	lds	r24, 0x01B4
    3d02:	8a 32       	cpi	r24, 0x2A	; 42
    3d04:	69 f0       	breq	.+26     	; 0x3d20 <AnalyzeData+0x6a>
    3d06:	80 91 b4 01 	lds	r24, 0x01B4
    3d0a:	8b 32       	cpi	r24, 0x2B	; 43
    3d0c:	49 f0       	breq	.+18     	; 0x3d20 <AnalyzeData+0x6a>
    3d0e:	80 91 b4 01 	lds	r24, 0x01B4
    3d12:	8d 32       	cpi	r24, 0x2D	; 45
    3d14:	29 f0       	breq	.+10     	; 0x3d20 <AnalyzeData+0x6a>
    3d16:	80 91 b4 01 	lds	r24, 0x01B4
    3d1a:	8f 32       	cpi	r24, 0x2F	; 47
    3d1c:	09 f0       	breq	.+2      	; 0x3d20 <AnalyzeData+0x6a>
    3d1e:	55 c1       	rjmp	.+682    	; 0x3fca <AnalyzeData+0x314>
    3d20:	80 91 b4 01 	lds	r24, 0x01B4
    3d24:	8d 32       	cpi	r24, 0x2D	; 45
    3d26:	09 f4       	brne	.+2      	; 0x3d2a <AnalyzeData+0x74>
    3d28:	50 c1       	rjmp	.+672    	; 0x3fca <AnalyzeData+0x314>
    3d2a:	80 91 b4 01 	lds	r24, 0x01B4
    3d2e:	8b 32       	cpi	r24, 0x2B	; 43
    3d30:	09 f4       	brne	.+2      	; 0x3d34 <AnalyzeData+0x7e>
    3d32:	4b c1       	rjmp	.+662    	; 0x3fca <AnalyzeData+0x314>
	{
		LCD_voidWriteString("Syntax error");
    3d34:	81 e7       	ldi	r24, 0x71	; 113
    3d36:	90 e0       	ldi	r25, 0x00	; 0
    3d38:	0e 94 8e 19 	call	0x331c	; 0x331c <LCD_voidWriteString>
    3d3c:	80 e0       	ldi	r24, 0x00	; 0
    3d3e:	90 e0       	ldi	r25, 0x00	; 0
    3d40:	a8 ec       	ldi	r26, 0xC8	; 200
    3d42:	b2 e4       	ldi	r27, 0x42	; 66
    3d44:	8b 87       	std	Y+11, r24	; 0x0b
    3d46:	9c 87       	std	Y+12, r25	; 0x0c
    3d48:	ad 87       	std	Y+13, r26	; 0x0d
    3d4a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d4c:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d4e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d50:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d52:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d54:	20 e0       	ldi	r18, 0x00	; 0
    3d56:	30 e0       	ldi	r19, 0x00	; 0
    3d58:	4a ef       	ldi	r20, 0xFA	; 250
    3d5a:	54 e4       	ldi	r21, 0x44	; 68
    3d5c:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    3d60:	dc 01       	movw	r26, r24
    3d62:	cb 01       	movw	r24, r22
    3d64:	8f 83       	std	Y+7, r24	; 0x07
    3d66:	98 87       	std	Y+8, r25	; 0x08
    3d68:	a9 87       	std	Y+9, r26	; 0x09
    3d6a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3d6c:	6f 81       	ldd	r22, Y+7	; 0x07
    3d6e:	78 85       	ldd	r23, Y+8	; 0x08
    3d70:	89 85       	ldd	r24, Y+9	; 0x09
    3d72:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d74:	20 e0       	ldi	r18, 0x00	; 0
    3d76:	30 e0       	ldi	r19, 0x00	; 0
    3d78:	40 e8       	ldi	r20, 0x80	; 128
    3d7a:	5f e3       	ldi	r21, 0x3F	; 63
    3d7c:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__ltsf2>
    3d80:	88 23       	and	r24, r24
    3d82:	2c f4       	brge	.+10     	; 0x3d8e <AnalyzeData+0xd8>
		__ticks = 1;
    3d84:	81 e0       	ldi	r24, 0x01	; 1
    3d86:	90 e0       	ldi	r25, 0x00	; 0
    3d88:	9e 83       	std	Y+6, r25	; 0x06
    3d8a:	8d 83       	std	Y+5, r24	; 0x05
    3d8c:	3f c0       	rjmp	.+126    	; 0x3e0c <AnalyzeData+0x156>
	else if (__tmp > 65535)
    3d8e:	6f 81       	ldd	r22, Y+7	; 0x07
    3d90:	78 85       	ldd	r23, Y+8	; 0x08
    3d92:	89 85       	ldd	r24, Y+9	; 0x09
    3d94:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d96:	20 e0       	ldi	r18, 0x00	; 0
    3d98:	3f ef       	ldi	r19, 0xFF	; 255
    3d9a:	4f e7       	ldi	r20, 0x7F	; 127
    3d9c:	57 e4       	ldi	r21, 0x47	; 71
    3d9e:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__gtsf2>
    3da2:	18 16       	cp	r1, r24
    3da4:	4c f5       	brge	.+82     	; 0x3df8 <AnalyzeData+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3da6:	6b 85       	ldd	r22, Y+11	; 0x0b
    3da8:	7c 85       	ldd	r23, Y+12	; 0x0c
    3daa:	8d 85       	ldd	r24, Y+13	; 0x0d
    3dac:	9e 85       	ldd	r25, Y+14	; 0x0e
    3dae:	20 e0       	ldi	r18, 0x00	; 0
    3db0:	30 e0       	ldi	r19, 0x00	; 0
    3db2:	40 e2       	ldi	r20, 0x20	; 32
    3db4:	51 e4       	ldi	r21, 0x41	; 65
    3db6:	0e 94 42 0b 	call	0x1684	; 0x1684 <__mulsf3>
    3dba:	dc 01       	movw	r26, r24
    3dbc:	cb 01       	movw	r24, r22
    3dbe:	bc 01       	movw	r22, r24
    3dc0:	cd 01       	movw	r24, r26
    3dc2:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3dc6:	dc 01       	movw	r26, r24
    3dc8:	cb 01       	movw	r24, r22
    3dca:	9e 83       	std	Y+6, r25	; 0x06
    3dcc:	8d 83       	std	Y+5, r24	; 0x05
    3dce:	0f c0       	rjmp	.+30     	; 0x3dee <AnalyzeData+0x138>
    3dd0:	88 ec       	ldi	r24, 0xC8	; 200
    3dd2:	90 e0       	ldi	r25, 0x00	; 0
    3dd4:	9c 83       	std	Y+4, r25	; 0x04
    3dd6:	8b 83       	std	Y+3, r24	; 0x03
    3dd8:	8b 81       	ldd	r24, Y+3	; 0x03
    3dda:	9c 81       	ldd	r25, Y+4	; 0x04
    3ddc:	01 97       	sbiw	r24, 0x01	; 1
    3dde:	f1 f7       	brne	.-4      	; 0x3ddc <AnalyzeData+0x126>
    3de0:	9c 83       	std	Y+4, r25	; 0x04
    3de2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3de4:	8d 81       	ldd	r24, Y+5	; 0x05
    3de6:	9e 81       	ldd	r25, Y+6	; 0x06
    3de8:	01 97       	sbiw	r24, 0x01	; 1
    3dea:	9e 83       	std	Y+6, r25	; 0x06
    3dec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3dee:	8d 81       	ldd	r24, Y+5	; 0x05
    3df0:	9e 81       	ldd	r25, Y+6	; 0x06
    3df2:	00 97       	sbiw	r24, 0x00	; 0
    3df4:	69 f7       	brne	.-38     	; 0x3dd0 <AnalyzeData+0x11a>
    3df6:	14 c0       	rjmp	.+40     	; 0x3e20 <AnalyzeData+0x16a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3df8:	6f 81       	ldd	r22, Y+7	; 0x07
    3dfa:	78 85       	ldd	r23, Y+8	; 0x08
    3dfc:	89 85       	ldd	r24, Y+9	; 0x09
    3dfe:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e00:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3e04:	dc 01       	movw	r26, r24
    3e06:	cb 01       	movw	r24, r22
    3e08:	9e 83       	std	Y+6, r25	; 0x06
    3e0a:	8d 83       	std	Y+5, r24	; 0x05
    3e0c:	8d 81       	ldd	r24, Y+5	; 0x05
    3e0e:	9e 81       	ldd	r25, Y+6	; 0x06
    3e10:	9a 83       	std	Y+2, r25	; 0x02
    3e12:	89 83       	std	Y+1, r24	; 0x01
    3e14:	89 81       	ldd	r24, Y+1	; 0x01
    3e16:	9a 81       	ldd	r25, Y+2	; 0x02
    3e18:	01 97       	sbiw	r24, 0x01	; 1
    3e1a:	f1 f7       	brne	.-4      	; 0x3e18 <AnalyzeData+0x162>
    3e1c:	9a 83       	std	Y+2, r25	; 0x02
    3e1e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(100);
		return Reset;
    3e20:	19 a2       	std	Y+33, r1	; 0x21
    3e22:	da c0       	rjmp	.+436    	; 0x3fd8 <AnalyzeData+0x322>
	}

	while(DigitCounter != 0)
	{
		if(((Digit[index]>='0') && (Digit[index]<='9')) || ((Digit[index]=='-') && (IsOperation(Digit[index-1])))/*||OtherNumberSign*/)
    3e24:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e26:	88 2f       	mov	r24, r24
    3e28:	90 e0       	ldi	r25, 0x00	; 0
    3e2a:	fc 01       	movw	r30, r24
    3e2c:	ec 54       	subi	r30, 0x4C	; 76
    3e2e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e30:	80 81       	ld	r24, Z
    3e32:	80 33       	cpi	r24, 0x30	; 48
    3e34:	48 f0       	brcs	.+18     	; 0x3e48 <AnalyzeData+0x192>
    3e36:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e38:	88 2f       	mov	r24, r24
    3e3a:	90 e0       	ldi	r25, 0x00	; 0
    3e3c:	fc 01       	movw	r30, r24
    3e3e:	ec 54       	subi	r30, 0x4C	; 76
    3e40:	fe 4f       	sbci	r31, 0xFE	; 254
    3e42:	80 81       	ld	r24, Z
    3e44:	8a 33       	cpi	r24, 0x3A	; 58
    3e46:	88 f1       	brcs	.+98     	; 0x3eaa <AnalyzeData+0x1f4>
    3e48:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e4a:	88 2f       	mov	r24, r24
    3e4c:	90 e0       	ldi	r25, 0x00	; 0
    3e4e:	fc 01       	movw	r30, r24
    3e50:	ec 54       	subi	r30, 0x4C	; 76
    3e52:	fe 4f       	sbci	r31, 0xFE	; 254
    3e54:	80 81       	ld	r24, Z
    3e56:	8d 32       	cpi	r24, 0x2D	; 45
    3e58:	e9 f5       	brne	.+122    	; 0x3ed4 <AnalyzeData+0x21e>
    3e5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e5c:	88 2f       	mov	r24, r24
    3e5e:	90 e0       	ldi	r25, 0x00	; 0
    3e60:	01 97       	sbiw	r24, 0x01	; 1
    3e62:	fc 01       	movw	r30, r24
    3e64:	ec 54       	subi	r30, 0x4C	; 76
    3e66:	fe 4f       	sbci	r31, 0xFE	; 254
    3e68:	80 81       	ld	r24, Z
    3e6a:	8a 32       	cpi	r24, 0x2A	; 42
    3e6c:	f1 f0       	breq	.+60     	; 0x3eaa <AnalyzeData+0x1f4>
    3e6e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e70:	88 2f       	mov	r24, r24
    3e72:	90 e0       	ldi	r25, 0x00	; 0
    3e74:	01 97       	sbiw	r24, 0x01	; 1
    3e76:	fc 01       	movw	r30, r24
    3e78:	ec 54       	subi	r30, 0x4C	; 76
    3e7a:	fe 4f       	sbci	r31, 0xFE	; 254
    3e7c:	80 81       	ld	r24, Z
    3e7e:	8b 32       	cpi	r24, 0x2B	; 43
    3e80:	a1 f0       	breq	.+40     	; 0x3eaa <AnalyzeData+0x1f4>
    3e82:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e84:	88 2f       	mov	r24, r24
    3e86:	90 e0       	ldi	r25, 0x00	; 0
    3e88:	01 97       	sbiw	r24, 0x01	; 1
    3e8a:	fc 01       	movw	r30, r24
    3e8c:	ec 54       	subi	r30, 0x4C	; 76
    3e8e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e90:	80 81       	ld	r24, Z
    3e92:	8d 32       	cpi	r24, 0x2D	; 45
    3e94:	51 f0       	breq	.+20     	; 0x3eaa <AnalyzeData+0x1f4>
    3e96:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e98:	88 2f       	mov	r24, r24
    3e9a:	90 e0       	ldi	r25, 0x00	; 0
    3e9c:	01 97       	sbiw	r24, 0x01	; 1
    3e9e:	fc 01       	movw	r30, r24
    3ea0:	ec 54       	subi	r30, 0x4C	; 76
    3ea2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ea4:	80 81       	ld	r24, Z
    3ea6:	8f 32       	cpi	r24, 0x2F	; 47
    3ea8:	a9 f4       	brne	.+42     	; 0x3ed4 <AnalyzeData+0x21e>
		{
			TempArr[TempIndex]=Digit[index];
    3eaa:	88 89       	ldd	r24, Y+16	; 0x10
    3eac:	48 2f       	mov	r20, r24
    3eae:	50 e0       	ldi	r21, 0x00	; 0
    3eb0:	8f 85       	ldd	r24, Y+15	; 0x0f
    3eb2:	88 2f       	mov	r24, r24
    3eb4:	90 e0       	ldi	r25, 0x00	; 0
    3eb6:	fc 01       	movw	r30, r24
    3eb8:	ec 54       	subi	r30, 0x4C	; 76
    3eba:	fe 4f       	sbci	r31, 0xFE	; 254
    3ebc:	80 81       	ld	r24, Z
    3ebe:	28 2f       	mov	r18, r24
    3ec0:	ce 01       	movw	r24, r28
    3ec2:	41 96       	adiw	r24, 0x11	; 17
    3ec4:	fc 01       	movw	r30, r24
    3ec6:	e4 0f       	add	r30, r20
    3ec8:	f5 1f       	adc	r31, r21
    3eca:	20 83       	st	Z, r18
			TempIndex++;
    3ecc:	88 89       	ldd	r24, Y+16	; 0x10
    3ece:	8f 5f       	subi	r24, 0xFF	; 255
    3ed0:	88 8b       	std	Y+16, r24	; 0x10
    3ed2:	73 c0       	rjmp	.+230    	; 0x3fba <AnalyzeData+0x304>

		}
		else if (((IsOperation(Digit[index]))||(Digit[index]== '=')))
    3ed4:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ed6:	88 2f       	mov	r24, r24
    3ed8:	90 e0       	ldi	r25, 0x00	; 0
    3eda:	fc 01       	movw	r30, r24
    3edc:	ec 54       	subi	r30, 0x4C	; 76
    3ede:	fe 4f       	sbci	r31, 0xFE	; 254
    3ee0:	80 81       	ld	r24, Z
    3ee2:	8a 32       	cpi	r24, 0x2A	; 42
    3ee4:	29 f1       	breq	.+74     	; 0x3f30 <AnalyzeData+0x27a>
    3ee6:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ee8:	88 2f       	mov	r24, r24
    3eea:	90 e0       	ldi	r25, 0x00	; 0
    3eec:	fc 01       	movw	r30, r24
    3eee:	ec 54       	subi	r30, 0x4C	; 76
    3ef0:	fe 4f       	sbci	r31, 0xFE	; 254
    3ef2:	80 81       	ld	r24, Z
    3ef4:	8b 32       	cpi	r24, 0x2B	; 43
    3ef6:	e1 f0       	breq	.+56     	; 0x3f30 <AnalyzeData+0x27a>
    3ef8:	8f 85       	ldd	r24, Y+15	; 0x0f
    3efa:	88 2f       	mov	r24, r24
    3efc:	90 e0       	ldi	r25, 0x00	; 0
    3efe:	fc 01       	movw	r30, r24
    3f00:	ec 54       	subi	r30, 0x4C	; 76
    3f02:	fe 4f       	sbci	r31, 0xFE	; 254
    3f04:	80 81       	ld	r24, Z
    3f06:	8d 32       	cpi	r24, 0x2D	; 45
    3f08:	99 f0       	breq	.+38     	; 0x3f30 <AnalyzeData+0x27a>
    3f0a:	8f 85       	ldd	r24, Y+15	; 0x0f
    3f0c:	88 2f       	mov	r24, r24
    3f0e:	90 e0       	ldi	r25, 0x00	; 0
    3f10:	fc 01       	movw	r30, r24
    3f12:	ec 54       	subi	r30, 0x4C	; 76
    3f14:	fe 4f       	sbci	r31, 0xFE	; 254
    3f16:	80 81       	ld	r24, Z
    3f18:	8f 32       	cpi	r24, 0x2F	; 47
    3f1a:	51 f0       	breq	.+20     	; 0x3f30 <AnalyzeData+0x27a>
    3f1c:	8f 85       	ldd	r24, Y+15	; 0x0f
    3f1e:	88 2f       	mov	r24, r24
    3f20:	90 e0       	ldi	r25, 0x00	; 0
    3f22:	fc 01       	movw	r30, r24
    3f24:	ec 54       	subi	r30, 0x4C	; 76
    3f26:	fe 4f       	sbci	r31, 0xFE	; 254
    3f28:	80 81       	ld	r24, Z
    3f2a:	8d 33       	cpi	r24, 0x3D	; 61
    3f2c:	09 f0       	breq	.+2      	; 0x3f30 <AnalyzeData+0x27a>
    3f2e:	45 c0       	rjmp	.+138    	; 0x3fba <AnalyzeData+0x304>
		{
			Operations[OperationsCounter]=Digit[index];
    3f30:	80 91 b1 01 	lds	r24, 0x01B1
    3f34:	28 2f       	mov	r18, r24
    3f36:	30 e0       	ldi	r19, 0x00	; 0
    3f38:	8f 85       	ldd	r24, Y+15	; 0x0f
    3f3a:	88 2f       	mov	r24, r24
    3f3c:	90 e0       	ldi	r25, 0x00	; 0
    3f3e:	fc 01       	movw	r30, r24
    3f40:	ec 54       	subi	r30, 0x4C	; 76
    3f42:	fe 4f       	sbci	r31, 0xFE	; 254
    3f44:	80 81       	ld	r24, Z
    3f46:	f9 01       	movw	r30, r18
    3f48:	ec 5d       	subi	r30, 0xDC	; 220
    3f4a:	fd 4f       	sbci	r31, 0xFD	; 253
    3f4c:	80 83       	st	Z, r24
			OperationsCounter++;
    3f4e:	80 91 b1 01 	lds	r24, 0x01B1
    3f52:	8f 5f       	subi	r24, 0xFF	; 255
    3f54:	80 93 b1 01 	sts	0x01B1, r24
			Operands[OperandsCounter]= ConvertToInt(TempArr)/* Sign*/;
    3f58:	80 91 b0 01 	lds	r24, 0x01B0
    3f5c:	88 2e       	mov	r8, r24
    3f5e:	99 24       	eor	r9, r9
    3f60:	ce 01       	movw	r24, r28
    3f62:	41 96       	adiw	r24, 0x11	; 17
    3f64:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <ConvertToInt>
    3f68:	5b 01       	movw	r10, r22
    3f6a:	6c 01       	movw	r12, r24
    3f6c:	86 01       	movw	r16, r12
    3f6e:	75 01       	movw	r14, r10
    3f70:	11 0f       	add	r17, r17
    3f72:	ee 08       	sbc	r14, r14
    3f74:	fe 2c       	mov	r15, r14
    3f76:	87 01       	movw	r16, r14
    3f78:	a6 01       	movw	r20, r12
    3f7a:	95 01       	movw	r18, r10
    3f7c:	6e 2d       	mov	r22, r14
    3f7e:	7e 2d       	mov	r23, r14
    3f80:	8e 2d       	mov	r24, r14
    3f82:	9e 2d       	mov	r25, r14
    3f84:	f4 01       	movw	r30, r8
    3f86:	ee 0f       	add	r30, r30
    3f88:	ff 1f       	adc	r31, r31
    3f8a:	ee 0f       	add	r30, r30
    3f8c:	ff 1f       	adc	r31, r31
    3f8e:	ee 0f       	add	r30, r30
    3f90:	ff 1f       	adc	r31, r31
    3f92:	ec 53       	subi	r30, 0x3C	; 60
    3f94:	fe 4f       	sbci	r31, 0xFE	; 254
    3f96:	20 83       	st	Z, r18
    3f98:	31 83       	std	Z+1, r19	; 0x01
    3f9a:	42 83       	std	Z+2, r20	; 0x02
    3f9c:	53 83       	std	Z+3, r21	; 0x03
    3f9e:	64 83       	std	Z+4, r22	; 0x04
    3fa0:	75 83       	std	Z+5, r23	; 0x05
    3fa2:	86 83       	std	Z+6, r24	; 0x06
    3fa4:	97 83       	std	Z+7, r25	; 0x07
			OperandsCounter++;
    3fa6:	80 91 b0 01 	lds	r24, 0x01B0
    3faa:	8f 5f       	subi	r24, 0xFF	; 255
    3fac:	80 93 b0 01 	sts	0x01B0, r24
			InitArray(TempArr);
    3fb0:	ce 01       	movw	r24, r28
    3fb2:	41 96       	adiw	r24, 0x11	; 17
    3fb4:	0e 94 34 1e 	call	0x3c68	; 0x3c68 <InitArray>
			TempIndex=0;
    3fb8:	18 8a       	std	Y+16, r1	; 0x10
		}
		index++;
    3fba:	8f 85       	ldd	r24, Y+15	; 0x0f
    3fbc:	8f 5f       	subi	r24, 0xFF	; 255
    3fbe:	8f 87       	std	Y+15, r24	; 0x0f
		DigitCounter--;
    3fc0:	80 91 b2 01 	lds	r24, 0x01B2
    3fc4:	81 50       	subi	r24, 0x01	; 1
    3fc6:	80 93 b2 01 	sts	0x01B2, r24
		LCD_voidWriteString("Syntax error");
		_delay_ms(100);
		return Reset;
	}

	while(DigitCounter != 0)
    3fca:	80 91 b2 01 	lds	r24, 0x01B2
    3fce:	88 23       	and	r24, r24
    3fd0:	09 f0       	breq	.+2      	; 0x3fd4 <AnalyzeData+0x31e>
    3fd2:	28 cf       	rjmp	.-432    	; 0x3e24 <AnalyzeData+0x16e>
			TempIndex=0;
		}
		index++;
		DigitCounter--;
	}
	return CalculatePoint;
    3fd4:	a3 e0       	ldi	r26, 0x03	; 3
    3fd6:	a9 a3       	std	Y+33, r26	; 0x21
    3fd8:	89 a1       	ldd	r24, Y+33	; 0x21
}
    3fda:	a1 96       	adiw	r28, 0x21	; 33
    3fdc:	0f b6       	in	r0, 0x3f	; 63
    3fde:	f8 94       	cli
    3fe0:	de bf       	out	0x3e, r29	; 62
    3fe2:	0f be       	out	0x3f, r0	; 63
    3fe4:	cd bf       	out	0x3d, r28	; 61
    3fe6:	cf 91       	pop	r28
    3fe8:	df 91       	pop	r29
    3fea:	1f 91       	pop	r17
    3fec:	0f 91       	pop	r16
    3fee:	ff 90       	pop	r15
    3ff0:	ef 90       	pop	r14
    3ff2:	df 90       	pop	r13
    3ff4:	cf 90       	pop	r12
    3ff6:	bf 90       	pop	r11
    3ff8:	af 90       	pop	r10
    3ffa:	9f 90       	pop	r9
    3ffc:	8f 90       	pop	r8
    3ffe:	08 95       	ret

00004000 <shift_s64array_left>:


void shift_s64array_left(uint64* array ,uint8 start_index){
    4000:	df 93       	push	r29
    4002:	cf 93       	push	r28
    4004:	00 d0       	rcall	.+0      	; 0x4006 <shift_s64array_left+0x6>
    4006:	00 d0       	rcall	.+0      	; 0x4008 <shift_s64array_left+0x8>
    4008:	cd b7       	in	r28, 0x3d	; 61
    400a:	de b7       	in	r29, 0x3e	; 62
    400c:	9b 83       	std	Y+3, r25	; 0x03
    400e:	8a 83       	std	Y+2, r24	; 0x02
    4010:	6c 83       	std	Y+4, r22	; 0x04


	for(uint8 i = start_index;1; i++) {
    4012:	8c 81       	ldd	r24, Y+4	; 0x04
    4014:	89 83       	std	Y+1, r24	; 0x01

		array[i]=array[i+1];
    4016:	89 81       	ldd	r24, Y+1	; 0x01
    4018:	88 2f       	mov	r24, r24
    401a:	90 e0       	ldi	r25, 0x00	; 0
    401c:	9c 01       	movw	r18, r24
    401e:	22 0f       	add	r18, r18
    4020:	33 1f       	adc	r19, r19
    4022:	22 0f       	add	r18, r18
    4024:	33 1f       	adc	r19, r19
    4026:	22 0f       	add	r18, r18
    4028:	33 1f       	adc	r19, r19
    402a:	8a 81       	ldd	r24, Y+2	; 0x02
    402c:	9b 81       	ldd	r25, Y+3	; 0x03
    402e:	dc 01       	movw	r26, r24
    4030:	a2 0f       	add	r26, r18
    4032:	b3 1f       	adc	r27, r19
    4034:	89 81       	ldd	r24, Y+1	; 0x01
    4036:	88 2f       	mov	r24, r24
    4038:	90 e0       	ldi	r25, 0x00	; 0
    403a:	01 96       	adiw	r24, 0x01	; 1
    403c:	9c 01       	movw	r18, r24
    403e:	22 0f       	add	r18, r18
    4040:	33 1f       	adc	r19, r19
    4042:	22 0f       	add	r18, r18
    4044:	33 1f       	adc	r19, r19
    4046:	22 0f       	add	r18, r18
    4048:	33 1f       	adc	r19, r19
    404a:	8a 81       	ldd	r24, Y+2	; 0x02
    404c:	9b 81       	ldd	r25, Y+3	; 0x03
    404e:	fc 01       	movw	r30, r24
    4050:	e2 0f       	add	r30, r18
    4052:	f3 1f       	adc	r31, r19
    4054:	20 81       	ld	r18, Z
    4056:	31 81       	ldd	r19, Z+1	; 0x01
    4058:	42 81       	ldd	r20, Z+2	; 0x02
    405a:	53 81       	ldd	r21, Z+3	; 0x03
    405c:	64 81       	ldd	r22, Z+4	; 0x04
    405e:	75 81       	ldd	r23, Z+5	; 0x05
    4060:	86 81       	ldd	r24, Z+6	; 0x06
    4062:	97 81       	ldd	r25, Z+7	; 0x07
    4064:	2c 93       	st	X, r18
    4066:	11 96       	adiw	r26, 0x01	; 1
    4068:	3c 93       	st	X, r19
    406a:	11 97       	sbiw	r26, 0x01	; 1
    406c:	12 96       	adiw	r26, 0x02	; 2
    406e:	4c 93       	st	X, r20
    4070:	12 97       	sbiw	r26, 0x02	; 2
    4072:	13 96       	adiw	r26, 0x03	; 3
    4074:	5c 93       	st	X, r21
    4076:	13 97       	sbiw	r26, 0x03	; 3
    4078:	14 96       	adiw	r26, 0x04	; 4
    407a:	6c 93       	st	X, r22
    407c:	14 97       	sbiw	r26, 0x04	; 4
    407e:	15 96       	adiw	r26, 0x05	; 5
    4080:	7c 93       	st	X, r23
    4082:	15 97       	sbiw	r26, 0x05	; 5
    4084:	16 96       	adiw	r26, 0x06	; 6
    4086:	8c 93       	st	X, r24
    4088:	16 97       	sbiw	r26, 0x06	; 6
    408a:	17 96       	adiw	r26, 0x07	; 7
    408c:	9c 93       	st	X, r25
    408e:	17 97       	sbiw	r26, 0x07	; 7
		if(array[i] == '\0'){
    4090:	89 81       	ldd	r24, Y+1	; 0x01
    4092:	88 2f       	mov	r24, r24
    4094:	90 e0       	ldi	r25, 0x00	; 0
    4096:	9c 01       	movw	r18, r24
    4098:	22 0f       	add	r18, r18
    409a:	33 1f       	adc	r19, r19
    409c:	22 0f       	add	r18, r18
    409e:	33 1f       	adc	r19, r19
    40a0:	22 0f       	add	r18, r18
    40a2:	33 1f       	adc	r19, r19
    40a4:	8a 81       	ldd	r24, Y+2	; 0x02
    40a6:	9b 81       	ldd	r25, Y+3	; 0x03
    40a8:	fc 01       	movw	r30, r24
    40aa:	e2 0f       	add	r30, r18
    40ac:	f3 1f       	adc	r31, r19
    40ae:	20 81       	ld	r18, Z
    40b0:	31 81       	ldd	r19, Z+1	; 0x01
    40b2:	42 81       	ldd	r20, Z+2	; 0x02
    40b4:	53 81       	ldd	r21, Z+3	; 0x03
    40b6:	64 81       	ldd	r22, Z+4	; 0x04
    40b8:	75 81       	ldd	r23, Z+5	; 0x05
    40ba:	86 81       	ldd	r24, Z+6	; 0x06
    40bc:	97 81       	ldd	r25, Z+7	; 0x07
    40be:	e2 2f       	mov	r30, r18
    40c0:	e3 2b       	or	r30, r19
    40c2:	e4 2b       	or	r30, r20
    40c4:	e5 2b       	or	r30, r21
    40c6:	e6 2b       	or	r30, r22
    40c8:	e7 2b       	or	r30, r23
    40ca:	e8 2b       	or	r30, r24
    40cc:	e9 2b       	or	r30, r25
    40ce:	ee 23       	and	r30, r30
    40d0:	21 f0       	breq	.+8      	; 0x40da <shift_s64array_left+0xda>


void shift_s64array_left(uint64* array ,uint8 start_index){


	for(uint8 i = start_index;1; i++) {
    40d2:	89 81       	ldd	r24, Y+1	; 0x01
    40d4:	8f 5f       	subi	r24, 0xFF	; 255
    40d6:	89 83       	std	Y+1, r24	; 0x01
    40d8:	9e cf       	rjmp	.-196    	; 0x4016 <shift_s64array_left+0x16>
		array[i]=array[i+1];
		if(array[i] == '\0'){
			break;
		}
	}
}
    40da:	0f 90       	pop	r0
    40dc:	0f 90       	pop	r0
    40de:	0f 90       	pop	r0
    40e0:	0f 90       	pop	r0
    40e2:	cf 91       	pop	r28
    40e4:	df 91       	pop	r29
    40e6:	08 95       	ret

000040e8 <shift_uint8array_left>:

void shift_uint8array_left(uint8 array[] ,uint8 start_index){
    40e8:	df 93       	push	r29
    40ea:	cf 93       	push	r28
    40ec:	00 d0       	rcall	.+0      	; 0x40ee <shift_uint8array_left+0x6>
    40ee:	00 d0       	rcall	.+0      	; 0x40f0 <shift_uint8array_left+0x8>
    40f0:	cd b7       	in	r28, 0x3d	; 61
    40f2:	de b7       	in	r29, 0x3e	; 62
    40f4:	9b 83       	std	Y+3, r25	; 0x03
    40f6:	8a 83       	std	Y+2, r24	; 0x02
    40f8:	6c 83       	std	Y+4, r22	; 0x04


	for(uint8 i = start_index;1; i++) {
    40fa:	8c 81       	ldd	r24, Y+4	; 0x04
    40fc:	89 83       	std	Y+1, r24	; 0x01

		array[i]=array[i+1];
    40fe:	89 81       	ldd	r24, Y+1	; 0x01
    4100:	28 2f       	mov	r18, r24
    4102:	30 e0       	ldi	r19, 0x00	; 0
    4104:	8a 81       	ldd	r24, Y+2	; 0x02
    4106:	9b 81       	ldd	r25, Y+3	; 0x03
    4108:	dc 01       	movw	r26, r24
    410a:	a2 0f       	add	r26, r18
    410c:	b3 1f       	adc	r27, r19
    410e:	89 81       	ldd	r24, Y+1	; 0x01
    4110:	88 2f       	mov	r24, r24
    4112:	90 e0       	ldi	r25, 0x00	; 0
    4114:	9c 01       	movw	r18, r24
    4116:	2f 5f       	subi	r18, 0xFF	; 255
    4118:	3f 4f       	sbci	r19, 0xFF	; 255
    411a:	8a 81       	ldd	r24, Y+2	; 0x02
    411c:	9b 81       	ldd	r25, Y+3	; 0x03
    411e:	fc 01       	movw	r30, r24
    4120:	e2 0f       	add	r30, r18
    4122:	f3 1f       	adc	r31, r19
    4124:	80 81       	ld	r24, Z
    4126:	8c 93       	st	X, r24
		if(array[i] == '\0'){
    4128:	89 81       	ldd	r24, Y+1	; 0x01
    412a:	28 2f       	mov	r18, r24
    412c:	30 e0       	ldi	r19, 0x00	; 0
    412e:	8a 81       	ldd	r24, Y+2	; 0x02
    4130:	9b 81       	ldd	r25, Y+3	; 0x03
    4132:	fc 01       	movw	r30, r24
    4134:	e2 0f       	add	r30, r18
    4136:	f3 1f       	adc	r31, r19
    4138:	80 81       	ld	r24, Z
    413a:	88 23       	and	r24, r24
    413c:	21 f0       	breq	.+8      	; 0x4146 <shift_uint8array_left+0x5e>
}

void shift_uint8array_left(uint8 array[] ,uint8 start_index){


	for(uint8 i = start_index;1; i++) {
    413e:	89 81       	ldd	r24, Y+1	; 0x01
    4140:	8f 5f       	subi	r24, 0xFF	; 255
    4142:	89 83       	std	Y+1, r24	; 0x01
    4144:	dc cf       	rjmp	.-72     	; 0x40fe <shift_uint8array_left+0x16>
		array[i]=array[i+1];
		if(array[i] == '\0'){
			break;
		}
	}
}
    4146:	0f 90       	pop	r0
    4148:	0f 90       	pop	r0
    414a:	0f 90       	pop	r0
    414c:	0f 90       	pop	r0
    414e:	cf 91       	pop	r28
    4150:	df 91       	pop	r29
    4152:	08 95       	ret

00004154 <SubCalculate>:

sint64 SubCalculate(sint64 operand1,sint64 operand2,uint8 operation)
{
    4154:	8f 92       	push	r8
    4156:	af 92       	push	r10
    4158:	bf 92       	push	r11
    415a:	cf 92       	push	r12
    415c:	df 92       	push	r13
    415e:	ef 92       	push	r14
    4160:	ff 92       	push	r15
    4162:	0f 93       	push	r16
    4164:	1f 93       	push	r17
    4166:	df 93       	push	r29
    4168:	cf 93       	push	r28
    416a:	cd b7       	in	r28, 0x3d	; 61
    416c:	de b7       	in	r29, 0x3e	; 62
    416e:	c9 57       	subi	r28, 0x79	; 121
    4170:	d0 40       	sbci	r29, 0x00	; 0
    4172:	0f b6       	in	r0, 0x3f	; 63
    4174:	f8 94       	cli
    4176:	de bf       	out	0x3e, r29	; 62
    4178:	0f be       	out	0x3f, r0	; 63
    417a:	cd bf       	out	0x3d, r28	; 61
    417c:	29 87       	std	Y+9, r18	; 0x09
    417e:	3a 87       	std	Y+10, r19	; 0x0a
    4180:	4b 87       	std	Y+11, r20	; 0x0b
    4182:	5c 87       	std	Y+12, r21	; 0x0c
    4184:	6d 87       	std	Y+13, r22	; 0x0d
    4186:	7e 87       	std	Y+14, r23	; 0x0e
    4188:	8f 87       	std	Y+15, r24	; 0x0f
    418a:	98 8b       	std	Y+16, r25	; 0x10
    418c:	a9 8a       	std	Y+17, r10	; 0x11
    418e:	ba 8a       	std	Y+18, r11	; 0x12
    4190:	cb 8a       	std	Y+19, r12	; 0x13
    4192:	dc 8a       	std	Y+20, r13	; 0x14
    4194:	ed 8a       	std	Y+21, r14	; 0x15
    4196:	fe 8a       	std	Y+22, r15	; 0x16
    4198:	0f 8b       	std	Y+23, r16	; 0x17
    419a:	18 8f       	std	Y+24, r17	; 0x18
    419c:	89 8e       	std	Y+25, r8	; 0x19
	sint64 return_value = 0;
    419e:	19 82       	std	Y+1, r1	; 0x01
    41a0:	1a 82       	std	Y+2, r1	; 0x02
    41a2:	1b 82       	std	Y+3, r1	; 0x03
    41a4:	1c 82       	std	Y+4, r1	; 0x04
    41a6:	1d 82       	std	Y+5, r1	; 0x05
    41a8:	1e 82       	std	Y+6, r1	; 0x06
    41aa:	1f 82       	std	Y+7, r1	; 0x07
    41ac:	18 86       	std	Y+8, r1	; 0x08
	if (operation != '=')
    41ae:	89 8d       	ldd	r24, Y+25	; 0x19
    41b0:	8d 33       	cpi	r24, 0x3D	; 61
    41b2:	09 f4       	brne	.+2      	; 0x41b6 <SubCalculate+0x62>
    41b4:	ed c3       	rjmp	.+2010   	; 0x4990 <SubCalculate+0x83c>
	{
		switch(operation)
    41b6:	89 8d       	ldd	r24, Y+25	; 0x19
    41b8:	28 2f       	mov	r18, r24
    41ba:	30 e0       	ldi	r19, 0x00	; 0
    41bc:	3b a3       	std	Y+35, r19	; 0x23
    41be:	2a a3       	std	Y+34, r18	; 0x22
    41c0:	8a a1       	ldd	r24, Y+34	; 0x22
    41c2:	9b a1       	ldd	r25, Y+35	; 0x23
    41c4:	8b 32       	cpi	r24, 0x2B	; 43
    41c6:	91 05       	cpc	r25, r1
    41c8:	c9 f0       	breq	.+50     	; 0x41fc <SubCalculate+0xa8>
    41ca:	2a a1       	ldd	r18, Y+34	; 0x22
    41cc:	3b a1       	ldd	r19, Y+35	; 0x23
    41ce:	2c 32       	cpi	r18, 0x2C	; 44
    41d0:	31 05       	cpc	r19, r1
    41d2:	3c f4       	brge	.+14     	; 0x41e2 <SubCalculate+0x8e>
    41d4:	8a a1       	ldd	r24, Y+34	; 0x22
    41d6:	9b a1       	ldd	r25, Y+35	; 0x23
    41d8:	8a 32       	cpi	r24, 0x2A	; 42
    41da:	91 05       	cpc	r25, r1
    41dc:	09 f4       	brne	.+2      	; 0x41e0 <SubCalculate+0x8c>
    41de:	82 c3       	rjmp	.+1796   	; 0x48e4 <SubCalculate+0x790>
    41e0:	c6 c3       	rjmp	.+1932   	; 0x496e <SubCalculate+0x81a>
    41e2:	2a a1       	ldd	r18, Y+34	; 0x22
    41e4:	3b a1       	ldd	r19, Y+35	; 0x23
    41e6:	2d 32       	cpi	r18, 0x2D	; 45
    41e8:	31 05       	cpc	r19, r1
    41ea:	09 f4       	brne	.+2      	; 0x41ee <SubCalculate+0x9a>
    41ec:	61 c1       	rjmp	.+706    	; 0x44b0 <SubCalculate+0x35c>
    41ee:	8a a1       	ldd	r24, Y+34	; 0x22
    41f0:	9b a1       	ldd	r25, Y+35	; 0x23
    41f2:	8f 32       	cpi	r24, 0x2F	; 47
    41f4:	91 05       	cpc	r25, r1
    41f6:	09 f4       	brne	.+2      	; 0x41fa <SubCalculate+0xa6>
    41f8:	98 c3       	rjmp	.+1840   	; 0x492a <SubCalculate+0x7d6>
    41fa:	b9 c3       	rjmp	.+1906   	; 0x496e <SubCalculate+0x81a>
		{
			case '+' :
			return_value = operand1+operand2;
    41fc:	99 85       	ldd	r25, Y+9	; 0x09
    41fe:	9c a3       	std	Y+36, r25	; 0x24
    4200:	2a 85       	ldd	r18, Y+10	; 0x0a
    4202:	2d a3       	std	Y+37, r18	; 0x25
    4204:	3b 85       	ldd	r19, Y+11	; 0x0b
    4206:	3e a3       	std	Y+38, r19	; 0x26
    4208:	8c 85       	ldd	r24, Y+12	; 0x0c
    420a:	8f a3       	std	Y+39, r24	; 0x27
    420c:	9d 85       	ldd	r25, Y+13	; 0x0d
    420e:	98 a7       	std	Y+40, r25	; 0x28
    4210:	2e 85       	ldd	r18, Y+14	; 0x0e
    4212:	29 a7       	std	Y+41, r18	; 0x29
    4214:	3f 85       	ldd	r19, Y+15	; 0x0f
    4216:	3a a7       	std	Y+42, r19	; 0x2a
    4218:	88 89       	ldd	r24, Y+16	; 0x10
    421a:	8b a7       	std	Y+43, r24	; 0x2b
    421c:	99 89       	ldd	r25, Y+17	; 0x11
    421e:	9c a7       	std	Y+44, r25	; 0x2c
    4220:	2a 89       	ldd	r18, Y+18	; 0x12
    4222:	2d a7       	std	Y+45, r18	; 0x2d
    4224:	3b 89       	ldd	r19, Y+19	; 0x13
    4226:	3e a7       	std	Y+46, r19	; 0x2e
    4228:	8c 89       	ldd	r24, Y+20	; 0x14
    422a:	8f a7       	std	Y+47, r24	; 0x2f
    422c:	9d 89       	ldd	r25, Y+21	; 0x15
    422e:	98 ab       	std	Y+48, r25	; 0x30
    4230:	2e 89       	ldd	r18, Y+22	; 0x16
    4232:	29 ab       	std	Y+49, r18	; 0x31
    4234:	3f 89       	ldd	r19, Y+23	; 0x17
    4236:	3a ab       	std	Y+50, r19	; 0x32
    4238:	88 8d       	ldd	r24, Y+24	; 0x18
    423a:	8b ab       	std	Y+51, r24	; 0x33
    423c:	9c a1       	ldd	r25, Y+36	; 0x24
    423e:	2c a5       	ldd	r18, Y+44	; 0x2c
    4240:	92 0f       	add	r25, r18
    4242:	9c ab       	std	Y+52, r25	; 0x34
    4244:	31 e0       	ldi	r19, 0x01	; 1
    4246:	3c af       	std	Y+60, r19	; 0x3c
    4248:	8c a9       	ldd	r24, Y+52	; 0x34
    424a:	9c a1       	ldd	r25, Y+36	; 0x24
    424c:	89 17       	cp	r24, r25
    424e:	08 f0       	brcs	.+2      	; 0x4252 <SubCalculate+0xfe>
    4250:	1c ae       	std	Y+60, r1	; 0x3c
    4252:	2d a1       	ldd	r18, Y+37	; 0x25
    4254:	3d a5       	ldd	r19, Y+45	; 0x2d
    4256:	23 0f       	add	r18, r19
    4258:	2d ab       	std	Y+53, r18	; 0x35
    425a:	81 e0       	ldi	r24, 0x01	; 1
    425c:	8d af       	std	Y+61, r24	; 0x3d
    425e:	9d a9       	ldd	r25, Y+53	; 0x35
    4260:	2d a1       	ldd	r18, Y+37	; 0x25
    4262:	92 17       	cp	r25, r18
    4264:	08 f0       	brcs	.+2      	; 0x4268 <SubCalculate+0x114>
    4266:	1d ae       	std	Y+61, r1	; 0x3d
    4268:	3c ad       	ldd	r19, Y+60	; 0x3c
    426a:	8d a9       	ldd	r24, Y+53	; 0x35
    426c:	38 0f       	add	r19, r24
    426e:	3e af       	std	Y+62, r19	; 0x3e
    4270:	91 e0       	ldi	r25, 0x01	; 1
    4272:	9f af       	std	Y+63, r25	; 0x3f
    4274:	2e ad       	ldd	r18, Y+62	; 0x3e
    4276:	3d a9       	ldd	r19, Y+53	; 0x35
    4278:	23 17       	cp	r18, r19
    427a:	08 f0       	brcs	.+2      	; 0x427e <SubCalculate+0x12a>
    427c:	1f ae       	std	Y+63, r1	; 0x3f
    427e:	8d ad       	ldd	r24, Y+61	; 0x3d
    4280:	9f ad       	ldd	r25, Y+63	; 0x3f
    4282:	89 2b       	or	r24, r25
    4284:	8d af       	std	Y+61, r24	; 0x3d
    4286:	2e ad       	ldd	r18, Y+62	; 0x3e
    4288:	2d ab       	std	Y+53, r18	; 0x35
    428a:	3e a1       	ldd	r19, Y+38	; 0x26
    428c:	8e a5       	ldd	r24, Y+46	; 0x2e
    428e:	38 0f       	add	r19, r24
    4290:	3e ab       	std	Y+54, r19	; 0x36
    4292:	91 e0       	ldi	r25, 0x01	; 1
    4294:	21 96       	adiw	r28, 0x01	; 1
    4296:	9f af       	std	Y+63, r25	; 0x3f
    4298:	21 97       	sbiw	r28, 0x01	; 1
    429a:	2e a9       	ldd	r18, Y+54	; 0x36
    429c:	3e a1       	ldd	r19, Y+38	; 0x26
    429e:	23 17       	cp	r18, r19
    42a0:	18 f0       	brcs	.+6      	; 0x42a8 <SubCalculate+0x154>
    42a2:	21 96       	adiw	r28, 0x01	; 1
    42a4:	1f ae       	std	Y+63, r1	; 0x3f
    42a6:	21 97       	sbiw	r28, 0x01	; 1
    42a8:	8d ad       	ldd	r24, Y+61	; 0x3d
    42aa:	9e a9       	ldd	r25, Y+54	; 0x36
    42ac:	89 0f       	add	r24, r25
    42ae:	22 96       	adiw	r28, 0x02	; 2
    42b0:	8f af       	std	Y+63, r24	; 0x3f
    42b2:	22 97       	sbiw	r28, 0x02	; 2
    42b4:	21 e0       	ldi	r18, 0x01	; 1
    42b6:	23 96       	adiw	r28, 0x03	; 3
    42b8:	2f af       	std	Y+63, r18	; 0x3f
    42ba:	23 97       	sbiw	r28, 0x03	; 3
    42bc:	22 96       	adiw	r28, 0x02	; 2
    42be:	3f ad       	ldd	r19, Y+63	; 0x3f
    42c0:	22 97       	sbiw	r28, 0x02	; 2
    42c2:	8e a9       	ldd	r24, Y+54	; 0x36
    42c4:	38 17       	cp	r19, r24
    42c6:	18 f0       	brcs	.+6      	; 0x42ce <SubCalculate+0x17a>
    42c8:	23 96       	adiw	r28, 0x03	; 3
    42ca:	1f ae       	std	Y+63, r1	; 0x3f
    42cc:	23 97       	sbiw	r28, 0x03	; 3
    42ce:	21 96       	adiw	r28, 0x01	; 1
    42d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    42d2:	21 97       	sbiw	r28, 0x01	; 1
    42d4:	23 96       	adiw	r28, 0x03	; 3
    42d6:	2f ad       	ldd	r18, Y+63	; 0x3f
    42d8:	23 97       	sbiw	r28, 0x03	; 3
    42da:	92 2b       	or	r25, r18
    42dc:	21 96       	adiw	r28, 0x01	; 1
    42de:	9f af       	std	Y+63, r25	; 0x3f
    42e0:	21 97       	sbiw	r28, 0x01	; 1
    42e2:	22 96       	adiw	r28, 0x02	; 2
    42e4:	3f ad       	ldd	r19, Y+63	; 0x3f
    42e6:	22 97       	sbiw	r28, 0x02	; 2
    42e8:	3e ab       	std	Y+54, r19	; 0x36
    42ea:	8f a1       	ldd	r24, Y+39	; 0x27
    42ec:	9f a5       	ldd	r25, Y+47	; 0x2f
    42ee:	89 0f       	add	r24, r25
    42f0:	8f ab       	std	Y+55, r24	; 0x37
    42f2:	21 e0       	ldi	r18, 0x01	; 1
    42f4:	24 96       	adiw	r28, 0x04	; 4
    42f6:	2f af       	std	Y+63, r18	; 0x3f
    42f8:	24 97       	sbiw	r28, 0x04	; 4
    42fa:	3f a9       	ldd	r19, Y+55	; 0x37
    42fc:	8f a1       	ldd	r24, Y+39	; 0x27
    42fe:	38 17       	cp	r19, r24
    4300:	18 f0       	brcs	.+6      	; 0x4308 <SubCalculate+0x1b4>
    4302:	24 96       	adiw	r28, 0x04	; 4
    4304:	1f ae       	std	Y+63, r1	; 0x3f
    4306:	24 97       	sbiw	r28, 0x04	; 4
    4308:	21 96       	adiw	r28, 0x01	; 1
    430a:	9f ad       	ldd	r25, Y+63	; 0x3f
    430c:	21 97       	sbiw	r28, 0x01	; 1
    430e:	2f a9       	ldd	r18, Y+55	; 0x37
    4310:	92 0f       	add	r25, r18
    4312:	25 96       	adiw	r28, 0x05	; 5
    4314:	9f af       	std	Y+63, r25	; 0x3f
    4316:	25 97       	sbiw	r28, 0x05	; 5
    4318:	31 e0       	ldi	r19, 0x01	; 1
    431a:	26 96       	adiw	r28, 0x06	; 6
    431c:	3f af       	std	Y+63, r19	; 0x3f
    431e:	26 97       	sbiw	r28, 0x06	; 6
    4320:	25 96       	adiw	r28, 0x05	; 5
    4322:	8f ad       	ldd	r24, Y+63	; 0x3f
    4324:	25 97       	sbiw	r28, 0x05	; 5
    4326:	9f a9       	ldd	r25, Y+55	; 0x37
    4328:	89 17       	cp	r24, r25
    432a:	18 f0       	brcs	.+6      	; 0x4332 <SubCalculate+0x1de>
    432c:	26 96       	adiw	r28, 0x06	; 6
    432e:	1f ae       	std	Y+63, r1	; 0x3f
    4330:	26 97       	sbiw	r28, 0x06	; 6
    4332:	24 96       	adiw	r28, 0x04	; 4
    4334:	2f ad       	ldd	r18, Y+63	; 0x3f
    4336:	24 97       	sbiw	r28, 0x04	; 4
    4338:	26 96       	adiw	r28, 0x06	; 6
    433a:	3f ad       	ldd	r19, Y+63	; 0x3f
    433c:	26 97       	sbiw	r28, 0x06	; 6
    433e:	23 2b       	or	r18, r19
    4340:	24 96       	adiw	r28, 0x04	; 4
    4342:	2f af       	std	Y+63, r18	; 0x3f
    4344:	24 97       	sbiw	r28, 0x04	; 4
    4346:	25 96       	adiw	r28, 0x05	; 5
    4348:	8f ad       	ldd	r24, Y+63	; 0x3f
    434a:	25 97       	sbiw	r28, 0x05	; 5
    434c:	8f ab       	std	Y+55, r24	; 0x37
    434e:	98 a5       	ldd	r25, Y+40	; 0x28
    4350:	28 a9       	ldd	r18, Y+48	; 0x30
    4352:	92 0f       	add	r25, r18
    4354:	98 af       	std	Y+56, r25	; 0x38
    4356:	31 e0       	ldi	r19, 0x01	; 1
    4358:	27 96       	adiw	r28, 0x07	; 7
    435a:	3f af       	std	Y+63, r19	; 0x3f
    435c:	27 97       	sbiw	r28, 0x07	; 7
    435e:	88 ad       	ldd	r24, Y+56	; 0x38
    4360:	98 a5       	ldd	r25, Y+40	; 0x28
    4362:	89 17       	cp	r24, r25
    4364:	18 f0       	brcs	.+6      	; 0x436c <SubCalculate+0x218>
    4366:	27 96       	adiw	r28, 0x07	; 7
    4368:	1f ae       	std	Y+63, r1	; 0x3f
    436a:	27 97       	sbiw	r28, 0x07	; 7
    436c:	24 96       	adiw	r28, 0x04	; 4
    436e:	2f ad       	ldd	r18, Y+63	; 0x3f
    4370:	24 97       	sbiw	r28, 0x04	; 4
    4372:	38 ad       	ldd	r19, Y+56	; 0x38
    4374:	23 0f       	add	r18, r19
    4376:	28 96       	adiw	r28, 0x08	; 8
    4378:	2f af       	std	Y+63, r18	; 0x3f
    437a:	28 97       	sbiw	r28, 0x08	; 8
    437c:	81 e0       	ldi	r24, 0x01	; 1
    437e:	29 96       	adiw	r28, 0x09	; 9
    4380:	8f af       	std	Y+63, r24	; 0x3f
    4382:	29 97       	sbiw	r28, 0x09	; 9
    4384:	28 96       	adiw	r28, 0x08	; 8
    4386:	9f ad       	ldd	r25, Y+63	; 0x3f
    4388:	28 97       	sbiw	r28, 0x08	; 8
    438a:	28 ad       	ldd	r18, Y+56	; 0x38
    438c:	92 17       	cp	r25, r18
    438e:	18 f0       	brcs	.+6      	; 0x4396 <SubCalculate+0x242>
    4390:	29 96       	adiw	r28, 0x09	; 9
    4392:	1f ae       	std	Y+63, r1	; 0x3f
    4394:	29 97       	sbiw	r28, 0x09	; 9
    4396:	27 96       	adiw	r28, 0x07	; 7
    4398:	3f ad       	ldd	r19, Y+63	; 0x3f
    439a:	27 97       	sbiw	r28, 0x07	; 7
    439c:	29 96       	adiw	r28, 0x09	; 9
    439e:	8f ad       	ldd	r24, Y+63	; 0x3f
    43a0:	29 97       	sbiw	r28, 0x09	; 9
    43a2:	38 2b       	or	r19, r24
    43a4:	27 96       	adiw	r28, 0x07	; 7
    43a6:	3f af       	std	Y+63, r19	; 0x3f
    43a8:	27 97       	sbiw	r28, 0x07	; 7
    43aa:	28 96       	adiw	r28, 0x08	; 8
    43ac:	9f ad       	ldd	r25, Y+63	; 0x3f
    43ae:	28 97       	sbiw	r28, 0x08	; 8
    43b0:	98 af       	std	Y+56, r25	; 0x38
    43b2:	29 a5       	ldd	r18, Y+41	; 0x29
    43b4:	39 a9       	ldd	r19, Y+49	; 0x31
    43b6:	23 0f       	add	r18, r19
    43b8:	29 af       	std	Y+57, r18	; 0x39
    43ba:	81 e0       	ldi	r24, 0x01	; 1
    43bc:	2a 96       	adiw	r28, 0x0a	; 10
    43be:	8f af       	std	Y+63, r24	; 0x3f
    43c0:	2a 97       	sbiw	r28, 0x0a	; 10
    43c2:	99 ad       	ldd	r25, Y+57	; 0x39
    43c4:	29 a5       	ldd	r18, Y+41	; 0x29
    43c6:	92 17       	cp	r25, r18
    43c8:	18 f0       	brcs	.+6      	; 0x43d0 <SubCalculate+0x27c>
    43ca:	2a 96       	adiw	r28, 0x0a	; 10
    43cc:	1f ae       	std	Y+63, r1	; 0x3f
    43ce:	2a 97       	sbiw	r28, 0x0a	; 10
    43d0:	27 96       	adiw	r28, 0x07	; 7
    43d2:	3f ad       	ldd	r19, Y+63	; 0x3f
    43d4:	27 97       	sbiw	r28, 0x07	; 7
    43d6:	89 ad       	ldd	r24, Y+57	; 0x39
    43d8:	38 0f       	add	r19, r24
    43da:	2b 96       	adiw	r28, 0x0b	; 11
    43dc:	3f af       	std	Y+63, r19	; 0x3f
    43de:	2b 97       	sbiw	r28, 0x0b	; 11
    43e0:	91 e0       	ldi	r25, 0x01	; 1
    43e2:	2c 96       	adiw	r28, 0x0c	; 12
    43e4:	9f af       	std	Y+63, r25	; 0x3f
    43e6:	2c 97       	sbiw	r28, 0x0c	; 12
    43e8:	2b 96       	adiw	r28, 0x0b	; 11
    43ea:	2f ad       	ldd	r18, Y+63	; 0x3f
    43ec:	2b 97       	sbiw	r28, 0x0b	; 11
    43ee:	39 ad       	ldd	r19, Y+57	; 0x39
    43f0:	23 17       	cp	r18, r19
    43f2:	18 f0       	brcs	.+6      	; 0x43fa <SubCalculate+0x2a6>
    43f4:	2c 96       	adiw	r28, 0x0c	; 12
    43f6:	1f ae       	std	Y+63, r1	; 0x3f
    43f8:	2c 97       	sbiw	r28, 0x0c	; 12
    43fa:	2a 96       	adiw	r28, 0x0a	; 10
    43fc:	8f ad       	ldd	r24, Y+63	; 0x3f
    43fe:	2a 97       	sbiw	r28, 0x0a	; 10
    4400:	2c 96       	adiw	r28, 0x0c	; 12
    4402:	9f ad       	ldd	r25, Y+63	; 0x3f
    4404:	2c 97       	sbiw	r28, 0x0c	; 12
    4406:	89 2b       	or	r24, r25
    4408:	2a 96       	adiw	r28, 0x0a	; 10
    440a:	8f af       	std	Y+63, r24	; 0x3f
    440c:	2a 97       	sbiw	r28, 0x0a	; 10
    440e:	2b 96       	adiw	r28, 0x0b	; 11
    4410:	2f ad       	ldd	r18, Y+63	; 0x3f
    4412:	2b 97       	sbiw	r28, 0x0b	; 11
    4414:	29 af       	std	Y+57, r18	; 0x39
    4416:	3a a5       	ldd	r19, Y+42	; 0x2a
    4418:	8a a9       	ldd	r24, Y+50	; 0x32
    441a:	38 0f       	add	r19, r24
    441c:	3a af       	std	Y+58, r19	; 0x3a
    441e:	91 e0       	ldi	r25, 0x01	; 1
    4420:	2d 96       	adiw	r28, 0x0d	; 13
    4422:	9f af       	std	Y+63, r25	; 0x3f
    4424:	2d 97       	sbiw	r28, 0x0d	; 13
    4426:	2a ad       	ldd	r18, Y+58	; 0x3a
    4428:	3a a5       	ldd	r19, Y+42	; 0x2a
    442a:	23 17       	cp	r18, r19
    442c:	18 f0       	brcs	.+6      	; 0x4434 <SubCalculate+0x2e0>
    442e:	2d 96       	adiw	r28, 0x0d	; 13
    4430:	1f ae       	std	Y+63, r1	; 0x3f
    4432:	2d 97       	sbiw	r28, 0x0d	; 13
    4434:	2a 96       	adiw	r28, 0x0a	; 10
    4436:	8f ad       	ldd	r24, Y+63	; 0x3f
    4438:	2a 97       	sbiw	r28, 0x0a	; 10
    443a:	9a ad       	ldd	r25, Y+58	; 0x3a
    443c:	89 0f       	add	r24, r25
    443e:	2e 96       	adiw	r28, 0x0e	; 14
    4440:	8f af       	std	Y+63, r24	; 0x3f
    4442:	2e 97       	sbiw	r28, 0x0e	; 14
    4444:	21 e0       	ldi	r18, 0x01	; 1
    4446:	2f 96       	adiw	r28, 0x0f	; 15
    4448:	2f af       	std	Y+63, r18	; 0x3f
    444a:	2f 97       	sbiw	r28, 0x0f	; 15
    444c:	2e 96       	adiw	r28, 0x0e	; 14
    444e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4450:	2e 97       	sbiw	r28, 0x0e	; 14
    4452:	8a ad       	ldd	r24, Y+58	; 0x3a
    4454:	38 17       	cp	r19, r24
    4456:	18 f0       	brcs	.+6      	; 0x445e <SubCalculate+0x30a>
    4458:	2f 96       	adiw	r28, 0x0f	; 15
    445a:	1f ae       	std	Y+63, r1	; 0x3f
    445c:	2f 97       	sbiw	r28, 0x0f	; 15
    445e:	2d 96       	adiw	r28, 0x0d	; 13
    4460:	9f ad       	ldd	r25, Y+63	; 0x3f
    4462:	2d 97       	sbiw	r28, 0x0d	; 13
    4464:	2f 96       	adiw	r28, 0x0f	; 15
    4466:	2f ad       	ldd	r18, Y+63	; 0x3f
    4468:	2f 97       	sbiw	r28, 0x0f	; 15
    446a:	92 2b       	or	r25, r18
    446c:	2d 96       	adiw	r28, 0x0d	; 13
    446e:	9f af       	std	Y+63, r25	; 0x3f
    4470:	2d 97       	sbiw	r28, 0x0d	; 13
    4472:	2e 96       	adiw	r28, 0x0e	; 14
    4474:	3f ad       	ldd	r19, Y+63	; 0x3f
    4476:	2e 97       	sbiw	r28, 0x0e	; 14
    4478:	3a af       	std	Y+58, r19	; 0x3a
    447a:	8b a5       	ldd	r24, Y+43	; 0x2b
    447c:	9b a9       	ldd	r25, Y+51	; 0x33
    447e:	89 0f       	add	r24, r25
    4480:	8b af       	std	Y+59, r24	; 0x3b
    4482:	2d 96       	adiw	r28, 0x0d	; 13
    4484:	8f ad       	ldd	r24, Y+63	; 0x3f
    4486:	2d 97       	sbiw	r28, 0x0d	; 13
    4488:	2b ad       	ldd	r18, Y+59	; 0x3b
    448a:	82 0f       	add	r24, r18
    448c:	8b af       	std	Y+59, r24	; 0x3b
    448e:	3c a9       	ldd	r19, Y+52	; 0x34
    4490:	39 83       	std	Y+1, r19	; 0x01
    4492:	8d a9       	ldd	r24, Y+53	; 0x35
    4494:	8a 83       	std	Y+2, r24	; 0x02
    4496:	9e a9       	ldd	r25, Y+54	; 0x36
    4498:	9b 83       	std	Y+3, r25	; 0x03
    449a:	2f a9       	ldd	r18, Y+55	; 0x37
    449c:	2c 83       	std	Y+4, r18	; 0x04
    449e:	38 ad       	ldd	r19, Y+56	; 0x38
    44a0:	3d 83       	std	Y+5, r19	; 0x05
    44a2:	89 ad       	ldd	r24, Y+57	; 0x39
    44a4:	8e 83       	std	Y+6, r24	; 0x06
    44a6:	9a ad       	ldd	r25, Y+58	; 0x3a
    44a8:	9f 83       	std	Y+7, r25	; 0x07
    44aa:	2b ad       	ldd	r18, Y+59	; 0x3b
    44ac:	28 87       	std	Y+8, r18	; 0x08
    44ae:	5f c2       	rjmp	.+1214   	; 0x496e <SubCalculate+0x81a>
			break;
			case '-' :
			return_value = operand1-operand2;
    44b0:	39 85       	ldd	r19, Y+9	; 0x09
    44b2:	60 96       	adiw	r28, 0x10	; 16
    44b4:	3f af       	std	Y+63, r19	; 0x3f
    44b6:	60 97       	sbiw	r28, 0x10	; 16
    44b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    44ba:	61 96       	adiw	r28, 0x11	; 17
    44bc:	8f af       	std	Y+63, r24	; 0x3f
    44be:	61 97       	sbiw	r28, 0x11	; 17
    44c0:	9b 85       	ldd	r25, Y+11	; 0x0b
    44c2:	62 96       	adiw	r28, 0x12	; 18
    44c4:	9f af       	std	Y+63, r25	; 0x3f
    44c6:	62 97       	sbiw	r28, 0x12	; 18
    44c8:	2c 85       	ldd	r18, Y+12	; 0x0c
    44ca:	63 96       	adiw	r28, 0x13	; 19
    44cc:	2f af       	std	Y+63, r18	; 0x3f
    44ce:	63 97       	sbiw	r28, 0x13	; 19
    44d0:	3d 85       	ldd	r19, Y+13	; 0x0d
    44d2:	64 96       	adiw	r28, 0x14	; 20
    44d4:	3f af       	std	Y+63, r19	; 0x3f
    44d6:	64 97       	sbiw	r28, 0x14	; 20
    44d8:	8e 85       	ldd	r24, Y+14	; 0x0e
    44da:	65 96       	adiw	r28, 0x15	; 21
    44dc:	8f af       	std	Y+63, r24	; 0x3f
    44de:	65 97       	sbiw	r28, 0x15	; 21
    44e0:	9f 85       	ldd	r25, Y+15	; 0x0f
    44e2:	66 96       	adiw	r28, 0x16	; 22
    44e4:	9f af       	std	Y+63, r25	; 0x3f
    44e6:	66 97       	sbiw	r28, 0x16	; 22
    44e8:	28 89       	ldd	r18, Y+16	; 0x10
    44ea:	67 96       	adiw	r28, 0x17	; 23
    44ec:	2f af       	std	Y+63, r18	; 0x3f
    44ee:	67 97       	sbiw	r28, 0x17	; 23
    44f0:	39 89       	ldd	r19, Y+17	; 0x11
    44f2:	68 96       	adiw	r28, 0x18	; 24
    44f4:	3f af       	std	Y+63, r19	; 0x3f
    44f6:	68 97       	sbiw	r28, 0x18	; 24
    44f8:	8a 89       	ldd	r24, Y+18	; 0x12
    44fa:	69 96       	adiw	r28, 0x19	; 25
    44fc:	8f af       	std	Y+63, r24	; 0x3f
    44fe:	69 97       	sbiw	r28, 0x19	; 25
    4500:	9b 89       	ldd	r25, Y+19	; 0x13
    4502:	6a 96       	adiw	r28, 0x1a	; 26
    4504:	9f af       	std	Y+63, r25	; 0x3f
    4506:	6a 97       	sbiw	r28, 0x1a	; 26
    4508:	2c 89       	ldd	r18, Y+20	; 0x14
    450a:	6b 96       	adiw	r28, 0x1b	; 27
    450c:	2f af       	std	Y+63, r18	; 0x3f
    450e:	6b 97       	sbiw	r28, 0x1b	; 27
    4510:	3d 89       	ldd	r19, Y+21	; 0x15
    4512:	6c 96       	adiw	r28, 0x1c	; 28
    4514:	3f af       	std	Y+63, r19	; 0x3f
    4516:	6c 97       	sbiw	r28, 0x1c	; 28
    4518:	8e 89       	ldd	r24, Y+22	; 0x16
    451a:	6d 96       	adiw	r28, 0x1d	; 29
    451c:	8f af       	std	Y+63, r24	; 0x3f
    451e:	6d 97       	sbiw	r28, 0x1d	; 29
    4520:	9f 89       	ldd	r25, Y+23	; 0x17
    4522:	6e 96       	adiw	r28, 0x1e	; 30
    4524:	9f af       	std	Y+63, r25	; 0x3f
    4526:	6e 97       	sbiw	r28, 0x1e	; 30
    4528:	28 8d       	ldd	r18, Y+24	; 0x18
    452a:	6f 96       	adiw	r28, 0x1f	; 31
    452c:	2f af       	std	Y+63, r18	; 0x3f
    452e:	6f 97       	sbiw	r28, 0x1f	; 31
    4530:	60 96       	adiw	r28, 0x10	; 16
    4532:	3f ad       	ldd	r19, Y+63	; 0x3f
    4534:	60 97       	sbiw	r28, 0x10	; 16
    4536:	68 96       	adiw	r28, 0x18	; 24
    4538:	8f ad       	ldd	r24, Y+63	; 0x3f
    453a:	68 97       	sbiw	r28, 0x18	; 24
    453c:	38 1b       	sub	r19, r24
    453e:	a0 96       	adiw	r28, 0x20	; 32
    4540:	3f af       	std	Y+63, r19	; 0x3f
    4542:	a0 97       	sbiw	r28, 0x20	; 32
    4544:	91 e0       	ldi	r25, 0x01	; 1
    4546:	a8 96       	adiw	r28, 0x28	; 40
    4548:	9f af       	std	Y+63, r25	; 0x3f
    454a:	a8 97       	sbiw	r28, 0x28	; 40
    454c:	a0 96       	adiw	r28, 0x20	; 32
    454e:	2f ad       	ldd	r18, Y+63	; 0x3f
    4550:	a0 97       	sbiw	r28, 0x20	; 32
    4552:	60 96       	adiw	r28, 0x10	; 16
    4554:	3f ad       	ldd	r19, Y+63	; 0x3f
    4556:	60 97       	sbiw	r28, 0x10	; 16
    4558:	32 17       	cp	r19, r18
    455a:	18 f0       	brcs	.+6      	; 0x4562 <SubCalculate+0x40e>
    455c:	a8 96       	adiw	r28, 0x28	; 40
    455e:	1f ae       	std	Y+63, r1	; 0x3f
    4560:	a8 97       	sbiw	r28, 0x28	; 40
    4562:	61 96       	adiw	r28, 0x11	; 17
    4564:	8f ad       	ldd	r24, Y+63	; 0x3f
    4566:	61 97       	sbiw	r28, 0x11	; 17
    4568:	69 96       	adiw	r28, 0x19	; 25
    456a:	9f ad       	ldd	r25, Y+63	; 0x3f
    456c:	69 97       	sbiw	r28, 0x19	; 25
    456e:	89 1b       	sub	r24, r25
    4570:	a1 96       	adiw	r28, 0x21	; 33
    4572:	8f af       	std	Y+63, r24	; 0x3f
    4574:	a1 97       	sbiw	r28, 0x21	; 33
    4576:	21 e0       	ldi	r18, 0x01	; 1
    4578:	a9 96       	adiw	r28, 0x29	; 41
    457a:	2f af       	std	Y+63, r18	; 0x3f
    457c:	a9 97       	sbiw	r28, 0x29	; 41
    457e:	a1 96       	adiw	r28, 0x21	; 33
    4580:	3f ad       	ldd	r19, Y+63	; 0x3f
    4582:	a1 97       	sbiw	r28, 0x21	; 33
    4584:	61 96       	adiw	r28, 0x11	; 17
    4586:	8f ad       	ldd	r24, Y+63	; 0x3f
    4588:	61 97       	sbiw	r28, 0x11	; 17
    458a:	83 17       	cp	r24, r19
    458c:	18 f0       	brcs	.+6      	; 0x4594 <SubCalculate+0x440>
    458e:	a9 96       	adiw	r28, 0x29	; 41
    4590:	1f ae       	std	Y+63, r1	; 0x3f
    4592:	a9 97       	sbiw	r28, 0x29	; 41
    4594:	a1 96       	adiw	r28, 0x21	; 33
    4596:	9f ad       	ldd	r25, Y+63	; 0x3f
    4598:	a1 97       	sbiw	r28, 0x21	; 33
    459a:	a8 96       	adiw	r28, 0x28	; 40
    459c:	2f ad       	ldd	r18, Y+63	; 0x3f
    459e:	a8 97       	sbiw	r28, 0x28	; 40
    45a0:	92 1b       	sub	r25, r18
    45a2:	aa 96       	adiw	r28, 0x2a	; 42
    45a4:	9f af       	std	Y+63, r25	; 0x3f
    45a6:	aa 97       	sbiw	r28, 0x2a	; 42
    45a8:	31 e0       	ldi	r19, 0x01	; 1
    45aa:	ab 96       	adiw	r28, 0x2b	; 43
    45ac:	3f af       	std	Y+63, r19	; 0x3f
    45ae:	ab 97       	sbiw	r28, 0x2b	; 43
    45b0:	aa 96       	adiw	r28, 0x2a	; 42
    45b2:	8f ad       	ldd	r24, Y+63	; 0x3f
    45b4:	aa 97       	sbiw	r28, 0x2a	; 42
    45b6:	a1 96       	adiw	r28, 0x21	; 33
    45b8:	9f ad       	ldd	r25, Y+63	; 0x3f
    45ba:	a1 97       	sbiw	r28, 0x21	; 33
    45bc:	98 17       	cp	r25, r24
    45be:	18 f0       	brcs	.+6      	; 0x45c6 <SubCalculate+0x472>
    45c0:	ab 96       	adiw	r28, 0x2b	; 43
    45c2:	1f ae       	std	Y+63, r1	; 0x3f
    45c4:	ab 97       	sbiw	r28, 0x2b	; 43
    45c6:	a9 96       	adiw	r28, 0x29	; 41
    45c8:	2f ad       	ldd	r18, Y+63	; 0x3f
    45ca:	a9 97       	sbiw	r28, 0x29	; 41
    45cc:	ab 96       	adiw	r28, 0x2b	; 43
    45ce:	3f ad       	ldd	r19, Y+63	; 0x3f
    45d0:	ab 97       	sbiw	r28, 0x2b	; 43
    45d2:	23 2b       	or	r18, r19
    45d4:	a9 96       	adiw	r28, 0x29	; 41
    45d6:	2f af       	std	Y+63, r18	; 0x3f
    45d8:	a9 97       	sbiw	r28, 0x29	; 41
    45da:	aa 96       	adiw	r28, 0x2a	; 42
    45dc:	8f ad       	ldd	r24, Y+63	; 0x3f
    45de:	aa 97       	sbiw	r28, 0x2a	; 42
    45e0:	a1 96       	adiw	r28, 0x21	; 33
    45e2:	8f af       	std	Y+63, r24	; 0x3f
    45e4:	a1 97       	sbiw	r28, 0x21	; 33
    45e6:	62 96       	adiw	r28, 0x12	; 18
    45e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    45ea:	62 97       	sbiw	r28, 0x12	; 18
    45ec:	6a 96       	adiw	r28, 0x1a	; 26
    45ee:	2f ad       	ldd	r18, Y+63	; 0x3f
    45f0:	6a 97       	sbiw	r28, 0x1a	; 26
    45f2:	92 1b       	sub	r25, r18
    45f4:	a2 96       	adiw	r28, 0x22	; 34
    45f6:	9f af       	std	Y+63, r25	; 0x3f
    45f8:	a2 97       	sbiw	r28, 0x22	; 34
    45fa:	31 e0       	ldi	r19, 0x01	; 1
    45fc:	ac 96       	adiw	r28, 0x2c	; 44
    45fe:	3f af       	std	Y+63, r19	; 0x3f
    4600:	ac 97       	sbiw	r28, 0x2c	; 44
    4602:	a2 96       	adiw	r28, 0x22	; 34
    4604:	8f ad       	ldd	r24, Y+63	; 0x3f
    4606:	a2 97       	sbiw	r28, 0x22	; 34
    4608:	62 96       	adiw	r28, 0x12	; 18
    460a:	9f ad       	ldd	r25, Y+63	; 0x3f
    460c:	62 97       	sbiw	r28, 0x12	; 18
    460e:	98 17       	cp	r25, r24
    4610:	18 f0       	brcs	.+6      	; 0x4618 <SubCalculate+0x4c4>
    4612:	ac 96       	adiw	r28, 0x2c	; 44
    4614:	1f ae       	std	Y+63, r1	; 0x3f
    4616:	ac 97       	sbiw	r28, 0x2c	; 44
    4618:	a2 96       	adiw	r28, 0x22	; 34
    461a:	2f ad       	ldd	r18, Y+63	; 0x3f
    461c:	a2 97       	sbiw	r28, 0x22	; 34
    461e:	a9 96       	adiw	r28, 0x29	; 41
    4620:	3f ad       	ldd	r19, Y+63	; 0x3f
    4622:	a9 97       	sbiw	r28, 0x29	; 41
    4624:	23 1b       	sub	r18, r19
    4626:	ad 96       	adiw	r28, 0x2d	; 45
    4628:	2f af       	std	Y+63, r18	; 0x3f
    462a:	ad 97       	sbiw	r28, 0x2d	; 45
    462c:	81 e0       	ldi	r24, 0x01	; 1
    462e:	ae 96       	adiw	r28, 0x2e	; 46
    4630:	8f af       	std	Y+63, r24	; 0x3f
    4632:	ae 97       	sbiw	r28, 0x2e	; 46
    4634:	ad 96       	adiw	r28, 0x2d	; 45
    4636:	9f ad       	ldd	r25, Y+63	; 0x3f
    4638:	ad 97       	sbiw	r28, 0x2d	; 45
    463a:	a2 96       	adiw	r28, 0x22	; 34
    463c:	2f ad       	ldd	r18, Y+63	; 0x3f
    463e:	a2 97       	sbiw	r28, 0x22	; 34
    4640:	29 17       	cp	r18, r25
    4642:	18 f0       	brcs	.+6      	; 0x464a <SubCalculate+0x4f6>
    4644:	ae 96       	adiw	r28, 0x2e	; 46
    4646:	1f ae       	std	Y+63, r1	; 0x3f
    4648:	ae 97       	sbiw	r28, 0x2e	; 46
    464a:	ac 96       	adiw	r28, 0x2c	; 44
    464c:	3f ad       	ldd	r19, Y+63	; 0x3f
    464e:	ac 97       	sbiw	r28, 0x2c	; 44
    4650:	ae 96       	adiw	r28, 0x2e	; 46
    4652:	8f ad       	ldd	r24, Y+63	; 0x3f
    4654:	ae 97       	sbiw	r28, 0x2e	; 46
    4656:	38 2b       	or	r19, r24
    4658:	ac 96       	adiw	r28, 0x2c	; 44
    465a:	3f af       	std	Y+63, r19	; 0x3f
    465c:	ac 97       	sbiw	r28, 0x2c	; 44
    465e:	ad 96       	adiw	r28, 0x2d	; 45
    4660:	9f ad       	ldd	r25, Y+63	; 0x3f
    4662:	ad 97       	sbiw	r28, 0x2d	; 45
    4664:	a2 96       	adiw	r28, 0x22	; 34
    4666:	9f af       	std	Y+63, r25	; 0x3f
    4668:	a2 97       	sbiw	r28, 0x22	; 34
    466a:	63 96       	adiw	r28, 0x13	; 19
    466c:	2f ad       	ldd	r18, Y+63	; 0x3f
    466e:	63 97       	sbiw	r28, 0x13	; 19
    4670:	6b 96       	adiw	r28, 0x1b	; 27
    4672:	3f ad       	ldd	r19, Y+63	; 0x3f
    4674:	6b 97       	sbiw	r28, 0x1b	; 27
    4676:	23 1b       	sub	r18, r19
    4678:	a3 96       	adiw	r28, 0x23	; 35
    467a:	2f af       	std	Y+63, r18	; 0x3f
    467c:	a3 97       	sbiw	r28, 0x23	; 35
    467e:	81 e0       	ldi	r24, 0x01	; 1
    4680:	af 96       	adiw	r28, 0x2f	; 47
    4682:	8f af       	std	Y+63, r24	; 0x3f
    4684:	af 97       	sbiw	r28, 0x2f	; 47
    4686:	a3 96       	adiw	r28, 0x23	; 35
    4688:	9f ad       	ldd	r25, Y+63	; 0x3f
    468a:	a3 97       	sbiw	r28, 0x23	; 35
    468c:	63 96       	adiw	r28, 0x13	; 19
    468e:	2f ad       	ldd	r18, Y+63	; 0x3f
    4690:	63 97       	sbiw	r28, 0x13	; 19
    4692:	29 17       	cp	r18, r25
    4694:	18 f0       	brcs	.+6      	; 0x469c <SubCalculate+0x548>
    4696:	af 96       	adiw	r28, 0x2f	; 47
    4698:	1f ae       	std	Y+63, r1	; 0x3f
    469a:	af 97       	sbiw	r28, 0x2f	; 47
    469c:	a3 96       	adiw	r28, 0x23	; 35
    469e:	3f ad       	ldd	r19, Y+63	; 0x3f
    46a0:	a3 97       	sbiw	r28, 0x23	; 35
    46a2:	ac 96       	adiw	r28, 0x2c	; 44
    46a4:	8f ad       	ldd	r24, Y+63	; 0x3f
    46a6:	ac 97       	sbiw	r28, 0x2c	; 44
    46a8:	38 1b       	sub	r19, r24
    46aa:	e0 96       	adiw	r28, 0x30	; 48
    46ac:	3f af       	std	Y+63, r19	; 0x3f
    46ae:	e0 97       	sbiw	r28, 0x30	; 48
    46b0:	91 e0       	ldi	r25, 0x01	; 1
    46b2:	e1 96       	adiw	r28, 0x31	; 49
    46b4:	9f af       	std	Y+63, r25	; 0x3f
    46b6:	e1 97       	sbiw	r28, 0x31	; 49
    46b8:	e0 96       	adiw	r28, 0x30	; 48
    46ba:	2f ad       	ldd	r18, Y+63	; 0x3f
    46bc:	e0 97       	sbiw	r28, 0x30	; 48
    46be:	a3 96       	adiw	r28, 0x23	; 35
    46c0:	3f ad       	ldd	r19, Y+63	; 0x3f
    46c2:	a3 97       	sbiw	r28, 0x23	; 35
    46c4:	32 17       	cp	r19, r18
    46c6:	18 f0       	brcs	.+6      	; 0x46ce <SubCalculate+0x57a>
    46c8:	e1 96       	adiw	r28, 0x31	; 49
    46ca:	1f ae       	std	Y+63, r1	; 0x3f
    46cc:	e1 97       	sbiw	r28, 0x31	; 49
    46ce:	af 96       	adiw	r28, 0x2f	; 47
    46d0:	8f ad       	ldd	r24, Y+63	; 0x3f
    46d2:	af 97       	sbiw	r28, 0x2f	; 47
    46d4:	e1 96       	adiw	r28, 0x31	; 49
    46d6:	9f ad       	ldd	r25, Y+63	; 0x3f
    46d8:	e1 97       	sbiw	r28, 0x31	; 49
    46da:	89 2b       	or	r24, r25
    46dc:	af 96       	adiw	r28, 0x2f	; 47
    46de:	8f af       	std	Y+63, r24	; 0x3f
    46e0:	af 97       	sbiw	r28, 0x2f	; 47
    46e2:	e0 96       	adiw	r28, 0x30	; 48
    46e4:	2f ad       	ldd	r18, Y+63	; 0x3f
    46e6:	e0 97       	sbiw	r28, 0x30	; 48
    46e8:	a3 96       	adiw	r28, 0x23	; 35
    46ea:	2f af       	std	Y+63, r18	; 0x3f
    46ec:	a3 97       	sbiw	r28, 0x23	; 35
    46ee:	64 96       	adiw	r28, 0x14	; 20
    46f0:	3f ad       	ldd	r19, Y+63	; 0x3f
    46f2:	64 97       	sbiw	r28, 0x14	; 20
    46f4:	6c 96       	adiw	r28, 0x1c	; 28
    46f6:	8f ad       	ldd	r24, Y+63	; 0x3f
    46f8:	6c 97       	sbiw	r28, 0x1c	; 28
    46fa:	38 1b       	sub	r19, r24
    46fc:	a4 96       	adiw	r28, 0x24	; 36
    46fe:	3f af       	std	Y+63, r19	; 0x3f
    4700:	a4 97       	sbiw	r28, 0x24	; 36
    4702:	91 e0       	ldi	r25, 0x01	; 1
    4704:	e2 96       	adiw	r28, 0x32	; 50
    4706:	9f af       	std	Y+63, r25	; 0x3f
    4708:	e2 97       	sbiw	r28, 0x32	; 50
    470a:	a4 96       	adiw	r28, 0x24	; 36
    470c:	2f ad       	ldd	r18, Y+63	; 0x3f
    470e:	a4 97       	sbiw	r28, 0x24	; 36
    4710:	64 96       	adiw	r28, 0x14	; 20
    4712:	3f ad       	ldd	r19, Y+63	; 0x3f
    4714:	64 97       	sbiw	r28, 0x14	; 20
    4716:	32 17       	cp	r19, r18
    4718:	18 f0       	brcs	.+6      	; 0x4720 <SubCalculate+0x5cc>
    471a:	e2 96       	adiw	r28, 0x32	; 50
    471c:	1f ae       	std	Y+63, r1	; 0x3f
    471e:	e2 97       	sbiw	r28, 0x32	; 50
    4720:	a4 96       	adiw	r28, 0x24	; 36
    4722:	8f ad       	ldd	r24, Y+63	; 0x3f
    4724:	a4 97       	sbiw	r28, 0x24	; 36
    4726:	af 96       	adiw	r28, 0x2f	; 47
    4728:	9f ad       	ldd	r25, Y+63	; 0x3f
    472a:	af 97       	sbiw	r28, 0x2f	; 47
    472c:	89 1b       	sub	r24, r25
    472e:	e3 96       	adiw	r28, 0x33	; 51
    4730:	8f af       	std	Y+63, r24	; 0x3f
    4732:	e3 97       	sbiw	r28, 0x33	; 51
    4734:	21 e0       	ldi	r18, 0x01	; 1
    4736:	e4 96       	adiw	r28, 0x34	; 52
    4738:	2f af       	std	Y+63, r18	; 0x3f
    473a:	e4 97       	sbiw	r28, 0x34	; 52
    473c:	e3 96       	adiw	r28, 0x33	; 51
    473e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4740:	e3 97       	sbiw	r28, 0x33	; 51
    4742:	a4 96       	adiw	r28, 0x24	; 36
    4744:	8f ad       	ldd	r24, Y+63	; 0x3f
    4746:	a4 97       	sbiw	r28, 0x24	; 36
    4748:	83 17       	cp	r24, r19
    474a:	18 f0       	brcs	.+6      	; 0x4752 <SubCalculate+0x5fe>
    474c:	e4 96       	adiw	r28, 0x34	; 52
    474e:	1f ae       	std	Y+63, r1	; 0x3f
    4750:	e4 97       	sbiw	r28, 0x34	; 52
    4752:	e2 96       	adiw	r28, 0x32	; 50
    4754:	9f ad       	ldd	r25, Y+63	; 0x3f
    4756:	e2 97       	sbiw	r28, 0x32	; 50
    4758:	e4 96       	adiw	r28, 0x34	; 52
    475a:	2f ad       	ldd	r18, Y+63	; 0x3f
    475c:	e4 97       	sbiw	r28, 0x34	; 52
    475e:	92 2b       	or	r25, r18
    4760:	e2 96       	adiw	r28, 0x32	; 50
    4762:	9f af       	std	Y+63, r25	; 0x3f
    4764:	e2 97       	sbiw	r28, 0x32	; 50
    4766:	e3 96       	adiw	r28, 0x33	; 51
    4768:	3f ad       	ldd	r19, Y+63	; 0x3f
    476a:	e3 97       	sbiw	r28, 0x33	; 51
    476c:	a4 96       	adiw	r28, 0x24	; 36
    476e:	3f af       	std	Y+63, r19	; 0x3f
    4770:	a4 97       	sbiw	r28, 0x24	; 36
    4772:	65 96       	adiw	r28, 0x15	; 21
    4774:	8f ad       	ldd	r24, Y+63	; 0x3f
    4776:	65 97       	sbiw	r28, 0x15	; 21
    4778:	6d 96       	adiw	r28, 0x1d	; 29
    477a:	9f ad       	ldd	r25, Y+63	; 0x3f
    477c:	6d 97       	sbiw	r28, 0x1d	; 29
    477e:	89 1b       	sub	r24, r25
    4780:	a5 96       	adiw	r28, 0x25	; 37
    4782:	8f af       	std	Y+63, r24	; 0x3f
    4784:	a5 97       	sbiw	r28, 0x25	; 37
    4786:	21 e0       	ldi	r18, 0x01	; 1
    4788:	e5 96       	adiw	r28, 0x35	; 53
    478a:	2f af       	std	Y+63, r18	; 0x3f
    478c:	e5 97       	sbiw	r28, 0x35	; 53
    478e:	a5 96       	adiw	r28, 0x25	; 37
    4790:	3f ad       	ldd	r19, Y+63	; 0x3f
    4792:	a5 97       	sbiw	r28, 0x25	; 37
    4794:	65 96       	adiw	r28, 0x15	; 21
    4796:	8f ad       	ldd	r24, Y+63	; 0x3f
    4798:	65 97       	sbiw	r28, 0x15	; 21
    479a:	83 17       	cp	r24, r19
    479c:	18 f0       	brcs	.+6      	; 0x47a4 <SubCalculate+0x650>
    479e:	e5 96       	adiw	r28, 0x35	; 53
    47a0:	1f ae       	std	Y+63, r1	; 0x3f
    47a2:	e5 97       	sbiw	r28, 0x35	; 53
    47a4:	a5 96       	adiw	r28, 0x25	; 37
    47a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    47a8:	a5 97       	sbiw	r28, 0x25	; 37
    47aa:	e2 96       	adiw	r28, 0x32	; 50
    47ac:	2f ad       	ldd	r18, Y+63	; 0x3f
    47ae:	e2 97       	sbiw	r28, 0x32	; 50
    47b0:	92 1b       	sub	r25, r18
    47b2:	e6 96       	adiw	r28, 0x36	; 54
    47b4:	9f af       	std	Y+63, r25	; 0x3f
    47b6:	e6 97       	sbiw	r28, 0x36	; 54
    47b8:	31 e0       	ldi	r19, 0x01	; 1
    47ba:	e7 96       	adiw	r28, 0x37	; 55
    47bc:	3f af       	std	Y+63, r19	; 0x3f
    47be:	e7 97       	sbiw	r28, 0x37	; 55
    47c0:	e6 96       	adiw	r28, 0x36	; 54
    47c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    47c4:	e6 97       	sbiw	r28, 0x36	; 54
    47c6:	a5 96       	adiw	r28, 0x25	; 37
    47c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    47ca:	a5 97       	sbiw	r28, 0x25	; 37
    47cc:	98 17       	cp	r25, r24
    47ce:	18 f0       	brcs	.+6      	; 0x47d6 <SubCalculate+0x682>
    47d0:	e7 96       	adiw	r28, 0x37	; 55
    47d2:	1f ae       	std	Y+63, r1	; 0x3f
    47d4:	e7 97       	sbiw	r28, 0x37	; 55
    47d6:	e5 96       	adiw	r28, 0x35	; 53
    47d8:	2f ad       	ldd	r18, Y+63	; 0x3f
    47da:	e5 97       	sbiw	r28, 0x35	; 53
    47dc:	e7 96       	adiw	r28, 0x37	; 55
    47de:	3f ad       	ldd	r19, Y+63	; 0x3f
    47e0:	e7 97       	sbiw	r28, 0x37	; 55
    47e2:	23 2b       	or	r18, r19
    47e4:	e5 96       	adiw	r28, 0x35	; 53
    47e6:	2f af       	std	Y+63, r18	; 0x3f
    47e8:	e5 97       	sbiw	r28, 0x35	; 53
    47ea:	e6 96       	adiw	r28, 0x36	; 54
    47ec:	8f ad       	ldd	r24, Y+63	; 0x3f
    47ee:	e6 97       	sbiw	r28, 0x36	; 54
    47f0:	a5 96       	adiw	r28, 0x25	; 37
    47f2:	8f af       	std	Y+63, r24	; 0x3f
    47f4:	a5 97       	sbiw	r28, 0x25	; 37
    47f6:	66 96       	adiw	r28, 0x16	; 22
    47f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    47fa:	66 97       	sbiw	r28, 0x16	; 22
    47fc:	6e 96       	adiw	r28, 0x1e	; 30
    47fe:	2f ad       	ldd	r18, Y+63	; 0x3f
    4800:	6e 97       	sbiw	r28, 0x1e	; 30
    4802:	92 1b       	sub	r25, r18
    4804:	a6 96       	adiw	r28, 0x26	; 38
    4806:	9f af       	std	Y+63, r25	; 0x3f
    4808:	a6 97       	sbiw	r28, 0x26	; 38
    480a:	31 e0       	ldi	r19, 0x01	; 1
    480c:	e8 96       	adiw	r28, 0x38	; 56
    480e:	3f af       	std	Y+63, r19	; 0x3f
    4810:	e8 97       	sbiw	r28, 0x38	; 56
    4812:	a6 96       	adiw	r28, 0x26	; 38
    4814:	8f ad       	ldd	r24, Y+63	; 0x3f
    4816:	a6 97       	sbiw	r28, 0x26	; 38
    4818:	66 96       	adiw	r28, 0x16	; 22
    481a:	9f ad       	ldd	r25, Y+63	; 0x3f
    481c:	66 97       	sbiw	r28, 0x16	; 22
    481e:	98 17       	cp	r25, r24
    4820:	18 f0       	brcs	.+6      	; 0x4828 <SubCalculate+0x6d4>
    4822:	e8 96       	adiw	r28, 0x38	; 56
    4824:	1f ae       	std	Y+63, r1	; 0x3f
    4826:	e8 97       	sbiw	r28, 0x38	; 56
    4828:	a6 96       	adiw	r28, 0x26	; 38
    482a:	2f ad       	ldd	r18, Y+63	; 0x3f
    482c:	a6 97       	sbiw	r28, 0x26	; 38
    482e:	e5 96       	adiw	r28, 0x35	; 53
    4830:	3f ad       	ldd	r19, Y+63	; 0x3f
    4832:	e5 97       	sbiw	r28, 0x35	; 53
    4834:	23 1b       	sub	r18, r19
    4836:	e9 96       	adiw	r28, 0x39	; 57
    4838:	2f af       	std	Y+63, r18	; 0x3f
    483a:	e9 97       	sbiw	r28, 0x39	; 57
    483c:	81 e0       	ldi	r24, 0x01	; 1
    483e:	ea 96       	adiw	r28, 0x3a	; 58
    4840:	8f af       	std	Y+63, r24	; 0x3f
    4842:	ea 97       	sbiw	r28, 0x3a	; 58
    4844:	e9 96       	adiw	r28, 0x39	; 57
    4846:	9f ad       	ldd	r25, Y+63	; 0x3f
    4848:	e9 97       	sbiw	r28, 0x39	; 57
    484a:	a6 96       	adiw	r28, 0x26	; 38
    484c:	2f ad       	ldd	r18, Y+63	; 0x3f
    484e:	a6 97       	sbiw	r28, 0x26	; 38
    4850:	29 17       	cp	r18, r25
    4852:	18 f0       	brcs	.+6      	; 0x485a <SubCalculate+0x706>
    4854:	ea 96       	adiw	r28, 0x3a	; 58
    4856:	1f ae       	std	Y+63, r1	; 0x3f
    4858:	ea 97       	sbiw	r28, 0x3a	; 58
    485a:	e8 96       	adiw	r28, 0x38	; 56
    485c:	3f ad       	ldd	r19, Y+63	; 0x3f
    485e:	e8 97       	sbiw	r28, 0x38	; 56
    4860:	ea 96       	adiw	r28, 0x3a	; 58
    4862:	8f ad       	ldd	r24, Y+63	; 0x3f
    4864:	ea 97       	sbiw	r28, 0x3a	; 58
    4866:	38 2b       	or	r19, r24
    4868:	e8 96       	adiw	r28, 0x38	; 56
    486a:	3f af       	std	Y+63, r19	; 0x3f
    486c:	e8 97       	sbiw	r28, 0x38	; 56
    486e:	e9 96       	adiw	r28, 0x39	; 57
    4870:	9f ad       	ldd	r25, Y+63	; 0x3f
    4872:	e9 97       	sbiw	r28, 0x39	; 57
    4874:	a6 96       	adiw	r28, 0x26	; 38
    4876:	9f af       	std	Y+63, r25	; 0x3f
    4878:	a6 97       	sbiw	r28, 0x26	; 38
    487a:	67 96       	adiw	r28, 0x17	; 23
    487c:	2f ad       	ldd	r18, Y+63	; 0x3f
    487e:	67 97       	sbiw	r28, 0x17	; 23
    4880:	6f 96       	adiw	r28, 0x1f	; 31
    4882:	3f ad       	ldd	r19, Y+63	; 0x3f
    4884:	6f 97       	sbiw	r28, 0x1f	; 31
    4886:	23 1b       	sub	r18, r19
    4888:	a7 96       	adiw	r28, 0x27	; 39
    488a:	2f af       	std	Y+63, r18	; 0x3f
    488c:	a7 97       	sbiw	r28, 0x27	; 39
    488e:	a7 96       	adiw	r28, 0x27	; 39
    4890:	8f ad       	ldd	r24, Y+63	; 0x3f
    4892:	a7 97       	sbiw	r28, 0x27	; 39
    4894:	e8 96       	adiw	r28, 0x38	; 56
    4896:	9f ad       	ldd	r25, Y+63	; 0x3f
    4898:	e8 97       	sbiw	r28, 0x38	; 56
    489a:	89 1b       	sub	r24, r25
    489c:	a7 96       	adiw	r28, 0x27	; 39
    489e:	8f af       	std	Y+63, r24	; 0x3f
    48a0:	a7 97       	sbiw	r28, 0x27	; 39
    48a2:	a0 96       	adiw	r28, 0x20	; 32
    48a4:	2f ad       	ldd	r18, Y+63	; 0x3f
    48a6:	a0 97       	sbiw	r28, 0x20	; 32
    48a8:	29 83       	std	Y+1, r18	; 0x01
    48aa:	a1 96       	adiw	r28, 0x21	; 33
    48ac:	3f ad       	ldd	r19, Y+63	; 0x3f
    48ae:	a1 97       	sbiw	r28, 0x21	; 33
    48b0:	3a 83       	std	Y+2, r19	; 0x02
    48b2:	a2 96       	adiw	r28, 0x22	; 34
    48b4:	8f ad       	ldd	r24, Y+63	; 0x3f
    48b6:	a2 97       	sbiw	r28, 0x22	; 34
    48b8:	8b 83       	std	Y+3, r24	; 0x03
    48ba:	a3 96       	adiw	r28, 0x23	; 35
    48bc:	9f ad       	ldd	r25, Y+63	; 0x3f
    48be:	a3 97       	sbiw	r28, 0x23	; 35
    48c0:	9c 83       	std	Y+4, r25	; 0x04
    48c2:	a4 96       	adiw	r28, 0x24	; 36
    48c4:	2f ad       	ldd	r18, Y+63	; 0x3f
    48c6:	a4 97       	sbiw	r28, 0x24	; 36
    48c8:	2d 83       	std	Y+5, r18	; 0x05
    48ca:	a5 96       	adiw	r28, 0x25	; 37
    48cc:	3f ad       	ldd	r19, Y+63	; 0x3f
    48ce:	a5 97       	sbiw	r28, 0x25	; 37
    48d0:	3e 83       	std	Y+6, r19	; 0x06
    48d2:	a6 96       	adiw	r28, 0x26	; 38
    48d4:	8f ad       	ldd	r24, Y+63	; 0x3f
    48d6:	a6 97       	sbiw	r28, 0x26	; 38
    48d8:	8f 83       	std	Y+7, r24	; 0x07
    48da:	a7 96       	adiw	r28, 0x27	; 39
    48dc:	9f ad       	ldd	r25, Y+63	; 0x3f
    48de:	a7 97       	sbiw	r28, 0x27	; 39
    48e0:	98 87       	std	Y+8, r25	; 0x08
    48e2:	45 c0       	rjmp	.+138    	; 0x496e <SubCalculate+0x81a>
			break;
			case '*' :
			return_value = operand1*operand2;
    48e4:	29 85       	ldd	r18, Y+9	; 0x09
    48e6:	3a 85       	ldd	r19, Y+10	; 0x0a
    48e8:	4b 85       	ldd	r20, Y+11	; 0x0b
    48ea:	5c 85       	ldd	r21, Y+12	; 0x0c
    48ec:	6d 85       	ldd	r22, Y+13	; 0x0d
    48ee:	7e 85       	ldd	r23, Y+14	; 0x0e
    48f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    48f2:	98 89       	ldd	r25, Y+16	; 0x10
    48f4:	a9 88       	ldd	r10, Y+17	; 0x11
    48f6:	ba 88       	ldd	r11, Y+18	; 0x12
    48f8:	cb 88       	ldd	r12, Y+19	; 0x13
    48fa:	dc 88       	ldd	r13, Y+20	; 0x14
    48fc:	ed 88       	ldd	r14, Y+21	; 0x15
    48fe:	fe 88       	ldd	r15, Y+22	; 0x16
    4900:	0f 89       	ldd	r16, Y+23	; 0x17
    4902:	18 8d       	ldd	r17, Y+24	; 0x18
    4904:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    4908:	a2 2e       	mov	r10, r18
    490a:	b3 2e       	mov	r11, r19
    490c:	c4 2e       	mov	r12, r20
    490e:	d5 2e       	mov	r13, r21
    4910:	e6 2e       	mov	r14, r22
    4912:	f7 2e       	mov	r15, r23
    4914:	08 2f       	mov	r16, r24
    4916:	19 2f       	mov	r17, r25
    4918:	a9 82       	std	Y+1, r10	; 0x01
    491a:	ba 82       	std	Y+2, r11	; 0x02
    491c:	cb 82       	std	Y+3, r12	; 0x03
    491e:	dc 82       	std	Y+4, r13	; 0x04
    4920:	ed 82       	std	Y+5, r14	; 0x05
    4922:	fe 82       	std	Y+6, r15	; 0x06
    4924:	0f 83       	std	Y+7, r16	; 0x07
    4926:	18 87       	std	Y+8, r17	; 0x08
    4928:	22 c0       	rjmp	.+68     	; 0x496e <SubCalculate+0x81a>
			break;
			case '/' :
			return_value = operand1/operand2;
    492a:	29 85       	ldd	r18, Y+9	; 0x09
    492c:	3a 85       	ldd	r19, Y+10	; 0x0a
    492e:	4b 85       	ldd	r20, Y+11	; 0x0b
    4930:	5c 85       	ldd	r21, Y+12	; 0x0c
    4932:	6d 85       	ldd	r22, Y+13	; 0x0d
    4934:	7e 85       	ldd	r23, Y+14	; 0x0e
    4936:	8f 85       	ldd	r24, Y+15	; 0x0f
    4938:	98 89       	ldd	r25, Y+16	; 0x10
    493a:	a9 88       	ldd	r10, Y+17	; 0x11
    493c:	ba 88       	ldd	r11, Y+18	; 0x12
    493e:	cb 88       	ldd	r12, Y+19	; 0x13
    4940:	dc 88       	ldd	r13, Y+20	; 0x14
    4942:	ed 88       	ldd	r14, Y+21	; 0x15
    4944:	fe 88       	ldd	r15, Y+22	; 0x16
    4946:	0f 89       	ldd	r16, Y+23	; 0x17
    4948:	18 8d       	ldd	r17, Y+24	; 0x18
    494a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__divdi3>
    494e:	a2 2e       	mov	r10, r18
    4950:	b3 2e       	mov	r11, r19
    4952:	c4 2e       	mov	r12, r20
    4954:	d5 2e       	mov	r13, r21
    4956:	e6 2e       	mov	r14, r22
    4958:	f7 2e       	mov	r15, r23
    495a:	08 2f       	mov	r16, r24
    495c:	19 2f       	mov	r17, r25
    495e:	a9 82       	std	Y+1, r10	; 0x01
    4960:	ba 82       	std	Y+2, r11	; 0x02
    4962:	cb 82       	std	Y+3, r12	; 0x03
    4964:	dc 82       	std	Y+4, r13	; 0x04
    4966:	ed 82       	std	Y+5, r14	; 0x05
    4968:	fe 82       	std	Y+6, r15	; 0x06
    496a:	0f 83       	std	Y+7, r16	; 0x07
    496c:	18 87       	std	Y+8, r17	; 0x08
			break;
		}

		return return_value;
    496e:	29 81       	ldd	r18, Y+1	; 0x01
    4970:	2a 8f       	std	Y+26, r18	; 0x1a
    4972:	3a 81       	ldd	r19, Y+2	; 0x02
    4974:	3b 8f       	std	Y+27, r19	; 0x1b
    4976:	8b 81       	ldd	r24, Y+3	; 0x03
    4978:	8c 8f       	std	Y+28, r24	; 0x1c
    497a:	9c 81       	ldd	r25, Y+4	; 0x04
    497c:	9d 8f       	std	Y+29, r25	; 0x1d
    497e:	2d 81       	ldd	r18, Y+5	; 0x05
    4980:	2e 8f       	std	Y+30, r18	; 0x1e
    4982:	3e 81       	ldd	r19, Y+6	; 0x06
    4984:	3f 8f       	std	Y+31, r19	; 0x1f
    4986:	8f 81       	ldd	r24, Y+7	; 0x07
    4988:	88 a3       	std	Y+32, r24	; 0x20
    498a:	98 85       	ldd	r25, Y+8	; 0x08
    498c:	99 a3       	std	Y+33, r25	; 0x21
    498e:	08 c0       	rjmp	.+16     	; 0x49a0 <SubCalculate+0x84c>
	}

	return 0;
    4990:	1a 8e       	std	Y+26, r1	; 0x1a
    4992:	1b 8e       	std	Y+27, r1	; 0x1b
    4994:	1c 8e       	std	Y+28, r1	; 0x1c
    4996:	1d 8e       	std	Y+29, r1	; 0x1d
    4998:	1e 8e       	std	Y+30, r1	; 0x1e
    499a:	1f 8e       	std	Y+31, r1	; 0x1f
    499c:	18 a2       	std	Y+32, r1	; 0x20
    499e:	19 a2       	std	Y+33, r1	; 0x21
    49a0:	aa 8c       	ldd	r10, Y+26	; 0x1a
    49a2:	bb 8c       	ldd	r11, Y+27	; 0x1b
    49a4:	cc 8c       	ldd	r12, Y+28	; 0x1c
    49a6:	dd 8c       	ldd	r13, Y+29	; 0x1d
    49a8:	ee 8c       	ldd	r14, Y+30	; 0x1e
    49aa:	ff 8c       	ldd	r15, Y+31	; 0x1f
    49ac:	08 a1       	ldd	r16, Y+32	; 0x20
    49ae:	19 a1       	ldd	r17, Y+33	; 0x21
}
    49b0:	2a 2d       	mov	r18, r10
    49b2:	3b 2d       	mov	r19, r11
    49b4:	4c 2d       	mov	r20, r12
    49b6:	5d 2d       	mov	r21, r13
    49b8:	6e 2d       	mov	r22, r14
    49ba:	7f 2d       	mov	r23, r15
    49bc:	80 2f       	mov	r24, r16
    49be:	91 2f       	mov	r25, r17
    49c0:	c7 58       	subi	r28, 0x87	; 135
    49c2:	df 4f       	sbci	r29, 0xFF	; 255
    49c4:	0f b6       	in	r0, 0x3f	; 63
    49c6:	f8 94       	cli
    49c8:	de bf       	out	0x3e, r29	; 62
    49ca:	0f be       	out	0x3f, r0	; 63
    49cc:	cd bf       	out	0x3d, r28	; 61
    49ce:	cf 91       	pop	r28
    49d0:	df 91       	pop	r29
    49d2:	1f 91       	pop	r17
    49d4:	0f 91       	pop	r16
    49d6:	ff 90       	pop	r15
    49d8:	ef 90       	pop	r14
    49da:	df 90       	pop	r13
    49dc:	cf 90       	pop	r12
    49de:	bf 90       	pop	r11
    49e0:	af 90       	pop	r10
    49e2:	8f 90       	pop	r8
    49e4:	08 95       	ret

000049e6 <calculate>:

uint8 calculate(){
    49e6:	2f 92       	push	r2
    49e8:	3f 92       	push	r3
    49ea:	4f 92       	push	r4
    49ec:	5f 92       	push	r5
    49ee:	6f 92       	push	r6
    49f0:	7f 92       	push	r7
    49f2:	8f 92       	push	r8
    49f4:	9f 92       	push	r9
    49f6:	af 92       	push	r10
    49f8:	bf 92       	push	r11
    49fa:	cf 92       	push	r12
    49fc:	df 92       	push	r13
    49fe:	ef 92       	push	r14
    4a00:	ff 92       	push	r15
    4a02:	0f 93       	push	r16
    4a04:	1f 93       	push	r17
    4a06:	df 93       	push	r29
    4a08:	cf 93       	push	r28
    4a0a:	00 d0       	rcall	.+0      	; 0x4a0c <calculate+0x26>
    4a0c:	00 d0       	rcall	.+0      	; 0x4a0e <calculate+0x28>
    4a0e:	00 d0       	rcall	.+0      	; 0x4a10 <calculate+0x2a>
    4a10:	cd b7       	in	r28, 0x3d	; 61
    4a12:	de b7       	in	r29, 0x3e	; 62
	uint8 Operations_index=0 , Operands_index;
    4a14:	1a 82       	std	Y+2, r1	; 0x02
    4a16:	f9 c0       	rjmp	.+498    	; 0x4c0a <calculate+0x224>

	while((Operations[Operations_index] != '=') && (Operations[Operations_index] != '\0') )
	{
		if (Operations[Operations_index] == '*')
    4a18:	8a 81       	ldd	r24, Y+2	; 0x02
    4a1a:	88 2f       	mov	r24, r24
    4a1c:	90 e0       	ldi	r25, 0x00	; 0
    4a1e:	fc 01       	movw	r30, r24
    4a20:	ec 5d       	subi	r30, 0xDC	; 220
    4a22:	fd 4f       	sbci	r31, 0xFD	; 253
    4a24:	80 81       	ld	r24, Z
    4a26:	8a 32       	cpi	r24, 0x2A	; 42
    4a28:	09 f0       	breq	.+2      	; 0x4a2c <calculate+0x46>
    4a2a:	71 c0       	rjmp	.+226    	; 0x4b0e <calculate+0x128>
		{
			Operands[Operations_index] = Operands[Operations_index] * Operands[Operations_index+1];
    4a2c:	8a 81       	ldd	r24, Y+2	; 0x02
    4a2e:	28 2f       	mov	r18, r24
    4a30:	30 e0       	ldi	r19, 0x00	; 0
    4a32:	3e 83       	std	Y+6, r19	; 0x06
    4a34:	2d 83       	std	Y+5, r18	; 0x05
    4a36:	8a 81       	ldd	r24, Y+2	; 0x02
    4a38:	88 2f       	mov	r24, r24
    4a3a:	90 e0       	ldi	r25, 0x00	; 0
    4a3c:	88 0f       	add	r24, r24
    4a3e:	99 1f       	adc	r25, r25
    4a40:	88 0f       	add	r24, r24
    4a42:	99 1f       	adc	r25, r25
    4a44:	88 0f       	add	r24, r24
    4a46:	99 1f       	adc	r25, r25
    4a48:	fc 01       	movw	r30, r24
    4a4a:	ec 53       	subi	r30, 0x3C	; 60
    4a4c:	fe 4f       	sbci	r31, 0xFE	; 254
    4a4e:	a0 80       	ld	r10, Z
    4a50:	b1 80       	ldd	r11, Z+1	; 0x01
    4a52:	c2 80       	ldd	r12, Z+2	; 0x02
    4a54:	d3 80       	ldd	r13, Z+3	; 0x03
    4a56:	e4 80       	ldd	r14, Z+4	; 0x04
    4a58:	f5 80       	ldd	r15, Z+5	; 0x05
    4a5a:	06 81       	ldd	r16, Z+6	; 0x06
    4a5c:	17 81       	ldd	r17, Z+7	; 0x07
    4a5e:	8a 81       	ldd	r24, Y+2	; 0x02
    4a60:	88 2f       	mov	r24, r24
    4a62:	90 e0       	ldi	r25, 0x00	; 0
    4a64:	01 96       	adiw	r24, 0x01	; 1
    4a66:	88 0f       	add	r24, r24
    4a68:	99 1f       	adc	r25, r25
    4a6a:	88 0f       	add	r24, r24
    4a6c:	99 1f       	adc	r25, r25
    4a6e:	88 0f       	add	r24, r24
    4a70:	99 1f       	adc	r25, r25
    4a72:	fc 01       	movw	r30, r24
    4a74:	ec 53       	subi	r30, 0x3C	; 60
    4a76:	fe 4f       	sbci	r31, 0xFE	; 254
    4a78:	20 80       	ld	r2, Z
    4a7a:	31 80       	ldd	r3, Z+1	; 0x01
    4a7c:	42 80       	ldd	r4, Z+2	; 0x02
    4a7e:	53 80       	ldd	r5, Z+3	; 0x03
    4a80:	64 80       	ldd	r6, Z+4	; 0x04
    4a82:	75 80       	ldd	r7, Z+5	; 0x05
    4a84:	86 80       	ldd	r8, Z+6	; 0x06
    4a86:	97 80       	ldd	r9, Z+7	; 0x07
    4a88:	2a 2d       	mov	r18, r10
    4a8a:	3b 2d       	mov	r19, r11
    4a8c:	4c 2d       	mov	r20, r12
    4a8e:	5d 2d       	mov	r21, r13
    4a90:	6e 2d       	mov	r22, r14
    4a92:	7f 2d       	mov	r23, r15
    4a94:	80 2f       	mov	r24, r16
    4a96:	91 2f       	mov	r25, r17
    4a98:	a2 2c       	mov	r10, r2
    4a9a:	b3 2c       	mov	r11, r3
    4a9c:	c4 2c       	mov	r12, r4
    4a9e:	d5 2c       	mov	r13, r5
    4aa0:	e6 2c       	mov	r14, r6
    4aa2:	f7 2c       	mov	r15, r7
    4aa4:	08 2d       	mov	r16, r8
    4aa6:	19 2d       	mov	r17, r9
    4aa8:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    4aac:	a2 2e       	mov	r10, r18
    4aae:	b3 2e       	mov	r11, r19
    4ab0:	c4 2e       	mov	r12, r20
    4ab2:	d5 2e       	mov	r13, r21
    4ab4:	e6 2e       	mov	r14, r22
    4ab6:	f7 2e       	mov	r15, r23
    4ab8:	08 2f       	mov	r16, r24
    4aba:	19 2f       	mov	r17, r25
    4abc:	2a 2d       	mov	r18, r10
    4abe:	3b 2d       	mov	r19, r11
    4ac0:	4c 2d       	mov	r20, r12
    4ac2:	5d 2d       	mov	r21, r13
    4ac4:	6e 2d       	mov	r22, r14
    4ac6:	7f 2d       	mov	r23, r15
    4ac8:	80 2f       	mov	r24, r16
    4aca:	91 2f       	mov	r25, r17
    4acc:	ed 81       	ldd	r30, Y+5	; 0x05
    4ace:	fe 81       	ldd	r31, Y+6	; 0x06
    4ad0:	ee 0f       	add	r30, r30
    4ad2:	ff 1f       	adc	r31, r31
    4ad4:	ee 0f       	add	r30, r30
    4ad6:	ff 1f       	adc	r31, r31
    4ad8:	ee 0f       	add	r30, r30
    4ada:	ff 1f       	adc	r31, r31
    4adc:	ec 53       	subi	r30, 0x3C	; 60
    4ade:	fe 4f       	sbci	r31, 0xFE	; 254
    4ae0:	20 83       	st	Z, r18
    4ae2:	31 83       	std	Z+1, r19	; 0x01
    4ae4:	42 83       	std	Z+2, r20	; 0x02
    4ae6:	53 83       	std	Z+3, r21	; 0x03
    4ae8:	64 83       	std	Z+4, r22	; 0x04
    4aea:	75 83       	std	Z+5, r23	; 0x05
    4aec:	86 83       	std	Z+6, r24	; 0x06
    4aee:	97 83       	std	Z+7, r25	; 0x07
			shift_s64array_left((uint64*)Operands,Operations_index+1);
    4af0:	24 ec       	ldi	r18, 0xC4	; 196
    4af2:	31 e0       	ldi	r19, 0x01	; 1
    4af4:	8a 81       	ldd	r24, Y+2	; 0x02
    4af6:	48 2f       	mov	r20, r24
    4af8:	4f 5f       	subi	r20, 0xFF	; 255
    4afa:	c9 01       	movw	r24, r18
    4afc:	64 2f       	mov	r22, r20
    4afe:	0e 94 00 20 	call	0x4000	; 0x4000 <shift_s64array_left>
			shift_uint8array_left(Operations,Operations_index);
    4b02:	84 e2       	ldi	r24, 0x24	; 36
    4b04:	92 e0       	ldi	r25, 0x02	; 2
    4b06:	6a 81       	ldd	r22, Y+2	; 0x02
    4b08:	0e 94 74 20 	call	0x40e8	; 0x40e8 <shift_uint8array_left>
    4b0c:	7e c0       	rjmp	.+252    	; 0x4c0a <calculate+0x224>

		}
		else if (Operations[Operations_index] == '/')
    4b0e:	8a 81       	ldd	r24, Y+2	; 0x02
    4b10:	88 2f       	mov	r24, r24
    4b12:	90 e0       	ldi	r25, 0x00	; 0
    4b14:	fc 01       	movw	r30, r24
    4b16:	ec 5d       	subi	r30, 0xDC	; 220
    4b18:	fd 4f       	sbci	r31, 0xFD	; 253
    4b1a:	80 81       	ld	r24, Z
    4b1c:	8f 32       	cpi	r24, 0x2F	; 47
    4b1e:	09 f0       	breq	.+2      	; 0x4b22 <calculate+0x13c>
    4b20:	71 c0       	rjmp	.+226    	; 0x4c04 <calculate+0x21e>
		{
			Operands[Operations_index] = Operands[Operations_index] / Operands[Operations_index+1];
    4b22:	8a 81       	ldd	r24, Y+2	; 0x02
    4b24:	28 2f       	mov	r18, r24
    4b26:	30 e0       	ldi	r19, 0x00	; 0
    4b28:	3c 83       	std	Y+4, r19	; 0x04
    4b2a:	2b 83       	std	Y+3, r18	; 0x03
    4b2c:	8a 81       	ldd	r24, Y+2	; 0x02
    4b2e:	88 2f       	mov	r24, r24
    4b30:	90 e0       	ldi	r25, 0x00	; 0
    4b32:	88 0f       	add	r24, r24
    4b34:	99 1f       	adc	r25, r25
    4b36:	88 0f       	add	r24, r24
    4b38:	99 1f       	adc	r25, r25
    4b3a:	88 0f       	add	r24, r24
    4b3c:	99 1f       	adc	r25, r25
    4b3e:	fc 01       	movw	r30, r24
    4b40:	ec 53       	subi	r30, 0x3C	; 60
    4b42:	fe 4f       	sbci	r31, 0xFE	; 254
    4b44:	a0 80       	ld	r10, Z
    4b46:	b1 80       	ldd	r11, Z+1	; 0x01
    4b48:	c2 80       	ldd	r12, Z+2	; 0x02
    4b4a:	d3 80       	ldd	r13, Z+3	; 0x03
    4b4c:	e4 80       	ldd	r14, Z+4	; 0x04
    4b4e:	f5 80       	ldd	r15, Z+5	; 0x05
    4b50:	06 81       	ldd	r16, Z+6	; 0x06
    4b52:	17 81       	ldd	r17, Z+7	; 0x07
    4b54:	8a 81       	ldd	r24, Y+2	; 0x02
    4b56:	88 2f       	mov	r24, r24
    4b58:	90 e0       	ldi	r25, 0x00	; 0
    4b5a:	01 96       	adiw	r24, 0x01	; 1
    4b5c:	88 0f       	add	r24, r24
    4b5e:	99 1f       	adc	r25, r25
    4b60:	88 0f       	add	r24, r24
    4b62:	99 1f       	adc	r25, r25
    4b64:	88 0f       	add	r24, r24
    4b66:	99 1f       	adc	r25, r25
    4b68:	fc 01       	movw	r30, r24
    4b6a:	ec 53       	subi	r30, 0x3C	; 60
    4b6c:	fe 4f       	sbci	r31, 0xFE	; 254
    4b6e:	20 80       	ld	r2, Z
    4b70:	31 80       	ldd	r3, Z+1	; 0x01
    4b72:	42 80       	ldd	r4, Z+2	; 0x02
    4b74:	53 80       	ldd	r5, Z+3	; 0x03
    4b76:	64 80       	ldd	r6, Z+4	; 0x04
    4b78:	75 80       	ldd	r7, Z+5	; 0x05
    4b7a:	86 80       	ldd	r8, Z+6	; 0x06
    4b7c:	97 80       	ldd	r9, Z+7	; 0x07
    4b7e:	2a 2d       	mov	r18, r10
    4b80:	3b 2d       	mov	r19, r11
    4b82:	4c 2d       	mov	r20, r12
    4b84:	5d 2d       	mov	r21, r13
    4b86:	6e 2d       	mov	r22, r14
    4b88:	7f 2d       	mov	r23, r15
    4b8a:	80 2f       	mov	r24, r16
    4b8c:	91 2f       	mov	r25, r17
    4b8e:	a2 2c       	mov	r10, r2
    4b90:	b3 2c       	mov	r11, r3
    4b92:	c4 2c       	mov	r12, r4
    4b94:	d5 2c       	mov	r13, r5
    4b96:	e6 2c       	mov	r14, r6
    4b98:	f7 2c       	mov	r15, r7
    4b9a:	08 2d       	mov	r16, r8
    4b9c:	19 2d       	mov	r17, r9
    4b9e:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__divdi3>
    4ba2:	a2 2e       	mov	r10, r18
    4ba4:	b3 2e       	mov	r11, r19
    4ba6:	c4 2e       	mov	r12, r20
    4ba8:	d5 2e       	mov	r13, r21
    4baa:	e6 2e       	mov	r14, r22
    4bac:	f7 2e       	mov	r15, r23
    4bae:	08 2f       	mov	r16, r24
    4bb0:	19 2f       	mov	r17, r25
    4bb2:	2a 2d       	mov	r18, r10
    4bb4:	3b 2d       	mov	r19, r11
    4bb6:	4c 2d       	mov	r20, r12
    4bb8:	5d 2d       	mov	r21, r13
    4bba:	6e 2d       	mov	r22, r14
    4bbc:	7f 2d       	mov	r23, r15
    4bbe:	80 2f       	mov	r24, r16
    4bc0:	91 2f       	mov	r25, r17
    4bc2:	eb 81       	ldd	r30, Y+3	; 0x03
    4bc4:	fc 81       	ldd	r31, Y+4	; 0x04
    4bc6:	ee 0f       	add	r30, r30
    4bc8:	ff 1f       	adc	r31, r31
    4bca:	ee 0f       	add	r30, r30
    4bcc:	ff 1f       	adc	r31, r31
    4bce:	ee 0f       	add	r30, r30
    4bd0:	ff 1f       	adc	r31, r31
    4bd2:	ec 53       	subi	r30, 0x3C	; 60
    4bd4:	fe 4f       	sbci	r31, 0xFE	; 254
    4bd6:	20 83       	st	Z, r18
    4bd8:	31 83       	std	Z+1, r19	; 0x01
    4bda:	42 83       	std	Z+2, r20	; 0x02
    4bdc:	53 83       	std	Z+3, r21	; 0x03
    4bde:	64 83       	std	Z+4, r22	; 0x04
    4be0:	75 83       	std	Z+5, r23	; 0x05
    4be2:	86 83       	std	Z+6, r24	; 0x06
    4be4:	97 83       	std	Z+7, r25	; 0x07
			shift_s64array_left((uint64*)Operands,Operations_index+1);
    4be6:	24 ec       	ldi	r18, 0xC4	; 196
    4be8:	31 e0       	ldi	r19, 0x01	; 1
    4bea:	8a 81       	ldd	r24, Y+2	; 0x02
    4bec:	48 2f       	mov	r20, r24
    4bee:	4f 5f       	subi	r20, 0xFF	; 255
    4bf0:	c9 01       	movw	r24, r18
    4bf2:	64 2f       	mov	r22, r20
    4bf4:	0e 94 00 20 	call	0x4000	; 0x4000 <shift_s64array_left>
			shift_uint8array_left(Operations,Operations_index);
    4bf8:	84 e2       	ldi	r24, 0x24	; 36
    4bfa:	92 e0       	ldi	r25, 0x02	; 2
    4bfc:	6a 81       	ldd	r22, Y+2	; 0x02
    4bfe:	0e 94 74 20 	call	0x40e8	; 0x40e8 <shift_uint8array_left>
    4c02:	03 c0       	rjmp	.+6      	; 0x4c0a <calculate+0x224>

		}
		else
		{
			Operations_index++;
    4c04:	8a 81       	ldd	r24, Y+2	; 0x02
    4c06:	8f 5f       	subi	r24, 0xFF	; 255
    4c08:	8a 83       	std	Y+2, r24	; 0x02
}

uint8 calculate(){
	uint8 Operations_index=0 , Operands_index;

	while((Operations[Operations_index] != '=') && (Operations[Operations_index] != '\0') )
    4c0a:	8a 81       	ldd	r24, Y+2	; 0x02
    4c0c:	88 2f       	mov	r24, r24
    4c0e:	90 e0       	ldi	r25, 0x00	; 0
    4c10:	fc 01       	movw	r30, r24
    4c12:	ec 5d       	subi	r30, 0xDC	; 220
    4c14:	fd 4f       	sbci	r31, 0xFD	; 253
    4c16:	80 81       	ld	r24, Z
    4c18:	8d 33       	cpi	r24, 0x3D	; 61
    4c1a:	51 f0       	breq	.+20     	; 0x4c30 <calculate+0x24a>
    4c1c:	8a 81       	ldd	r24, Y+2	; 0x02
    4c1e:	88 2f       	mov	r24, r24
    4c20:	90 e0       	ldi	r25, 0x00	; 0
    4c22:	fc 01       	movw	r30, r24
    4c24:	ec 5d       	subi	r30, 0xDC	; 220
    4c26:	fd 4f       	sbci	r31, 0xFD	; 253
    4c28:	80 81       	ld	r24, Z
    4c2a:	88 23       	and	r24, r24
    4c2c:	09 f0       	breq	.+2      	; 0x4c30 <calculate+0x24a>
    4c2e:	f4 ce       	rjmp	.-536    	; 0x4a18 <calculate+0x32>
		{
			Operations_index++;
		}
	}

	Operations_index=0; Operands_index =1;
    4c30:	1a 82       	std	Y+2, r1	; 0x02
    4c32:	81 e0       	ldi	r24, 0x01	; 1
    4c34:	89 83       	std	Y+1, r24	; 0x01
	Result = Operands[0];
    4c36:	20 91 c4 01 	lds	r18, 0x01C4
    4c3a:	30 91 c5 01 	lds	r19, 0x01C5
    4c3e:	40 91 c6 01 	lds	r20, 0x01C6
    4c42:	50 91 c7 01 	lds	r21, 0x01C7
    4c46:	60 91 c8 01 	lds	r22, 0x01C8
    4c4a:	70 91 c9 01 	lds	r23, 0x01C9
    4c4e:	80 91 ca 01 	lds	r24, 0x01CA
    4c52:	90 91 cb 01 	lds	r25, 0x01CB
    4c56:	20 93 a8 01 	sts	0x01A8, r18
    4c5a:	30 93 a9 01 	sts	0x01A9, r19
    4c5e:	40 93 aa 01 	sts	0x01AA, r20
    4c62:	50 93 ab 01 	sts	0x01AB, r21
    4c66:	60 93 ac 01 	sts	0x01AC, r22
    4c6a:	70 93 ad 01 	sts	0x01AD, r23
    4c6e:	80 93 ae 01 	sts	0x01AE, r24
    4c72:	90 93 af 01 	sts	0x01AF, r25
    4c76:	5c c0       	rjmp	.+184    	; 0x4d30 <calculate+0x34a>
	while((Operations[Operations_index] != '=') && (Operands[Operands_index] != '\0') )
	{
		Result =SubCalculate(Result,Operands[Operands_index],Operations[Operations_index]);
    4c78:	a0 90 a8 01 	lds	r10, 0x01A8
    4c7c:	b0 90 a9 01 	lds	r11, 0x01A9
    4c80:	c0 90 aa 01 	lds	r12, 0x01AA
    4c84:	d0 90 ab 01 	lds	r13, 0x01AB
    4c88:	e0 90 ac 01 	lds	r14, 0x01AC
    4c8c:	f0 90 ad 01 	lds	r15, 0x01AD
    4c90:	00 91 ae 01 	lds	r16, 0x01AE
    4c94:	10 91 af 01 	lds	r17, 0x01AF
    4c98:	89 81       	ldd	r24, Y+1	; 0x01
    4c9a:	88 2f       	mov	r24, r24
    4c9c:	90 e0       	ldi	r25, 0x00	; 0
    4c9e:	88 0f       	add	r24, r24
    4ca0:	99 1f       	adc	r25, r25
    4ca2:	88 0f       	add	r24, r24
    4ca4:	99 1f       	adc	r25, r25
    4ca6:	88 0f       	add	r24, r24
    4ca8:	99 1f       	adc	r25, r25
    4caa:	fc 01       	movw	r30, r24
    4cac:	ec 53       	subi	r30, 0x3C	; 60
    4cae:	fe 4f       	sbci	r31, 0xFE	; 254
    4cb0:	20 80       	ld	r2, Z
    4cb2:	31 80       	ldd	r3, Z+1	; 0x01
    4cb4:	42 80       	ldd	r4, Z+2	; 0x02
    4cb6:	53 80       	ldd	r5, Z+3	; 0x03
    4cb8:	64 80       	ldd	r6, Z+4	; 0x04
    4cba:	75 80       	ldd	r7, Z+5	; 0x05
    4cbc:	86 80       	ldd	r8, Z+6	; 0x06
    4cbe:	97 80       	ldd	r9, Z+7	; 0x07
    4cc0:	8a 81       	ldd	r24, Y+2	; 0x02
    4cc2:	88 2f       	mov	r24, r24
    4cc4:	90 e0       	ldi	r25, 0x00	; 0
    4cc6:	fc 01       	movw	r30, r24
    4cc8:	ec 5d       	subi	r30, 0xDC	; 220
    4cca:	fd 4f       	sbci	r31, 0xFD	; 253
    4ccc:	e0 81       	ld	r30, Z
    4cce:	2a 2d       	mov	r18, r10
    4cd0:	3b 2d       	mov	r19, r11
    4cd2:	4c 2d       	mov	r20, r12
    4cd4:	5d 2d       	mov	r21, r13
    4cd6:	6e 2d       	mov	r22, r14
    4cd8:	7f 2d       	mov	r23, r15
    4cda:	80 2f       	mov	r24, r16
    4cdc:	91 2f       	mov	r25, r17
    4cde:	a2 2c       	mov	r10, r2
    4ce0:	b3 2c       	mov	r11, r3
    4ce2:	c4 2c       	mov	r12, r4
    4ce4:	d5 2c       	mov	r13, r5
    4ce6:	e6 2c       	mov	r14, r6
    4ce8:	f7 2c       	mov	r15, r7
    4cea:	08 2d       	mov	r16, r8
    4cec:	19 2d       	mov	r17, r9
    4cee:	8e 2e       	mov	r8, r30
    4cf0:	0e 94 aa 20 	call	0x4154	; 0x4154 <SubCalculate>
    4cf4:	a2 2e       	mov	r10, r18
    4cf6:	b3 2e       	mov	r11, r19
    4cf8:	c4 2e       	mov	r12, r20
    4cfa:	d5 2e       	mov	r13, r21
    4cfc:	e6 2e       	mov	r14, r22
    4cfe:	f7 2e       	mov	r15, r23
    4d00:	08 2f       	mov	r16, r24
    4d02:	19 2f       	mov	r17, r25
    4d04:	a0 92 a8 01 	sts	0x01A8, r10
    4d08:	b0 92 a9 01 	sts	0x01A9, r11
    4d0c:	c0 92 aa 01 	sts	0x01AA, r12
    4d10:	d0 92 ab 01 	sts	0x01AB, r13
    4d14:	e0 92 ac 01 	sts	0x01AC, r14
    4d18:	f0 92 ad 01 	sts	0x01AD, r15
    4d1c:	00 93 ae 01 	sts	0x01AE, r16
    4d20:	10 93 af 01 	sts	0x01AF, r17
		Operations_index++;
    4d24:	8a 81       	ldd	r24, Y+2	; 0x02
    4d26:	8f 5f       	subi	r24, 0xFF	; 255
    4d28:	8a 83       	std	Y+2, r24	; 0x02
		Operands_index++;
    4d2a:	89 81       	ldd	r24, Y+1	; 0x01
    4d2c:	8f 5f       	subi	r24, 0xFF	; 255
    4d2e:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	Operations_index=0; Operands_index =1;
	Result = Operands[0];
	while((Operations[Operations_index] != '=') && (Operands[Operands_index] != '\0') )
    4d30:	8a 81       	ldd	r24, Y+2	; 0x02
    4d32:	88 2f       	mov	r24, r24
    4d34:	90 e0       	ldi	r25, 0x00	; 0
    4d36:	fc 01       	movw	r30, r24
    4d38:	ec 5d       	subi	r30, 0xDC	; 220
    4d3a:	fd 4f       	sbci	r31, 0xFD	; 253
    4d3c:	80 81       	ld	r24, Z
    4d3e:	8d 33       	cpi	r24, 0x3D	; 61
    4d40:	f9 f0       	breq	.+62     	; 0x4d80 <calculate+0x39a>
    4d42:	89 81       	ldd	r24, Y+1	; 0x01
    4d44:	88 2f       	mov	r24, r24
    4d46:	90 e0       	ldi	r25, 0x00	; 0
    4d48:	88 0f       	add	r24, r24
    4d4a:	99 1f       	adc	r25, r25
    4d4c:	88 0f       	add	r24, r24
    4d4e:	99 1f       	adc	r25, r25
    4d50:	88 0f       	add	r24, r24
    4d52:	99 1f       	adc	r25, r25
    4d54:	fc 01       	movw	r30, r24
    4d56:	ec 53       	subi	r30, 0x3C	; 60
    4d58:	fe 4f       	sbci	r31, 0xFE	; 254
    4d5a:	20 81       	ld	r18, Z
    4d5c:	31 81       	ldd	r19, Z+1	; 0x01
    4d5e:	42 81       	ldd	r20, Z+2	; 0x02
    4d60:	53 81       	ldd	r21, Z+3	; 0x03
    4d62:	64 81       	ldd	r22, Z+4	; 0x04
    4d64:	75 81       	ldd	r23, Z+5	; 0x05
    4d66:	86 81       	ldd	r24, Z+6	; 0x06
    4d68:	97 81       	ldd	r25, Z+7	; 0x07
    4d6a:	e2 2f       	mov	r30, r18
    4d6c:	e3 2b       	or	r30, r19
    4d6e:	e4 2b       	or	r30, r20
    4d70:	e5 2b       	or	r30, r21
    4d72:	e6 2b       	or	r30, r22
    4d74:	e7 2b       	or	r30, r23
    4d76:	e8 2b       	or	r30, r24
    4d78:	e9 2b       	or	r30, r25
    4d7a:	ee 23       	and	r30, r30
    4d7c:	09 f0       	breq	.+2      	; 0x4d80 <calculate+0x39a>
    4d7e:	7c cf       	rjmp	.-264    	; 0x4c78 <calculate+0x292>
		Result =SubCalculate(Result,Operands[Operands_index],Operations[Operations_index]);
		Operations_index++;
		Operands_index++;
	}

	return DisplayPoint;
    4d80:	84 e0       	ldi	r24, 0x04	; 4
}
    4d82:	26 96       	adiw	r28, 0x06	; 6
    4d84:	0f b6       	in	r0, 0x3f	; 63
    4d86:	f8 94       	cli
    4d88:	de bf       	out	0x3e, r29	; 62
    4d8a:	0f be       	out	0x3f, r0	; 63
    4d8c:	cd bf       	out	0x3d, r28	; 61
    4d8e:	cf 91       	pop	r28
    4d90:	df 91       	pop	r29
    4d92:	1f 91       	pop	r17
    4d94:	0f 91       	pop	r16
    4d96:	ff 90       	pop	r15
    4d98:	ef 90       	pop	r14
    4d9a:	df 90       	pop	r13
    4d9c:	cf 90       	pop	r12
    4d9e:	bf 90       	pop	r11
    4da0:	af 90       	pop	r10
    4da2:	9f 90       	pop	r9
    4da4:	8f 90       	pop	r8
    4da6:	7f 90       	pop	r7
    4da8:	6f 90       	pop	r6
    4daa:	5f 90       	pop	r5
    4dac:	4f 90       	pop	r4
    4dae:	3f 90       	pop	r3
    4db0:	2f 90       	pop	r2
    4db2:	08 95       	ret

00004db4 <display>:

uint8  display()
{
    4db4:	df 93       	push	r29
    4db6:	cf 93       	push	r28
    4db8:	cd b7       	in	r28, 0x3d	; 61
    4dba:	de b7       	in	r29, 0x3e	; 62

	LCD_voidMoveCursor(2,1);
    4dbc:	82 e0       	ldi	r24, 0x02	; 2
    4dbe:	61 e0       	ldi	r22, 0x01	; 1
    4dc0:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <LCD_voidMoveCursor>
	LCD_voidWriteNumber(Result);
    4dc4:	20 91 a8 01 	lds	r18, 0x01A8
    4dc8:	30 91 a9 01 	lds	r19, 0x01A9
    4dcc:	40 91 aa 01 	lds	r20, 0x01AA
    4dd0:	50 91 ab 01 	lds	r21, 0x01AB
    4dd4:	60 91 ac 01 	lds	r22, 0x01AC
    4dd8:	70 91 ad 01 	lds	r23, 0x01AD
    4ddc:	80 91 ae 01 	lds	r24, 0x01AE
    4de0:	90 91 af 01 	lds	r25, 0x01AF
    4de4:	da 01       	movw	r26, r20
    4de6:	c9 01       	movw	r24, r18
    4de8:	bc 01       	movw	r22, r24
    4dea:	cd 01       	movw	r24, r26
    4dec:	0e 94 aa 19 	call	0x3354	; 0x3354 <LCD_voidWriteNumber>

	return Reset;
    4df0:	80 e0       	ldi	r24, 0x00	; 0
}
    4df2:	cf 91       	pop	r28
    4df4:	df 91       	pop	r29
    4df6:	08 95       	ret

00004df8 <Resetall>:

uint8  Resetall()
{
    4df8:	df 93       	push	r29
    4dfa:	cf 93       	push	r28
    4dfc:	0f 92       	push	r0
    4dfe:	cd b7       	in	r28, 0x3d	; 61
    4e00:	de b7       	in	r29, 0x3e	; 62
	uint8 index=0;
    4e02:	19 82       	std	Y+1, r1	; 0x01
	for(index=0;index<MaxNumberOfDigit;index++)
    4e04:	19 82       	std	Y+1, r1	; 0x01
    4e06:	0a c0       	rjmp	.+20     	; 0x4e1c <Resetall+0x24>
	Digit[index]=0;
    4e08:	89 81       	ldd	r24, Y+1	; 0x01
    4e0a:	88 2f       	mov	r24, r24
    4e0c:	90 e0       	ldi	r25, 0x00	; 0
    4e0e:	fc 01       	movw	r30, r24
    4e10:	ec 54       	subi	r30, 0x4C	; 76
    4e12:	fe 4f       	sbci	r31, 0xFE	; 254
    4e14:	10 82       	st	Z, r1
}

uint8  Resetall()
{
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
    4e16:	89 81       	ldd	r24, Y+1	; 0x01
    4e18:	8f 5f       	subi	r24, 0xFF	; 255
    4e1a:	89 83       	std	Y+1, r24	; 0x01
    4e1c:	89 81       	ldd	r24, Y+1	; 0x01
    4e1e:	80 31       	cpi	r24, 0x10	; 16
    4e20:	98 f3       	brcs	.-26     	; 0x4e08 <Resetall+0x10>
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
    4e22:	19 82       	std	Y+1, r1	; 0x01
    4e24:	17 c0       	rjmp	.+46     	; 0x4e54 <Resetall+0x5c>
	Operands[index]=0;
    4e26:	89 81       	ldd	r24, Y+1	; 0x01
    4e28:	88 2f       	mov	r24, r24
    4e2a:	90 e0       	ldi	r25, 0x00	; 0
    4e2c:	88 0f       	add	r24, r24
    4e2e:	99 1f       	adc	r25, r25
    4e30:	88 0f       	add	r24, r24
    4e32:	99 1f       	adc	r25, r25
    4e34:	88 0f       	add	r24, r24
    4e36:	99 1f       	adc	r25, r25
    4e38:	fc 01       	movw	r30, r24
    4e3a:	ec 53       	subi	r30, 0x3C	; 60
    4e3c:	fe 4f       	sbci	r31, 0xFE	; 254
    4e3e:	10 82       	st	Z, r1
    4e40:	11 82       	std	Z+1, r1	; 0x01
    4e42:	12 82       	std	Z+2, r1	; 0x02
    4e44:	13 82       	std	Z+3, r1	; 0x03
    4e46:	14 82       	std	Z+4, r1	; 0x04
    4e48:	15 82       	std	Z+5, r1	; 0x05
    4e4a:	16 82       	std	Z+6, r1	; 0x06
    4e4c:	17 82       	std	Z+7, r1	; 0x07
uint8  Resetall()
{
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
    4e4e:	89 81       	ldd	r24, Y+1	; 0x01
    4e50:	8f 5f       	subi	r24, 0xFF	; 255
    4e52:	89 83       	std	Y+1, r24	; 0x01
    4e54:	89 81       	ldd	r24, Y+1	; 0x01
    4e56:	8c 30       	cpi	r24, 0x0C	; 12
    4e58:	30 f3       	brcs	.-52     	; 0x4e26 <Resetall+0x2e>
	Operands[index]=0;
	for(index=0;index<MaxNumberOfOperations;index++)
    4e5a:	19 82       	std	Y+1, r1	; 0x01
    4e5c:	0a c0       	rjmp	.+20     	; 0x4e72 <Resetall+0x7a>
	Operations[index]=0;
    4e5e:	89 81       	ldd	r24, Y+1	; 0x01
    4e60:	88 2f       	mov	r24, r24
    4e62:	90 e0       	ldi	r25, 0x00	; 0
    4e64:	fc 01       	movw	r30, r24
    4e66:	ec 5d       	subi	r30, 0xDC	; 220
    4e68:	fd 4f       	sbci	r31, 0xFD	; 253
    4e6a:	10 82       	st	Z, r1
	uint8 index=0;
	for(index=0;index<MaxNumberOfDigit;index++)
	Digit[index]=0;
	for(index=0;index<MaxNumberOfOperands;index++)
	Operands[index]=0;
	for(index=0;index<MaxNumberOfOperations;index++)
    4e6c:	89 81       	ldd	r24, Y+1	; 0x01
    4e6e:	8f 5f       	subi	r24, 0xFF	; 255
    4e70:	89 83       	std	Y+1, r24	; 0x01
    4e72:	89 81       	ldd	r24, Y+1	; 0x01
    4e74:	8b 30       	cpi	r24, 0x0B	; 11
    4e76:	98 f3       	brcs	.-26     	; 0x4e5e <Resetall+0x66>
	Operations[index]=0;
	OperandsCounter=0;
    4e78:	10 92 b0 01 	sts	0x01B0, r1
	OperationsCounter=0;
    4e7c:	10 92 b1 01 	sts	0x01B1, r1
	DigitCounter=0;
    4e80:	10 92 b2 01 	sts	0x01B2, r1
	Result=0;
    4e84:	10 92 a8 01 	sts	0x01A8, r1
    4e88:	10 92 a9 01 	sts	0x01A9, r1
    4e8c:	10 92 aa 01 	sts	0x01AA, r1
    4e90:	10 92 ab 01 	sts	0x01AB, r1
    4e94:	10 92 ac 01 	sts	0x01AC, r1
    4e98:	10 92 ad 01 	sts	0x01AD, r1
    4e9c:	10 92 ae 01 	sts	0x01AE, r1
    4ea0:	10 92 af 01 	sts	0x01AF, r1

	return StartPoint;
    4ea4:	81 e0       	ldi	r24, 0x01	; 1
}
    4ea6:	0f 90       	pop	r0
    4ea8:	cf 91       	pop	r28
    4eaa:	df 91       	pop	r29
    4eac:	08 95       	ret

00004eae <main>:
#include "../HAL/LCD/LCD_int.h"
#include "calculator.h"
#define F_CPU   16000000UL
#include <util/delay.h>

void main (void){
    4eae:	df 93       	push	r29
    4eb0:	cf 93       	push	r28
    4eb2:	0f 92       	push	r0
    4eb4:	cd b7       	in	r28, 0x3d	; 61
    4eb6:	de b7       	in	r29, 0x3e	; 62
	LCD_voidInit();
    4eb8:	0e 94 93 14 	call	0x2926	; 0x2926 <LCD_voidInit>
	Keypad_voidInit();
    4ebc:	0e 94 3d 1b 	call	0x367a	; 0x367a <Keypad_voidInit>
	uint8 Flag;

		while(1)
		{

					Flag=StartPoint;
    4ec0:	81 e0       	ldi	r24, 0x01	; 1
    4ec2:	89 83       	std	Y+1, r24	; 0x01
    4ec4:	03 c0       	rjmp	.+6      	; 0x4ecc <main+0x1e>
					while(Flag==StartPoint)		{   Flag=ScanData();	  }
    4ec6:	0e 94 cd 1c 	call	0x399a	; 0x399a <ScanData>
    4eca:	89 83       	std	Y+1, r24	; 0x01
    4ecc:	89 81       	ldd	r24, Y+1	; 0x01
    4ece:	81 30       	cpi	r24, 0x01	; 1
    4ed0:	d1 f3       	breq	.-12     	; 0x4ec6 <main+0x18>
    4ed2:	03 c0       	rjmp	.+6      	; 0x4eda <main+0x2c>
					while(Flag==AnalyzePoint)	{   Flag=AnalyzeData();	  }
    4ed4:	0e 94 5b 1e 	call	0x3cb6	; 0x3cb6 <AnalyzeData>
    4ed8:	89 83       	std	Y+1, r24	; 0x01
    4eda:	89 81       	ldd	r24, Y+1	; 0x01
    4edc:	82 30       	cpi	r24, 0x02	; 2
    4ede:	d1 f3       	breq	.-12     	; 0x4ed4 <main+0x26>
    4ee0:	03 c0       	rjmp	.+6      	; 0x4ee8 <main+0x3a>
					while(Flag==CalculatePoint)	{   Flag=calculate();     }
    4ee2:	0e 94 f3 24 	call	0x49e6	; 0x49e6 <calculate>
    4ee6:	89 83       	std	Y+1, r24	; 0x01
    4ee8:	89 81       	ldd	r24, Y+1	; 0x01
    4eea:	83 30       	cpi	r24, 0x03	; 3
    4eec:	d1 f3       	breq	.-12     	; 0x4ee2 <main+0x34>
    4eee:	03 c0       	rjmp	.+6      	; 0x4ef6 <main+0x48>
					while(Flag==DisplayPoint)	{   Flag=display();	      }
    4ef0:	0e 94 da 26 	call	0x4db4	; 0x4db4 <display>
    4ef4:	89 83       	std	Y+1, r24	; 0x01
    4ef6:	89 81       	ldd	r24, Y+1	; 0x01
    4ef8:	84 30       	cpi	r24, 0x04	; 4
    4efa:	d1 f3       	breq	.-12     	; 0x4ef0 <main+0x42>
    4efc:	03 c0       	rjmp	.+6      	; 0x4f04 <main+0x56>
					while(Flag==Reset)			{   Flag=Resetall();      }
    4efe:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <Resetall>
    4f02:	89 83       	std	Y+1, r24	; 0x01
    4f04:	89 81       	ldd	r24, Y+1	; 0x01
    4f06:	88 23       	and	r24, r24
    4f08:	d1 f3       	breq	.-12     	; 0x4efe <main+0x50>

					while(keypad_u8CheckPress()!='A'){}
    4f0a:	0e 94 b3 1b 	call	0x3766	; 0x3766 <keypad_u8CheckPress>
    4f0e:	81 34       	cpi	r24, 0x41	; 65
    4f10:	e1 f7       	brne	.-8      	; 0x4f0a <main+0x5c>
					LCD_voidWriteCmd(0X01);
    4f12:	81 e0       	ldi	r24, 0x01	; 1
    4f14:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <LCD_voidWriteCmd>
    4f18:	d3 cf       	rjmp	.-90     	; 0x4ec0 <main+0x12>

00004f1a <__mulsi3>:
    4f1a:	62 9f       	mul	r22, r18
    4f1c:	d0 01       	movw	r26, r0
    4f1e:	73 9f       	mul	r23, r19
    4f20:	f0 01       	movw	r30, r0
    4f22:	82 9f       	mul	r24, r18
    4f24:	e0 0d       	add	r30, r0
    4f26:	f1 1d       	adc	r31, r1
    4f28:	64 9f       	mul	r22, r20
    4f2a:	e0 0d       	add	r30, r0
    4f2c:	f1 1d       	adc	r31, r1
    4f2e:	92 9f       	mul	r25, r18
    4f30:	f0 0d       	add	r31, r0
    4f32:	83 9f       	mul	r24, r19
    4f34:	f0 0d       	add	r31, r0
    4f36:	74 9f       	mul	r23, r20
    4f38:	f0 0d       	add	r31, r0
    4f3a:	65 9f       	mul	r22, r21
    4f3c:	f0 0d       	add	r31, r0
    4f3e:	99 27       	eor	r25, r25
    4f40:	72 9f       	mul	r23, r18
    4f42:	b0 0d       	add	r27, r0
    4f44:	e1 1d       	adc	r30, r1
    4f46:	f9 1f       	adc	r31, r25
    4f48:	63 9f       	mul	r22, r19
    4f4a:	b0 0d       	add	r27, r0
    4f4c:	e1 1d       	adc	r30, r1
    4f4e:	f9 1f       	adc	r31, r25
    4f50:	bd 01       	movw	r22, r26
    4f52:	cf 01       	movw	r24, r30
    4f54:	11 24       	eor	r1, r1
    4f56:	08 95       	ret

00004f58 <__udivmodsi4>:
    4f58:	a1 e2       	ldi	r26, 0x21	; 33
    4f5a:	1a 2e       	mov	r1, r26
    4f5c:	aa 1b       	sub	r26, r26
    4f5e:	bb 1b       	sub	r27, r27
    4f60:	fd 01       	movw	r30, r26
    4f62:	0d c0       	rjmp	.+26     	; 0x4f7e <__udivmodsi4_ep>

00004f64 <__udivmodsi4_loop>:
    4f64:	aa 1f       	adc	r26, r26
    4f66:	bb 1f       	adc	r27, r27
    4f68:	ee 1f       	adc	r30, r30
    4f6a:	ff 1f       	adc	r31, r31
    4f6c:	a2 17       	cp	r26, r18
    4f6e:	b3 07       	cpc	r27, r19
    4f70:	e4 07       	cpc	r30, r20
    4f72:	f5 07       	cpc	r31, r21
    4f74:	20 f0       	brcs	.+8      	; 0x4f7e <__udivmodsi4_ep>
    4f76:	a2 1b       	sub	r26, r18
    4f78:	b3 0b       	sbc	r27, r19
    4f7a:	e4 0b       	sbc	r30, r20
    4f7c:	f5 0b       	sbc	r31, r21

00004f7e <__udivmodsi4_ep>:
    4f7e:	66 1f       	adc	r22, r22
    4f80:	77 1f       	adc	r23, r23
    4f82:	88 1f       	adc	r24, r24
    4f84:	99 1f       	adc	r25, r25
    4f86:	1a 94       	dec	r1
    4f88:	69 f7       	brne	.-38     	; 0x4f64 <__udivmodsi4_loop>
    4f8a:	60 95       	com	r22
    4f8c:	70 95       	com	r23
    4f8e:	80 95       	com	r24
    4f90:	90 95       	com	r25
    4f92:	9b 01       	movw	r18, r22
    4f94:	ac 01       	movw	r20, r24
    4f96:	bd 01       	movw	r22, r26
    4f98:	cf 01       	movw	r24, r30
    4f9a:	08 95       	ret

00004f9c <__prologue_saves__>:
    4f9c:	2f 92       	push	r2
    4f9e:	3f 92       	push	r3
    4fa0:	4f 92       	push	r4
    4fa2:	5f 92       	push	r5
    4fa4:	6f 92       	push	r6
    4fa6:	7f 92       	push	r7
    4fa8:	8f 92       	push	r8
    4faa:	9f 92       	push	r9
    4fac:	af 92       	push	r10
    4fae:	bf 92       	push	r11
    4fb0:	cf 92       	push	r12
    4fb2:	df 92       	push	r13
    4fb4:	ef 92       	push	r14
    4fb6:	ff 92       	push	r15
    4fb8:	0f 93       	push	r16
    4fba:	1f 93       	push	r17
    4fbc:	cf 93       	push	r28
    4fbe:	df 93       	push	r29
    4fc0:	cd b7       	in	r28, 0x3d	; 61
    4fc2:	de b7       	in	r29, 0x3e	; 62
    4fc4:	ca 1b       	sub	r28, r26
    4fc6:	db 0b       	sbc	r29, r27
    4fc8:	0f b6       	in	r0, 0x3f	; 63
    4fca:	f8 94       	cli
    4fcc:	de bf       	out	0x3e, r29	; 62
    4fce:	0f be       	out	0x3f, r0	; 63
    4fd0:	cd bf       	out	0x3d, r28	; 61
    4fd2:	09 94       	ijmp

00004fd4 <__epilogue_restores__>:
    4fd4:	2a 88       	ldd	r2, Y+18	; 0x12
    4fd6:	39 88       	ldd	r3, Y+17	; 0x11
    4fd8:	48 88       	ldd	r4, Y+16	; 0x10
    4fda:	5f 84       	ldd	r5, Y+15	; 0x0f
    4fdc:	6e 84       	ldd	r6, Y+14	; 0x0e
    4fde:	7d 84       	ldd	r7, Y+13	; 0x0d
    4fe0:	8c 84       	ldd	r8, Y+12	; 0x0c
    4fe2:	9b 84       	ldd	r9, Y+11	; 0x0b
    4fe4:	aa 84       	ldd	r10, Y+10	; 0x0a
    4fe6:	b9 84       	ldd	r11, Y+9	; 0x09
    4fe8:	c8 84       	ldd	r12, Y+8	; 0x08
    4fea:	df 80       	ldd	r13, Y+7	; 0x07
    4fec:	ee 80       	ldd	r14, Y+6	; 0x06
    4fee:	fd 80       	ldd	r15, Y+5	; 0x05
    4ff0:	0c 81       	ldd	r16, Y+4	; 0x04
    4ff2:	1b 81       	ldd	r17, Y+3	; 0x03
    4ff4:	aa 81       	ldd	r26, Y+2	; 0x02
    4ff6:	b9 81       	ldd	r27, Y+1	; 0x01
    4ff8:	ce 0f       	add	r28, r30
    4ffa:	d1 1d       	adc	r29, r1
    4ffc:	0f b6       	in	r0, 0x3f	; 63
    4ffe:	f8 94       	cli
    5000:	de bf       	out	0x3e, r29	; 62
    5002:	0f be       	out	0x3f, r0	; 63
    5004:	cd bf       	out	0x3d, r28	; 61
    5006:	ed 01       	movw	r28, r26
    5008:	08 95       	ret

0000500a <sprintf>:
    500a:	ae e0       	ldi	r26, 0x0E	; 14
    500c:	b0 e0       	ldi	r27, 0x00	; 0
    500e:	eb e0       	ldi	r30, 0x0B	; 11
    5010:	f8 e2       	ldi	r31, 0x28	; 40
    5012:	0c 94 dc 27 	jmp	0x4fb8	; 0x4fb8 <__prologue_saves__+0x1c>
    5016:	0d 89       	ldd	r16, Y+21	; 0x15
    5018:	1e 89       	ldd	r17, Y+22	; 0x16
    501a:	86 e0       	ldi	r24, 0x06	; 6
    501c:	8c 83       	std	Y+4, r24	; 0x04
    501e:	1a 83       	std	Y+2, r17	; 0x02
    5020:	09 83       	std	Y+1, r16	; 0x01
    5022:	8f ef       	ldi	r24, 0xFF	; 255
    5024:	9f e7       	ldi	r25, 0x7F	; 127
    5026:	9e 83       	std	Y+6, r25	; 0x06
    5028:	8d 83       	std	Y+5, r24	; 0x05
    502a:	9e 01       	movw	r18, r28
    502c:	27 5e       	subi	r18, 0xE7	; 231
    502e:	3f 4f       	sbci	r19, 0xFF	; 255
    5030:	ce 01       	movw	r24, r28
    5032:	01 96       	adiw	r24, 0x01	; 1
    5034:	6f 89       	ldd	r22, Y+23	; 0x17
    5036:	78 8d       	ldd	r23, Y+24	; 0x18
    5038:	a9 01       	movw	r20, r18
    503a:	0e 94 29 28 	call	0x5052	; 0x5052 <vfprintf>
    503e:	2f 81       	ldd	r18, Y+7	; 0x07
    5040:	38 85       	ldd	r19, Y+8	; 0x08
    5042:	02 0f       	add	r16, r18
    5044:	13 1f       	adc	r17, r19
    5046:	f8 01       	movw	r30, r16
    5048:	10 82       	st	Z, r1
    504a:	2e 96       	adiw	r28, 0x0e	; 14
    504c:	e4 e0       	ldi	r30, 0x04	; 4
    504e:	0c 94 f8 27 	jmp	0x4ff0	; 0x4ff0 <__epilogue_restores__+0x1c>

00005052 <vfprintf>:
    5052:	ab e0       	ldi	r26, 0x0B	; 11
    5054:	b0 e0       	ldi	r27, 0x00	; 0
    5056:	ef e2       	ldi	r30, 0x2F	; 47
    5058:	f8 e2       	ldi	r31, 0x28	; 40
    505a:	0c 94 ce 27 	jmp	0x4f9c	; 0x4f9c <__prologue_saves__>
    505e:	3c 01       	movw	r6, r24
    5060:	2b 01       	movw	r4, r22
    5062:	5a 01       	movw	r10, r20
    5064:	fc 01       	movw	r30, r24
    5066:	17 82       	std	Z+7, r1	; 0x07
    5068:	16 82       	std	Z+6, r1	; 0x06
    506a:	83 81       	ldd	r24, Z+3	; 0x03
    506c:	81 fd       	sbrc	r24, 1
    506e:	03 c0       	rjmp	.+6      	; 0x5076 <vfprintf+0x24>
    5070:	6f ef       	ldi	r22, 0xFF	; 255
    5072:	7f ef       	ldi	r23, 0xFF	; 255
    5074:	c6 c1       	rjmp	.+908    	; 0x5402 <vfprintf+0x3b0>
    5076:	9a e0       	ldi	r25, 0x0A	; 10
    5078:	89 2e       	mov	r8, r25
    507a:	1e 01       	movw	r2, r28
    507c:	08 94       	sec
    507e:	21 1c       	adc	r2, r1
    5080:	31 1c       	adc	r3, r1
    5082:	f3 01       	movw	r30, r6
    5084:	23 81       	ldd	r18, Z+3	; 0x03
    5086:	f2 01       	movw	r30, r4
    5088:	23 fd       	sbrc	r18, 3
    508a:	85 91       	lpm	r24, Z+
    508c:	23 ff       	sbrs	r18, 3
    508e:	81 91       	ld	r24, Z+
    5090:	2f 01       	movw	r4, r30
    5092:	88 23       	and	r24, r24
    5094:	09 f4       	brne	.+2      	; 0x5098 <vfprintf+0x46>
    5096:	b2 c1       	rjmp	.+868    	; 0x53fc <vfprintf+0x3aa>
    5098:	85 32       	cpi	r24, 0x25	; 37
    509a:	39 f4       	brne	.+14     	; 0x50aa <vfprintf+0x58>
    509c:	23 fd       	sbrc	r18, 3
    509e:	85 91       	lpm	r24, Z+
    50a0:	23 ff       	sbrs	r18, 3
    50a2:	81 91       	ld	r24, Z+
    50a4:	2f 01       	movw	r4, r30
    50a6:	85 32       	cpi	r24, 0x25	; 37
    50a8:	29 f4       	brne	.+10     	; 0x50b4 <vfprintf+0x62>
    50aa:	90 e0       	ldi	r25, 0x00	; 0
    50ac:	b3 01       	movw	r22, r6
    50ae:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    50b2:	e7 cf       	rjmp	.-50     	; 0x5082 <vfprintf+0x30>
    50b4:	98 2f       	mov	r25, r24
    50b6:	ff 24       	eor	r15, r15
    50b8:	ee 24       	eor	r14, r14
    50ba:	99 24       	eor	r9, r9
    50bc:	ff e1       	ldi	r31, 0x1F	; 31
    50be:	ff 15       	cp	r31, r15
    50c0:	d0 f0       	brcs	.+52     	; 0x50f6 <vfprintf+0xa4>
    50c2:	9b 32       	cpi	r25, 0x2B	; 43
    50c4:	69 f0       	breq	.+26     	; 0x50e0 <vfprintf+0x8e>
    50c6:	9c 32       	cpi	r25, 0x2C	; 44
    50c8:	28 f4       	brcc	.+10     	; 0x50d4 <vfprintf+0x82>
    50ca:	90 32       	cpi	r25, 0x20	; 32
    50cc:	59 f0       	breq	.+22     	; 0x50e4 <vfprintf+0x92>
    50ce:	93 32       	cpi	r25, 0x23	; 35
    50d0:	91 f4       	brne	.+36     	; 0x50f6 <vfprintf+0xa4>
    50d2:	0e c0       	rjmp	.+28     	; 0x50f0 <vfprintf+0x9e>
    50d4:	9d 32       	cpi	r25, 0x2D	; 45
    50d6:	49 f0       	breq	.+18     	; 0x50ea <vfprintf+0x98>
    50d8:	90 33       	cpi	r25, 0x30	; 48
    50da:	69 f4       	brne	.+26     	; 0x50f6 <vfprintf+0xa4>
    50dc:	41 e0       	ldi	r20, 0x01	; 1
    50de:	24 c0       	rjmp	.+72     	; 0x5128 <vfprintf+0xd6>
    50e0:	52 e0       	ldi	r21, 0x02	; 2
    50e2:	f5 2a       	or	r15, r21
    50e4:	84 e0       	ldi	r24, 0x04	; 4
    50e6:	f8 2a       	or	r15, r24
    50e8:	28 c0       	rjmp	.+80     	; 0x513a <vfprintf+0xe8>
    50ea:	98 e0       	ldi	r25, 0x08	; 8
    50ec:	f9 2a       	or	r15, r25
    50ee:	25 c0       	rjmp	.+74     	; 0x513a <vfprintf+0xe8>
    50f0:	e0 e1       	ldi	r30, 0x10	; 16
    50f2:	fe 2a       	or	r15, r30
    50f4:	22 c0       	rjmp	.+68     	; 0x513a <vfprintf+0xe8>
    50f6:	f7 fc       	sbrc	r15, 7
    50f8:	29 c0       	rjmp	.+82     	; 0x514c <vfprintf+0xfa>
    50fa:	89 2f       	mov	r24, r25
    50fc:	80 53       	subi	r24, 0x30	; 48
    50fe:	8a 30       	cpi	r24, 0x0A	; 10
    5100:	70 f4       	brcc	.+28     	; 0x511e <vfprintf+0xcc>
    5102:	f6 fe       	sbrs	r15, 6
    5104:	05 c0       	rjmp	.+10     	; 0x5110 <vfprintf+0xbe>
    5106:	98 9c       	mul	r9, r8
    5108:	90 2c       	mov	r9, r0
    510a:	11 24       	eor	r1, r1
    510c:	98 0e       	add	r9, r24
    510e:	15 c0       	rjmp	.+42     	; 0x513a <vfprintf+0xe8>
    5110:	e8 9c       	mul	r14, r8
    5112:	e0 2c       	mov	r14, r0
    5114:	11 24       	eor	r1, r1
    5116:	e8 0e       	add	r14, r24
    5118:	f0 e2       	ldi	r31, 0x20	; 32
    511a:	ff 2a       	or	r15, r31
    511c:	0e c0       	rjmp	.+28     	; 0x513a <vfprintf+0xe8>
    511e:	9e 32       	cpi	r25, 0x2E	; 46
    5120:	29 f4       	brne	.+10     	; 0x512c <vfprintf+0xda>
    5122:	f6 fc       	sbrc	r15, 6
    5124:	6b c1       	rjmp	.+726    	; 0x53fc <vfprintf+0x3aa>
    5126:	40 e4       	ldi	r20, 0x40	; 64
    5128:	f4 2a       	or	r15, r20
    512a:	07 c0       	rjmp	.+14     	; 0x513a <vfprintf+0xe8>
    512c:	9c 36       	cpi	r25, 0x6C	; 108
    512e:	19 f4       	brne	.+6      	; 0x5136 <vfprintf+0xe4>
    5130:	50 e8       	ldi	r21, 0x80	; 128
    5132:	f5 2a       	or	r15, r21
    5134:	02 c0       	rjmp	.+4      	; 0x513a <vfprintf+0xe8>
    5136:	98 36       	cpi	r25, 0x68	; 104
    5138:	49 f4       	brne	.+18     	; 0x514c <vfprintf+0xfa>
    513a:	f2 01       	movw	r30, r4
    513c:	23 fd       	sbrc	r18, 3
    513e:	95 91       	lpm	r25, Z+
    5140:	23 ff       	sbrs	r18, 3
    5142:	91 91       	ld	r25, Z+
    5144:	2f 01       	movw	r4, r30
    5146:	99 23       	and	r25, r25
    5148:	09 f0       	breq	.+2      	; 0x514c <vfprintf+0xfa>
    514a:	b8 cf       	rjmp	.-144    	; 0x50bc <vfprintf+0x6a>
    514c:	89 2f       	mov	r24, r25
    514e:	85 54       	subi	r24, 0x45	; 69
    5150:	83 30       	cpi	r24, 0x03	; 3
    5152:	18 f0       	brcs	.+6      	; 0x515a <vfprintf+0x108>
    5154:	80 52       	subi	r24, 0x20	; 32
    5156:	83 30       	cpi	r24, 0x03	; 3
    5158:	38 f4       	brcc	.+14     	; 0x5168 <vfprintf+0x116>
    515a:	44 e0       	ldi	r20, 0x04	; 4
    515c:	50 e0       	ldi	r21, 0x00	; 0
    515e:	a4 0e       	add	r10, r20
    5160:	b5 1e       	adc	r11, r21
    5162:	5f e3       	ldi	r21, 0x3F	; 63
    5164:	59 83       	std	Y+1, r21	; 0x01
    5166:	0f c0       	rjmp	.+30     	; 0x5186 <vfprintf+0x134>
    5168:	93 36       	cpi	r25, 0x63	; 99
    516a:	31 f0       	breq	.+12     	; 0x5178 <vfprintf+0x126>
    516c:	93 37       	cpi	r25, 0x73	; 115
    516e:	79 f0       	breq	.+30     	; 0x518e <vfprintf+0x13c>
    5170:	93 35       	cpi	r25, 0x53	; 83
    5172:	09 f0       	breq	.+2      	; 0x5176 <vfprintf+0x124>
    5174:	56 c0       	rjmp	.+172    	; 0x5222 <vfprintf+0x1d0>
    5176:	20 c0       	rjmp	.+64     	; 0x51b8 <vfprintf+0x166>
    5178:	f5 01       	movw	r30, r10
    517a:	80 81       	ld	r24, Z
    517c:	89 83       	std	Y+1, r24	; 0x01
    517e:	42 e0       	ldi	r20, 0x02	; 2
    5180:	50 e0       	ldi	r21, 0x00	; 0
    5182:	a4 0e       	add	r10, r20
    5184:	b5 1e       	adc	r11, r21
    5186:	61 01       	movw	r12, r2
    5188:	01 e0       	ldi	r16, 0x01	; 1
    518a:	10 e0       	ldi	r17, 0x00	; 0
    518c:	12 c0       	rjmp	.+36     	; 0x51b2 <vfprintf+0x160>
    518e:	f5 01       	movw	r30, r10
    5190:	c0 80       	ld	r12, Z
    5192:	d1 80       	ldd	r13, Z+1	; 0x01
    5194:	f6 fc       	sbrc	r15, 6
    5196:	03 c0       	rjmp	.+6      	; 0x519e <vfprintf+0x14c>
    5198:	6f ef       	ldi	r22, 0xFF	; 255
    519a:	7f ef       	ldi	r23, 0xFF	; 255
    519c:	02 c0       	rjmp	.+4      	; 0x51a2 <vfprintf+0x150>
    519e:	69 2d       	mov	r22, r9
    51a0:	70 e0       	ldi	r23, 0x00	; 0
    51a2:	42 e0       	ldi	r20, 0x02	; 2
    51a4:	50 e0       	ldi	r21, 0x00	; 0
    51a6:	a4 0e       	add	r10, r20
    51a8:	b5 1e       	adc	r11, r21
    51aa:	c6 01       	movw	r24, r12
    51ac:	0e 94 11 2a 	call	0x5422	; 0x5422 <strnlen>
    51b0:	8c 01       	movw	r16, r24
    51b2:	5f e7       	ldi	r21, 0x7F	; 127
    51b4:	f5 22       	and	r15, r21
    51b6:	14 c0       	rjmp	.+40     	; 0x51e0 <vfprintf+0x18e>
    51b8:	f5 01       	movw	r30, r10
    51ba:	c0 80       	ld	r12, Z
    51bc:	d1 80       	ldd	r13, Z+1	; 0x01
    51be:	f6 fc       	sbrc	r15, 6
    51c0:	03 c0       	rjmp	.+6      	; 0x51c8 <vfprintf+0x176>
    51c2:	6f ef       	ldi	r22, 0xFF	; 255
    51c4:	7f ef       	ldi	r23, 0xFF	; 255
    51c6:	02 c0       	rjmp	.+4      	; 0x51cc <vfprintf+0x17a>
    51c8:	69 2d       	mov	r22, r9
    51ca:	70 e0       	ldi	r23, 0x00	; 0
    51cc:	42 e0       	ldi	r20, 0x02	; 2
    51ce:	50 e0       	ldi	r21, 0x00	; 0
    51d0:	a4 0e       	add	r10, r20
    51d2:	b5 1e       	adc	r11, r21
    51d4:	c6 01       	movw	r24, r12
    51d6:	0e 94 06 2a 	call	0x540c	; 0x540c <strnlen_P>
    51da:	8c 01       	movw	r16, r24
    51dc:	50 e8       	ldi	r21, 0x80	; 128
    51de:	f5 2a       	or	r15, r21
    51e0:	f3 fe       	sbrs	r15, 3
    51e2:	07 c0       	rjmp	.+14     	; 0x51f2 <vfprintf+0x1a0>
    51e4:	1a c0       	rjmp	.+52     	; 0x521a <vfprintf+0x1c8>
    51e6:	80 e2       	ldi	r24, 0x20	; 32
    51e8:	90 e0       	ldi	r25, 0x00	; 0
    51ea:	b3 01       	movw	r22, r6
    51ec:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    51f0:	ea 94       	dec	r14
    51f2:	8e 2d       	mov	r24, r14
    51f4:	90 e0       	ldi	r25, 0x00	; 0
    51f6:	08 17       	cp	r16, r24
    51f8:	19 07       	cpc	r17, r25
    51fa:	a8 f3       	brcs	.-22     	; 0x51e6 <vfprintf+0x194>
    51fc:	0e c0       	rjmp	.+28     	; 0x521a <vfprintf+0x1c8>
    51fe:	f6 01       	movw	r30, r12
    5200:	f7 fc       	sbrc	r15, 7
    5202:	85 91       	lpm	r24, Z+
    5204:	f7 fe       	sbrs	r15, 7
    5206:	81 91       	ld	r24, Z+
    5208:	6f 01       	movw	r12, r30
    520a:	90 e0       	ldi	r25, 0x00	; 0
    520c:	b3 01       	movw	r22, r6
    520e:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    5212:	e1 10       	cpse	r14, r1
    5214:	ea 94       	dec	r14
    5216:	01 50       	subi	r16, 0x01	; 1
    5218:	10 40       	sbci	r17, 0x00	; 0
    521a:	01 15       	cp	r16, r1
    521c:	11 05       	cpc	r17, r1
    521e:	79 f7       	brne	.-34     	; 0x51fe <vfprintf+0x1ac>
    5220:	ea c0       	rjmp	.+468    	; 0x53f6 <vfprintf+0x3a4>
    5222:	94 36       	cpi	r25, 0x64	; 100
    5224:	11 f0       	breq	.+4      	; 0x522a <vfprintf+0x1d8>
    5226:	99 36       	cpi	r25, 0x69	; 105
    5228:	69 f5       	brne	.+90     	; 0x5284 <vfprintf+0x232>
    522a:	f7 fe       	sbrs	r15, 7
    522c:	08 c0       	rjmp	.+16     	; 0x523e <vfprintf+0x1ec>
    522e:	f5 01       	movw	r30, r10
    5230:	20 81       	ld	r18, Z
    5232:	31 81       	ldd	r19, Z+1	; 0x01
    5234:	42 81       	ldd	r20, Z+2	; 0x02
    5236:	53 81       	ldd	r21, Z+3	; 0x03
    5238:	84 e0       	ldi	r24, 0x04	; 4
    523a:	90 e0       	ldi	r25, 0x00	; 0
    523c:	0a c0       	rjmp	.+20     	; 0x5252 <vfprintf+0x200>
    523e:	f5 01       	movw	r30, r10
    5240:	80 81       	ld	r24, Z
    5242:	91 81       	ldd	r25, Z+1	; 0x01
    5244:	9c 01       	movw	r18, r24
    5246:	44 27       	eor	r20, r20
    5248:	37 fd       	sbrc	r19, 7
    524a:	40 95       	com	r20
    524c:	54 2f       	mov	r21, r20
    524e:	82 e0       	ldi	r24, 0x02	; 2
    5250:	90 e0       	ldi	r25, 0x00	; 0
    5252:	a8 0e       	add	r10, r24
    5254:	b9 1e       	adc	r11, r25
    5256:	9f e6       	ldi	r25, 0x6F	; 111
    5258:	f9 22       	and	r15, r25
    525a:	57 ff       	sbrs	r21, 7
    525c:	09 c0       	rjmp	.+18     	; 0x5270 <vfprintf+0x21e>
    525e:	50 95       	com	r21
    5260:	40 95       	com	r20
    5262:	30 95       	com	r19
    5264:	21 95       	neg	r18
    5266:	3f 4f       	sbci	r19, 0xFF	; 255
    5268:	4f 4f       	sbci	r20, 0xFF	; 255
    526a:	5f 4f       	sbci	r21, 0xFF	; 255
    526c:	e0 e8       	ldi	r30, 0x80	; 128
    526e:	fe 2a       	or	r15, r30
    5270:	ca 01       	movw	r24, r20
    5272:	b9 01       	movw	r22, r18
    5274:	a1 01       	movw	r20, r2
    5276:	2a e0       	ldi	r18, 0x0A	; 10
    5278:	30 e0       	ldi	r19, 0x00	; 0
    527a:	0e 94 48 2a 	call	0x5490	; 0x5490 <__ultoa_invert>
    527e:	d8 2e       	mov	r13, r24
    5280:	d2 18       	sub	r13, r2
    5282:	40 c0       	rjmp	.+128    	; 0x5304 <vfprintf+0x2b2>
    5284:	95 37       	cpi	r25, 0x75	; 117
    5286:	29 f4       	brne	.+10     	; 0x5292 <vfprintf+0x240>
    5288:	1f 2d       	mov	r17, r15
    528a:	1f 7e       	andi	r17, 0xEF	; 239
    528c:	2a e0       	ldi	r18, 0x0A	; 10
    528e:	30 e0       	ldi	r19, 0x00	; 0
    5290:	1d c0       	rjmp	.+58     	; 0x52cc <vfprintf+0x27a>
    5292:	1f 2d       	mov	r17, r15
    5294:	19 7f       	andi	r17, 0xF9	; 249
    5296:	9f 36       	cpi	r25, 0x6F	; 111
    5298:	61 f0       	breq	.+24     	; 0x52b2 <vfprintf+0x260>
    529a:	90 37       	cpi	r25, 0x70	; 112
    529c:	20 f4       	brcc	.+8      	; 0x52a6 <vfprintf+0x254>
    529e:	98 35       	cpi	r25, 0x58	; 88
    52a0:	09 f0       	breq	.+2      	; 0x52a4 <vfprintf+0x252>
    52a2:	ac c0       	rjmp	.+344    	; 0x53fc <vfprintf+0x3aa>
    52a4:	0f c0       	rjmp	.+30     	; 0x52c4 <vfprintf+0x272>
    52a6:	90 37       	cpi	r25, 0x70	; 112
    52a8:	39 f0       	breq	.+14     	; 0x52b8 <vfprintf+0x266>
    52aa:	98 37       	cpi	r25, 0x78	; 120
    52ac:	09 f0       	breq	.+2      	; 0x52b0 <vfprintf+0x25e>
    52ae:	a6 c0       	rjmp	.+332    	; 0x53fc <vfprintf+0x3aa>
    52b0:	04 c0       	rjmp	.+8      	; 0x52ba <vfprintf+0x268>
    52b2:	28 e0       	ldi	r18, 0x08	; 8
    52b4:	30 e0       	ldi	r19, 0x00	; 0
    52b6:	0a c0       	rjmp	.+20     	; 0x52cc <vfprintf+0x27a>
    52b8:	10 61       	ori	r17, 0x10	; 16
    52ba:	14 fd       	sbrc	r17, 4
    52bc:	14 60       	ori	r17, 0x04	; 4
    52be:	20 e1       	ldi	r18, 0x10	; 16
    52c0:	30 e0       	ldi	r19, 0x00	; 0
    52c2:	04 c0       	rjmp	.+8      	; 0x52cc <vfprintf+0x27a>
    52c4:	14 fd       	sbrc	r17, 4
    52c6:	16 60       	ori	r17, 0x06	; 6
    52c8:	20 e1       	ldi	r18, 0x10	; 16
    52ca:	32 e0       	ldi	r19, 0x02	; 2
    52cc:	17 ff       	sbrs	r17, 7
    52ce:	08 c0       	rjmp	.+16     	; 0x52e0 <vfprintf+0x28e>
    52d0:	f5 01       	movw	r30, r10
    52d2:	60 81       	ld	r22, Z
    52d4:	71 81       	ldd	r23, Z+1	; 0x01
    52d6:	82 81       	ldd	r24, Z+2	; 0x02
    52d8:	93 81       	ldd	r25, Z+3	; 0x03
    52da:	44 e0       	ldi	r20, 0x04	; 4
    52dc:	50 e0       	ldi	r21, 0x00	; 0
    52de:	08 c0       	rjmp	.+16     	; 0x52f0 <vfprintf+0x29e>
    52e0:	f5 01       	movw	r30, r10
    52e2:	80 81       	ld	r24, Z
    52e4:	91 81       	ldd	r25, Z+1	; 0x01
    52e6:	bc 01       	movw	r22, r24
    52e8:	80 e0       	ldi	r24, 0x00	; 0
    52ea:	90 e0       	ldi	r25, 0x00	; 0
    52ec:	42 e0       	ldi	r20, 0x02	; 2
    52ee:	50 e0       	ldi	r21, 0x00	; 0
    52f0:	a4 0e       	add	r10, r20
    52f2:	b5 1e       	adc	r11, r21
    52f4:	a1 01       	movw	r20, r2
    52f6:	0e 94 48 2a 	call	0x5490	; 0x5490 <__ultoa_invert>
    52fa:	d8 2e       	mov	r13, r24
    52fc:	d2 18       	sub	r13, r2
    52fe:	8f e7       	ldi	r24, 0x7F	; 127
    5300:	f8 2e       	mov	r15, r24
    5302:	f1 22       	and	r15, r17
    5304:	f6 fe       	sbrs	r15, 6
    5306:	0b c0       	rjmp	.+22     	; 0x531e <vfprintf+0x2cc>
    5308:	5e ef       	ldi	r21, 0xFE	; 254
    530a:	f5 22       	and	r15, r21
    530c:	d9 14       	cp	r13, r9
    530e:	38 f4       	brcc	.+14     	; 0x531e <vfprintf+0x2cc>
    5310:	f4 fe       	sbrs	r15, 4
    5312:	07 c0       	rjmp	.+14     	; 0x5322 <vfprintf+0x2d0>
    5314:	f2 fc       	sbrc	r15, 2
    5316:	05 c0       	rjmp	.+10     	; 0x5322 <vfprintf+0x2d0>
    5318:	8f ee       	ldi	r24, 0xEF	; 239
    531a:	f8 22       	and	r15, r24
    531c:	02 c0       	rjmp	.+4      	; 0x5322 <vfprintf+0x2d0>
    531e:	1d 2d       	mov	r17, r13
    5320:	01 c0       	rjmp	.+2      	; 0x5324 <vfprintf+0x2d2>
    5322:	19 2d       	mov	r17, r9
    5324:	f4 fe       	sbrs	r15, 4
    5326:	0d c0       	rjmp	.+26     	; 0x5342 <vfprintf+0x2f0>
    5328:	fe 01       	movw	r30, r28
    532a:	ed 0d       	add	r30, r13
    532c:	f1 1d       	adc	r31, r1
    532e:	80 81       	ld	r24, Z
    5330:	80 33       	cpi	r24, 0x30	; 48
    5332:	19 f4       	brne	.+6      	; 0x533a <vfprintf+0x2e8>
    5334:	99 ee       	ldi	r25, 0xE9	; 233
    5336:	f9 22       	and	r15, r25
    5338:	08 c0       	rjmp	.+16     	; 0x534a <vfprintf+0x2f8>
    533a:	1f 5f       	subi	r17, 0xFF	; 255
    533c:	f2 fe       	sbrs	r15, 2
    533e:	05 c0       	rjmp	.+10     	; 0x534a <vfprintf+0x2f8>
    5340:	03 c0       	rjmp	.+6      	; 0x5348 <vfprintf+0x2f6>
    5342:	8f 2d       	mov	r24, r15
    5344:	86 78       	andi	r24, 0x86	; 134
    5346:	09 f0       	breq	.+2      	; 0x534a <vfprintf+0x2f8>
    5348:	1f 5f       	subi	r17, 0xFF	; 255
    534a:	0f 2d       	mov	r16, r15
    534c:	f3 fc       	sbrc	r15, 3
    534e:	14 c0       	rjmp	.+40     	; 0x5378 <vfprintf+0x326>
    5350:	f0 fe       	sbrs	r15, 0
    5352:	0f c0       	rjmp	.+30     	; 0x5372 <vfprintf+0x320>
    5354:	1e 15       	cp	r17, r14
    5356:	10 f0       	brcs	.+4      	; 0x535c <vfprintf+0x30a>
    5358:	9d 2c       	mov	r9, r13
    535a:	0b c0       	rjmp	.+22     	; 0x5372 <vfprintf+0x320>
    535c:	9d 2c       	mov	r9, r13
    535e:	9e 0c       	add	r9, r14
    5360:	91 1a       	sub	r9, r17
    5362:	1e 2d       	mov	r17, r14
    5364:	06 c0       	rjmp	.+12     	; 0x5372 <vfprintf+0x320>
    5366:	80 e2       	ldi	r24, 0x20	; 32
    5368:	90 e0       	ldi	r25, 0x00	; 0
    536a:	b3 01       	movw	r22, r6
    536c:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    5370:	1f 5f       	subi	r17, 0xFF	; 255
    5372:	1e 15       	cp	r17, r14
    5374:	c0 f3       	brcs	.-16     	; 0x5366 <vfprintf+0x314>
    5376:	04 c0       	rjmp	.+8      	; 0x5380 <vfprintf+0x32e>
    5378:	1e 15       	cp	r17, r14
    537a:	10 f4       	brcc	.+4      	; 0x5380 <vfprintf+0x32e>
    537c:	e1 1a       	sub	r14, r17
    537e:	01 c0       	rjmp	.+2      	; 0x5382 <vfprintf+0x330>
    5380:	ee 24       	eor	r14, r14
    5382:	04 ff       	sbrs	r16, 4
    5384:	0f c0       	rjmp	.+30     	; 0x53a4 <vfprintf+0x352>
    5386:	80 e3       	ldi	r24, 0x30	; 48
    5388:	90 e0       	ldi	r25, 0x00	; 0
    538a:	b3 01       	movw	r22, r6
    538c:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    5390:	02 ff       	sbrs	r16, 2
    5392:	1d c0       	rjmp	.+58     	; 0x53ce <vfprintf+0x37c>
    5394:	01 fd       	sbrc	r16, 1
    5396:	03 c0       	rjmp	.+6      	; 0x539e <vfprintf+0x34c>
    5398:	88 e7       	ldi	r24, 0x78	; 120
    539a:	90 e0       	ldi	r25, 0x00	; 0
    539c:	0e c0       	rjmp	.+28     	; 0x53ba <vfprintf+0x368>
    539e:	88 e5       	ldi	r24, 0x58	; 88
    53a0:	90 e0       	ldi	r25, 0x00	; 0
    53a2:	0b c0       	rjmp	.+22     	; 0x53ba <vfprintf+0x368>
    53a4:	80 2f       	mov	r24, r16
    53a6:	86 78       	andi	r24, 0x86	; 134
    53a8:	91 f0       	breq	.+36     	; 0x53ce <vfprintf+0x37c>
    53aa:	01 ff       	sbrs	r16, 1
    53ac:	02 c0       	rjmp	.+4      	; 0x53b2 <vfprintf+0x360>
    53ae:	8b e2       	ldi	r24, 0x2B	; 43
    53b0:	01 c0       	rjmp	.+2      	; 0x53b4 <vfprintf+0x362>
    53b2:	80 e2       	ldi	r24, 0x20	; 32
    53b4:	f7 fc       	sbrc	r15, 7
    53b6:	8d e2       	ldi	r24, 0x2D	; 45
    53b8:	90 e0       	ldi	r25, 0x00	; 0
    53ba:	b3 01       	movw	r22, r6
    53bc:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    53c0:	06 c0       	rjmp	.+12     	; 0x53ce <vfprintf+0x37c>
    53c2:	80 e3       	ldi	r24, 0x30	; 48
    53c4:	90 e0       	ldi	r25, 0x00	; 0
    53c6:	b3 01       	movw	r22, r6
    53c8:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    53cc:	9a 94       	dec	r9
    53ce:	d9 14       	cp	r13, r9
    53d0:	c0 f3       	brcs	.-16     	; 0x53c2 <vfprintf+0x370>
    53d2:	da 94       	dec	r13
    53d4:	f1 01       	movw	r30, r2
    53d6:	ed 0d       	add	r30, r13
    53d8:	f1 1d       	adc	r31, r1
    53da:	80 81       	ld	r24, Z
    53dc:	90 e0       	ldi	r25, 0x00	; 0
    53de:	b3 01       	movw	r22, r6
    53e0:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    53e4:	dd 20       	and	r13, r13
    53e6:	a9 f7       	brne	.-22     	; 0x53d2 <vfprintf+0x380>
    53e8:	06 c0       	rjmp	.+12     	; 0x53f6 <vfprintf+0x3a4>
    53ea:	80 e2       	ldi	r24, 0x20	; 32
    53ec:	90 e0       	ldi	r25, 0x00	; 0
    53ee:	b3 01       	movw	r22, r6
    53f0:	0e 94 1c 2a 	call	0x5438	; 0x5438 <fputc>
    53f4:	ea 94       	dec	r14
    53f6:	ee 20       	and	r14, r14
    53f8:	c1 f7       	brne	.-16     	; 0x53ea <vfprintf+0x398>
    53fa:	43 ce       	rjmp	.-890    	; 0x5082 <vfprintf+0x30>
    53fc:	f3 01       	movw	r30, r6
    53fe:	66 81       	ldd	r22, Z+6	; 0x06
    5400:	77 81       	ldd	r23, Z+7	; 0x07
    5402:	cb 01       	movw	r24, r22
    5404:	2b 96       	adiw	r28, 0x0b	; 11
    5406:	e2 e1       	ldi	r30, 0x12	; 18
    5408:	0c 94 ea 27 	jmp	0x4fd4	; 0x4fd4 <__epilogue_restores__>

0000540c <strnlen_P>:
    540c:	fc 01       	movw	r30, r24
    540e:	05 90       	lpm	r0, Z+
    5410:	61 50       	subi	r22, 0x01	; 1
    5412:	70 40       	sbci	r23, 0x00	; 0
    5414:	01 10       	cpse	r0, r1
    5416:	d8 f7       	brcc	.-10     	; 0x540e <strnlen_P+0x2>
    5418:	80 95       	com	r24
    541a:	90 95       	com	r25
    541c:	8e 0f       	add	r24, r30
    541e:	9f 1f       	adc	r25, r31
    5420:	08 95       	ret

00005422 <strnlen>:
    5422:	fc 01       	movw	r30, r24
    5424:	61 50       	subi	r22, 0x01	; 1
    5426:	70 40       	sbci	r23, 0x00	; 0
    5428:	01 90       	ld	r0, Z+
    542a:	01 10       	cpse	r0, r1
    542c:	d8 f7       	brcc	.-10     	; 0x5424 <strnlen+0x2>
    542e:	80 95       	com	r24
    5430:	90 95       	com	r25
    5432:	8e 0f       	add	r24, r30
    5434:	9f 1f       	adc	r25, r31
    5436:	08 95       	ret

00005438 <fputc>:
    5438:	0f 93       	push	r16
    543a:	1f 93       	push	r17
    543c:	cf 93       	push	r28
    543e:	df 93       	push	r29
    5440:	8c 01       	movw	r16, r24
    5442:	eb 01       	movw	r28, r22
    5444:	8b 81       	ldd	r24, Y+3	; 0x03
    5446:	81 ff       	sbrs	r24, 1
    5448:	1b c0       	rjmp	.+54     	; 0x5480 <fputc+0x48>
    544a:	82 ff       	sbrs	r24, 2
    544c:	0d c0       	rjmp	.+26     	; 0x5468 <fputc+0x30>
    544e:	2e 81       	ldd	r18, Y+6	; 0x06
    5450:	3f 81       	ldd	r19, Y+7	; 0x07
    5452:	8c 81       	ldd	r24, Y+4	; 0x04
    5454:	9d 81       	ldd	r25, Y+5	; 0x05
    5456:	28 17       	cp	r18, r24
    5458:	39 07       	cpc	r19, r25
    545a:	64 f4       	brge	.+24     	; 0x5474 <fputc+0x3c>
    545c:	e8 81       	ld	r30, Y
    545e:	f9 81       	ldd	r31, Y+1	; 0x01
    5460:	01 93       	st	Z+, r16
    5462:	f9 83       	std	Y+1, r31	; 0x01
    5464:	e8 83       	st	Y, r30
    5466:	06 c0       	rjmp	.+12     	; 0x5474 <fputc+0x3c>
    5468:	e8 85       	ldd	r30, Y+8	; 0x08
    546a:	f9 85       	ldd	r31, Y+9	; 0x09
    546c:	80 2f       	mov	r24, r16
    546e:	09 95       	icall
    5470:	89 2b       	or	r24, r25
    5472:	31 f4       	brne	.+12     	; 0x5480 <fputc+0x48>
    5474:	8e 81       	ldd	r24, Y+6	; 0x06
    5476:	9f 81       	ldd	r25, Y+7	; 0x07
    5478:	01 96       	adiw	r24, 0x01	; 1
    547a:	9f 83       	std	Y+7, r25	; 0x07
    547c:	8e 83       	std	Y+6, r24	; 0x06
    547e:	02 c0       	rjmp	.+4      	; 0x5484 <fputc+0x4c>
    5480:	0f ef       	ldi	r16, 0xFF	; 255
    5482:	1f ef       	ldi	r17, 0xFF	; 255
    5484:	c8 01       	movw	r24, r16
    5486:	df 91       	pop	r29
    5488:	cf 91       	pop	r28
    548a:	1f 91       	pop	r17
    548c:	0f 91       	pop	r16
    548e:	08 95       	ret

00005490 <__ultoa_invert>:
    5490:	fa 01       	movw	r30, r20
    5492:	aa 27       	eor	r26, r26
    5494:	28 30       	cpi	r18, 0x08	; 8
    5496:	51 f1       	breq	.+84     	; 0x54ec <__ultoa_invert+0x5c>
    5498:	20 31       	cpi	r18, 0x10	; 16
    549a:	81 f1       	breq	.+96     	; 0x54fc <__ultoa_invert+0x6c>
    549c:	e8 94       	clt
    549e:	6f 93       	push	r22
    54a0:	6e 7f       	andi	r22, 0xFE	; 254
    54a2:	6e 5f       	subi	r22, 0xFE	; 254
    54a4:	7f 4f       	sbci	r23, 0xFF	; 255
    54a6:	8f 4f       	sbci	r24, 0xFF	; 255
    54a8:	9f 4f       	sbci	r25, 0xFF	; 255
    54aa:	af 4f       	sbci	r26, 0xFF	; 255
    54ac:	b1 e0       	ldi	r27, 0x01	; 1
    54ae:	3e d0       	rcall	.+124    	; 0x552c <__ultoa_invert+0x9c>
    54b0:	b4 e0       	ldi	r27, 0x04	; 4
    54b2:	3c d0       	rcall	.+120    	; 0x552c <__ultoa_invert+0x9c>
    54b4:	67 0f       	add	r22, r23
    54b6:	78 1f       	adc	r23, r24
    54b8:	89 1f       	adc	r24, r25
    54ba:	9a 1f       	adc	r25, r26
    54bc:	a1 1d       	adc	r26, r1
    54be:	68 0f       	add	r22, r24
    54c0:	79 1f       	adc	r23, r25
    54c2:	8a 1f       	adc	r24, r26
    54c4:	91 1d       	adc	r25, r1
    54c6:	a1 1d       	adc	r26, r1
    54c8:	6a 0f       	add	r22, r26
    54ca:	71 1d       	adc	r23, r1
    54cc:	81 1d       	adc	r24, r1
    54ce:	91 1d       	adc	r25, r1
    54d0:	a1 1d       	adc	r26, r1
    54d2:	20 d0       	rcall	.+64     	; 0x5514 <__ultoa_invert+0x84>
    54d4:	09 f4       	brne	.+2      	; 0x54d8 <__ultoa_invert+0x48>
    54d6:	68 94       	set
    54d8:	3f 91       	pop	r19
    54da:	2a e0       	ldi	r18, 0x0A	; 10
    54dc:	26 9f       	mul	r18, r22
    54de:	11 24       	eor	r1, r1
    54e0:	30 19       	sub	r19, r0
    54e2:	30 5d       	subi	r19, 0xD0	; 208
    54e4:	31 93       	st	Z+, r19
    54e6:	de f6       	brtc	.-74     	; 0x549e <__ultoa_invert+0xe>
    54e8:	cf 01       	movw	r24, r30
    54ea:	08 95       	ret
    54ec:	46 2f       	mov	r20, r22
    54ee:	47 70       	andi	r20, 0x07	; 7
    54f0:	40 5d       	subi	r20, 0xD0	; 208
    54f2:	41 93       	st	Z+, r20
    54f4:	b3 e0       	ldi	r27, 0x03	; 3
    54f6:	0f d0       	rcall	.+30     	; 0x5516 <__ultoa_invert+0x86>
    54f8:	c9 f7       	brne	.-14     	; 0x54ec <__ultoa_invert+0x5c>
    54fa:	f6 cf       	rjmp	.-20     	; 0x54e8 <__ultoa_invert+0x58>
    54fc:	46 2f       	mov	r20, r22
    54fe:	4f 70       	andi	r20, 0x0F	; 15
    5500:	40 5d       	subi	r20, 0xD0	; 208
    5502:	4a 33       	cpi	r20, 0x3A	; 58
    5504:	18 f0       	brcs	.+6      	; 0x550c <__ultoa_invert+0x7c>
    5506:	49 5d       	subi	r20, 0xD9	; 217
    5508:	31 fd       	sbrc	r19, 1
    550a:	40 52       	subi	r20, 0x20	; 32
    550c:	41 93       	st	Z+, r20
    550e:	02 d0       	rcall	.+4      	; 0x5514 <__ultoa_invert+0x84>
    5510:	a9 f7       	brne	.-22     	; 0x54fc <__ultoa_invert+0x6c>
    5512:	ea cf       	rjmp	.-44     	; 0x54e8 <__ultoa_invert+0x58>
    5514:	b4 e0       	ldi	r27, 0x04	; 4
    5516:	a6 95       	lsr	r26
    5518:	97 95       	ror	r25
    551a:	87 95       	ror	r24
    551c:	77 95       	ror	r23
    551e:	67 95       	ror	r22
    5520:	ba 95       	dec	r27
    5522:	c9 f7       	brne	.-14     	; 0x5516 <__ultoa_invert+0x86>
    5524:	00 97       	sbiw	r24, 0x00	; 0
    5526:	61 05       	cpc	r22, r1
    5528:	71 05       	cpc	r23, r1
    552a:	08 95       	ret
    552c:	9b 01       	movw	r18, r22
    552e:	ac 01       	movw	r20, r24
    5530:	0a 2e       	mov	r0, r26
    5532:	06 94       	lsr	r0
    5534:	57 95       	ror	r21
    5536:	47 95       	ror	r20
    5538:	37 95       	ror	r19
    553a:	27 95       	ror	r18
    553c:	ba 95       	dec	r27
    553e:	c9 f7       	brne	.-14     	; 0x5532 <__ultoa_invert+0xa2>
    5540:	62 0f       	add	r22, r18
    5542:	73 1f       	adc	r23, r19
    5544:	84 1f       	adc	r24, r20
    5546:	95 1f       	adc	r25, r21
    5548:	a0 1d       	adc	r26, r0
    554a:	08 95       	ret

0000554c <_exit>:
    554c:	f8 94       	cli

0000554e <__stop_program>:
    554e:	ff cf       	rjmp	.-2      	; 0x554e <__stop_program>
